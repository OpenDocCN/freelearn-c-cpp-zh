["```cpp\n#include <EEPROM.h>\n\n// start reading from the first byte (address 0) of the EEPROM\nint address = 0;\nbyte value;\n\nvoid setup()\n{\n  // initialize serial and wait for port to open:\n  Serial.begin(9600);\n}\n\nvoid loop()\n{\n  // read a byte from the current address of the EEPROM\n  value = EEPROM.read(address);\n\n  Serial.print(address);\n  Serial.print(\"\\t\");\n  Serial.print(value, DEC);\n  Serial.println();\n\n  // advance to the next address of the EEPROM\n  address = address + 1;\n\n  // there are only 512 bytes of EEPROM, from 0 to 511, so if we're\n  // on address 512, wrap around to address 0\n  if (address == 512)\n    address = 0;\n\n  delay(500);\n}\n```", "```cpp\n#include <Wire.h>\n\nvoid eepromWrite(byte address, byte source_addr, byte data) {\n  Wire.beginTransmission(address);\n  Wire.write(source_addr);\n  Wire.write(data);\n  Wire.endTransmission();\n}\n\nbyte eepromRead(int address, int source_addr) {\n  Wire.beginTransmission(address);\n  Wire.write(source_addr);\n  Wire.endTransmission();\n\n  Wire.requestFrom(address, 1);\n  if(Wire.available())\n    return Wire.read();\n  else\n    return 0xFF;\n}\n\nvoid setup() {\n  Wire.begin();\n  Serial.begin(9600);\n\n  for(int i = 0; i < 10; i++) {\n    eepromWrite(B01010000, i, 'a'+i);\n    delay(100);\n  }\n\n  Serial.println(\"Bytes written to external EEPROM !\");\n}\n\nvoid loop() {\n  for(int i = 0; i < 10; i++) {\n    byte val = eepromRead(B01010000, i);\n    Serial.print(i);\n    Serial.print(\"\\t\");\n    Serial.print(val);\n    Serial.print(\"\\n\");\n    delay(1000);\n  }\n}\n```", "```cpp\nint rxPin = 0;                    // RX PIN\nint byteGPS = -1;                 // Current read byte\nchar line[300] = \"\";              // Buffer\nchar commandGPR[7] = \"$GPRMC\";    // String related to messages\n\nint counter=0;\nint correctness=0;\nint lineCounter=0;\nint index[13];\n\nvoid setup() {\n\n  pinMode(rxPin, INPUT);\n  Serial.begin(4800);\n\n  // Clear buffer\n  for (int i=0;i<300;i++){       \n    line[i]=' ';\n  }   \n}\n\nvoid loop() {\n\n  byteGPS = Serial.read();         // Read a byte from the serial port\n\n  // Test if the port is empty\n  if (byteGPS == -1) {           \n    delay(100);\n  }\n\n  else {  // if it isn't empty\n\n    line[lineCounter] = byteGPS;   // put data read in the buffer\n    lineCounter++;\n\n    Serial.print(byteGPS);   // print data read to the serial monitor\n\n    // Test if the transmission is finished\n    // if it is finished, we begin to parse !\n    if (byteGPS==13){                    \n\n      counter=0;\n      correctness=0;\n\n      // Test if the received command starts by $GPR\n      // If it does, increase correctness counter\n      for (int i=1;i<7;i++){\n        if (line[i]==commandGPR[i-1]){\n          correctness++;\n        }\n      }\n\n      if(correctness==6){\n        // We are sure command is okay here.\n\n        //\n        for (int i=0;i<300;i++){\n\n          // store position of \",\" separators\n          if (line[i]==','){    \n            index[counter]=i;\n            counter++;\n          }\n\n          // store position of \"*\" separator meaning the last byte\n          if (line[i]=='*'){    // ... and the \"*\"\n            index[12]=i;\n            counter++;\n          }\n        }\n\n        // Write data to serial monitor on the computer\n        Serial.println(\"\");\n        Serial.println(\"\");\n        Serial.println(\"---------------\");\n        for (int i=0;i<12;i++){\n          switch(i){\n          case 0 :\n            Serial.print(\"Time in UTC (HhMmSs): \");\n            break;\n          case 1 :\n            Serial.print(\"Status (A=OK,V=KO): \");\n            break;\n          case 2 :\n            Serial.print(\"Latitude: \");\n            break;\n          case 3 :\n            Serial.print(\"Direction (N/S): \");\n            break;\n          case 4 :\n            Serial.print(\"Longitude: \");\n            break;\n          case 5 :\n            Serial.print(\"Direction (E/W): \");\n            break;\n          case 6 :\n            Serial.print(\"Velocity in knots: \");\n            break;\n          case 7 :\n            Serial.print(\"Heading in degrees: \");\n            break;\n          case 8 :\n            Serial.print(\"Date UTC (DdMmAa): \");\n            break;\n          case 9 :\n            Serial.print(\"Magnetic degrees: \");\n            break;\n          case 10 :\n            Serial.print(\"(E/W): \");\n            break;\n          case 11 :\n            Serial.print(\"Mode: \");\n            break;\n          case 12 :\n            Serial.print(\"Checksum: \");\n            break;\n          }\n          for (int j=index[i];j<(index[i+1]-1);j++){\n            Serial.print(line[j+1]);\n          }\n          Serial.println(\"\");\n        }\n        Serial.println(\"---------------\");\n      }\n\n      // Reset the buffer\n      lineCounter=0;                    \n      for (int i=0;i<300;i++){\n        line[i]=' ';             \n      }                 \n    }â€©  }\n}\n```"]