- en: Big Data Architecture and Design Patterns
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据架构和设计模式
- en: Big data is the digital trace that gets generated in today's digital world when
    we use the internet and other digital technology. Whatever we do digitally leaves
    a massive volume of data. Interestingly, we can do far smarter analysis with those
    traces and so, therefore, make smarter decisions and much more. For example, when
    you log in to any website it shows an advertisement for a product that you searched
    or browsed earlier, even if it was on an entirely different website. So by showing
    the product that you are interested in, regardless of the specific product selling
    site, the results of big data analysis and a smart way of selling means that the
    end user might like the product and be more likely to buy it.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据是我们在当今数字世界中使用互联网和其他数字技术时产生的数字痕迹。我们在数字上所做的任何事情都会留下大量数据。有趣的是，我们可以用这些痕迹进行更智能的分析，因此可以做出更明智的决策。例如，当你登录任何网站时，它会显示你之前搜索或浏览过的产品的广告，即使它是在一个完全不同的网站上。所以通过展示你感兴趣的产品，无论具体的产品销售网站是什么，大数据分析以及一种聪明的销售方式意味着最终用户可能会喜欢这个产品，更有可能购买它。
- en: This chapter intends to introduce readers to the more common big data architectural
    patterns. Some brief details on the core parts of big data, its core principles,
    and characteristics are outlined,  including analytics principles, big data workload
    patterns, and optimal decision-making patterns.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章旨在向读者介绍更常见的大数据架构模式。概述了大数据的核心部分、其核心原则和特性的一些简要细节，包括分析原则、大数据工作负载模式和最佳决策模式。
- en: Please be aware that this chapter is a mere introduction to the patterns. Readers
    need to refer to other materials (references sections) that are available online
    and offline.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，本章仅是对模式的一个简单介绍。读者需要参考其他在线和离线的材料（参考文献部分）。
- en: The four V's of big data
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据的四个V
- en: 'Big data has many definitions and many different implementations across various
    sectors. However, there are four common elements of any big data definition, which
    are popularly referred to as the V''s of big data. They are as follows:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据在各个行业中有许多定义和不同的实现方式。然而，任何大数据定义都有四个共同要素，通常被称为大数据的V。它们如下：
- en: '**Velocity**: This refers to the speed of data accumulation'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**速度**：这指的是数据积累的速度'
- en: '**Volume**: This refers to the scale of data or the phase that data storage
    grows'
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**体积**：这指的是数据的规模或数据存储增长阶段'
- en: '**Variety**: This refers to the diversity of the data, such as structured,
    semi-structured, unstructured, and so on'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**多样性**：这指的是数据的多样性，例如结构化、半结构化、非结构化等'
- en: '**Veracity**: This refers to collected data''s accuracy and its reflection
    of facts'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**真实性**：这指的是收集到的数据的准确性及其对事实的反映'
- en: The latest addition to the V's group is **value**. This refers to our ability
    and needs to turn accumulated data into things of value. That is not just business
    value, but it can also be any significant added value for social, medical, and
    common causes.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: V群组的最新成员是**价值**。这指的是我们将积累的数据转化为有价值事物的能力和需求。这不仅仅是商业价值，还可以是任何对社交、医疗和公共事业具有显著附加价值的事物。
- en: Big data analysis and technology concepts
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据分析和技术概念
- en: 'Let''s start with the technology prerequisites for big data analysis, and then
    we will cover the life cycle of big data analysis. The prerequisites are:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从大数据分析的技术先决条件开始，然后我们将涵盖大数据分析的生命周期。这些先决条件包括：
- en: Flexible architectures, that supports various data types and patterns
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 灵活的架构，支持各种数据类型和模式
- en: Upstream use of analytics for data relevance optimization
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 优化数据相关性的上游分析使用
- en: Advanced analytics and real-time visualization to accelerate actions and understandings
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高级分析和实时可视化以加速行动和了解
- en: Collaborative approaches for aligning stakeholders
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协作方法以协调利益相关者
- en: Data analysis life cycle
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据分析生命周期
- en: Big data analysis life cycle provides a step-by-step methodology for organizing
    the data activities and tasks related to data acquiring, processing, analyzing
    and repurposing. The following are the stages of data analysis life cycle with
    a brief overview of each of them.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据分析生命周期为组织与数据获取、处理、分析及再利用相关的数据活动和工作任务提供了一步步的方法论。以下是大数据分析生命周期的各个阶段及其简要概述。
- en: '**Data discovery**: Learn the business domain, frame the business problems
    as analytics challenges, and strategize and formulate initial hypotheses to start
    learning data.'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据发现**：了解业务领域，将业务问题作为分析挑战来构建，并制定和形成初始假设以开始学习数据。'
- en: '**Data preparations**: Data **Extraction**, **Load**, and **Transform** (**ELT**)
    and data **Extraction**, **Transform**, and **Load** (**ETL**) should be used
    to become familiarized with the data.'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据准备**：使用数据**提取**、**加载**和**转换**（**ELT**）以及数据**提取**、**转换**和**加载**（**ETL**）来熟悉数据。'
- en: '**Model planning**: Determine and formulate techniques, workflows, and best
    practices to follow. Learn about relationships between variables and choose the
    most suitable methods.'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型规划**：确定和制定要遵循的技术、工作流程和最佳实践。了解变量之间的关系并选择最合适的方法。'
- en: '**Model building**: Develop datasets for testing, training, and production
    deployments. Evaluate tools to run the models and suggests additional tools, workflows,
    and execution environments, if needed.'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模型构建**：开发用于测试、训练和生产部署的数据集。评估运行模型所需的工具，并在需要时建议额外的工具、工作流程和执行环境。'
- en: '**Communicate results**: Identify critical findings, quantify the business
    values of the current exercise, the success criteria, risks, and mitigations,
    and present them to stakeholders.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**沟通结果**：确定关键发现，量化当前练习的商业价值、成功标准、风险和缓解措施，并向利益相关者展示。'
- en: '**Operationalize**: Deliver proofs of concepts, final reports, and technical
    documents.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**实施**：交付概念验证、最终报告和技术文档。'
- en: Big data analysis and data science
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据分析与数据科学
- en: Big data is the result of collecting and managing large amounts of diverse data;
    data mining is all about searching data for unrecognized patterns.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据是收集和管理大量多样化数据的结果；数据挖掘就是搜索数据以寻找未识别的模式。
- en: Data analysis
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据分析
- en: Data analysis is about breaking the mined data and assessing the impact of those
    unrecognized methods. It may even create new patterns over time and help to develop
    working applications.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 数据分析是关于打破挖掘出的数据并评估那些未识别方法的影响。它甚至可能在一段时间内创建新的模式，并有助于开发工作应用。
- en: Data science
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据科学
- en: Data science is the process of cleaning, mining, and analyzing the data to derive
    insights of value from it. Extract data insights through a combination of exploratory
    data analysis and modeling. Data science is the process of distilling insights
    from data to inform decisions.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学是清理、挖掘和分析数据以从中提取有价值见解的过程。通过探索性数据分析与建模的组合来提取数据见解。数据科学是从数据中提炼见解以指导决策的过程。
- en: 'Data science creates models that capture the underlying patterns of complex
    systems and helps those models to become working applications:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 数据科学创建的模型能够捕捉复杂系统的潜在模式，并帮助这些模型成为工作应用：
- en: '![](img/e0d1e39f-094f-4e83-81b7-75f707a404a4.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e0d1e39f-094f-4e83-81b7-75f707a404a4.png)'
- en: The preceding diagram intends to represent the data science process followed
    by a data scientist.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图表旨在表示数据科学家遵循的数据科学过程。
- en: Big data platform
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据平台
- en: 'Any software or hardware platform should support large datasets; otherwise,
    it is hard to support those large datasets with traditional database tools:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 任何软件或硬件平台都应该支持大量数据集；否则，使用传统的数据库工具很难支持这些大量数据集：
- en: '![](img/219cf4d5-3588-42f2-b4a5-758c44eb3790.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/219cf4d5-3588-42f2-b4a5-758c44eb3790.png)'
- en: The preceding diagram depicts a sample big data platform with supported sample
    tools, servers, hardware, and so on.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图表描绘了一个示例大数据平台，其中包含支持的样本工具、服务器、硬件等。
- en: Big data engineering
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据工程
- en: 'Big data engineering gets the most value out of the vast amount of disparate
    data, data staging, profiling, and data cleansing in any big data platform. Also,
    it represents optimal ways of migrating the data from back office systems to the
    front office to help data analysts and data scientists:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据工程从任何大数据平台的大量不同数据、数据暂存、数据概要和数据处理中获取最大价值。它还代表了将数据从后台系统迁移到前台以帮助数据分析师和数据科学家的最佳方式：
- en: '![](img/1e90ffc5-e2f5-421e-a54a-9f9d1a459364.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1e90ffc5-e2f5-421e-a54a-9f9d1a459364.png)'
- en: 'The preceding diagram accounts for a sample ecosystem of a big data engineering
    landscape. One can find numerous tools in each stage of the big data landscape.
    The following are some examples of those tools: Hadoop, Oozie, Flume, Hive, HBase,
    Apache Pig, Apache Spark, MapReduce, YARN, Sqoop, ZooKeeper, text analytics, and
    so on. However, we are not going to discuss all those tools here as it is out
    side of the scope of this chapter.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图表考虑了大数据工程景观的一个示例生态系统。在大数据景观的每个阶段都可以找到许多工具。以下是一些这些工具的例子：Hadoop、Oozie、Flume、Hive、HBase、Apache
    Pig、Apache Spark、MapReduce、YARN、Sqoop、ZooKeeper、文本分析等。然而，我们不会在这里讨论所有这些工具，因为这超出了本章的范围。
- en: Big data governance
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据治理
- en: 'Any big data enterprise would need to develop and enhance broader enterprise
    information governance by bringing rules or policies for optimization and privacy
    and also find avenues for monetizing (value) at the same time as ensuring regulatory
    compliance and facilitating prudent risk management:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 任何大数据企业都需要通过引入优化和隐私的规则或政策来发展和完善更广泛的 企业信息治理，同时找到货币化（价值）的途径，同时确保合规性和促进谨慎的风险管理：
- en: '![](img/6c4de7b7-c471-4d44-8414-63ccfd796e02.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6c4de7b7-c471-4d44-8414-63ccfd796e02.png)'
- en: Big data architecture landscape and layers
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据架构景观和层
- en: 'You should be able to extract valuable, meaningful information (**insights**)
    from the enormous volumes of data to improve an organization''s decisions that
    involve various challenges, such as data regulations, faster decisions, interactions
    with customers, dealing with legacy systems, disparate data sources, and so on.
    So, to address all those challenges efficiently, researchers came up with a unified
    architecture consisting of layers at different levels:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该能够从大量数据中提取有价值、有意义的信息（洞察），以改善涉及各种挑战的组织决策，例如数据法规、快速决策、与客户的互动、处理遗留系统、不同的数据源等。因此，为了有效地解决所有这些挑战，研究人员提出了一个由不同层级的层组成的统一架构：
- en: '![](img/9fb2ccd3-3281-41b6-8c76-92e6c7159802.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9fb2ccd3-3281-41b6-8c76-92e6c7159802.png)'
- en: The preceding pyramid depicts the significant attributes of big data layers
    and the problems that are addressed in each layer. As we have mentioned earlier, big
    data is not a single technology or a framework solving just a set of use cases;
    it is a set of tools, processes, technologies, and a system infrastructure that
    helps businesses to make much smarter analysis and take smarter decisions based
    on the massive volume of data traces.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 上述金字塔描绘了大数据层的重要属性以及每一层解决的问题。正如我们之前提到的，大数据不是解决一组用例的单个技术或框架；它是一套工具、流程、技术和系统基础设施，帮助企业基于大量数据痕迹进行更智能的分析和做出更明智的决策。
- en: 'Unified big data architecture consists of various layers. It provides a way
    to organize different components to address problems and it represents unique
    functions:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 统一的大数据架构由多个层级组成。它提供了一种组织不同组件以解决问题的方式，并代表独特的功能：
- en: '**Big data sources**: Data coming from several channels, such as handheld devices,
    software applications, sensors, legacy databases, and so on'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大数据来源**：来自多个渠道的数据，例如手持设备、软件应用、传感器、遗留数据库等'
- en: '**Data messaging and storage**: Acquires data from the data sources, data compliance,
    and storage formatting'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据消息和存储**：从数据源获取数据，数据合规性和存储格式化'
- en: '**Data analysis**: Data model management, analytics engines**,** and access
    to data message stores'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据分析**：数据模型管理、分析引擎****和访问数据消息存储'
- en: '**Data consumption**: Dashboards, insights, reporting, and so on'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数据消耗**：仪表板、洞察、报告等'
- en: '![](img/b39a5a89-b0e5-4863-b4c2-a44cc530ff9f.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b39a5a89-b0e5-4863-b4c2-a44cc530ff9f.png)'
- en: The preceding diagram depicts different levels and layers of the big data landscape.
    These layers perhaps may be considered as a summary of our earlier introductions
    of big data concepts and the realization of values in each layer.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图表描绘了大数据景观的不同层级和层。这些层可能被视为我们之前对大数据概念介绍和每一层价值实现的总结。
- en: 'Before we look at patterns, let''s summarize the big data architecture principle
    as follows:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们查看模式之前，让我们总结大数据架构原则如下：
- en: Decoupled data bus
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解耦的数据总线
- en: Right tool usage for the job
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适合工作的正确工具
- en: Data structure, latency, throughput, access patterns
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据结构、延迟、吞吐量、访问模式
- en: Lambda architecture
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Lambda架构
- en: Immutable logs, batch/speed/serving layer
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不可变日志、批量/速度/服务层
- en: Cloud-based infrastructure
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于云的基础设施
- en: System maintenance with low or no admin
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 低或无管理员系统维护
- en: Cost-effective
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 经济高效
- en: Big data architecture patterns
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据架构模式
- en: In this section, we will take you through big data design patterns, based on
    the following big data architectural patterns, and give a brief overview of the
    big data architectural patterns.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将根据以下大数据架构模式，带您了解大数据设计模式，并对大数据架构模式进行简要概述。
- en: MapReduce pattern
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MapReduce 模式
- en: MapReduce is a software framework implementation that processes and generates
    big datasets by applying parallel and distributed algorithms on a cluster infrastructure.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: MapReduce 是一种软件框架实现，通过在集群基础设施上应用并行和分布式算法来处理和生成大数据集。
- en: 'The primary methods of MapReduce are as follows:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: MapReduce 的主要方法如下：
- en: '**Map**: Responsible for filtering and sorting'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Map**：负责过滤和排序'
- en: '**Reduce**: Responsible for operations (for example, counting the number of
    records)'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Reduce**：负责操作（例如，统计记录数）'
- en: Lambda architecture pattern
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Lambda 架构模式
- en: To address big data challenges (described earlier in this chapter), there needs
    to be a data processing architecture to handle massive quantities of data to process
    rapidly with batch processing and stream processing methods.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 为了应对大数据挑战（在本章前面已描述），需要有一个数据处理架构来处理大量数据，并快速使用批量处理和流处理方法。
- en: 'Some fundamental characteristics of the Lambda architecture are as follows:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: Lambda 架构的一些基本特征如下：
- en: It is dependent on underlying data principles of append-only, immutable, and
    atomic
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它依赖于底层数据的只增不减、不可变和原子性原则
- en: It thrives on balancing latency, throughput, and fault-tolerance
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它在平衡延迟、吞吐量和容错性方面茁壮成长
- en: It correlates with the growth of big data and real-time analytics
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它与大数据和实时分析的增长相关
- en: It helps to mitigate the latencies of MapReduce
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它有助于减轻 MapReduce 的延迟
- en: '![](img/e3933109-37af-40bb-966e-0e2ea821b541.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e3933109-37af-40bb-966e-0e2ea821b541.png)'
- en: The preceding diagram depicts the Lambda architecture with three primary layers
    called the batch processing layer, the speed or real-time processing layer, and
    serving layers for responding to queries.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 上一图展示了具有三个主要层（批量处理层、速度或实时处理层和用于响应查询的服务层）的 Lambda 架构。
- en: 'The three primary layers are explained here:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这里解释了三个主要层：
- en: '**Batch layer**: This precomputes results, using a distributed processing system
    output to the read-only data store, and updates views by replacing the existing
    precomputed views. Data accuracy in the views is high with batch jobs (accuracy
    over latency).'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**批量层**：此层预先计算结果，使用分布式处理系统输出到只读数据存储，并通过替换现有的预先计算视图来更新视图。批量作业中的视图数据精度高（精度高于延迟）。'
- en: '**Speed**/**Real-time layer**: This processes data streams in real time and
    the views are almost instantaneous, but maybe with less data accuracy (latency
    over accuracy). However, those views can be updated later by batch methods (accuracy
    over latency).'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**速度**/**实时层**：此层实时处理数据流，视图几乎即时生成，但可能数据精度较低（延迟高于精度）。然而，这些视图可以通过批量方法稍后更新（精度高于延迟）。'
- en: '**Serving layer**: This stores outputs from the batch and speed layers to respond
    to ad-hoc queries either by precomputed views or new views from the processed
    data.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务层**：此层存储批量层和速度层的输出，以通过预计算视图或处理数据的新视图来响应即席查询。'
- en: Data lake architecture pattern
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据湖架构模式
- en: In established enterprises, the most common business case is to make use of
    existing data infrastructure along with big data implementations. The data lake
    architecture pattern provides efficient ways to achieve reusing most of the data
    infrastructure and, at the same time, get the benefits of big data paradigm shifts.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 在成熟的企业中，最常见的业务案例是利用现有的数据基础设施以及大数据实施。数据湖架构模式提供了有效的方法来实现重用大部分数据基础设施，同时获得大数据范式转变的好处。
- en: 'Data lakes have the following essential characteristics to address:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 数据湖具有以下基本特征以应对：
- en: Manage abundant unprocessed data
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理大量未处理的数据
- en: Retain data as long as possible
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽可能长时间保留数据
- en: Ability to manage the data transformation
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 管理数据转换的能力
- en: Support dynamic schema
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持动态模式
- en: 'The following diagram depicts a data lake pattern implementation. It is getting
    raw data into data storage from different data sources. Also, the received data
    needs to be retained as long as possible in the data warehouse. Conditioning is
    conducted only after a data source has been identified for immediate use in the
    mainline analytics:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表描述了数据湖模式实现。它将来自不同数据源的原生数据引入数据存储。此外，接收到的数据需要在数据仓库中尽可能长时间保留。只有在确定数据源用于主线分析时，才会进行条件处理：
- en: '![](img/d0dd5344-41ee-4370-8237-50b606e33ad2.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d0dd5344-41ee-4370-8237-50b606e33ad2.png)'
- en: Data lakes provide a mechanism for capturing and exploring potentially useful
    data without incurring additional transactional systems storage costs, or any
    conditioning effort to bring data sources into those transactional systems.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 数据湖提供了一种机制，可以捕获和探索可能有用的数据，而无需承担额外的交易系统存储成本，或任何将数据源带入这些交易系统的条件处理工作。
- en: Data lake implementation includes HDFS, AWS S3, distributed file systems, and
    so on. Microsoft, Amazon, EMC, Teradata, and Hortonworks are prominent vendors
    with data lake implementation among their products and they sell these technologies.
    Data lakes can also be a cloud **Infrastructure as a Service **(**IaaS**).
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 数据湖实现包括HDFS、AWS S3、分布式文件系统等。微软、亚马逊、EMC、Teradata和Hortonworks是数据湖实现方面的主要供应商，它们在其产品中提供这些技术，并销售这些技术。数据湖也可以是云**基础设施即服务（IaaS**）。
- en: Big data design patterns
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据设计模式
- en: This section covers most prominent big data design patterns by various data
    layers such as data sources and ingestion layer, data storage layer and data access
    layer.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 本节涵盖了各种数据层（如数据源和摄取层、数据存储层和数据访问层）中最突出的大数据设计模式。
- en: Data sources and ingestion layer
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据源和摄取层
- en: 'Enterprise big data systems face a variety of data sources with non-relevant
    information (noise) alongside relevant (signal) data. Noise ratio is very high
    compared to signals, and so filtering the noise from the pertinent information,
    handling high volumes, and the velocity of data is significant. This is the responsibility
    of the ingestion layer. The common challenges in the ingestion layers are as follows:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 企业大数据系统面临着各种数据源，其中包含非相关信息（噪声）以及相关（信号）数据。与信号相比，噪声比率非常高，因此从相关信息中过滤噪声、处理大量数据和数据速度是非常重要的。这是摄取层的责任。摄取层中常见的挑战如下：
- en: Multiple data source load and prioritization
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多数据源加载和优先级排序
- en: Ingested data indexing and tagging
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 摄取数据索引和标记
- en: Data validation and cleansing
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据验证和清洗
- en: Data transformation and compression
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据转换和压缩
- en: '![](img/5b98d83a-71c5-4fae-bbbf-8b4f8945c931.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5b98d83a-71c5-4fae-bbbf-8b4f8945c931.png)'
- en: The preceding diagram depicts the building blocks of the ingestion layer and
    its various components. We need patterns to address the challenges of **data sources**
    to ingestion layer communication that takes care of performance, scalability,
    and availability requirements.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图表描述了摄取层的构建块及其各种组件。我们需要模式来应对数据源到摄取层通信的挑战，该通信负责处理性能、可扩展性和可用性需求。
- en: 'In this section, we will discuss the following ingestion and streaming patterns
    and how they help to address the challenges in ingestion layers. We will also
    touch upon some common workload patterns as well, including:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论以下摄取和流模式以及它们如何帮助解决摄取层的挑战。我们还将简要提及一些常见的工作负载模式，包括：
- en: Multisource extractor
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多源提取器
- en: Multidestination
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多目的地
- en: Protocol converter
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 协议转换器
- en: '**Just-in-time** (**JIT**) transformation'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**即时**（**JIT**）转换'
- en: Real-time streaming pattern
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 实时流模式
- en: Multisource extractor
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多源提取器
- en: 'An approach to ingesting multiple data types from multiple data sources efficiently
    is termed a *Multisource extractor*. Efficiency represents many factors, such
    as data velocity, data size, data frequency, and managing various data formats
    over an unreliable network, mixed network bandwidth, different technologies, and
    systems:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 一种从多个数据源高效摄取多种数据类型的方法被称为*多源提取器*。效率代表了许多因素，如数据速度、数据大小、数据频率，以及在不稳定的网络、混合网络带宽、不同技术和系统上管理各种数据格式：
- en: '![](img/0a8b3607-a5af-43df-883b-a87b32846c76.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0a8b3607-a5af-43df-883b-a87b32846c76.png)'
- en: The multisource extractor system ensures high availability and distribution.
    It also confirms that the vast volume of data gets segregated into multiple batches
    across different nodes. The single node implementation is still helpful for lower
    volumes from a handful of clients, and of course, for a significant amount of
    data from multiple clients processed in batches. Partitioning into small volumes
    in clusters produces excellent results.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 多源提取器系统确保高可用性和分布。它还确认大量数据被分割到不同节点上的多个批次。单个节点实现对于少量来自少量客户端的数据仍然有帮助，当然，对于批量处理的大量来自多个客户端的数据也是一样。在集群中将数据分割成小批量产生优秀的结果。
- en: Data enrichers help to do initial data aggregation and data cleansing. Enrichers
    ensure file transfer reliability, validations, noise reduction, compression, and
    transformation from native formats to standard formats. Collection agent nodes
    represent intermediary cluster systems, which helps final data processing and
    data loading to the destination systems.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 数据丰富器有助于进行初始数据聚合和数据清洗。丰富器确保文件传输的可靠性、验证、噪声减少、压缩以及从原生格式到标准格式的转换。收集代理节点代表中间集群系统，有助于最终数据处理和将数据加载到目标系统。
- en: 'The following are the benefits of the multisource extractor:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是多源提取器的益处：
- en: Provides reasonable speed for storing and consuming the data
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 为存储和消耗数据提供合理的速度
- en: Better data prioritization and processing
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更好的数据优先级和数据处理
- en: Drives improved business decisions
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 推动业务决策的改进
- en: Decoupled and independent from data production to data consumption
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与数据生产解耦且独立于数据消费
- en: Data semantics and detection of changed data
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据语义和变更数据检测
- en: Scaleable and fault tolerance system
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可扩展和容错系统
- en: 'The following are the impacts of the multisource extractor:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是多源提取器的影响：
- en: Difficult or impossible to achieve near real-time data processing
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 难以实现或不可能实现近乎实时数据处理
- en: Need to maintain multiple copies in enrichers and collection agents, leading
    to data redundancy and mammoth data volume in each node
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要在丰富器和收集代理中维护多个副本，导致数据冗余以及每个节点上的巨大数据量
- en: High availability trade-off with high costs to manage system capacity growth
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高可用性与高成本管理系统容量增长之间的权衡
- en: Infrastructure and configuration complexity increases to maintain batch processing
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基础设施和配置复杂性增加，以维护批量处理
- en: Multidestination pattern
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多目标模式
- en: In multisourcing, we saw the raw data ingestion to HDFS, but in most common
    cases the enterprise needs to ingest raw data not only to new HDFS systems but
    also to their existing traditional data storage, such as Informatica or other
    analytics platforms. In such cases, the additional number of data streams leads
    to many challenges, such as storage overflow, data errors (also known as data
    regret), an increase in time to transfer and process data, and so on.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在多源中，我们看到了原始数据被摄入到HDFS，但在大多数常见情况下，企业需要将原始数据摄入到新的HDFS系统，同时也需要摄入到他们现有的传统数据存储，例如Informatica或其他分析平台。在这种情况下，额外的数据流数量导致了许多挑战，例如存储溢出、数据错误（也称为数据遗憾）、数据传输和处理时间的增加等等。
- en: 'The multidestination pattern is considered as a better approach to overcome
    all of the challenges mentioned previously. This pattern is very similar to multisourcing
    until it is ready to integrate with multiple destinations (refer to the following
    diagram). The router publishes the improved data and then broadcasts it to the
    subscriber destinations (already registered with a publishing agent on the router).
    Enrichers can act as publishers as well as subscribers:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 多目标模式被认为是克服先前提到的所有挑战的更好方法。这种模式与多源非常相似，直到它准备好与多个目标集成（参考以下图表）。路由器发布改进后的数据，然后将其广播到订阅目标（已在路由器上的发布代理中注册）。丰富器可以充当发布者以及订阅者：
- en: '![](img/712d489f-f2d2-45a0-aac2-f7448b4fa5a6.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/712d489f-f2d2-45a0-aac2-f7448b4fa5a6.png)'
- en: Deploying routers in the cluster environment is also recommended for high volumes
    and a large number of subscribers.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 在集群环境中部署路由器也推荐用于高流量和大量订阅者。
- en: 'The following are the benefits of the multidestination pattern:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是多目标模式的益处：
- en: Highly scalable, flexible, fast, resilient to data failure, and cost-effective
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高度可扩展、灵活、快速、对数据故障有弹性且成本效益高
- en: Organization can start to ingest data into multiple data stores, including its
    existing RDBMS as well as NoSQL data stores
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 组织可以开始将数据摄入到多个数据存储中，包括其现有的RDBMS以及NoSQL数据存储
- en: Allows you to use simple query language, such as Hive and Pig, along with traditional
    analytics
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 允许您使用简单的查询语言，如Hive和Pig，以及传统的分析
- en: Provides the ability to partition the data for flexible access and decentralized processing
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供了数据分区的能力，以实现灵活访问和去中心化处理
- en: Possibility of decentralized computation in the data nodes
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据节点中实现去中心化计算的可能性
- en: Due to replication on HDFS nodes, there are no data regrets
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于HDFS节点上的复制，没有数据丢失
- en: Self-reliant data nodes can add more nodes without any delay
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自给自足的数据节点可以无延迟地添加更多节点
- en: 'The following are the impacts of the multidestination pattern:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是多目的地模式的以下影响：
- en: Needs complex or additional infrastructure to manage distributed nodes
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要复杂或额外的基础设施来管理分布式节点
- en: Needs to manage distributed data in secured networks to ensure data security
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要在安全网络中管理分布式数据以确保数据安全
- en: Needs enforcement, governance, and stringent practices to manage the integrity
    and consistency of data
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要实施、治理和严格的实践来管理数据的完整性和一致性
- en: Protocol converter
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 协议转换器
- en: This is a mediatory approach to provide an abstraction for the incoming data
    of various systems. The protocol converter pattern provides an efficient way to
    ingest a variety of unstructured data from multiple data sources and different
    protocols.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种中介方法，为来自各种系统的传入数据提供抽象。协议转换器模式提供了一种有效的方法，从多个数据源和不同协议中摄取各种非结构化数据。
- en: 'The message exchanger handles synchronous and asynchronous messages from various
    protocol and handlers as represented in the following diagram. It performs various
    mediator functions, such as file handling, web services message handling, stream
    handling, serialization, and so on:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 消息交换器处理来自各种协议和处理器的同步和异步消息，如下所示图所示。它执行各种中介功能，如文件处理、Web服务消息处理、流处理、序列化等：
- en: '![](img/f546fb4c-3683-48df-9e61-9319ceb237a7.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f546fb4c-3683-48df-9e61-9319ceb237a7.png)'
- en: In the protocol converter pattern, the ingestion layer holds responsibilities
    such as identifying the various channels of incoming events, determining incoming
    data structures, providing mediated service for multiple protocols into suitable
    sinks, providing one standard way of representing incoming messages, providing
    handlers to manage various request types, and providing abstraction from the incoming
    protocol layers.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在协议转换器模式中，摄取层承担着识别传入事件的各个通道、确定传入数据结构、为多个协议提供中介服务到合适的接收器、提供一种表示传入消息的标准方式、提供管理各种请求类型的处理器以及从传入协议层提供抽象等责任。
- en: Just-In-Time (JIT) transformation pattern
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实时（JIT）转换模式
- en: 'The JIT transformation pattern is the best fit in situations where raw data
    needs to be preloaded in the data stores before the transformation and processing
    can happen. In this kind of business case, this pattern runs independent preprocessing
    batch jobs that clean, validate, corelate, and transform, and then store the transformed
    information into the same data store (HDFS/NoSQL); that is, it can coexist with
    the raw data:'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: JIT转换模式在需要将原始数据在转换和处理之前预先加载到数据存储中的情况下是最合适的。在这种业务案例中，此模式运行独立的预处理批处理作业，进行清理、验证、关联和转换，然后将转换后的信息存储到相同的数据存储（HDFS/NoSQL）中；也就是说，它可以与原始数据共存：
- en: '![](img/a73c69f8-f253-4aaf-a429-6cacab8bc841.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a73c69f8-f253-4aaf-a429-6cacab8bc841.png)'
- en: The preceding diagram depicts the datastore with raw data storage along with
    transformed datasets. Please note that the data enricher of the multi-data source
    pattern is absent in this pattern and more than one batch job can run in parallel
    to transform the data as required in the big data storage, such as HDFS, Mongo
    DB, and so on.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图示展示了包含原始数据存储以及转换数据集的数据存储。请注意，在多数据源模式中缺失的数据增强器在此模式中不存在，并且可以并行运行多个批处理作业以在大数据存储（如HDFS、Mongo
    DB等）中按需转换数据。
- en: Real-time streaming pattern
  id: totrans-155
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实时流模式
- en: Most modern businesses need continuous and real-time processing of unstructured
    data for their enterprise big data applications.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数现代企业需要对其企业大数据应用进行连续和实时的非结构化数据处理。
- en: 'Real-time streaming implementations need to have the following characteristics:'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 实时流实现需要具备以下特性：
- en: Minimize latency by using large in-memory
  id: totrans-158
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用大内存来最小化延迟
- en: Event processors are atomic and independent of each other and so are easily
    scalable
  id: totrans-159
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 事件处理器是原子性的，并且相互独立，因此易于扩展
- en: Provide API for parsing the real-time information
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供解析实时信息的API
- en: Independent deployable script for any node and no centralized master node implementation
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何节点都可以独立部署的脚本，没有集中式主节点实现
- en: 'The real-time streaming pattern suggests introducing an optimum number of event
    processing nodes to consume different input data from the various data sources
    and introducing listeners to process the generated events (from event processing
    nodes) in the event processing engine:'
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 实时流模式建议引入适当数量的事件处理节点来消费来自不同数据源的不同输入数据，并引入监听器来处理事件处理引擎中生成的事件（来自事件处理节点）：
- en: '![](img/820dee03-e1d2-4fb3-9689-a2e597c8e019.png)'
  id: totrans-163
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/820dee03-e1d2-4fb3-9689-a2e597c8e019.png)'
- en: Event processing engines (event processors) have a sizeable in-memory capacity,
    and the event processors get triggered by a specific event. The trigger or alert
    is responsible for publishing the results of the in-memory big data analytics
    to the enterprise business process engines and, in turn, get redirected to various
    publishing channels (mobile, CIO dashboards, and so on).
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 事件处理引擎（事件处理器）具有相当大的内存容量，事件处理器由特定事件触发。触发器或警报负责将内存中的大数据分析结果发布到企业业务流程引擎，并反过来被重定向到各种发布渠道（移动、CIO
    桌面等）。
- en: Big data workload patterns
  id: totrans-165
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 大数据工作负载模式
- en: Workload patterns help to address data workload challenges associated with different
    domains and business cases efficiently. The big data design pattern manifests
    itself in the solution construct, and so the workload challenges can be mapped
    with the right architectural constructs and thus service the workload.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 工作负载模式有助于有效地解决与不同领域和业务案例相关的数据工作负载挑战。大数据设计模式体现在解决方案结构中，因此工作负载挑战可以与正确的架构结构相对应，从而服务于工作负载。
- en: 'The following diagram depicts a snapshot of the most common workload patterns
    and their associated architectural constructs:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表描述了最常见的 workload 模式及其相关的架构结构：
- en: '![](img/e00eebef-de3c-4519-8a86-436753437962.png)'
  id: totrans-168
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e00eebef-de3c-4519-8a86-436753437962.png)'
- en: Workload design patterns help to simplify and decompose the business use cases
    into workloads. Then those workloads can be methodically mapped to the various
    building blocks of the big data solution architecture.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 工作负载设计模式有助于简化并将业务用例分解为工作负载。然后，这些工作负载可以系统地映射到大数据解决方案架构的各个构建块。
- en: Data storage layer
  id: totrans-170
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据存储层
- en: Data storage layer is responsible for acquiring all the data that are gathered
    from various data sources and it is also liable for converting (if needed) the
    collected data to a format that can be analyzed. The following sections discuss
    more on data storage layer patterns.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 数据存储层负责获取从各种数据源收集的所有数据，并且它还负责（如果需要）将收集的数据转换为可以分析的形式。以下部分将更详细地讨论数据存储层模式。
- en: ACID versus BASE versus CAP
  id: totrans-172
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ACID 与 BASE 与 CAP
- en: Traditional RDBMS follows **atomicity**, **consistency**, **isolation**, **and
    durability** (**ACID**) to provide reliability for any user of the database. However,
    searching high volumes of big data and retrieving data from those volumes consumes
    an enormous amount of time if the storage enforces ACID rules. So, big data follows
    **basically available**, **soft state**, **eventually consistent** (**BASE**),
    a phenomenon for undertaking any search in big data space.
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 传统的关系型数据库管理系统（RDBMS）遵循**原子性**、**一致性**、**隔离性**、**持久性**（**ACID**）来为数据库的任何用户提供可靠性。然而，如果存储强制执行ACID规则，则搜索大量大数据并从这些数据量中检索数据将消耗大量时间。因此，大数据遵循**基本可用性**、**软状态**、**最终一致性**（**BASE**），这是在大数据空间中进行任何搜索的现象。
- en: Database theory suggests that the NoSQL big database may predominantly satisfy
    two properties and relax standards on the third, and those properties are **consistency**,
    **availability**, **and partition tolerance** (**CAP**).
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 数据库理论表明，NoSQL大型数据库可能主要满足两个属性，并在第三个属性上放宽标准，这些属性是**一致性**、**可用性**、**分区容错性**（**CAP**）。
- en: 'With the ACID, BASE, and CAP paradigms, the big data storage design patterns
    have gained momentum and purpose. We will look at those patterns in some detail
    in this section. The patterns are:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 在 ACID、BASE 和 CAP 范式下，大数据存储设计模式获得了动力和目的。在本节中，我们将详细探讨这些模式。这些模式包括：
- en: Façade pattern
  id: totrans-176
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外观模式
- en: NoSQL pattern
  id: totrans-177
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: NoSQL 模式
- en: Polyglot pattern
  id: totrans-178
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多语言模式
- en: Façade pattern
  id: totrans-179
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 外观模式
- en: This pattern provides a way to use existing or **traditional existing data warehouses** along
    with big data storage (such as Hadoop). It can act as a façade for the enterprise
    data warehouses and business intelligence tools.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 此模式提供了一种使用现有或**传统现有数据仓库**以及大数据存储（如 Hadoop）的方法。它可以作为企业数据仓库和商业智能工具的外观。
- en: 'In the façade pattern, the data from the different data sources get aggregated
    into **HDFS** before any transformation, or even before loading to the **traditional
    existing data warehouses**:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在外观模式中，在转换之前，或甚至在加载到**传统现有数据仓库**之前，来自不同数据源的数据被聚合到 **HDFS**：
- en: '![](img/b003b1dd-2ba3-4c27-9ab9-42f843c49d1a.png)'
  id: totrans-182
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b003b1dd-2ba3-4c27-9ab9-42f843c49d1a.png)'
- en: The façade pattern allows structured data storage even after being ingested
    to HDFS in the form of structured storage in an **RDBMS**, or in NoSQL databases,
    or in a memory cache. The façade pattern ensures reduced data size, as only the
    necessary data resides in the structured storage, as well as faster access from
    the storage.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 外观模式允许在以结构化存储的形式摄入 HDFS 后，即使数据以结构化存储在 **RDBMS**、NoSQL 数据库或内存缓存中，也能进行结构化数据存储。外观模式确保数据大小减少，因为只有必要的数据驻留在结构化存储中，以及从存储中更快地访问。
- en: NoSQL pattern
  id: totrans-184
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: NoSQL 模式
- en: This pattern entails getting NoSQL alternatives in place of traditional RDBMS
    to facilitate the rapid access and querying of big data. The NoSQL database stores
    data in a columnar, non-relational style. It can store data on local disks as
    well as in HDFS, as it is HDFS aware. Thus, data can be distributed across data
    nodes and fetched very quickly.
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 此模式涉及用 NoSQL 替代传统的 RDBMS，以促进对大数据的快速访问和查询。NoSQL 数据库以列式、非关系式的方式存储数据。由于它对 HDFS
    有意识，因此它可以在本地磁盘以及 HDFS 上存储数据。因此，数据可以分布在数据节点上，并且可以非常快速地检索。
- en: 'Let''s look at four types of NoSQL databases in brief:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们简要地看看四种类型的 NoSQL 数据库：
- en: '**Column-oriented DBMS**: Simply called a columnar store or big table data
    store, it has a massive number of columns for each tuple. Each column has a column
    key. Column family qualifiers represent related columns so that the columns and
    the qualifiers are retrievable, as each column has a column key as well. These
    data stores are suitable for fast writes.'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**列式数据库管理系统**：简称为列存储或大数据表存储，它为每个元组拥有大量的列。每个列都有一个列键。列族限定符代表相关的列，以便可以检索列和限定符，因为每个列都有一个列键。这些数据存储适合快速写入。'
- en: '![](img/73b124c4-a9df-4803-8b42-1c013882d495.png)'
  id: totrans-188
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/73b124c4-a9df-4803-8b42-1c013882d495.png)'
- en: '**Key-value pair database**: A key-value database is a data store that, when
    presented with a simple string (key), returns an arbitrarily large data (value).
    The key is bound to the value until it gets a new value assigned into or from
    a database. The key-value data store does not need to have a query language. It
    provides a way to add and remove key-value pairs. A key-value store is a dictionary
    kind of data store, where it has a list of words and each word represents one
    or more definitions.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**键值对数据库**：键值数据库是一种数据存储，当提供一个简单的字符串（键）时，返回任意大小的数据（值）。键绑定到值，直到将其新值分配到或从数据库中。键值数据存储不需要有查询语言。它提供了一种添加和删除键值对的方法。键值存储是一种字典类型的数据存储，其中包含一个单词列表，每个单词代表一个或多个定义。'
- en: '**Graph database**: This is a representation of a system that contains a sequence
    of nodes and relationships that creates a graph when combined. A graph represents
    three data fields: nodes, relationships, and properties. Some types of graph store
    are referred to as triple stores because of their node-relationship-node structure.
    You may be familiar with applications that provide evaluations of similar or likely
    characteristics as part of the search (for example, a user bought this item also
    bought... is a good illustration of graph store implementations).'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**图数据库**：这是包含一系列节点和关系的系统的表示，当结合在一起时，创建了一个图。图表示三个数据字段：节点、关系和属性。一些类型的图存储被称为三元存储，因为它们的节点-关系-节点结构。你可能熟悉提供类似或可能特征评估的应用程序，作为搜索的一部分（例如，一个用户购买了此物品也购买了...是图存储实现的良好示例）。'
- en: '![](img/aa3ed6f0-9794-4b41-bebe-6daf15b720fd.png)'
  id: totrans-191
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/aa3ed6f0-9794-4b41-bebe-6daf15b720fd.png)'
- en: '**Document database**: We can represent a graph data store as a tree structure.
    Document trees have a single root element or sometimes even multiple root elements
    as well. Note that there is a sequence of branches, sub-branches, and values beneath
    the root element. Each branch can have an expression or relative path to determine
    the traversal path from the origin node (root) and to any given branch, sub-branch,
    or value. Each branch may have a value associated with that branch. Sometimes
    the existence of a branch of the tree has a specific meaning, and sometimes a
    branch must have a given value to be interpreted correctly.'
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**文档数据库**：我们可以将图数据存储表示为树结构。文档树有一个根元素，有时甚至有多个根元素。注意，在根元素下面有一个分支、子分支和值的序列。每个分支都可以有一个表达式或相对路径来确定从起源节点（根）到任何给定分支、子分支或值的遍历路径。每个分支可能都与该分支相关联一个值。有时树中分支的存在具有特定的意义，有时分支必须具有特定的值才能正确解释。'
- en: '![](img/00750a0b-f843-45f4-942e-7faa2c83fb8b.png)'
  id: totrans-193
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/00750a0b-f843-45f4-942e-7faa2c83fb8b.png)'
- en: The following table summarizes some of the NoSQL use cases, providers, tools
    and scenarios that might need NoSQL pattern considerations. Most of this pattern
    implementation is already part of various vendor implementations, and they come
    as out-of-the-box implementations and as plug and play so that any enterprise
    can start leveraging the same quickly.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 下表总结了可能需要考虑NoSQL模式的某些NoSQL用例、提供商、工具和场景。大多数这种模式实现已经是各种供应商实现的一部分，它们作为开箱即用的实现和即插即用，以便任何企业都可以快速利用。
- en: '| **NoSQL DB to Use** | **Scenario** | **Vendor / Application / Tools** |'
  id: totrans-195
  prefs: []
  type: TYPE_TB
  zh: '| **要使用的NoSQL数据库** | **场景** | **供应商/应用程序/工具** |'
- en: '| Columnar database | Application that needs to fetch entire related columnar
    family based on a given string: for example, search engines | SAP HANA / IBM DB2
    BLU / ExtremeDB / EXASOL / IBM Informix / MS SQL Server / MonetDB |'
  id: totrans-196
  prefs: []
  type: TYPE_TB
  zh: '| 列数据库 | 需要根据给定的字符串获取整个相关列族的应用程序：例如，搜索引擎 | SAP HANA / IBM DB2 BLU / ExtremeDB
    / EXASOL / IBM Informix / MS SQL Server / MonetDB |'
- en: '| Key Value Pair database | Needle in haystack applications (refer to the *Big
    data workload patterns* given in this section) | Redis / Oracle NoSQL DB / Linux
    DBM / Dynamo / Cassandra |'
  id: totrans-197
  prefs: []
  type: TYPE_TB
  zh: '| 关键值对数据库 | 棋盘针应用（参考本节中给出的*大数据工作负载模式*） | Redis / Oracle NoSQL DB / Linux DBM
    / Dynamo / Cassandra |'
- en: '| Graph database | Recommendation engine: application that provides evaluation
    of *Similar to / Like*: for example, *User that bought this item also bought*
    | ArangoDB / Cayley / DataStax / Neo4j / Oracle Spatial and Graph / Apache Orient
    DB / Teradata Aster |'
  id: totrans-198
  prefs: []
  type: TYPE_TB
  zh: '| 图数据库 | 推荐引擎：提供“类似/喜欢”评估的应用程序：例如，*购买此物品的用户也购买了* | ArangoDB / Cayley / DataStax
    / Neo4j / Oracle Spatial and Graph / Apache Orient DB / Teradata Aster |'
- en: '| Document database | Applications that evaluate churn management of social
    media data or non-enterprise data | Couch DB / Apache Elastic Search / Informix
    / Jackrabbit / Mongo DB / Apache SOLR |'
  id: totrans-199
  prefs: []
  type: TYPE_TB
  zh: '| 文档数据库 | 评估社交媒体数据或非企业数据流失管理的应用程序 | Couch DB / Apache Elastic Search / Informix
    / Jackrabbit / Mongo DB / Apache SOLR |'
- en: Polyglot pattern
  id: totrans-200
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多语言模式
- en: Traditional (RDBMS) and multiple storage types (files, CMS, and so on) coexist
    with big data types (NoSQL/HDFS) to solve business problems.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 传统（RDBMS）和多种存储类型（文件、CMS等）与大数据类型（NoSQL/HDFS）共存，以解决商业问题。
- en: 'Most modern business cases need the coexistence of legacy databases. At the
    same time, they would need to adopt the latest big data techniques as well. Replacing
    the entire system is not viable and is also impractical. The polyglot pattern
    provides an efficient way to combine and use multiple types of storage mechanisms,
    such as Hadoop, and RDBMS. Big data appliances coexist in a storage solution:'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数现代商业案例都需要传统数据库与大数据技术的共存。同时，他们还需要采用最新的大数据技术。替换整个系统不可行，也不切实际。多语言模式提供了一种有效的方法来组合和使用多种存储机制，例如Hadoop和RDBMS。大数据设备在存储解决方案中共存：
- en: '![](img/1319b88d-5143-4afa-b94a-c25853e98785.png)'
  id: totrans-203
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1319b88d-5143-4afa-b94a-c25853e98785.png)'
- en: The preceding diagram represents the polyglot pattern way of storing data in
    different storage types, such as RDBMS, key-value stores, NoSQL database, CMS
    systems, and so on. Unlike the traditional way of storing all the information
    in one single data source, polyglot facilitates any data coming from all applications
    across multiple sources (RDBMS, CMS, Hadoop, and so on) into different storage
    mechanisms, such as in-memory, RDBMS, HDFS, CMS, and so on.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图表展示了多语言模式在不同存储类型中存储数据的方式，例如关系型数据库管理系统（RDBMS）、键值存储、NoSQL数据库、内容管理系统（CMS）等。与将所有信息存储在单一数据源的传统方式不同，多语言模式使得来自多个来源（RDBMS、CMS、Hadoop等）的所有应用程序的数据都能进入不同的存储机制，如内存、RDBMS、HDFS、CMS等。
- en: Data access layer
  id: totrans-205
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据访问层
- en: Data access in traditional databases involves JDBC connections and HTTP access
    for documents. However, in big data, the data access with conventional method
    does take too much time to fetch even with cache implementations, as the volume
    of the data is so high.
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 在传统数据库中，数据访问涉及JDBC连接和文档的HTTP访问。然而，在大数据中，即使有缓存实现，使用传统方法进行数据访问也需要花费太多时间来获取数据，因为数据量非常大。
- en: So we need a mechanism to fetch the data efficiently and quickly, with a reduced
    development life cycle, lower maintenance cost, and so on.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们需要一种机制来高效快速地获取数据，同时减少开发周期，降低维护成本等。
- en: 'Data access patterns mainly focus on accessing big data resources of two primary
    types:'
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: 数据访问模式主要关注访问两种主要类型的大数据资源：
- en: End-to-end user-driven API (access through simple queries)
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端到端用户驱动API（通过简单查询访问）
- en: Developer API (access provision through API methods)
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 开发者API（通过API方法提供访问）
- en: 'In this section, we will discuss the following data access patterns that held
    efficient data access, improved performance, reduced development life cycles,
    and low maintenance costs for broader data access:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将讨论以下数据访问模式，这些模式在更广泛的数据访问中实现了高效的数据访问、提高了性能、减少了开发周期和降低了维护成本：
- en: Connector pattern
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接器模式
- en: Lightweight stateless pattern
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轻量级无状态模式
- en: Service locator pattern
  id: totrans-214
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 服务定位器模式
- en: Near real-time pattern
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 近实时模式
- en: Stage transform pattern
  id: totrans-216
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阶段转换模式
- en: '![](img/9c91c144-6ee1-4389-b8fe-a0bb68524e77.png)'
  id: totrans-217
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9c91c144-6ee1-4389-b8fe-a0bb68524e77.png)'
- en: The preceding diagram represents the big data architecture layouts where the
    big data access patterns help data access. We discuss the whole of that mechanism
    in detail in the following sections.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图表展示了大数据架构布局，其中大数据访问模式有助于数据访问。我们将在以下章节中详细讨论整个机制。
- en: Connector pattern
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 连接器模式
- en: The developer API approach entails fast data transfer and data access services
    through APIs. It creates optimized data sets for efficient loading and analysis.
    Some of the big data appliances abstract data in NoSQL DBs even though the underlying
    data is in HDFS, or a custom implementation of a filesystem so that the data access
    is very efficient and fast.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 开发者API方法涉及通过API快速传输和访问数据服务。它创建了优化后的数据集，以实现高效加载和分析。尽管底层数据存储在HDFS或自定义文件系统实现中，一些大数据设备甚至抽象化NoSQL数据库中的数据，以便数据访问非常高效和快速。
- en: The connector pattern entails providing developer API and SQL like query language
    to access the data and so gain significantly reduced development time. As we saw
    in the earlier diagram, big data appliances come with connector pattern implementation.
    The big data appliance itself is a complete big data ecosystem and supports virtualization,
    redundancy, **replication using protocols** (**RAID**), and some appliances host
    NoSQL databases as well.
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 连接器模式包括提供开发者API和类似SQL的查询语言来访问数据，从而显著减少开发时间。正如我们在早期图表中看到的，大数据设备自带连接器模式实现。大数据设备本身是一个完整的大数据生态系统，支持虚拟化、冗余、**使用协议进行复制**（**RAID**），并且一些设备还托管NoSQL数据库。
- en: '![](img/d2b3223c-4262-4a25-beac-edf8ff85b1b7.png)'
  id: totrans-222
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d2b3223c-4262-4a25-beac-edf8ff85b1b7.png)'
- en: The preceding diagram shows a sample connector implementation for Oracle big
    data appliances. The data connector can connect to Hadoop and the big data appliance
    as well. It is an example of a custom implementations that we described earlier
    to facilitate faster data access with less development time.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图表显示了Oracle大数据设备的示例连接器实现。数据连接器可以连接到Hadoop和大数据设备。这是我们之前描述的定制实现的一个例子，旨在通过减少开发时间来促进更快的数据访问。
- en: Lightweight stateless pattern
  id: totrans-224
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 轻量级无状态模式
- en: 'This pattern entails providing data access through web services, and so it
    is independent of platform or language implementations. The data is fetched through
    restful HTTP calls, making this pattern the most sought after in cloud deployments.
    WebHDFS and HttpFS are examples of lightweight stateless pattern implementation
    for HDFS HTTP access. It uses the HTTP REST protocol. The HDFS system exposes
    the REST API (web services) for consumers who analyze big data. This pattern reduces
    the cost of ownership (pay-as-you-go) for the enterprise, as the implementations
    can be part of an **integration Platform as a Service** (**iPaaS**):'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 此模式涉及通过Web服务提供数据访问，因此它独立于平台或语言实现。数据通过RESTful HTTP调用获取，这使得该模式在云部署中最为受欢迎。WebHDFS和HttpFS是HDFS
    HTTP访问的轻量级无状态模式实现示例。它使用HTTP REST协议。HDFS系统向分析大数据的消费者公开REST API（Web服务）。此模式降低了企业的拥有成本（按使用付费），因为实现可以是**集成平台即服务**（**iPaaS**）的一部分：
- en: '![](img/5b23b296-cfd1-4802-92bd-cec481f41d73.png)'
  id: totrans-226
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5b23b296-cfd1-4802-92bd-cec481f41d73.png)'
- en: The preceding diagram depicts a sample implementation for HDFS storage that
    exposes HTTP access through the HTTP web interface.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的图示展示了HDFS存储的一个示例实现，该实现通过HTTP网络界面公开HTTP访问。
- en: Service locator pattern
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 服务定位器模式
- en: 'In a big data storage landscape, there are different types of data format (polyglot
    persistence), and if one needs to select and analyze a specific storage type from
    the list of stored data, then the service locator pattern comes in handy. It provides
    the flexibility to manipulate, filter, select, and co-relate services from the
    service catalog when storage access is with a SaaS model:'
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在大数据存储环境中，存在不同类型的数据格式（多语言持久性），如果需要从存储数据的列表中选择并分析特定的存储类型，那么服务定位器模式就派上用场。当存储访问采用SaaS模型时，它提供了操作、过滤、选择和关联服务目录中服务的灵活性：
- en: '![](img/7f6b5f03-ee8f-4dee-9d2c-702a2657415f.png)'
  id: totrans-230
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7f6b5f03-ee8f-4dee-9d2c-702a2657415f.png)'
- en: The preceding diagram shows a sample implementation of a service locator pattern.
    Observed data from various sources get aggregated and exposed through a service
    catalog and is available for visualization, or perhaps for further analysis. Service
    aggregators can aggregate services within or outside of enterprises. Different
    visualization tools can mix and match these services to show enterprise data alongside
    social media which is a different format than the other data source formats.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的图示展示了服务定位器模式的一个示例实现。来自各种来源的观测数据被聚合并通过服务目录公开，可用于可视化，或者可能用于进一步分析。服务聚合器可以在企业内部或外部聚合服务。不同的可视化工具可以混合匹配这些服务，以在企业数据旁边显示社交媒体，其格式与其他数据源格式不同。
- en: Near real-time pattern
  id: totrans-232
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 近实时模式
- en: 'For any enterprise to implement real-time data access or near real-time data
    access, the key challenges to be addressed are:'
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 对于任何企业要实现实时数据访问或近实时数据访问，需要解决的关键挑战是：
- en: '**Rapid determination of data**: Ensure rapid determination of data and make
    swift decisions (within a few seconds, not in minutes) before the data becomes
    meaningless'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速数据确定**：确保快速确定数据，并在数据变得无意义之前（几秒钟内，而不是几分钟）迅速做出决策。'
- en: '**Rapid analysis**: Ability to analyze the data in real time and spot anomalies
    and relate them to business events, provide visualization, and generate alerts
    at the moment that the data arrived'
  id: totrans-235
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**快速分析**：能够实时分析数据，发现异常并将它们与业务事件相关联，在数据到达的瞬间提供可视化并生成警报'
- en: 'Some examples of systems that would need real-time data analysis are:'
  id: totrans-236
  prefs: []
  type: TYPE_NORMAL
  zh: 需要实时数据分析的一些系统示例是：
- en: Radar systems
  id: totrans-237
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 雷达系统
- en: Customer services applications
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户服务应用程序
- en: ATMs
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动柜员机
- en: Social media platforms
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 社交媒体平台
- en: Intrusion detection systems
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 入侵检测系统
- en: 'Storm and in-memory applications such as Oracle Coherence, Hazelcast IMDG,
    SAP HANA, TIBCO, Software AG (Terracotta), VMware, and Pivotal GemFire XD are
    some of the in-memory computing vendor/technology platforms that can implement
    near real-time data access pattern applications:'
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: Storm和内存中的应用，如Oracle Coherence、Hazelcast IMDG、SAP HANA、TIBCO、Software AG（Terracotta）、VMware和Pivotal
    GemFire XD是一些可以实施近实时数据访问模式应用的内存计算供应商/技术平台：
- en: '![](img/7ce82b71-635a-4f3a-9898-c544a26e3b26.png)'
  id: totrans-243
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7ce82b71-635a-4f3a-9898-c544a26e3b26.png)'
- en: As shown in the preceding diagram, with multi-cache implementation at the ingestion
    phase, and with filtered, sorted data in multiple storage destinations (here one
    of the destinations is a cache), one can achieve near real-time access. The cache
    can be of a NoSQL database, or it can be any in-memory implementations tool, as
    mentioned earlier. The preceding diagram depicts a typical implementation of a
    log search with SOLR as a search engine.
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，在摄取阶段实现多级缓存，并在多个存储目的地（此处其中一个目的地是缓存）中过滤和排序数据，可以实现近乎实时的访问。缓存可以是NoSQL数据库，也可以是前面提到的任何内存实现工具。前图描述了使用SOLR作为搜索引擎的典型日志搜索实现。
- en: Stage transform pattern
  id: totrans-245
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阶段转换模式
- en: In the big data world, a massive volume of data can get into the data store.
    However, all of the data is not required or meaningful in every business case.
    The stage transform pattern provides a mechanism for reducing the data scanned
    and fetches only relevant data.
  id: totrans-246
  prefs: []
  type: TYPE_NORMAL
  zh: 在大数据世界中，大量数据可以进入数据存储。然而，并非所有数据在每个业务案例中都是必需的或具有意义的。阶段转换模式提供了一种减少扫描数据量的机制，并只检索相关数据。
- en: 'HDFS has raw data and business-specific data in a NoSQL database that can provide
    application-oriented structures and fetch only the relevant data in the required
    format:'
  id: totrans-247
  prefs: []
  type: TYPE_NORMAL
  zh: HDFS在NoSQL数据库中包含原始数据和特定业务数据，该数据库可以提供面向应用的结构，并且只以所需格式检索相关数据：
- en: '![](img/b15c6261-0f0d-46bc-87f9-257807dd1945.png)'
  id: totrans-248
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b15c6261-0f0d-46bc-87f9-257807dd1945.png)'
- en: Combining the stage transform pattern and the NoSQL pattern is the recommended
    approach in cases where a reduced data scan is the primary requirement. The preceding
    diagram depicts one such case for a recommendation engine where we need a significant
    reduction in the amount of data scanned for an improved customer experience.
  id: totrans-249
  prefs: []
  type: TYPE_NORMAL
  zh: 在需要减少数据扫描的情况下，结合阶段转换模式和NoSQL模式是推荐的方法。前图描述了一个这样的案例，即推荐引擎，我们需要显著减少扫描的数据量以改善客户体验。
- en: The implementation of the virtualization of data from HDFS to a NoSQL database,
    integrated with a big data appliance, is a highly recommended mechanism for rapid
    or accelerated data fetch. We have already seen that in the near real-time implementation
    shown earlier in this section.
  id: totrans-250
  prefs: []
  type: TYPE_NORMAL
  zh: 将HDFS中的数据虚拟化到NoSQL数据库中，并与大数据设备集成，是一种高度推荐的数据快速或加速检索机制。我们已经在前面本节中展示的近实时实现中看到了这一点。
- en: Rapid data analysis pattern
  id: totrans-251
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 快速数据分析模式
- en: 'For faster data processing and access, the enterprise can choose any of the
    following tools in its data landscape. Each implementation has its own merits
    and purpose; we suggest reading each implementation in detail from the references
    that we have provided and choose the best for your enterprise needs:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更快的数据处理和访问，企业可以在其数据景观中选择以下任何一种工具。每种实现都有其自身的优点和用途；我们建议您详细阅读我们提供的参考资料中的每个实现，并根据您的企业需求选择最佳方案：
- en: Apache Hadoop
  id: totrans-253
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apache Hadoop
- en: Bash Reduce
  id: totrans-254
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Bash Reduce
- en: Disco (Nokia Research)
  id: totrans-255
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Disco（诺基亚研究）
- en: Apache Spark
  id: totrans-256
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apache Spark
- en: Graph Lab
  id: totrans-257
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Graph Lab
- en: Apache Storm
  id: totrans-258
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apache Storm
- en: Google Big Query
  id: totrans-259
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Google Big Query
- en: Data discovery and analysis layer
  id: totrans-260
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据发现和分析层
- en: 'Data discovery and analysis in big data is different from the traditional analysis
    of structured RDBMS data from limited sets. Big data analysis needs a more sophisticated
    mechanism, as it involves natural language processing, unstructured texts, videos
    and images, RFID data, and so on. This section touches upon some data discovery
    and analysis patterns and mentions the tools that are supporting these patterns.
    Readers are encouraged to read other referenced materials to get a more profound
    understanding of each pattern:'
  id: totrans-261
  prefs: []
  type: TYPE_NORMAL
  zh: 大数据中的数据发现和分析不同于从有限集合中分析结构化RDBMS数据的传统分析。大数据分析需要更复杂的机制，因为它涉及自然语言处理、非结构化文本、视频和图像、RFID数据等。本节涉及一些数据发现和分析模式，并提到了支持这些模式的工具。鼓励读者阅读其他参考资料以获得对每个模式更深入的理解：
- en: '![](img/ece67b31-700a-4344-bf5f-73ad7dc1b3ba.png)'
  id: totrans-262
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ece67b31-700a-4344-bf5f-73ad7dc1b3ba.png)'
- en: Data queuing pattern
  id: totrans-263
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据排队模式
- en: 'It is a most common situation that a system needs to handle spikes while analyzing
    data. This pattern introduces a workflow or process to queue additional chunks
    of data and then route them to available nodes:'
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据分析过程中，系统需要处理峰值情况是一种非常常见的情况。此模式引入了一个工作流程或过程，用于排队额外的数据块，然后将它们路由到可用的节点：
- en: '![](img/ef55dc1c-a7b0-45d5-8771-b7c964733aa5.png)'
  id: totrans-265
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ef55dc1c-a7b0-45d5-8771-b7c964733aa5.png)'
- en: The preceding diagram depicts a sample implementation of a data queue and processors
    for additional workflows and routes to available nodes (of multiple nodes).
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图示描述了数据队列和用于额外工作流程和路由到可用节点（多个节点）的处理器的一个示例实现。
- en: Using cloud IaaS is the best option to handle the spikes dynamically and yield
    better cost savings. It spins additional virtual machines as needed, with more
    when there is a spike, and fewer when traffic is slow or average).
  id: totrans-267
  prefs: []
  type: TYPE_NORMAL
  zh: 使用云IaaS是处理动态峰值并实现更好成本节约的最佳选择。根据需要启动额外的虚拟机，峰值时更多，流量慢或平均时更少）。
- en: Index-based insight pattern
  id: totrans-268
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于索引的洞察模式
- en: This pattern defines indexes (keys) based on the inputs from the users who interact
    with customers. Iteratively, finding a range of indexes is the mechanism suggested
    by the index-based insight pattern. It sets the analysis mechanism or pattern
    to index a variable and to provide insight into common behaviors such as parents
    buying toys, and all children aged above 13 in a neighborhood. This pattern helps
    to find a crucial efficient lookup for rapid scanning but keeps related columns
    together.
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 此模式根据与客户互动的用户输入定义索引（键）。迭代地，找到一系列索引是索引洞察模式建议的机制。它将分析机制或模式设置为索引变量，并提供对常见行为（如父母购买玩具，以及一个社区中所有13岁以上的儿童）的洞察。此模式有助于找到关键高效的查找，但保持相关列在一起。
- en: Machine learning pattern
  id: totrans-270
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器学习模式
- en: This pattern helps to find a pattern of data inputs generated from heterogeneous
    devices, such as RFID devices, energy meters, signal devices, weather-related
    devices, and so on.
  id: totrans-271
  prefs: []
  type: TYPE_NORMAL
  zh: 此模式有助于找到来自异构设备（如RFID设备、能源计量器、信号设备、与天气相关的设备等）生成数据输入的模式。
- en: 'Understanding data generated by automated systems, or devices without manual
    intervention, is a challenging task, and one needs to rely on algorithms and statistical
    methods. Fortunately, there are excellent algorithms that help to analyze this
    data, and some of the conventional algorithms are as follows:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 理解由自动化系统或无需人工干预的设备生成数据是一项具有挑战性的任务，需要依赖算法和统计方法。幸运的是，有一些出色的算法有助于分析这些数据，以下是一些传统算法：
- en: Naïve Bayes classifier algorithm
  id: totrans-273
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 简单贝叶斯分类器算法
- en: K Means clustering algorithm
  id: totrans-274
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: K均值聚类算法
- en: Support vector machine algorithm
  id: totrans-275
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持向量机算法
- en: Apriori algorithm
  id: totrans-276
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apriori算法
- en: Linear regression
  id: totrans-277
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 线性回归
- en: Hypothesis testing
  id: totrans-278
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 假设检验
- en: Clustering
  id: totrans-279
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聚类
- en: ANOVA
  id: totrans-280
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方差分析（ANOVA）
- en: Logistic regression
  id: totrans-281
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 逻辑回归
- en: Neural networks / artificial neural networks
  id: totrans-282
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 神经网络/人工神经网络
- en: Random forests
  id: totrans-283
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 随机森林
- en: Decision trees
  id: totrans-284
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 决策树
- en: Nearest neighbors
  id: totrans-285
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最近邻
- en: Principal component analysis
  id: totrans-286
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主成分分析
- en: Conjoint analysis
  id: totrans-287
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 联合分析
- en: Ensemble methods
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成方法
- en: We can use one or more combinations of these algorithms as needed. Readers are
    encouraged to refer to other materials to get an insight into each algorithm,
    as covering them is not in the scope of this section.
  id: totrans-289
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以根据需要使用这些算法的一个或多个组合。鼓励读者参考其他材料以深入了解每个算法，因为本节的范围不包括它们。
- en: Converge(r) pattern
  id: totrans-290
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 收敛（r）模式
- en: In most business cases, as we have seen earlier, enterprises need to deal with
    traditional (structured) data and at the same time make use of big data to get
    enterprise-wide insights. The converge(r) pattern provides an efficient way to
    merge unstructured data with structured data and get insights and make decisions.
  id: totrans-291
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数业务案例中，正如我们之前所看到的，企业需要处理传统（结构化）数据，同时利用大数据以获得企业级洞察。收敛（r）模式提供了一种有效的方法将非结构化数据与结构化数据合并，并获取洞察和做出决策。
- en: In some business cases, enterprises may need to understand the sentiments (views
    and opinions) of their product from social media. The converge(r) pattern, combining
    external data formats with internal enterprise data formats, is one of the best
    options. This pattern entails combining those views and opinions from social media
    with internal data analysis to get combined data insights.
  id: totrans-292
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些业务案例中，企业可能需要了解其产品来自社交媒体的情感（观点和意见）。结合外部数据格式与内部企业数据格式的收敛（r）模式是最佳选择之一。此模式涉及将社交媒体中的观点和意见与内部数据分析相结合，以获得综合数据洞察。
- en: The data convergence needs to happen before the enterprise data is analyzed.
    So we can use the façade pattern (refer to the *Data storage layer* section in
    this chapter), and also use machine learning patterns to use the grouped data
    from the social media (for impacts, revenues, brand images, churn rates, and so
    on).
  id: totrans-293
  prefs: []
  type: TYPE_NORMAL
  zh: 在分析企业数据之前，数据收敛需要发生。因此，我们可以使用外观模式（参考本章的“*数据存储层*”部分），并且还可以使用机器学习模式来使用来自社交媒体的分组数据（对于影响、收入、品牌形象、流失率等）。
- en: Tools such as DrivenData, TianChi, Crowd Analytics, InfoChimps, Kaggle, and
    TopCoder provide out-of-the-box converge(r) implementation, and we can use those
    tools along with ETL tools for data transformation, cleansing, and enrichment,
    and get insights by combining the data.
  id: totrans-294
  prefs: []
  type: TYPE_NORMAL
  zh: DrivenData、天池、众包分析、InfoChimps、Kaggle 和 TopCoder 等工具提供现成的汇聚器实现，我们可以使用这些工具以及 ETL
    工具进行数据转换、清洗和丰富，并通过结合数据获得见解。
- en: Data visualization layer
  id: totrans-295
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据可视化层
- en: Data visualization's primary responsibility is to provide more insights from
    the massive volume of data by using visual representations, such as statistical
    reports, charts, and so on. Visualization of insights is the most visible portion
    to the stakeholders and sponsors; it is the most impactful part of the whole big
    data paradigm.
  id: totrans-296
  prefs: []
  type: TYPE_NORMAL
  zh: 数据可视化的主要责任是通过使用视觉表示，如统计报告、图表等，从大量数据中提供更多见解。洞察力的可视化是利益相关者和赞助者最直观的部分；它是整个大数据范式中最具影响力的部分。
- en: As visualization is most impactful and considering the vastness of the visualization,
    this section aims to provide only a brief introduction to a few of the common
    visualization patterns. However, we encourage readers to explore the exclusive
    visualization materials that we have provided in the reference sections.
  id: totrans-297
  prefs: []
  type: TYPE_NORMAL
  zh: 由于可视化最具影响力且考虑到可视化的广泛性，本节旨在仅简要介绍一些常见的可视化模式。然而，我们鼓励读者探索参考部分中提供的独特可视化材料。
- en: '![](img/10614bfc-e33e-473e-82f9-3f2b84e52a0f.png)'
  id: totrans-298
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/10614bfc-e33e-473e-82f9-3f2b84e52a0f.png)'
- en: The preceding diagram depicts data visualization patterns in a sample big data
    landscape. Visualization patterns need to support high-level views and also granular
    level details as visual representations. Moreover, visualization patterns can
    be used in conjunction with data access patterns to leverage the rapid access
    of data and its presentation.
  id: totrans-299
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图表展示了样本大数据场景中的数据可视化模式。可视化模式需要支持高级视图和详细级别的细节作为视觉表示。此外，可视化模式可以与数据访问模式结合使用，以利用数据的快速访问及其展示。
- en: First glimpse pattern
  id: totrans-300
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 初见模式
- en: As the name suggests, this is an approach that provides primary or minimalistic
    visualization data and pulls detailed information only on demand.
  id: totrans-301
  prefs: []
  type: TYPE_NORMAL
  zh: 如其名所示，这是一种提供主要或简约可视化数据的方法，并且仅在需要时获取详细信息。
- en: This pattern entails fetching only the most critical and essential data (which
    may be decided by machine learning patterns, rankings, scores, and so on) as a
    first glimpse and fetches drill-down data on demand. An example could be a search
    application displaying search results as only one page (the first page) and providing
    more data when the user needs it on subsequent pages.
  id: totrans-302
  prefs: []
  type: TYPE_NORMAL
  zh: 此模式涉及仅获取最关键和基本的数据（可能由机器学习模式、排名、分数等决定）作为第一印象，并在需要时获取钻取数据。一个例子是一个搜索应用程序仅显示一页（第一页）的搜索结果，并在用户需要时在后续页面上提供更多数据。
- en: Portal pattern
  id: totrans-303
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 门户模式
- en: With most common cases where the enterprise already has reporting applications
    and intends to reuse the same for the visualization of big data, then this pattern
    entails enhancing the web application (portal) with scripting frameworks to enhance
    the legacy visualization, thus saving the enterprise the cost of having a new
    visualization tool.
  id: totrans-304
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数常见情况下，企业已经拥有报告应用程序并打算重用这些应用程序进行大数据可视化，那么此模式涉及通过脚本框架增强网络应用程序（门户）以增强遗留可视化，从而为企业节省新可视化工具的成本。
- en: 'The following lists some of the scripting frameworks one may want to include
    and enhance with enterprise portal and realize the portal pattern:'
  id: totrans-305
  prefs: []
  type: TYPE_NORMAL
  zh: 以下列出了一些可能想要包含并增强企业门户以实现门户模式的脚本框架：
- en: D3.js
  id: totrans-306
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: D3.js
- en: Chart.js
  id: totrans-307
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Chart.js
- en: HighChart.js
  id: totrans-308
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HighChart.js
- en: ChartList.js
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ChartList.js
- en: Raphel
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Raphael
- en: Processing.js
  id: totrans-311
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Processing.js
- en: Pixi.js
  id: totrans-312
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pixi.js
- en: Webix
  id: totrans-313
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Webix
- en: AnyChart
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: AnyChart
- en: Flot
  id: totrans-315
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Flot
- en: Pykcharts
  id: totrans-316
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Pykcharts
- en: Cytoscape.js
  id: totrans-317
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cytoscape.js
- en: Mashup view pattern
  id: totrans-318
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 混合视图模式
- en: Mashup view creates an aggregated mashup view from heterogeneous data stores
    such as Hadoop, cache, and RDBMS, thereby reducing the analysis time by aggregating
    the results of the queries.
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: 混合视图从异构数据存储（如Hadoop、缓存和RDBMS）创建聚合的混合视图，从而通过聚合查询结果来减少分析时间。
- en: 'It helps to achieve higher performance for the queries by storing an aggregated
    mashups view in the HIVE layer, similar to the traditional data warehouse. The
    updates to the data warehouse are made as offline batch jobs:'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在HIVE层存储聚合的混合视图，它有助于提高查询性能，类似于传统的数据仓库。数据仓库的更新作为离线批处理作业进行：
- en: '| **Some mashup view supported (vendor) tools** | **Some data integration mashup
    tools** |'
  id: totrans-321
  prefs: []
  type: TYPE_TB
  zh: '| **支持的一些混合视图工具（供应商）** | **一些数据集成混合工具** |'
- en: '|'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: IBM Netezza
  id: totrans-323
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: IBM Netezza
- en: Cassandra
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Cassandra
- en: Vertica, Cloudera Impala
  id: totrans-325
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vertica, Cloudera Impala
- en: Hortonworks Stinger
  id: totrans-326
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Hortonworks Stinger
- en: '|'
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: Damia
  id: totrans-328
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Damia
- en: Yahoo Pipes
  id: totrans-329
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Yahoo Pipes
- en: MS Popfly
  id: totrans-330
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MS Popfly
- en: '**Google Mashup Editor** (**GME**)'
  id: totrans-331
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Google Mashup Editor** (**GME**)'
- en: Exhibit
  id: totrans-332
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Exhibit
- en: Apatar
  id: totrans-333
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Apatar
- en: MashMaker
  id: totrans-334
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: MashMaker
- en: '|'
  id: totrans-335
  prefs: []
  type: TYPE_NORMAL
  zh: '|'
- en: 'Table 12.2: Mashup view supported tools and data integration tools'
  id: totrans-336
  prefs: []
  type: TYPE_NORMAL
  zh: 表12.2：支持的混合视图工具和数据集成工具
- en: Some drawbacks with mashups that you may need to be aware of are text/data mismatch,
    object identifiers, schema mismatches, abstract level mismatches, and lower data
    quality or accuracy (due to data integration from independent sources).
  id: totrans-337
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能需要注意的一些混合视图的缺点包括文本/数据不匹配、对象标识符、模式不匹配、抽象级别不匹配以及较低的数据质量或准确性（由于从独立来源的数据集成）。
- en: Compression pattern
  id: totrans-338
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 压缩模式
- en: Compression is one of the data reduction methods of big data analysis, as reduced
    data size is computationally less expensive.
  id: totrans-339
  prefs: []
  type: TYPE_NORMAL
  zh: 压缩是大数据分析中的一种数据减少方法，因为减少的数据大小在计算上更便宜。
- en: The compression pattern provides a mechanism in situations where the enterprise
    needs to access data without aggregation or mashups. The compression pattern can
    help with faster data access from data storage by having standardized formats
    (with the need to transform to a standardized format regardless of data sources).
    The advantage of having formats is to ensure data correctness and consistency.
  id: totrans-340
  prefs: []
  type: TYPE_NORMAL
  zh: 压缩模式在需要访问数据而不进行聚合或混合的情况下提供了一个机制。通过拥有标准化的格式（无论数据来源如何都需要转换到标准化格式），压缩模式可以帮助从数据存储中更快地访问数据。拥有格式的优势是确保数据正确性和一致性。
- en: The most popular compression data analysis platform is R, and one can explore
    in-memory compression with ReRams as well.
  id: totrans-341
  prefs: []
  type: TYPE_NORMAL
  zh: 最受欢迎的压缩数据分析平台是R，也可以使用ReRams探索内存压缩。
- en: Exploder pattern
  id: totrans-342
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 爆炸模式
- en: This is a pattern to help data analysts to look at different datasets, finding
    a relation between different datasets, and also providing different perspectives.
    The exploder pattern is a useful pattern in cases where an enterprise need various
    views (visuals) for the data and there are no restrictions with the same kind
    of visual patterns.
  id: totrans-343
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个帮助数据分析师查看不同数据集、发现不同数据集之间关系的模式，同时也提供不同的视角。爆炸模式在企业需要各种数据视图且没有相同类型视觉模式限制的情况下是一个有用的模式。
- en: It also allows one to drill down from one view to a different chart type or
    visualization pattern with a click.
  id: totrans-344
  prefs: []
  type: TYPE_NORMAL
  zh: 它还允许用户通过点击从一个视图钻取到不同的图表类型或可视化模式。
- en: Summary
  id: totrans-345
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Although the development field of data analytics is not new, it has become more
    critical than ever as it experiences prodigious quantities of data generated by
    businesses, sensors, applications, and so on. Once the generated data gets stored,
    it can give extraordinary insights and helps not only business enterprises but
    also government and non-government enterprises, social communities, the economy,
    and much more.
  id: totrans-346
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管数据分析的开发领域并不新鲜，但随着企业、传感器、应用程序等产生的数据量巨大，它比以往任何时候都更加关键。一旦生成数据被存储，它可以提供非凡的洞察力，不仅帮助商业企业，也帮助政府和非政府企业、社会社区、经济等方面。
- en: In current technology trends, big data has been involved in many evolutions,
    from just buzzwords to crunching data from machine learning algorithms. With the
    exponential explosion of high velocity, high volume, high variety, and the veracity
    of data sources and streams (the four V's), big data has become the inevitable
    representative of the architectures, tools, and technologies that handle enterprises
    increasingly demanding requirements.
  id: totrans-347
  prefs: []
  type: TYPE_NORMAL
  zh: 在当前的技术趋势中，大数据已经涉及到许多演变，从仅仅是 buzzwords 到从机器学习算法中处理数据。随着高速、高容量、高多样性以及数据源和流的真实性（四个V）的指数级爆炸，大数据已经成为处理企业日益增长需求的架构、工具和技术的必然代表。
- en: 'In this chapter, we have gone through a brief introduction of the four V''s
    of big data, data analysis technology, and concepts. We also touched upon the
    big data life cycle and how it helps different stakeholders to achieve and realize
    their data insights. A brief section covered big data landscapes, and the data
    layers, as well as most of the architectural patterns associated with big data,
    involving data pipelines: that is an ordered combination of data acquisition,
    integration, ingestion, fast processing, storage, rapid access, and analytics
    stages.'
  id: totrans-348
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们简要介绍了大数据的四个“V”（Volume、Velocity、Variety、Veracity），数据分析技术和概念。我们还讨论了大数据生命周期以及它是如何帮助不同利益相关者实现和实现他们的数据洞察的。一个简短的章节涵盖了大数据景观、数据层以及与大数据相关的多数架构模式，包括数据管道：即数据采集、集成、摄取、快速处理、存储、快速访问和分析阶段的有序组合。
- en: 'The most crucial theme of this book is architectural patterns, and this chapter
    reflects it in its big data architecture, and design patterns section, in a sequence
    of architecture patterns, such as MapReduce, Lambda, and data lake. Then we have
    covered most common big data (application) design patterns by layers: that is
    patterns in various big data architectural layers, such as data sources and the
    ingestion layer, the data storage layer, the data access layer, the data discovery
    and analysis layer, and the data visualization layer.'
  id: totrans-349
  prefs: []
  type: TYPE_NORMAL
  zh: 本书最关键的主题是架构模式，本章在其大数据架构和设计模式部分反映了这一点，包括一系列架构模式，如MapReduce、Lambda和数据湖。然后我们按层覆盖了最常见的（应用）大数据设计模式：即在各种大数据架构层中的模式，如数据源和摄取层、数据存储层、数据访问层、数据发现和分析层以及数据可视化层。
- en: Covering big data architectural patterns in one chapter has been very challenging
    for us, and we have tried our best by providing samples of big data concepts and
    the most common patterns that help data architects and other data technology stakeholders.
    We hope this chapter provides them with a head start on their big data journey.
    As mentioned in many places across this chapter, we strongly encourage readers
    to refer to the citations section should they need to get exclusive patterns and
    details of implementations.
  id: totrans-350
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个章节中涵盖大数据架构模式对我们来说是一项非常大的挑战，我们通过提供大数据概念和最常见模式的样本，尽力帮助数据架构师和其他数据技术利益相关者。我们希望这一章能为他们的大数据之旅提供一个良好的开端。正如本章许多地方所提到的，我们强烈建议读者在需要获取独家模式和实现细节时参考引用部分。
- en: References
  id: totrans-351
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Citations and reference materials:'
  id: totrans-352
  prefs: []
  type: TYPE_NORMAL
  zh: 引用和参考资料：
- en: '**Big data**: *Application Architecture Q and A, A Problem-Solution Approach*
    by Nitin Sawant and Himanshu Shah (Apress 2013)'
  id: totrans-353
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大数据**：Nitin Sawant和Himanshu Shah著，《应用架构问答，问题-解决方案方法》（Apress 2013）'
- en: '**Big data governance**: *An Emerging Imperative* by Sunil Soares, (MC Press,
    October 2012)'
  id: totrans-354
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大数据治理**：Sunil Soares著，《一个新兴的必要性》（MC Press，2012年10月）'
- en: 'Other sources:'
  id: totrans-355
  prefs: []
  type: TYPE_NORMAL
  zh: 其他来源：
- en: '[http://assured-cloud-computing.illinois.edu/files/2015/02/Cristina_Abad.pdf](http://assured-cloud-computing.illinois.edu/files/2015/02/Cristina_Abad.pdf)'
  id: totrans-356
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://assured-cloud-computing.illinois.edu/files/2015/02/Cristina_Abad.pdf](http://assured-cloud-computing.illinois.edu/files/2015/02/Cristina_Abad.pdf)'
- en: '[http://bigr.io/architecture/](http://bigr.io/architecture/)'
  id: totrans-357
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://bigr.io/architecture/](http://bigr.io/architecture/)'
- en: '[http://blog.flutura.com//2012/08/11-core-big-data-workload-design.html](http://blog.flutura.com//2012/08/11-core-big-data-workload-design.html)'
  id: totrans-358
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://blog.flutura.com//2012/08/11-core-big-data-workload-design.html](http://blog.flutura.com//2012/08/11-core-big-data-workload-design.html)'
- en: '[http://ercoppa.github.io/HadoopInternals/HadoopArchitectureOverview.html](http://ercoppa.github.io/HadoopInternals/HadoopArchitectureOverview.html)'
  id: totrans-359
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://ercoppa.github.io/HadoopInternals/HadoopArchitectureOverview.html](http://ercoppa.github.io/HadoopInternals/HadoopArchitectureOverview.html)'
- en: '[http://insightdatascience.com](http://insightdatascience.com)'
  id: totrans-360
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://insightdatascience.com](http://insightdatascience.com)'
- en: '[http://www.bcs.org/upload/pdf/enterprise-architecture-patterns-201016.pdf](http://www.bcs.org/upload/pdf/enterprise-architecture-patterns-201016.pdf)'
  id: totrans-361
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.bcs.org/upload/pdf/enterprise-architecture-patterns-201016.pdf](http://www.bcs.org/upload/pdf/enterprise-architecture-patterns-201016.pdf)'
- en: '[http://www.bigdatapatterns.org/design_patterns/automated_dataset_execution](http://www.bigdatapatterns.org/design_patterns/automated_dataset_execution)'
  id: totrans-362
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.bigdatapatterns.org/design_patterns/automated_dataset_execution](http://www.bigdatapatterns.org/design_patterns/automated_dataset_execution)'
- en: '[http://www.bigdatapatterns.org/overview](http://www.bigdatapatterns.org/overview)'
  id: totrans-363
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.bigdatapatterns.org/overview](http://www.bigdatapatterns.org/overview)'
- en: '[http://www.bigdatascienceschool.com/selfstudy](http://www.bigdatascienceschool.com/selfstudy)'
  id: totrans-364
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.bigdatascienceschool.com/selfstudy](http://www.bigdatascienceschool.com/selfstudy)'
- en: '[http://www.infoworld.com/article/2616959/big-data/7-top-tools-for-taming-big-data.html](http://www.infoworld.com/article/2616959/big-data/7-top-tools-for-taming-big-data.html)'
  id: totrans-365
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.infoworld.com/article/2616959/big-data/7-top-tools-for-taming-big-data.html](http://www.infoworld.com/article/2616959/big-data/7-top-tools-for-taming-big-data.html)'
- en: '[http://www.pentaho.com/sites/default/files/uploads/resources/forrester_patterns_in_big_data.pdf](http://www.pentaho.com/sites/default/files/uploads/resources/forrester_patterns_in_big_data.pdf)'
  id: totrans-366
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.pentaho.com/sites/default/files/uploads/resources/forrester_patterns_in_big_data.pdf](http://www.pentaho.com/sites/default/files/uploads/resources/forrester_patterns_in_big_data.pdf)'
- en: '[http://www.refcodes.org/resources/Big%20data%20processing%20the%20lean%20way%20-%20a%20case%20study%20-%20v1.7.pdf](http://www.refcodes.org/resources/Big%20data%20processing%20the%20lean%20way%20-%20a%20case%20study%20-%20v1.7.pdf)'
  id: totrans-367
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.refcodes.org/resources/Big%20data%20processing%20the%20lean%20way%20-%20a%20case%20study%20-%20v1.7.pdf](http://www.refcodes.org/resources/Big%20data%20processing%20the%20lean%20way%20-%20a%20case%20study%20-%20v1.7.pdf)'
- en: '[http://www.yottastor.com/design-principles-big-data](http://www.yottastor.com/design-principles-big-data)'
  id: totrans-368
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://www.yottastor.com/design-principles-big-data](http://www.yottastor.com/design-principles-big-data)'
- en: '[https://arxiv.org/ftp/arxiv/papers/1201/1201.4479.pdf](https://arxiv.org/ftp/arxiv/papers/1201/1201.4479.pdf)'
  id: totrans-369
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://arxiv.org/ftp/arxiv/papers/1201/1201.4479.pdf](https://arxiv.org/ftp/arxiv/papers/1201/1201.4479.pdf)'
- en: '[https://bigdatawg.nist.gov/_uploadfiles/M0060_v1_8912129783.pdf](https://bigdatawg.nist.gov/_uploadfiles/M0060_v1_8912129783.pdf)'
  id: totrans-370
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://bigdatawg.nist.gov/_uploadfiles/M0060_v1_8912129783.pdf](https://bigdatawg.nist.gov/_uploadfiles/M0060_v1_8912129783.pdf)'
- en: '[https://blogs.msmvps.com/abu/2010/10/16/data-architecture-patterns-design-patterns-and-solution-patterns/](https://blogs.msmvps.com/abu/2010/10/16/data-architecture-patterns-design-patterns-and-solution-patterns/)'
  id: totrans-371
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://blogs.msmvps.com/abu/2010/10/16/data-architecture-patterns-design-patterns-and-solution-patterns/](https://blogs.msmvps.com/abu/2010/10/16/data-architecture-patterns-design-patterns-and-solution-patterns/)'
- en: '[https://conferences.oreilly.com/strata/big-data-conference-ca-2015/public/schedule/detail/38774](https://conferences.oreilly.com/strata/big-data-conference-ca-2015/public/schedule/detail/38774)'
  id: totrans-372
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://conferences.oreilly.com/strata/big-data-conference-ca-2015/public/schedule/detail/38774](https://conferences.oreilly.com/strata/big-data-conference-ca-2015/public/schedule/detail/38774)'
- en: '[https://conferences.oreilly.com/strata/strataeu2014/public/schedule/detail/37305](https://conferences.oreilly.com/strata/strataeu2014/public/schedule/detail/37305)'
  id: totrans-373
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://conferences.oreilly.com/strata/strataeu2014/public/schedule/detail/37305](https://conferences.oreilly.com/strata/strataeu2014/public/schedule/detail/37305)'
- en: '[https://hackernoon.com/ingestion-and-processing-of-data-for-big-data-and-iot-solutions-659431e37b52](https://hackernoon.com/ingestion-and-processing-of-data-for-big-data-and-iot-solutions-659431e37b52)'
  id: totrans-374
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://hackernoon.com/ingestion-and-processing-of-data-for-big-data-and-iot-solutions-659431e37b52](https://hackernoon.com/ingestion-and-processing-of-data-for-big-data-and-iot-solutions-659431e37b52)'
- en: '[https://iwringer.wordpress.com/2015/08/03/patterns-for-streaming-realtime-analytics/](https://iwringer.wordpress.com/2015/08/03/patterns-for-streaming-realtime-analytics/)'
  id: totrans-375
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://iwringer.wordpress.com/2015/08/03/patterns-for-streaming-realtime-analytics/](https://iwringer.wordpress.com/2015/08/03/patterns-for-streaming-realtime-analytics/)'
- en: '[https://link.springer.com/book/10.1007%2F978-1-4302-6293-0](https://link.springer.com/book/10.1007%2F978-1-4302-6293-0)'
  id: totrans-376
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://link.springer.com/book/10.1007%2F978-1-4302-6293-0](https://link.springer.com/book/10.1007%2F978-1-4302-6293-0)'
- en: '[https://static1.squarespace.com/static/55007c24e4b001deff386756/t/564a2b7de4b0c1a8406915fb/1447701373291/Maniyam%2C+Sujee.pdf](https://static1.squarespace.com/static/55007c24e4b001deff386756/t/564a2b7de4b0c1a8406915fb/1447701373291/Maniyam%2C+Sujee.pdf)'
  id: totrans-377
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://static1.squarespace.com/static/55007c24e4b001deff386756/t/564a2b7de4b0c1a8406915fb/1447701373291/Maniyam%2C+Sujee.pdf](https://static1.squarespace.com/static/55007c24e4b001deff386756/t/564a2b7de4b0c1a8406915fb/1447701373291/Maniyam%2C+Sujee.pdf)'
- en: '[https://vision.cloudera.com/the-six-principles-of-modern-data-architecture/](https://vision.cloudera.com/the-six-principles-of-modern-data-architecture/)'
  id: totrans-378
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://vision.cloudera.com/the-six-principles-of-modern-data-architecture/](https://vision.cloudera.com/the-six-principles-of-modern-data-architecture/)'
- en: '[https://www.datameer.com/wp-content/uploads/pdf/white_paper/Data-Preparation-Modern-BI-Common-Design-Patterns.pdf](https://www.datameer.com/wp-content/uploads/pdf/white_paper/Data-Preparation-Modern-BI-Common-Design-Patterns.pdf)'
  id: totrans-379
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.datameer.com/wp-content/uploads/pdf/white_paper/Data-Preparation-Modern-BI-Common-Design-Patterns.pdf](https://www.datameer.com/wp-content/uploads/pdf/white_paper/Data-Preparation-Modern-BI-Common-Design-Patterns.pdf)'
- en: '[https://www.dezyre.com/article/types-of-analytics-descriptive-predictive-prescriptive-analytics/209](https://www.dezyre.com/article/types-of-analytics-descriptive-predictive-prescriptive-analytics/209)'
  id: totrans-380
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://www.dezyre.com/article/types-of-analytics-descriptive-predictive-prescriptive-analytics/209](https://www.dezyre.com/article/types-of-analytics-descriptive-predictive-prescriptive-analytics/209)'
- en: '[https://www.ibm.com/developerworks/library/bd-archpatterns1/index.html](https://www.ibm.com/developerworks/library/bd-archpatterns1/index.html)'
  id: totrans-381
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[IBM开发者工作区：大数据架构模式](https://www.ibm.com/developerworks/library/bd-archpatterns1/index.html)'
- en: '[https://www.import.io/post/best-big-data-tools-use/](https://www.import.io/post/best-big-data-tools-use/)'
  id: totrans-382
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[最佳大数据工具使用指南](https://www.import.io/post/best-big-data-tools-use/)'
- en: '[https://www.linkedin.com/pulse/top-10-guiding-principles-big-data-architecture-ram-narasimhan](https://www.linkedin.com/pulse/top-10-guiding-principles-big-data-architecture-ram-narasimhan)'
  id: totrans-383
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[大数据架构的十大指导原则](https://www.linkedin.com/pulse/top-10-guiding-principles-big-data-architecture-ram-narasimhan)'
- en: '[https://www.researchgate.net/publication/296634867_Device_Data_Ingestion_for_Industrial_Big_Data_Platforms_with_a_Case_Study](https://www.researchgate.net/publication/296634867_Device_Data_Ingestion_for_Industrial_Big_Data_Platforms_with_a_Case_Study)'
  id: totrans-384
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[工业大数据平台中的设备数据采集：案例研究](https://www.researchgate.net/publication/296634867_Device_Data_Ingestion_for_Industrial_Big_Data_Platforms_with_a_Case_Study)'
- en: '[https://www.slideshare.net/AmazonWebServices/big-data-architectural-patterns-and-best-practices](https://www.slideshare.net/AmazonWebServices/big-data-architectural-patterns-and-best-practices)'
  id: totrans-385
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[大数据架构模式和最佳实践](https://www.slideshare.net/AmazonWebServices/big-data-architectural-patterns-and-best-practices)'
- en: '[https://www.slideshare.net/AsterData/sas-ny-big-analytics-conference](https://www.slideshare.net/AsterData/sas-ny-big-analytics-conference)'
  id: totrans-386
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SAS纽约大数据会议](https://www.slideshare.net/AsterData/sas-ny-big-analytics-conference)'
- en: '[https://www.slideshare.net/cscyphers/big-data-platforms-an-overview](https://www.slideshare.net/cscyphers/big-data-platforms-an-overview)'
  id: totrans-387
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[大数据平台概述](https://www.slideshare.net/cscyphers/big-data-platforms-an-overview)'
- en: '[https://www.slideshare.net/ZachGemignani/7-design-principles-44395597](https://www.slideshare.net/ZachGemignani/7-design-principles-44395597)'
  id: totrans-388
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[7个设计原则](https://www.slideshare.net/ZachGemignani/7-design-principles-44395597)'
