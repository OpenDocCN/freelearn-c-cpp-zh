["```cpp\nconfigure_edison -setup\n\n```", "```cpp\n#define LED_PIN 13 \nvoid setup() \n  { \n    pinMode(LED_PIN, OUTPUT); \n  } \n\nvoid loop() \n  { \n    digitalWrite(LED_PIN, HIGH); \n    delay(1000); \n    digitalWrite(LED_PIN, LOW); \n    delay(1000); \n  } \n\n```", "```cpp\nsrc/gz all http://repo.opkg.net/edison/repo/all\nsrc/gz edison http://repo.opkg.net/edison/repo/edison src/gz core2-32 http://repo.opkg.net/edison/repo/core2-32\n\n```", "```cpp\nopkg update\nopkg install git  \n\n```", "```cpp\ngit clone https://github.com/drejkim/edison-scripts.git ~/edison-scripts\n\n```", "```cpp\necho 'export PATH=$PATH:~/edison-scripts' >> ~/.profile\nsource ~/.profile\n\n```", "```cpp\nresizeBoot.sh\nThen go for \ninstallPip.sh\n\n```", "```cpp\ninstallMraa.sh\n\n```", "```cpp\nimport mraa \nimport time \n\nled = mraa.Gpio(13)\nled.dir(mraa.DIR_OUT)\n\nwhile True:\n        led.write(1)\n        time.sleep(0.2)\n        led.write(0)\n        time.sleep(0.2) \n\n```", "```cpp\nled = mraa.Gpio(13)\nled.dir(mraa.DIR_OUT)\n\n```", "```cpp\nwhile True:\n        led.write(1)\n        time.sleep(0.2)\n        led.write(0)\n        time.sleep(0.2) \n\n```", "```cpp\npython blink.py\n\n```", "```cpp\nvar m = require('mraa'); //require mraa \nconsole.log('MRAA Version: ' + m.getVersion()); //write the mraa version to the console \n\nvarmyLed = new m.Gpio(13); //LED hooked up to digital pin 13 (or built in pin on Galileo Gen1 & Gen2 or Edison) \nmyLed.dir(m.DIR_OUT); //set the gpio direction to output \nvarledState = true; //Boolean to hold the state of Led \n\nfunctionperiodicActivity() \n  { \n    myLed.write(ledState?1:0);\n    ledState = !ledState; \n    setTimeout(periodicActivity,1000); \n  }\nperiodicActivity(); //call the periodicActivity function \n\n```", "```cpp\nvar m = require('mraa');\nconsole.log('MRAA Version: ' + m.getVersion());  \n\n```", "```cpp\nvarmyLed = new m.Gpio(13); \nmyLed.dir(m.DIR_OUT); \nvarledState = true;\n\n```", "```cpp\nfunctionperiodicActivity() \n  { \n    myLed.write(ledState?1:0);\n    ledState = !ledState; \n    setTimeout(periodicActivity,1000); \n  } \nperiodicActivity(); \n\n```"]