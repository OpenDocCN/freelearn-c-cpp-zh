- en: Chapter 8. Advanced Topics
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第8章。高级主题
- en: Mixing multiple physical rules of an object and customizing physical properties
    is one of the new and powerful features in Unreal Engine 4\. This allows designers
    and developers to apply physics on a larger scale. Things such as ocean water,
    sky, a grass field, and object destruction are examples of how to apply multiple
    physics for player interactions in the game world.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在虚幻引擎4中混合一个物体的多个物理规则并自定义物理属性是其中一项新且强大的功能。这允许设计师和开发者在大规模上应用物理。例如，海洋水、天空、草地和物体破坏都是如何在游戏世界中应用多个物理规则以供玩家交互的例子。
- en: This chapter provides an example of various physics rules of a simple object.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章提供了一个简单物体各种物理规则示例。
- en: Simulating complex physics – destruction
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模拟复杂物理 - 破坏
- en: If you want to destroy an object in the game into small pieces, you have to
    break it into small objects and save the model as a huge file that needs heavy
    processing by the machine to render, and it also takes time to make animation
    for each piece. Some designers have ignored this method by replacing objects with
    some particle system over the object position.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想在游戏中将一个物体破坏成小块，你必须将其分解成小块，并将模型保存为需要机器进行大量处理才能渲染的大文件，并且还需要为每一块制作动画。一些设计师通过在物体位置上用一些粒子系统替换物体来忽略这种方法。
- en: 'Today, Unreal Engine 4 not only solves this issue, but also provides features
    and properties to customize the destruction of an object. Depending on the artistic
    or reality-based features of the game, you can simulate the way the energy flows
    and destroys the object and control the physical aspects of the target at the
    same time. Each destruction is simply an interaction or collision between two
    objects. This displays special visual presentations during a specific period of
    time in the game world. In our example, we will simulate the bullet from the first
    person shooter map in UE4 over a simple cube. For this, first we need to define
    our bullet blueprint and then work on the cube object to display the destruction
    after the hit. Perform the following steps:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，虚幻引擎4不仅解决了这个问题，还提供了自定义对象破坏的功能和属性。根据游戏的艺术或基于现实的特点，你可以模拟能量流动和破坏物体的方式，同时控制目标物理方面的属性。每一次破坏仅仅是两个物体之间的交互或碰撞。这会在游戏世界中的特定时间段内显示特殊的视觉表现。在我们的例子中，我们将模拟UE4中的第一人称射击地图中的子弹在简单立方体上。为此，首先我们需要定义我们的子弹蓝图，然后对立方体对象进行操作，以在击中后显示破坏。执行以下步骤：
- en: First, open Unreal Editor by clicking on the **Launch** button from Unreal Engine
    launcher.
  id: totrans-6
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，通过在虚幻引擎启动器中点击**启动**按钮来打开虚幻编辑器。
- en: Then, start a new project from **Project** browser by selecting the **New Project**
    tab. Now, select **First Person** and make sure that **With Starter Content**
    is selected and name the project `dest_test`.
  id: totrans-7
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，从**项目**浏览器中选择**新建项目**选项卡，开始一个新的项目。现在，选择**第一人称**并确保**包含启动内容**被选中，并将项目命名为`dest_test`。
- en: 'Now, open the **FirstPersonBP** folder and then in the **Blueprints** folder,
    double-click on **FirstPersonProjectile**. This opens the blueprint of your bullet.
    Check the titles of the box and the relations between each of them. This box simulates
    the default behavior of the bullets: hit the target and disappear and hit the
    wall and return at the opposite angle. These two have branches from the **Other
    Comp** output on the event box.![Simulating complex physics – destruction](img/image00350.jpeg)'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，打开**FirstPersonBP**文件夹，然后在**蓝图**文件夹中，双击**FirstPersonProjectile**。这会打开你的子弹蓝图。检查框标题以及它们之间的关系。这个框模拟了子弹的默认行为：击中目标后消失，击中墙壁后以相反角度返回。这两个分支来自事件框上的**Other
    Comp**输出。![模拟复杂物理 - 破坏](img/image00350.jpeg)
- en: Disconnect **Event Hit** by pressing *Alt* + right-click on the outputs. Move
    it to an empty area on the blueprint screen and connect **Cast To Destructible
    Actor** to it. This means that the bullet will interact with the destroyable object.
    Click on the **Cast Failed** output and connect **Destroy Actor** to it. This
    means that if the bullet doesn't interact with any objects, it gets destroyed
    after a while.
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过按*Alt* + 右键点击输出断开**事件击中**。将其移动到蓝图屏幕上的空白区域，并将其连接到**Cast To Destructible Actor**。这意味着子弹将与可破坏对象交互。点击**Cast
    Failed**输出并将其连接到**Destroy Actor**。这意味着如果子弹没有与任何对象交互，它会在一段时间后被销毁。
- en: Click on the **As Destructible Actor** output and connect the **Get Destructible**
    component to it and then connect the **Destructible Component** output of this
    box to **Apply Radius Damage**. By changing the properties of this box, you can
    control the physical simulation of the destruction of an object.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**可破坏行为者**输出，将其与**获取可破坏组件**组件连接，然后将此框的**可破坏组件**输出连接到**应用半径伤害**。通过更改此框的属性，您可以控制对象的物理破坏模拟。
- en: Note
  id: totrans-11
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: To create a new box in **Blueprint**, it's better to click and hold the mouse
    on the output of the box and then drag the wire, leave the mouse, and in the opening
    menu, enter the new box name.
  id: totrans-12
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要在**蓝图**中创建新框，最好点击并按住鼠标在框的输出上，然后拖动线，释放鼠标，在打开的菜单中输入新框名称。
- en: Now, add more connections between your boxes, as shown in the following screenshot:![Simulating
    complex physics – destruction](img/image00351.jpeg)
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，添加更多连接到您的框之间，如图所示：![模拟复杂物理 - 破坏](img/image00351.jpeg)
- en: As you can see in the preceding screenshot, the **Hit Location** output and
    the **Hit Origin** input are directly connected to each other. You can include
    more blueprint boxes between the **Hit Location** output and the **Hit Origin**
    input of your blueprint to support different scenarios. For example, imagine you
    want the player to shoot at an object in the sky and destroy another object located
    on the surface. For this scenario, there are a couple of ways to create a blueprint.
    This is not part of the physical rules and is mostly related to the controls and
    event handling in the blueprint. In our example, they are located at the same
    point, so the object gets destroyed by the bullet at the hit point.
  id: totrans-14
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如您在前面的截图中所见，**击中位置**输出和**击中原点**输入直接连接在一起。您可以在蓝图中的**击中位置**输出和**击中原点**输入之间添加更多蓝图框以支持不同的场景。例如，想象您想让玩家射击天空中的物体并摧毁位于表面的另一个物体。对于这种场景，有几种创建蓝图的方法。这并不属于物理规则的一部分，而主要与蓝图中的控制和事件处理相关。在我们的例子中，它们位于同一位置，因此物体在击中点被子弹摧毁。
- en: 'Now, let''s create and customize the target by performing the following steps:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们通过以下步骤创建和自定义目标：
- en: Go back to the editor and create a simple material with just the base color
    and one physical material in your material library. Then, drag and drop a cube
    from **Basic** in the **Modes** panel, right-click on it, and select **Find**
    in **Content Browser**. This will find the original object in the engine local
    library. Now, right-click on it in **Content Browser**. From the menu, select
    **Create Destructible Mesh**. This will create a new cube object with the properties
    to simulate destruction.![Simulating complex physics – destruction](img/image00352.jpeg)
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 返回编辑器，并在您的材质库中创建一个简单的材质，只包含基础颜色和一个物理材质。然后，从**模式**面板中将一个立方体从**基本**拖放到场景中，右键单击它，在**内容浏览器**中选择**查找**。这将找到引擎本地库中的原始对象。现在，在**内容浏览器**中右键单击它。从菜单中选择**创建可破坏网格**。这将创建一个新的立方体对象，具有模拟破坏的属性。![模拟复杂物理
    - 破坏](img/image00352.jpeg)
- en: Drag an instance of this new cube onto the stage and apply your materials to
    this new object. Hit **Play** at the top and shoot at the cube. You will find
    that your bullets get projected from the surface of the cube. Now, click on **Stop**
    and navigate back to editor. Open the blueprint for your **First Person Projectile**,
    locate the **Apply Radius Damage** box, and change **Base Damage** to `1000`,
    as shown in the following screenshot:![Simulating complex physics – destruction](img/image00353.jpeg)
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将这个新立方体的实例拖放到舞台上，并将您的材质应用到这个新对象上。点击顶部的**播放**并射击立方体。您会发现子弹从立方体的表面投射出来。现在，点击**停止**并导航回编辑器。打开您的**第一人称投射物**蓝图，找到**应用半径伤害**框，将**基础伤害**更改为`1000`，如图所示：![模拟复杂物理
    - 破坏](img/image00353.jpeg)
- en: In editor, double-click on the **Destructible Component** section in the **Details**
    panel of your cube. A new window will open. Here, you can define the properties
    related to destruction. Change **Support Depth** to `1` and then **Voronoi** to
    `360` (if your system is not very powerful, change it to `120`). Now, click on
    **Fracture Mesh** located at the top. With this action, you will be able to apply
    your setting to the mesh; otherwise, it will not work.![Simulating complex physics
    – destruction](img/image00354.jpeg)
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在编辑器中，双击您的立方体**细节**面板中的**可破坏组件**部分。将打开一个新窗口。在这里，您可以定义与破坏相关的属性。将**支持深度**更改为`1`，然后将**Voronoi**更改为`360`（如果您的系统不是很强大，将其更改为`120`）。现在，点击顶部的**断裂网格**。通过此操作，您将能够将您的设置应用到网格上；否则，它将不起作用。![模拟复杂物理
    – 破坏](img/image00354.jpeg)
- en: Again, let's navigate back to editor, hit **Play**, and shoot just one bullet
    at the object. As you can see, the cube breaks into many small particles. Now,
    hit stop and double-click on **Destructible Component** again. This time, change
    **Voronoi** to `2`, click on **Fracture Mesh** at the top, and play the level
    again (shoot just one bullet at the object).![Simulating complex physics – destruction](img/image00355.jpeg)
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次，让我们回到编辑器，点击**播放**，并向物体射击一颗子弹。如您所见，立方体分裂成许多小粒子。现在，点击停止，并再次双击**可破坏组件**。这次，将**Voronoi**改为`2`，点击顶部的**断裂网格**，然后再次播放关卡（向物体射击一颗子弹）。![模拟复杂物理
    – 破坏](img/image00355.jpeg)
- en: As you can see in the preceding image, there is a big difference between the
    number of particles and the changes on **Voronoi**. This way, you can define the
    number of pieces for the object during the destruction period. Unreal Engine 4
    automatically calculates the shape of pieces and renders them to the stage in
    real time based on physical rules. You can also import other meshes and apply
    the same.
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如前图所示，粒子数量和**Voronoi**上的变化之间存在很大差异。这样，您可以在破坏期间定义物体的碎片数量。虚幻引擎4会自动根据物理规则计算碎片形状，并将它们实时渲染到舞台上。您还可以导入其他网格并应用相同的设置。
- en: Change **Voronoi** back to `360` and then **Damage Threshold** to `40`. Click
    on **Fracture Mesh** and play the level (shoot just one bullet at the object).![Simulating
    complex physics – destruction](img/image00356.jpeg)
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将**Voronoi**改回`360`，然后将**伤害阈值**更改为`40`。点击**断裂网格**，然后播放关卡（向物体射击一颗子弹）。![模拟复杂物理
    – 破坏](img/image00356.jpeg)
- en: As you can see, the object provides some resistance against your bullet. If
    you increase **Damage Threshold** to `120`, you need to shoot more than one bullet
    to destroy the object and particles. This is similar to a rifle bullet destruction
    of a heavy material similar to stone.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如您所见，物体对您的子弹提供了一定的阻力。如果您将**伤害阈值**增加到`120`，则需要射击多颗子弹才能摧毁物体和粒子。这类似于步枪子弹摧毁类似石头的重材料。
- en: Now, change **Damage Threshold** to `1` (the default value), click on **Fracture
    Mesh** and then switch back to the blueprint. We want to simulate the shotgun
    bullet's destructive power on the target. Change **Impulse Strength** to `600`
    and click on **Compile** at the top. Then, navigate back to editor and play the
    level by shooting one bullet at the object.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将**伤害阈值**更改为`1`（默认值），点击**断裂网格**，然后切换回蓝图。我们想要模拟霰弹子弹对目标的破坏力。将**冲量强度**更改为`600`，然后点击顶部的**编译**。然后，回到编辑器，通过向物体射击一颗子弹来播放关卡。
- en: As you can see in the following screenshot, it breaks with much more energy.
    Also, the visual simulation of physics is different. Now, navigate back to blueprint,
    change it to **6000**, click on **Compile** at the top, and play the game again.
    Bang! This looks similar to a heavy shotgun hit from close distance, isn't it?
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如以下截图所示，它以更多的能量断裂。此外，物理视觉模拟也有所不同。现在，回到蓝图，将其更改为**6000**，点击顶部的**编译**，然后再次玩游戏。砰！这看起来像是近距离重霰弹枪的打击，不是吗？
- en: '![Simulating complex physics – destruction](img/image00357.jpeg)'
  id: totrans-25
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![模拟复杂物理 – 破坏](img/image00357.jpeg)'
- en: You can also involve physical material features in the object. This means that
    with multiple physical rules, you can work at the same location. Now, double-click
    on your physical material and change **Friction** to `-60` and **Restitution**
    to `0`. Then, play the game. You can see in the following screenshot that the
    object breaks into particles similar to ice cubes and spreads around the game
    stage. Such a cool effect can be combined by changing **Restitution** to `1.8`.![Simulating
    complex physics – destruction](img/image00358.jpeg)
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你还可以将物理材料特性融入对象中。这意味着，通过多个物理规则，你可以在同一位置进行操作。现在，双击你的物理材料，将**摩擦**设置为`-60`，将**恢复系数**设置为`0`。然后，开始游戏。你可以在下面的屏幕截图中看到，对象分解成类似冰块的小颗粒，并在游戏场景中散布。通过将**恢复系数**设置为`1.8`，可以产生这样的酷炫效果。![模拟复杂物理
    - 破坏](img/image00358.jpeg)
- en: There are many ways to combine the physical aspect of your object and the bullet
    preferences with the destruction properties of the object. For example, you can
    tune your bullet energy by changing **Impulse Strength** over a period of time.
    Also, as you know, each material can be customized by its own blueprint. For example,
    imagine that you have a ghost in your game; when you destroy it, it breaks into
    many particles and parts, and each part looks like rainwater. To create this scenario,
    try to apply some dynamic or random changes, such as waving, to your material
    and compare the results.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多方法可以将对象的物理特性与子弹偏好结合，以及与对象的破坏特性相结合。例如，你可以通过改变**冲量强度**在一定时间内调整子弹的能量。此外，正如你所知，每种材料都可以通过其自己的蓝图进行定制。例如，想象一下你在游戏中有一个幽灵；当你摧毁它时，它会分解成许多颗粒和部分，每个部分看起来像雨水。为了创建这种场景，尝试对你的材料应用一些动态或随机的变化，比如波动，并比较结果。
- en: Sometimes, when you use a couple of physical customizations on an object, they
    tend to overlap with each other or remove each other's effect. To avoid such problems,
    it's good practice to understand the physical rules related to the instigator
    of the event (the bullet in the previous example) and then the physical rules
    of the target.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，当你对一个对象使用几个物理定制时，它们可能会相互重叠或抵消对方的效果。为了避免这类问题，了解与事件发起者（如前例中的子弹）相关的物理规则，然后是目标对象的物理规则，是一种良好的实践。
- en: Summary
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: A simulation of mass change or a series of changes is a kind of art in the game
    world. A sufficient blueprint by developers can synchronize the physics behind
    the scenes. The presentation and quality of the simulation is based on the artist's
    efforts and madness.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 质量变化或一系列变化的模拟在游戏世界中是一种艺术。开发者通过足够的蓝图可以同步幕后物理。模拟的展示和质量取决于艺术家的努力和疯狂。
- en: Based on what you learned in this chapter, imagine that you (as a developer)
    try to put 50 objects on the stage. When you shoot at one, all get destroyed within
    a delay of a second. Also, you (as an artist) should design how and in which way
    the objects get destroyed and probably ask developers to make life easier with
    some blueprints. This great mix of developers and artists in the game design is
    one of the powerful aspects of Unreal Engine 4.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 根据你在本章中学到的知识，想象一下你（作为开发者）试图在舞台上放置50个对象。当你射击其中一个时，所有对象在1秒的延迟内都会被摧毁。同时，你（作为艺术家）应该设计对象如何以及以何种方式被摧毁，并可能要求开发者通过一些蓝图使生活变得更简单。这种开发者与艺术家在游戏设计中的完美结合是Unreal
    Engine 4的强大功能之一。
