- en: Chapter 1. Installing Cocos2d-x
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章. 安装 Cocos2d-x
- en: '*In this chapter, we''ll get things up and running on your machine so you can
    get the most out of the examples in this book. This will include information on
    downloading the framework and creating a project as well as an overview of the
    basic structure of a Cocos2d-x application.*'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '*在本章中，我们将让你的机器开始运行，以便你能够充分利用本书中的示例。这包括有关下载框架和创建项目的信息，以及 Cocos2d-x 应用程序基本结构的概述。*'
- en: '*I will also point you to some extra tools you should consider getting to help
    you with the development process, such as tools to build sprite sheets, particle
    effects, and bitmap fonts. Although these tools are optional, and you can still
    learn how to use sprite sheets, particles, and bitmap fonts just by following
    the examples given in this book, you might consider these tools for your own projects.*'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '*我还会向你推荐一些额外的工具，你可以考虑获取以帮助你的开发过程，例如用于构建精灵表、粒子效果和位图字体的工具。尽管这些工具是可选的，而且你只需通过跟随本书中给出的示例就可以学习如何使用精灵表、粒子效果和位图字体，但你可能仍会考虑这些工具用于你的项目。*'
- en: 'Things you will learn in this first chapter are as follows:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 你在本章中将学习的内容如下：
- en: How to download Cocos2d-x
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何下载 Cocos2d-x
- en: How to run your first multiplatform application
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何运行你的第一个多平台应用程序
- en: What the basic project looks like and how to find your way around it
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基本项目的外观以及如何熟悉它
- en: How to use the test project as a major reference source
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用测试项目作为主要参考来源
- en: Downloading and installing Cocos2d-x
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载和安装 Cocos2d-x
- en: All the examples in this book were developed in a Mac using Xcode and/or Eclipse.
    The example in the final chapter uses Cocos2d-x own IDE for scripting. Although
    you can use Cocos2d-x to develop your games for other platforms using different
    systems, the examples were built in a Mac and deployed to both iOS and Android.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有示例都是在 Mac 上使用 Xcode 和/或 Eclipse 开发的。最后一章的示例使用 Cocos2d-x 自带的 IDE 进行脚本编写。虽然你可以使用
    Cocos2d-x 在其他平台上使用不同的系统开发你的游戏，但示例是在 Mac 上构建的，并部署到 iOS 和 Android。
- en: 'Xcode is free and can be downloaded from the Mac App store ([https://developer.apple.com/xcode/index.php](https://developer.apple.com/xcode/index.php)),
    but in order to test your code on an iOS device and publish your games, you will
    need a developer account with Apple, which will cost you $99 a year. You can find
    more information on their website: [https://developer.apple.com/](https://developer.apple.com/).'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Xcode 是免费的，可以从 Mac App Store ([https://developer.apple.com/xcode/index.php](https://developer.apple.com/xcode/index.php))
    下载，但为了在 iOS 设备上测试你的代码并发布你的游戏，你需要一个 Apple 开发者账户，这需要每年支付 99 美元。你可以在他们的网站上找到更多信息：[https://developer.apple.com/](https://developer.apple.com/)。
- en: For Android deployment, I recommend that you get the Eclipse and ADT bundle
    from Google, which you can find at [http://developer.android.com/sdk/installing/installing-adt.html](http://developer.android.com/sdk/installing/installing-adt.html).
    You will be able to test your games in an Android device for free.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Android 部署，我建议你从 Google 获取 Eclipse 和 ADT 套件，你可以在 [http://developer.android.com/sdk/installing/installing-adt.html](http://developer.android.com/sdk/installing/installing-adt.html)
    找到。你将能够免费在 Android 设备上测试你的游戏。
- en: So, assuming you have an Internet connection, let's begin!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，假设你有互联网连接，让我们开始吧！
- en: Time for action – downloading, downloading, downloading
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 – 下载，下载，下载
- en: 'We start by downloading the necessary SDKs, NDKs, and general bits and bobs:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先下载必要的 SDK、NDK 和一些通用的小工具：
- en: Go to [http://www.cocos2d-x.org/download](http://www.cocos2d-x.org/download)
    and download the latest stable version of Cocos2d-x. For this book, I'll be using
    version Cocos2d-x-3.4.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 访问 [http://www.cocos2d-x.org/download](http://www.cocos2d-x.org/download) 并下载
    Cocos2d-x 的最新稳定版本。对于本书，我将使用 Cocos2d-x-3.4 版本。
- en: Uncompress the files somewhere in your machine you can remember later. I recommend
    that you add all the files we're going to download now to the same folder.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将文件解压缩到你的机器上某个你可以记住的地方。我建议你将我们现在要下载的所有文件都添加到同一个文件夹中。
- en: Go ahead and download the Code IDE as well. We'll be using this in the last
    chapter in this book.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 顺便下载 Code IDE 也一样。我们将在本书的最后一章中使用它。
- en: Then, go to [http://developer.android.com/sdk/installing/installing-adt.html](http://developer.android.com/sdk/installing/installing-adt.html)
    and download the Eclipse ADT plugin (if you don't have Eclipse or the Android
    SDK installed, download them at [https://eclipse.org/downloads/](https://eclipse.org/downloads/)
    and [http://developer.android.com/sdk/installing/index.html?pkg=tools](http://developer.android.com/sdk/installing/index.html?pkg=tools),
    respectively).
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，前往[http://developer.android.com/sdk/installing/installing-adt.html](http://developer.android.com/sdk/installing/installing-adt.html)下载Eclipse
    ADT插件（如果你还没有安装Eclipse或Android SDK，请分别从[https://eclipse.org/downloads/](https://eclipse.org/downloads/)和[http://developer.android.com/sdk/installing/index.html?pkg=tools](http://developer.android.com/sdk/installing/index.html?pkg=tools)下载）。
- en: Note
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: If you have any problems installing the ADT plugin, you will find complete instructions
    at [http://developer.android.com/sdk/installing/installing-adt.html](http://developer.android.com/sdk/installing/installing-adt.html).
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你在安装ADT插件时遇到任何问题，你可以在[http://developer.android.com/sdk/installing/installing-adt.html](http://developer.android.com/sdk/installing/installing-adt.html)找到完整的说明。
- en: Now, for Apache Ant, go to [http://ant.apache.org/bindownload.cgi](http://ant.apache.org/bindownload.cgi)
    and look for the links to the compressed files, and download the `.zip` one.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，对于Apache Ant，请访问[http://ant.apache.org/bindownload.cgi](http://ant.apache.org/bindownload.cgi)并查找压缩文件的链接，然后下载`.zip`版本。
- en: 'Lastly, go to [https://developer.android.com/tools/sdk/ndk/index.html](https://developer.android.com/tools/sdk/ndk/index.html)
    and download the latest version of the NDK for your target system. Follow the
    installation instructions on this same page on how to extract the files as some
    systems will not allow these to be self-extractable. A word of warning: you must
    use a version of the NDK above r8e with Cocos2d-x 3.x.'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，前往[https://developer.android.com/tools/sdk/ndk/index.html](https://developer.android.com/tools/sdk/ndk/index.html)下载针对目标系统的最新NDK版本。按照同一页上的安装说明提取文件，因为某些系统不允许这些文件自动解压。提醒一下：你必须使用NDK
    r8e以上的版本与Cocos2d-x 3.x一起使用。
- en: '*What just happened?*'
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: You have successfully downloaded everything you'll need to set up Cocos2d-x
    in your machine and start development. If you are using a Mac, you will probably
    need to change your security settings in **System Preferences** to allow Eclipse
    to run. Also, go ahead and open the Android SDK Manager inside Eclipse by going
    to the **Window-Android SDK Manager** menu, and install the packages for at least
    Version 2.3.3 and then anything above that you might wish to target.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经成功下载了在机器上设置Cocos2d-x和开始开发所需的所有内容。如果你使用的是Mac，你可能需要更改**系统偏好设置**中的安全设置，以允许Eclipse运行。此外，通过转到**窗口-Android
    SDK管理器**菜单，在Eclipse中打开Android SDK管理器，并安装至少版本2.3.3的包以及你可能希望针对的任何更高版本。
- en: Also, make sure you have Python installed in your machine. Inside Terminal or
    command prompt, just type the word `python` and hit enter. If you don't have it
    installed, visit [https://www.python.org/](https://www.python.org/) and follow
    the instructions there.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，请确保你的机器上已安装Python。在终端或命令提示符中，只需输入单词`python`并按回车键。如果你还没有安装，请访问[https://www.python.org/](https://www.python.org/)并按照那里的说明操作。
- en: So by the end of this step you should have Cocos2d-x, CocosIDE, the Android
    SDK the NDK, and Apache Ant all extracted inside a folder.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，到这一步结束时，你应该有一个文件夹，其中包含了Cocos2d-x、CocosIDE、Android SDK、NDK和Apache Ant的所有提取文件。
- en: Now let's install Cocos2d-x.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们安装Cocos2d-x。
- en: Time for action – installing Cocos2d-x
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 行动时间 - 安装Cocos2d-x
- en: 'Open Terminal or command prompt and navigate to the Cocos2d-x extracted folder:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 打开终端或命令提示符，导航到Cocos2d-x提取的文件夹：
- en: 'You can do this by typing `cd` (that is, `cd` and a space) and then dragging
    the folder to the Terminal window and hitting *Enter*. In my machine this looks
    like:'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以通过输入`cd`（即`cd`后跟一个空格）并将文件夹拖到终端窗口中，然后按*Enter*键来完成此操作。在我的机器上，这看起来是这样的：
- en: '[PRE0]'
  id: totrans-31
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Next, type `python setup.py`.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，输入`python setup.py`。
- en: 'Hit *Enter*. You will be prompted for the paths to the NDK, SDK and Apache
    ANT root. You must drag each one of the folders to the Terminal window, making
    sure to delete any extra spaces at the end of the path and hit *Enter*. So for
    the NDK I get:'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*Enter*。你将被提示输入NDK、SDK和Apache ANT根目录的路径。你必须将每个文件夹都拖到终端窗口中，确保删除路径末尾的任何额外空格，然后按*Enter*。所以对于NDK，我得到：
- en: '[PRE1]'
  id: totrans-34
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Next, it''s the path for the SDK. Once again, I drag the folder that I have
    stored inside Eclipse''s folder:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，是SDK的路径。再次，我将存储在Eclipse文件夹中的文件夹拖动：
- en: '[PRE2]'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Next, it''s the path to ANT. If you have it properly installed on your machine,
    the path will be something like `usr/local/bin` and the setup script will find
    it for you. Otherwise, you can use the one you downloaded and extracted. Just
    point to the `bin` folder inside it:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来是ANT的路径。如果您已经在您的机器上正确安装了它，路径将类似于`usr/local/bin`，设置脚本会为您找到它。否则，您可以使用您下载并解压的版本。只需指向其中的`bin`文件夹：
- en: '[PRE3]'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The last step is to add these paths to your system. Follow the last instruction
    in the window where it says: **Please execute command: "source /Users/YOUR_USER_NAME/.bash_profile"
    to make added system variables take effect**. You can copy the command inside
    the quotes, paste it, and hit *Enter*.'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步是将这些路径添加到您的系统中。按照窗口中的最后一条指令操作：**请执行以下命令："source /Users/YOUR_USER_NAME/.bash_profile"
    以使添加的系统变量生效**。您可以将引号内的命令复制，粘贴，然后按*Enter*键。
- en: '*What just happened?*'
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: You now have Cocos2d-x installed on your machine and you're ready to go. Time
    to create our first project!
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在已经在您的机器上安装了Cocos2d-x，并且准备开始使用了。是时候创建我们的第一个项目了！
- en: Hello-x World-x
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hello-x World-x
- en: 'Let''s create that old chestnut in computer programming: the `hello world`
    example.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建计算机编程中的老生常谈：`hello world`示例。
- en: Time for action – creating an application
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始行动 - 创建应用程序
- en: 'Open Terminal again and follow these easy steps:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 再次打开终端并按照以下简单步骤操作：
- en: 'You should have the path to the Cocos2d-x console already added to your system.
    You can test this by using the `cocos` command inside Terminal. In order to create
    a new project called `HelloWorld`, using C++ as its primary language and save
    it on your desktop, you need to run the following command, replacing `YOUR_BUNDLE_INDETIFIER`
    with a package name of your choice, and replacing `PATH_TO_YOUR_PROJECT` with
    the path to wherever you wish to save your project:'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该已经将Cocos2d-x控制台路径添加到您的系统中。您可以通过在终端中使用`cocos`命令来测试这一点。为了创建一个名为`HelloWorld`的新项目，使用C++作为其主要语言并将其保存在您的桌面上，您需要运行以下命令，将`YOUR_BUNDLE_INDETIFIER`替换为您选择的包名，将`PATH_TO_YOUR_PROJECT`替换为您希望保存项目的路径：
- en: '[PRE4]'
  id: totrans-47
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'As an example, in my machine this is the line I typed:'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 例如，在我的机器上，我输入的行如下：
- en: '[PRE5]'
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: And hit *Enter*. If you choose not to give a directory parameter `(-d`), the
    Cocos console will save the project inside the `Cocos2d-x` folder.
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 然后按*Enter*。如果您选择不提供目录参数（`-d`），Cocos控制台将项目保存在`Cocos2d-x`文件夹内。
- en: Now you can go to your desktop, or wherever you chose to save your project,
    and navigate to the folder `proj.ios_mac` inside the `HelloWorld` project. Inside
    that folder you'll find the Xcode project file. Once you open the project inside
    Xcode, you can click the **Run** button and you're done.![Time for action – creating
    an application](img/00002.jpeg)
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，您可以前往您的桌面或您选择保存项目的任何位置，导航到`HelloWorld`项目中的`proj.ios_mac`文件夹。在该文件夹中，您将找到Xcode项目文件。一旦在Xcode中打开项目，您就可以点击**运行**按钮，这样就完成了。![开始行动
    - 创建应用程序](img/00002.jpeg)
- en: Note
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: When you run a **cocos2d-x** application in Xcode, it is quite common for the
    program to post some warnings regarding your code, or most likely, the frameworks.
    These will mostly reference deprecated methods or statements that do not precisely
    follow more recent and stricter rules of the current SDK. But that's okay. These
    warnings, though certainly annoying, can be ignored.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当您在Xcode中运行**cocos2d-x**应用程序时，程序通常会发布一些关于您的代码或最可能的是框架的警告。这些警告大多会引用已弃用的方法或不符合当前SDK更近和更严格规则的语句。但这没关系。尽管这些警告确实令人烦恼，但可以忽略。
- en: '*What just happened?*'
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: 'You created your first Cocos2d-x application. The parameters used on the command
    line are:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您已经创建了您的第一个Cocos2d-x应用程序。命令行上使用的参数是：
- en: '`-p` for package or bundle identifier'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-p` 用于包或捆绑标识符'
- en: '`-l` for language, and here, you have the option `cpp`, `lua`, or JavaScript'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`-l` 用于语言，这里您有`cpp`、`lua`或JavaScript选项'
- en: Now let's run this app in Android.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们在Android上运行这个应用程序。
- en: Tip
  id: totrans-59
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: '**Downloading the example code**'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**下载示例代码**'
- en: You can download the example code files from your account at [http://www.packtpub.com](http://www.packtpub.com)
    for all the Packt Publishing books you have purchased. If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[http://www.packtpub.com](http://www.packtpub.com)下载您购买的所有Packt Publishing书籍的示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。
- en: Time for action – deploying to Android
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始行动 - 部署到Android
- en: 'We''re going to open the project inside Eclipse:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在 Eclipse 中打开项目：
- en: Open Eclipse.
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 Eclipse。
- en: We need to fix the path to the NDK; this step may be optional in your system,
    and in any case, it must be done only once. Inside Eclipse, go to **Eclipse-Preferences**,
    then inside the **C/C++** option select **Build-Environment**.
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要修复 NDK 的路径；在您的系统中，这一步可能是可选的，但在任何情况下，它必须只执行一次。在 Eclipse 中，转到 **Eclipse-首选项**，然后在
    **C/C++** 选项下选择 **构建环境**。
- en: You need to add the NDK path and it must be called `NDK_ROOT`. In order to do
    this, you must click **Add…**, and use `NDK_ROOT` as the name and then click inside
    the **Value** field to make sure the mouse cursor is active inside it, and then
    drag the NDK folder you downloaded inside the field. On my machine the result
    looked like this:![Time for action – deploying to Android](img/00003.jpeg)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要添加 NDK 路径，并且它必须命名为 `NDK_ROOT`。为了做到这一点，您必须点击 **添加…**，并使用 `NDK_ROOT` 作为名称，然后点击
    **值** 字段以确保鼠标光标在其中处于活动状态，然后拖动您下载的 NDK 文件夹到该字段中。在我的机器上，结果看起来像这样：![部署到 Android 的时间
    - 部署到 Android](img/00003.jpeg)
- en: Click **Apply**. It might be good to restart Eclipse. (If you do not see the
    **C/C++** option in **Preferences,** it means you do not have the CDT plugins
    installed. Look for complete instructions at [http://www.eclipse.org/cdt/](http://www.eclipse.org/cdt/)
    on how to install them.)
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **应用**。重启 Eclipse 可能是个好主意。（如果您在 **首选项** 中看不到 **C/C++** 选项，这意味着您没有安装 CDT 插件。请查找有关如何安装它们的完整说明，请参阅
    [http://www.eclipse.org/cdt/](http://www.eclipse.org/cdt/)。）
- en: Now we're ready to bring our project inside Eclipse. Select **File** | **Import…**.
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们准备将项目导入到 Eclipse 中。选择 **文件** | **导入…**。
- en: In the dialog box, select the **Android** option, and then select the **Existing
    Android Code Into Workspace** option and click **Next**:![Time for action – deploying
    to Android](img/00004.jpeg)
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在对话框中，选择 **Android** 选项，然后选择 **将现有 Android 代码导入工作空间** 选项并点击 **下一步**：![部署到 Android
    的时间 - 部署到 Android](img/00004.jpeg)
- en: Click on the **Browse** button and navigate to the `HelloWorld` project, and
    select the `proj.android` folder inside it and hit **Next**.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **浏览** 按钮，导航到 `HelloWorld` 项目，并选择其中的 `proj.android` 文件夹，然后点击 **下一步**。
- en: You should see the project compiling. The entire framework library will be compiled
    and so will the classes used in the base template.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您应该看到项目正在编译。整个框架库将被编译，并且基础模板中使用的类也将被编译。
- en: Sadly, with Version 3.4 of the framework, we have an extra step here. It was
    gone in Version 3.3, but now it's back. You must import the project's referenced
    Cocos2d-x library into Eclipse's package explorer. Repeat step 8, but instead
    of selecting the `proj.android` folder, select `cocos2d/cocos/platform/android/java`,
    and hit **Next**.
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 很遗憾，在框架的 3.4 版本中，这里有一个额外的步骤。在 3.3 版本中已经没有了，但现在又回来了。您必须将项目引用的 Cocos2d-x 库导入到
    Eclipse 的包资源管理器中。重复步骤 8，但不是选择 `proj.android` 文件夹，而是选择 `cocos2d/cocos/platform/android/java`，然后点击
    **下一步**。
- en: This will select a library called `libcocos2dx`; click on **Finish**.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将选择一个名为 `libcocos2dx` 的库；点击 **完成**。
- en: Once that's done, it might be good to run a build just in case your project
    failed to generate the correct resource files. So, navigate to **Project** | **Build
    All**.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦完成，运行一个构建以检查您的项目是否未能生成正确的资源文件可能是个好主意。因此，导航到 **项目** | **构建所有**。
- en: Now, connect your Android device and make sure Eclipse has recognized it. You
    might need to turn on **Development** options in your device, or restart your
    device while connected to your computer and with Eclipse running.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，连接您的 Android 设备并确保 Eclipse 已经识别它。您可能需要在设备上打开 **开发** 选项，或者在与计算机连接并 Eclipse
    运行时重启您的设备。
- en: Right-click on your project folder and select **Run As** | **Android Application**.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 右键单击您的项目文件夹，然后选择 **运行方式** | **Android 应用程序**。
- en: '*What just happened?*'
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**发生了什么？**'
- en: You ran your first Cocos2d-x application in Android. Don't bother with the simulator
    for your Android builds; it's a waste of time. If you don't have a device handy,
    consider investing in one.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 您已运行了您的第一个 Cocos2d-x 应用程序在 Android 上。对于您的 Android 构建不需要模拟器；这是浪费时间。如果您没有现成的设备，考虑投资一个。
- en: 'Alternatively, you could open your project''s root folder inside Terminal (or
    command prompt) and use the Cocos2d-x console `compile` command:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您可以在终端（或命令提示符）中打开项目的根文件夹，并使用 Cocos2d-x 控制台的 `compile` 命令：
- en: '[PRE6]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The people behind Cocos2d-x have announced they will get rid of the build Python
    script in the future versions of the framework, so it's good to be prepared and
    know how to go without it.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Cocos2d-x 背后的人宣布，他们将在框架的未来版本中移除构建 Python 脚本，所以做好准备并了解如何在没有它的情况下进行操作是好的。
- en: While working with Eclipse, you might soon be faced with the dreaded `java.lang.NullPointerException`
    error. This might be related to conflicts in the ADT, CDT or NDK!
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 当您使用Eclipse工作时，您很快就会面临可怕的`java.lang.NullPointerException`错误。这可能与ADT、CDT或NDK中的冲突有关！
- en: Note
  id: totrans-83
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: When you're faced with this error you have no option other than reinstall whatever
    Eclipse points to as the culprit. This might happen after an update, or if for
    some reason you have installed another framework that uses a path to the NDK or
    ADT. If the error is tied to a particular project or library, just remove all
    projects from the package explorer in Eclipse and reimport them.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 当您遇到这个错误时，您除了重新安装Eclipse指向的任何东西作为罪魁祸首外别无选择。这可能在更新后发生，或者如果您出于某种原因安装了使用NDK或ADT路径的另一个框架。如果错误与特定项目或库相关，只需从Eclipse的项目资源管理器中删除所有项目，然后重新导入它们。
- en: Now let's go over the sample application and its files.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来查看示例应用程序及其文件。
- en: The folder structure
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文件夹结构
- en: First you have the `Classes` folder; this will contain the classes for your
    application, and are written entirely in C++. Below that is the `Resources` folder,
    where you find the images, fonts, and any kind of media used by the application.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 首先是`Classes`文件夹；它将包含您的应用程序类，并且完全用C++编写。在其下方是`Resources`文件夹，您可以在其中找到应用程序使用的图像、字体和任何类型的媒体。
- en: The `ios` folder has the necessary underlying connection between your app and
    iOS. For other platforms, you will have their necessary linkage files in separate
    folders targeting their respective platform.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '`ios`文件夹包含了您的应用程序与iOS之间的必要底层连接。对于其他平台，您将在各自的平台文件夹中找到必要的链接文件。'
- en: It is important to maintain this file structure. So your classes will go into
    the `Classes` folder and all your images, sound files, fonts, level data should
    be placed in the `Resources` folder.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 维护这种文件结构很重要。因此，您的类将放入`Classes`文件夹，而所有您的图像、声音文件、字体和关卡数据应放置在`Resources`文件夹中。
- en: '![The folder structure](img/00005.jpeg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![文件夹结构](img/00005.jpeg)'
- en: Now let's go over the main classes of the basic application.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们来查看基本应用程序的主要类。
- en: The iOS linkage classes
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: iOS链接类
- en: '`AppController` and `RootViewController` are responsible to setting up OpenGL
    in iOS as well as telling the underlying operating system that your application
    is about to say `Hello... To the World`.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '`AppController`和`RootViewController`负责在iOS中设置OpenGL，并通知底层操作系统您的应用程序即将说“Hello...
    To the World”。'
- en: These classes are written with a mix of Objective-C and C++, as all the nice
    brackets and the `.mm` extension show. You will change very little, if anything,
    on these classes; and again that will reflect in changes to the way iOS handles
    your application. So other targets would require the same instructions or none
    at all, depending on the target.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这些类是用Objective-C和C++混合编写的，正如所有漂亮的括号和`.mm`扩展名所示。您对这些类几乎不会做任何修改；再次，这将在iOS处理您的应用程序的方式中反映出来。因此，其他目标将需要相同的指令或根本不需要，具体取决于目标。
- en: In `AppController` for instance, I could add support for multitouch. And in
    `RootViewController`, I could limit the screen orientations supported by my application,
    for instance.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在`AppController`中，我可以添加对多点触控的支持。在`RootViewController`中，我可以限制应用程序支持的屏幕方向，例如。
- en: The AppDelegate class
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AppDelegate类
- en: This class marks the first time your C++ app will talk to the underlying OS.
    It attempts to map the main events mobile devices we want to dispatch and listen
    to. From here on, all your application will be written in C++ (unless you need
    something else for a specific target) and from this point on, you can add conditional
    code for different targets.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 这个类标志着您的C++应用程序第一次与底层操作系统通信。它试图映射我们想要分发和监听的主要移动设备事件。从现在开始，您所有的应用程序都将用C++编写（除非您需要针对特定目标的其他东西）并且从这一点开始，您可以添加针对不同目标的条件代码。
- en: 'In `AppDelegate`, you should set up the `Director` object (it is the Cocos2d-x
    all powerful singleton manager object), to run your application just the way you
    want. You can:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 在`AppDelegate`中，您应该设置`Director`对象（它是Cocos2d-x功能强大的单例管理对象），以按照您想要的方式运行您的应用程序。您可以：
- en: Get rid of the application status information
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移除应用程序状态信息
- en: Change the frame rate of your application
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 改变应用程序的帧率
- en: Tell `Director` where your high definition images are, and where your standard
    definition images are, as well as which to use
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 告诉`Director`您的高清图像在哪里，您的标准定义图像在哪里，以及使用哪个
- en: You can change the overall scale of your application, so it will best fit different
    screens
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您可以更改应用程序的整体缩放比例，使其最适合不同的屏幕
- en: The `AppDelegate` class is also the best place to start any preloading process
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`AppDelegate` 类也是开始任何预加载过程的最佳位置'
- en: And most importantly, it is here you tell the `Director` object what `Scene`
    to begin your application with
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最重要的是，在这里你告诉 `Director` 对象以哪个 `Scene` 开始你的应用程序
- en: 'Here too, you will handle what happens to your application if the OS decides
    to kill it, push it aside, or hang it upside down to dry. All you need to do is
    place your logic inside the correct event handler: `applicationDidEnterBackground`
    or `applicationWillEnterForeground`.'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你将处理操作系统决定杀死、推到一边或倒挂晾干你的应用程序时会发生什么。你所需做的只是将你的逻辑放在正确的事件处理程序中：`applicationDidEnterBackground`
    或 `applicationWillEnterForeground`。
- en: The HelloWorldScene class
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: HelloWorldScene 类
- en: When you run the application, you get a screen with the words `Hello World`
    and a bunch of numbers in one corner; those are the display statistics you decided
    you wanted around in the `AppDelegate` class.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 当你运行应用程序时，你会在屏幕上看到一个写着 `Hello World` 和一个角上的数字；那些是你决定在 `AppDelegate` 类周围显示的显示统计信息。
- en: The actual screen is created by the oddly named `HelloWorldScene` class. It
    is a `Layer` class that creates its own scene (don't worry if you don't know what
    a `Layer` or a `Scene` class is; you will know soon).
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 实际的屏幕是由名为 `HelloWorldScene` 的奇特类创建的。它是一个 `Layer` 类，它创建自己的场景（如果你不知道 `Layer` 或
    `Scene` 类是什么，不用担心；你很快就会知道）。
- en: When it initializes, `HelloWorldScene` puts a button on the screen that you
    can press to exit the application. The button is actually a `Menu` item part of
    a `Menu` object that only has one button, with two image states for the button,
    and one call back event when the said button is pressed.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 当它初始化时，`HelloWorldScene` 在屏幕上放置了一个按钮，你可以按下它来退出应用程序。实际上，这个按钮是一个 `Menu` 对象的一部分，该对象只有一个按钮，按钮有两个图像状态，当按下该按钮时有一个回调事件。
- en: The `Menu` object automatically handles touch events targeting its members,
    so you don't get to see any of that code floating about. Then, there is also the
    necessary `Label` object to show the `Hello World` message and the background
    image.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '`Menu` 对象自动处理针对其成员的触摸事件，所以你不会看到任何代码漂浮。然后，还有必要的 `Label` 对象来显示 `Hello World`
    消息和背景图像。'
- en: Who begets whom?
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 谁生谁？
- en: 'If have you never worked with either Cocos2d or Cocos2d-x before, the way the
    initial `scene()` method is instantiated may lead to dizziness. To recap, in `AppDelegate`
    you have:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你之前从未使用过 Cocos2d 或 Cocos2d-x，初始 `scene()` 方法的实例化方式可能会让你感到头晕。为了回顾，在 `AppDelegate`
    中你有：
- en: '[PRE7]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '`Director` needs a `Scene` object to run, which you can think of as being your
    application, basically. `Scene` needs something to show, and in this case, a `Layer`
    object will do. `Scene` is then said to contain a `Layer` object.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '`Director` 需要一个 `Scene` 对象来运行，你可以将其视为你的应用程序，基本上。`Scene` 需要显示一些内容，在这种情况下，一个
    `Layer` 对象就可以。然后说 `Scene` 包含一个 `Layer` 对象。'
- en: Here a `Scene` object is created through a static method `scene` inside a `Layer`
    derived class. So the layer creates the scene, and the scene immediately adds
    the layer to itself. Huh? Relax. This incestuous-like instantiation will most
    likely happen only once, and you get nothing to do with it when it happens. So
    you can easily ignore all these funny goings-on and look the other way. I promise
    instantiations will be a much easier task after this first one.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，通过 `Layer` 派生类中的静态方法 `scene` 创建了一个 `Scene` 对象。因此，层创建了场景，场景立即将层添加到自身。嗯？放松。这种类似乱伦的实例化可能只会发生一次，当它发生时，你无权过问。所以你可以轻松地忽略所有这些有趣的举动，并转过身去。我保证在第一次之后，实例化将变得容易得多。
- en: Finding more reference material
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 寻找更多参考资料
- en: 'Follow these steps to access one of the best sources for reference material
    on Cocos2d-x: its `Test` project.'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下步骤访问 Cocos2d-x 参考资料的最好来源之一：它的 `Test` 项目。
- en: Time for action – running the test samples
  id: totrans-118
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 是时候行动了——运行测试样本
- en: 'You can open the test project just like you would any other Xcode/Eclipse project:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以像打开任何其他 Xcode/Eclipse 项目一样打开测试项目：
- en: In Eclipse, you can import the test project from inside the Cocos2d-x folder
    you downloaded. You'll find it in `tests/cpp-tests/proj.android`.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Eclipse 中，你可以从下载的 Cocos2d-x 文件夹中导入测试项目。你会在 `tests/cpp-tests/proj.android`
    中找到它。
- en: You can follow the same steps as before to build this project.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以按照之前的步骤构建此项目。
- en: 'In Xcode, you must open the tests project file that you''ll find in the Cocos2d-x
    framework folder inside the `build` folder: `build/cocos2d_tests.xcodeproj`.'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Xcode 中，你必须打开位于 `build` 文件夹中的 Cocos2d-x 框架文件夹内的测试项目文件：`build/cocos2d_tests.xcodeproj`。
- en: Once the project is opened in Xcode, you must select the correct target next
    to the **Run** button as follows:![Time for action – running the test samples](img/00006.jpeg)
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦在Xcode中打开项目，您必须在**运行**按钮旁边选择正确的目标，如下所示：![执行测试样本的时间](img/00006.jpeg)
- en: In order to actually review the code inside the tests, you may navigate to `tests/cpp-tests/Classes`
    for the C++ tests or `tests/lua-tests/src` for the Lua tests. Better yet, if you
    have a program such as `TextWrangler` or an equivalent, you can open these entire
    directories inside a **Disk Browser** window and have all that information ready
    for referencing right at your desktop.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了实际查看测试中的代码，您可以导航到`tests/cpp-tests/Classes`以查看C++测试或`tests/lua-tests/src`以查看Lua测试。更好的是，如果您有一个像`TextWrangler`或类似程序，您可以在**磁盘浏览器**窗口中打开这些整个目录，并将所有这些信息准备好以便在您的桌面上直接引用。
- en: '*What just happened?*'
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*发生了什么？*'
- en: With the test samples, you can visualize most features in Cocos2d-x, what they
    do, as well as see some of the ways you can initialize and customize them.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 使用测试样本，您可以可视化Cocos2d-x中的大多数功能，了解它们的作用，以及看到一些初始化和自定义它们的方法。
- en: I will refer to the code found in the tests quite often. As usual with programming,
    there is always a different way to accomplish the same task, so sometimes, after
    showing you one way, I'll refer to a different one that you can find (and by then
    easily understand) inside the `Test` classes.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我将经常引用测试中找到的代码。像编程一样，总是有完成同一任务的不同方法，所以有时在向您展示一种方法之后，我会引用另一种您可以在`Test`类中找到的方法（并且那时您可以轻松理解）。
- en: The other tools
  id: totrans-128
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他工具
- en: 'Now comes the part where you may need to spend a bit more money to get some
    extremely helpful tools (and do some extra bit of learning). In this book''s examples,
    I use four of them:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是您可能需要花费更多钱来获取一些极其有用的工具（并做一些额外的学习）的部分。在这本书的示例中，我使用了其中四个：
- en: 'A tool to help build sprite sheets: I''ll use **TexturePacker** ([http://www.codeandweb.com/texturepacker](http://www.codeandweb.com/texturepacker)).
    There are other alternatives, such as **Zwoptex** ([http://zwopple.com/zwoptex/](http://zwopple.com/zwoptex/)),
    and they usually offer some features for free. Cocos2d-x now offers a free program
    called **CocosStudio**, which is somewhat similar to **SpriteBuilder** (previously
    **CocosBuilder**), and it offers ways to build sprite sheets, bitmap fonts, as
    well as a number of other goodies. At the time of writing this, the Windows version
    is somewhat superior to the Mac version, but they are free!'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个帮助构建精灵图集的工具：我将使用**TexturePacker**([http://www.codeandweb.com/texturepacker](http://www.codeandweb.com/texturepacker))。还有其他替代品，如**Zwoptex**([http://zwopple.com/zwoptex/](http://zwopple.com/zwoptex/))，它们通常提供一些免费功能。Cocos2d-x现在提供了一个名为**CocosStudio**的免费程序，它与**SpriteBuilder**（以前称为**CocosBuilder**）有些相似，并提供构建精灵图集、位图字体以及许多其他好东西的方法。在撰写本文时，Windows版本在某种程度上优于Mac版本，但它们都是免费的！
- en: 'A tool to help build particle effects: I''ll use Particle Designer ([http://www.71squared.com/en/particledesigner](http://www.71squared.com/en/particledesigner)).
    Depending on your operating system, you may find free tools online for this. Cocos2d-x
    comes bundled with some common particle effects that you can customize. But doing
    it blindly is a process I do not recommend. CocosStudio also allows you to create
    your own particle effects, but you may find its interface a bit daunting. It certainly
    requires its own book of tutorials!'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个帮助构建粒子效果的工具：我将使用粒子设计师([http://www.71squared.com/en/particledesigner](http://www.71squared.com/en/particledesigner))。根据您的操作系统，您可能在网上找到免费工具。Cocos2d-x捆绑了一些常见的粒子效果，您可以自定义它们。但盲目地做这个过程我不推荐。CocosStudio也允许您创建自己的粒子效果，但您可能会发现其界面有点令人望而却步。它确实需要自己的教程书籍！
- en: 'A tool to help build bitmap fonts: I''ll use Glyph Designer ([http://www.71squared.com/en/glyphdesigner](http://www.71squared.com/en/glyphdesigner)).
    But there are others: bmGlyph (which is not as expensive) and FontBuilder (which
    is free). It is not extremely hard to build a bitmap font—not nearly as hard as
    building a particle effect from scratch—but doing it once is enough to convince
    you to get one of these tools fast. Once again, you might give CocosStudio a go.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个帮助构建位图字体的工具：我将使用Glyph Designer([http://www.71squared.com/en/glyphdesigner](http://www.71squared.com/en/glyphdesigner))。但还有其他选择：bmGlyph（价格不那么昂贵）和FontBuilder（免费）。构建位图字体并不特别困难——远不如从头开始构建粒子效果困难——但做一次就足以让您快速获取这些工具之一。再次提醒，您也可以尝试CocosStudio。
- en: 'A tool to produce sound effects: No contest—sfxr for Windows or its Mac port
    cfxr. Both are free ([http://www.drpetter.se/project_sfxr.html](http://www.drpetter.se/project_sfxr.html)
    and [http://thirdcog.eu/apps/cfxr](http://thirdcog.eu/apps/cfxr), respectively).'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成音效的工具：毫无疑问——Windows上的sfxr或其Mac版本cfxr。两者都是免费的（分别见[http://www.drpetter.se/project_sfxr.html](http://www.drpetter.se/project_sfxr.html)和[http://thirdcog.eu/apps/cfxr](http://thirdcog.eu/apps/cfxr)）。
- en: Summary
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: You just learned how to install Cocos2d-x and create a basic application. You
    also learned enough of the structure of a basic Cocos2d-x application to start
    building your first game and you know how to deploy to both iOS and Android.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 你刚刚学习了如何安装Cocos2d-x并创建一个基本应用程序。你也学到了足够的基本Cocos2d-x应用程序结构，可以开始构建你的第一个游戏，并且你知道如何部署到iOS和Android。
- en: Keep the `Test` classes by your side as you go over the examples in this book
    and you will be a Cocos2d-x pro in no time!
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读本书中的示例时，请将`Test`类放在身边，你很快就会成为Cocos2d-x专家！
- en: But first, let's go over a few things regarding the framework and its native
    language.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 但首先，让我们回顾一下关于框架及其本地语言的一些内容。
