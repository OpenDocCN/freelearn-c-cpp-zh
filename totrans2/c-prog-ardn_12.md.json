["```cpp\nint val = 0;\n\nvoid setup()\n{\n  Serial.begin(9600);\n  pinMode(13,INPUT);\n}\n\nvoid loop()\n{ \n  // Check serial buffer for characters incoming\n  if (Serial.available() > 0){         \n\n    // If an 'r' is received then read all the pins\n    if (Serial.read() == 'r') {       \n\n      // Read and send analog pins 0-5 values\n      for (int pin= 0; pin<=5; pin++){      \n        val = analogRead(pin);\n        sendValue (val);\n      }\n\n      // Read and send digital pins 2-13 values\n      for (int pin= 2; pin<=13; pin++){     \n        val = digitalRead(pin);\n        sendValue (val);\n      }\n\n      Serial.println();// Carriage return to mark end of data flow. \n      delay (5);     // prevent buffer overload\n\n    }\n\n  }\n}\n\nvoid sendValue (int val){\n  Serial.print(val);\n  Serial.write(32);  // add a space character after each value sent\n}\n```", "```cpp\n#include <ShiftOutX.h>\n#include <ShiftPinNo.h>\n\nint CLOCK_595 = 4;    // first 595 clock pin connecting to pin 4\nint LATCH_595 = 3;    // first 595 latch pin connecting to pin 3\nint DATA_595 = 2;     // first 595 serial data input pin connecting to pin 2\n\nint SR_Number = 2;    // number of shift registers in the chain\n\n// instantiate and enabling the shiftOutX library with our circuit parameters\nshiftOutX regGroupOne(LATCH_595, DATA_595, CLOCK_595, MSBFIRST, SR_Number);\n\n// random groove machine variables\nint counter = 0;\nbyte LeftChannel = B00000000 ;  // store left channel Leds infos\nbyte RightChannel = B00000000 ; // store right channel Leds infos\n\nvoid setup() {\n  // NO MORE setup for each digital pin of the Arduino\n  // EVERYTHING is made by the library :-)\n}\n\nvoid loop(){ \n\n  if (Serial.available() > 0) {\n    LeftChannel = (byte)Serial.parseInt();\n    RightChannel = (byte)Serial.parseInt();\n\n    unsigned short int data; // declaring the data container as a very local variable\n    data = ( LeftChannel << 8 ) | RightChannel; // aggregating the 2 read bytes\n    shiftOut_16(DATA_595, CLOCK_595, MSBFIRST, data);  // pushing the whole data to SRs\n\n    // make a short pause before changing LEDs states\n    delay(2);\n  }\n}\n```", "```cpp\nint sensorPin = 0;           // pin number where the SHARP GP2Y0A02YK is connected\nint sensorValue = 0 ;        // storing the value measured from 0 to 1023\n\nvoid setup() {\n  Serial.begin(9600);\n}\n\nvoid loop(){\n  sensorValue = analogRead(sensorPin); // read/store the value from sensor\n  Serial.println(sensorValue);\n\n  delay(20);    \n}\n```"]