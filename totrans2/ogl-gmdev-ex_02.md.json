["```cpp\n#include \"stdafx.h\"\n#include <windows.h>\n#include \"glut.h\"\n\nvoid initGL() {\n  glClearColor(0.0f, 0.0f, 0.0f, 1.0f);\n}\n\nvoid drawPoints()\n{\n  glBegin(GL_POINTS);\n\n  glColor3f(1.0f, 1.0f, 1.0f);\n  glVertex2f(0.1f, -0.6f);\n  glVertex2f(0.7f, -0.6f);\n  glVertex2f(0.4f, -0.1f);\n\n  glEnd();\n}\n\nvoid update()\n{\n  glClear(GL_COLOR_BUFFER_BIT);\n  drawPoints();\n  glFlush();\n}\n\nint _tmain(int argc, _TCHAR* argv[])\n{\n  glutCreateWindow(\"GL Fun\");\n  glutInitWindowSize(320, 320);\n  glutInitWindowPosition(50, 50);\n  glutDisplayFunc(update);\n  initGL();\n  glutMainLoop();\n  return 0;\n}\n```", "```cpp\nglClearColor(0.0f, 0.0f, 0.0f, 1.0f);\n```", "```cpp\nvoid drawLines()\n{\n  glBegin(GL_LINES);\n\n  glColor3f(1.0f, 1.0f, 1.0f);\n  glVertex2f(0.1f, -0.6f);\n  glVertex2f(0.7f, -0.6f);\n\n  glVertex2f(0.7f, -0.6f);\n  glVertex2f(0.4f, -0.1f);\n\n  glEnd();\n}\n```", "```cpp\nvoid update() \n{\n  glClear(GL_COLOR_BUFFER_BIT);\n  drawLines();\n  glFlush();\n}\n```", "```cpp\nvoid drawSolidTriangle()\n{\n  glBegin(GL_TRIANGLES);\n\n  glColor3f(0.0f, 0.0f, 1.0f);\n  glVertex2f(0.1f, -0.6f);\n  glVertex2f(0.7f, -0.6f);\n  glVertex2f(0.4f, -0.1f);\n\n  glEnd();\n}\n```", "```cpp\nvoid update()\n{\n  glClear(GL_COLOR_BUFFER_BIT);\n  drawSolidTriangle();\n  glFlush();\n}\n```", "```cpp\nvoid drawGradientTriangle()\n{\n  glBegin(GL_TRIANGLES);\n\n  glColor3f(1.0f, 0.0f, 0.0f);\n  glVertex2f(0.3f, -0.4f);\n\n  glColor3f(0.0f, 1.0f, 0.0f);\n  glVertex2f(0.9f, -0.4f);\n\n  glColor3f(0.0f, 0.0f, 1.0f);\n  glVertex2f(0.6f, -0.9f);\n\n  glEnd();\n}\n```", "```cpp\nvoid update()\n{\n  glClear(GL_COLOR_BUFFER_BIT);\n  drawGradientTriangle();\n  glFlush();\n}\n```", "```cpp\nvoid drawQuad()\n{\n  glBegin(GL_QUADS);\n\n  glColor3f(0.0f, 1.0f, 0.0f);\n  glVertex2f(0.1f, -0.1f);\n  glVertex2f(0.1f, -0.6f);\n  glVertex2f(0.6f, -0.6f);\n  glVertex2f(0.6f, -0.1f);\n\n  glEnd();\n}\n```", "```cpp\n  GLuint texture;\n  #pragma warning(disable: 4996)\n  bool loadTexture(const char* filename)\n  {\n    unsigned char header[54];\n    unsigned char* data;\n    int dataPos;\n    int width;\n    int height;\n    int imageSize;\n\n    FILE * file = fopen(filename, \"rb\");\n    if (!file) return false;\n    if (fread(header, 1, 54, file) != 54) return false;\n    if (header[0] != 'B' || header[1] != 'M') return false;\n\n    dataPos = *(int*)&(header[0x0A]);\n    imageSize = *(int*)&(header[0x22]);\n    width = *(int*)&(header[0x12]);\n    height = *(int*)&(header[0x16]);\n\n    if (imageSize == 0) imageSize = width*height * 3;\n    if (dataPos == 0) dataPos = 54;\n\n    data = new unsigned char[imageSize];\n    fread(data, 1, imageSize, file);\n    fclose(file);\n\n    glGenTextures(1, &texture);\n    glBindTexture(GL_TEXTURE_2D, texture);\n    glTexImage2D(GL_TEXTURE_2D, 0, GL_RGB, width, height, 0, GL_RGB, GL_UNSIGNED_BYTE, data);\n    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MAG_FILTER, GL_NEAREST);\n    glTexParameteri(GL_TEXTURE_2D, GL_TEXTURE_MIN_FILTER, GL_NEAREST);\n    return true;\n  }\n```", "```cpp\nglEnable(GL_TEXTURE_2D);\nglTexEnvf(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, GL_MODULATE);\n```", "```cpp\nloadTexture(\"car.bmp\"); \n```", "```cpp\nvoid drawTexture()\n{\n  glBindTexture(GL_TEXTURE_2D, texture);\n  glBegin(GL_QUADS);\n  glTexCoord2d(0.0, 0.0); glVertex2d(0.0, 0.0);\n  glTexCoord2d(1.0, 0.0); glVertex2d(0.5, 0.0);\n  glTexCoord2d(1.0, 1.0); glVertex2d(0.5, 0.5);\n  glTexCoord2d(0.0, 1.0); glVertex2d(0.0, 0.5);\n  glEnd();\n}\n```", "```cpp\ndrawTexture();\n```"]