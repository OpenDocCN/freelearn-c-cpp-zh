["```cpp\nQT       += core gui network\n\ngreaterThan(QT_MAJOR_VERSION, 4): QT += widgets\n\nTARGET = Weather_Demo\nTEMPLATE = app\n\nSOURCES += main.cpp\\\n        mainwindow.cpp \\\n        weather.cpp\n\nHEADERS  += mainwindow.h \\\n            weather.h\n\nFORMS    += mainwindow.ui\n```", "```cpp\n#ifndef WEATHER_H\n#define WEATHER_H\n\n#include <QObject>\n#include <QJsonDocument>\n#include <QJsonObject>\n#include <QNetworkAccessManager>\n#include <QNetworkReply>\n#include <QImage>\n\nclass Weather : public QObject\n{\n    Q_OBJECT\n    public:\n    explicit Weather(QObject *parent = 0);\n\n    signals:\n    void updateFinished(const QString &location, const QString &temp, const QString &wind);\n    void imageDownloaded(const QImage &);\n\n    public slots:\n    void updateData(const QString &woeid);\n    void getAttrImg();\n\n    private:\n    QNetworkAccessManager *naManager;\n    QNetworkReply *imgReply;\n    QImage attrImg;\n\n    private slots:\n    void onSSLErrors(QNetworkReply *);\n    void onQueryFinished(QNetworkReply *);\n};\n\n#endif // WEATHER_H\n```", "```cpp\n#include <QDebug>\n#include <QNetworkRequest>\n#include <QJsonArray>\n#include \"weather.h\"\n```", "```cpp\nWeather::Weather(QObject *parent) :\n    QObject(parent)\n{\n    naManager = new QNetworkAccessManager(this);\n\n    connect(naManager, &QNetworkAccessManager::finished, this, &Weather::onQueryFinished);\n    connect(naManager, &QNetworkAccessManager::sslErrors, this, &Weather::onSSLErrors);\n}\n```", "```cpp\nvoid Weather::onSSLErrors(QNetworkReply *re)\n{\n    re->ignoreSslErrors();\n}\n```", "```cpp\nvoid Weather::updateData(const QString &woeid)\n{\n    QUrl url(\"https://query.yahooapis.com/v1/public/yql?q=select * from weather.forecast where woeid = \" + woeid + \"&format=json\");\n    QNetworkRequest req(url);\n    naManager->get(req);\n}\n```", "```cpp\nvoid Weather::getAttrImg()\n{\n    QUrl url(\"https://poweredby.yahoo.com/purple.png\");\n    QNetworkRequest req(url);\n    imgReply = naManager->get(req);\n}\n```", "```cpp\nvoid Weather::onQueryFinished(QNetworkReply *re)\n{\n    if (re->error() != QNetworkReply::NoError) {\n        qDebug() << re->errorString();\n        re->deleteLater();\n        return;\n    }\n\n    if (re == imgReply) {\n        attrImg = QImage::fromData(imgReply->readAll());\n        emit imageDownloaded(attrImg);\n        imgReply->deleteLater();\n        return;\n    }\n\n    QByteArray result = re->readAll();\n    re->deleteLater();\n\n    QJsonParseError err;\n    QJsonDocument doc = QJsonDocument::fromJson(result, &err);\n    if (err.error != QJsonParseError::NoError) {\n        qDebug() << err.errorString();\n        return;\n    }\n    QJsonObject obj = doc.object();\n    QJsonObject res = obj.value(\"query\").toObject().value(\"results\").toObject().value(\"channel\").toObject();\n\n    QJsonObject locObj = res[\"location\"].toObject();\n    QString location;\n    for(QJsonObject::ConstIterator it = locObj.constBegin(); it != locObj.constEnd(); ++it) {\n        location.append((*it).toString());\n        if ((it + 1) != locObj.constEnd()) {\n            location.append(\", \");\n        }\n    }\n\n    QString temperature = res[\"item\"].toObject()[\"condition\"].toObject()[\"temp\"].toString() + res[\"units\"].toObject()[\"temperature\"].toString();\n\n    QJsonObject windObj = res[\"wind\"].toObject();\n    QString wind;\n    for(QJsonObject::ConstIterator it = windObj.constBegin(); it != windObj.constEnd(); ++it) {\n        wind.append(it.key());\n        wind.append(\": \");\n        wind.append((*it).toString());\n        wind.append(\"\\n\");\n    }\n\n    emit updateFinished(location, temperature, wind);\n}\n```", "```cpp\n{\n  \"query\":{\n    \"count\":1,\n    \"created\":\"2014-12-05T23:19:54Z\",\n    \"lang\":\"en-GB\",\n    \"results\":{\n      \"channel\":{\n        \"title\":\"Yahoo! Weather - Dublin, IE\",\n        \"link\":\"http://us.rd.yahoo.com/dailynews/rss/weather/Dublin__IE/*http://weather.yahoo.com/forecast/EIXX0014_f.html\",\n        \"description\":\"Yahoo! Weather for Dublin, IE\",\n        \"language\":\"en-us\",\n        \"lastBuildDate\":\"Fri, 05 Dec 2014 9:59 pm GMT\",\n        \"ttl\":\"60\",\n        \"location\":{\n          \"city\":\"Dublin\",\n          \"country\":\"Ireland\",\n          \"region\":\"DUB\"\n        },\n        \"units\":{\n          \"distance\":\"mi\",\n          \"pressure\":\"in\",\n          \"speed\":\"mph\",\n          \"temperature\":\"F\"\n        },\n        \"wind\":{\n          \"chill\":\"29\",\n          \"direction\":\"230\",\n          \"speed\":\"8\"\n        },\n        \"atmosphere\":{\n          \"humidity\":\"93\",\n          \"pressure\":\"30.36\",\n          \"rising\":\"1\",\n          \"visibility\":\"6.21\"\n        },\n        \"astronomy\":{\n          \"sunrise\":\"8:22 am\",\n          \"sunset\":\"4:09 pm\"\n        },\n        \"image\":{\n          \"title\":\"Yahoo! Weather\",\n          \"width\":\"142\",\n          \"height\":\"18\",\n          \"link\":\"http://weather.yahoo.com\",\n          \"url\":\"http://l.yimg.com/a/i/brand/purplelogo//uh/us/news-wea.gif\"\n        },\n        \"item\":{\n          \"title\":\"Conditions for Dublin, IE at 9:59 pm GMT\",\n          \"lat\":\"53.33\",\n          \"long\":\"-6.29\",\n          \"link\":\"http://us.rd.yahoo.com/dailynews/rss/weather/Dublin__IE/*http://weather.yahoo.com/forecast/EIXX0014_f.html\",\n          \"pubDate\":\"Fri, 05 Dec 2014 9:59 pm GMT\",\n          \"condition\":{\n            \"code\":\"29\",\n            \"date\":\"Fri, 05 Dec 2014 9:59 pm GMT\",\n            \"temp\":\"36\",\n            \"text\":\"Partly Cloudy\"\n          },\n          \"description\":\"\\n<img src=\\\"http://l.yimg.com/a/i/us/we/52/29.gif\\\"/><br />\\n<b>Current Conditions:</b><br />\\nPartly Cloudy, 36 F<BR />\\n<BR /><b>Forecast:</b><BR />\\nFri - Partly Cloudy. High: 44 Low: 39<br />\\nSat - Mostly Cloudy. High: 48 Low: 41<br />\\nSun - Mostly Sunny/Wind. High: 43 Low: 37<br />\\nMon - Mostly Sunny/Wind. High: 43 Low: 37<br />\\nTue - PM Light Rain/Wind. High: 52 Low: 38<br />\\n<br />\\n<a href=\\\"http://us.rd.yahoo.com/dailynews/rss/weather/Dublin__IE/*http://weather.yahoo.com/forecast/EIXX0014_f.html\\\">Full Forecast at Yahoo! Weather</a><BR/><BR/>\\n(provided by <a href=\\\"http://www.weather.com\\\" >The Weather Channel</a>)<br/>\\n\",\n          \"forecast\":[\n          {\n            \"code\":\"29\",\n            \"date\":\"5 Dec 2014\",\n            \"day\":\"Fri\",\n            \"high\":\"44\",\n            \"low\":\"39\",\n            \"text\":\"Partly Cloudy\"\n          },\n          {\n            \"code\":\"28\",\n            \"date\":\"6 Dec 2014\",\n            \"day\":\"Sat\",\n            \"high\":\"48\",\n            \"low\":\"41\",\n            \"text\":\"Mostly Cloudy\"\n          },\n          {\n            \"code\":\"24\",\n            \"date\":\"7 Dec 2014\",\n            \"day\":\"Sun\",\n            \"high\":\"43\",\n            \"low\":\"37\",\n            \"text\":\"Mostly Sunny/Wind\"\n          },\n          {\n            \"code\":\"24\",\n            \"date\":\"8 Dec 2014\",\n            \"day\":\"Mon\",\n            \"high\":\"43\",\n            \"low\":\"37\",\n            \"text\":\"Mostly Sunny/Wind\"\n          },\n          {\n            \"code\":\"11\",\n            \"date\":\"9 Dec 2014\",\n            \"day\":\"Tue\",\n            \"high\":\"52\",\n            \"low\":\"38\",\n            \"text\":\"PM Light Rain/Wind\"\n          }\n          ],\n          \"guid\":{\n            \"isPermaLink\":\"false\",\n            \"content\":\"EIXX0014_2014_12_09_7_00_GMT\"\n          }\n        }\n      }\n    }\n  }\n}\n```", "```cpp\n#ifndef MAINWINDOW_H\n#define MAINWINDOW_H\n\n#include <QMainWindow>\n#include \"weather.h\"\n\nnamespace Ui {\n  class MainWindow;\n}\n\nclass MainWindow : public QMainWindow\n{\n  Q_OBJECT\n\npublic:\n  explicit MainWindow(QWidget *parent = 0);\n  ~MainWindow();\n\nprivate:\n  Ui::MainWindow *ui;\n  Weather *w;\n\nprivate slots:\n  void onOkButtonClicked();\n  void onAttrImageDownloaded(const QImage &);\n  void onWeatherUpdateFinished(const QString &location, const QString &temp, const QString &wind);\n};\n\n#endif // MAINWINDOW_H\n```", "```cpp\n#include \"mainwindow.h\"\n#include \"ui_mainwindow.h\"\n\nMainWindow::MainWindow(QWidget *parent) :\n  QMainWindow(parent),\n  ui(new Ui::MainWindow)\n{\n  ui->setupUi(this);\n  w = new Weather(this);\n\n  connect(ui->okButton, &QPushButton::clicked, this, &MainWindow::onOkButtonClicked);\n  connect(w, &Weather::updateFinished, this, &MainWindow::onWeatherUpdateFinished);\n  connect(w, &Weather::imageDownloaded, this, &MainWindow::onAttrImageDownloaded);\n  w->getAttrImg();\n}\n\nMainWindow::~MainWindow()\n{\n  delete ui;\n}\n\nvoid MainWindow::onOkButtonClicked()\n{\n  w->updateData(ui->woeidEdit->text());\n}\n\nvoid MainWindow::onAttrImageDownloaded(const QImage &img)\n{\n  ui->attrLabel->setPixmap(QPixmap::fromImage(img));\n}\n\nvoid MainWindow::onWeatherUpdateFinished(const QString &location, const QString &temp, const QString &wind)\n{\n  ui->locationLabel->setText(location);\n  ui->tempLabel->setText(temp);\n  ui->windLabel->setText(wind);\n}\n```", "```cpp\nvoid Weather::updateData(const QString &woeid)\n{\n  QUrl url(\"https://query.yahooapis.com/v1/public/yql?q=select * from weather.forecast where woeid = \" + woeid + \"&format=xml\");\n    QNetworkRequest req(url);\n    naManager->get(req);\n}\n```", "```cpp\nvoid Weather::onQueryFinished(QNetworkReply *re)\n{\n  if (re->error() != QNetworkReply::NoError) {\n    qDebug() << re->errorString();\n    re->deleteLater();\n    return;\n  }\n\n  if (re == imgReply) {\n    attrImg = QImage::fromData(imgReply->readAll());\n    emit imageDownloaded(attrImg);\n    imgReply->deleteLater();\n    return;\n  }\n\n  QByteArray result = re->readAll();\n  re->deleteLater();\n\n  QXmlStreamReader xmlReader(result);\n  while (!xmlReader.atEnd() && !xmlReader.hasError()) {\n    QXmlStreamReader::TokenType token = xmlReader.readNext();\n    if (token == QXmlStreamReader::StartElement) {\n      QStringRef name = xmlReader.name();\n      if (name == \"channel\") {\n        parseXMLChannel(xmlReader);\n      }\n    }\n  }\n}\n```", "```cpp\nvoid Weather::parseXMLChannel(QXmlStreamReader &xml)\n{\n  QString location, temperature, wind;\n  QXmlStreamReader::TokenType token = xml.readNext();\n  while (token != QXmlStreamReader::EndDocument) {\n    if (token == QXmlStreamReader::EndElement || xml.name().isEmpty()) {\n      token = xml.readNext();\n      continue;\n    }\n\n    QStringRef name = xml.name();\n    if (name == \"location\") {\n      QXmlStreamAttributes locAttr = xml.attributes();\n      location = locAttr.value(\"city\").toString() + \", \" + locAttr.value(\"country\").toString() + \", \" + locAttr.value(\"region\").toString();\n    }\n    else if (name == \"units\") {\n      temperature = xml.attributes().value(\"temperature\").toString();\n    }\n    else if (name == \"wind\") {\n      QXmlStreamAttributes windAttr = xml.attributes();\n      for (QXmlStreamAttributes::ConstIterator it = windAttr.begin(); it != windAttr.end(); ++it) {\n        wind.append(it->name().toString());\n        wind.append(\": \");\n        wind.append(it->value());\n        wind.append(\"\\n\");\n      }\n    }\n    else if (name == \"condition\") {\n      temperature.prepend(xml.attributes().value(\"temp\").toString());\n      break;//we got all information, exit the loop\n    }\n    token = xml.readNext();\n  }\n\n  emit updateFinished(location, temperature, wind);\n}\n```", "```cpp\n<?xml version=\"1.0\"?>\n<query  yahoo:count=\"1\" yahoo:created=\"2014-12-06T22:50:22Z\" yahoo:lang=\"en-GB\">\n  <results>\n    <channel>\n      <title>Yahoo! Weather - Dublin, IE</title>\n      <link>http://us.rd.yahoo.com/dailynews/rss/weather/Dublin__IE/*http://weather.yahoo.com/forecast/EIXX0014_f.html</link>\n      <description>Yahoo! Weather for Dublin, IE</description>\n      <language>en-us</language>\n      <lastBuildDate>Sat, 06 Dec 2014 9:59 pm GMT</lastBuildDate>\n      <ttl>60</ttl>\n      <yweather:location  city=\"Dublin\" country=\"Ireland\" region=\"DUB\"/>\n      <yweather:units  distance=\"mi\" pressure=\"in\" speed=\"mph\" temperature=\"F\"/>\n      <yweather:wind  chill=\"41\" direction=\"230\" speed=\"22\"/>\n      <yweather:atmosphere  humidity=\"93\" pressure=\"30.03\" rising=\"2\" visibility=\"6.21\"/>\n      <yweather:astronomy  sunrise=\"8:24 am\" sunset=\"4:07 pm\"/>\n      <image>\n        <title>Yahoo! Weather</title>\n        <width>142</width>\n        <height>18</height>\n        <link>http://weather.yahoo.com</link>\n        <url>http://l.yimg.com/a/i/brand/purplelogo//uh/us/news-wea.gif</url>\n      </image>\n      <item>\n        <title>Conditions for Dublin, IE at 9:59 pm GMT</title>\n        <geo:lat >53.33</geo:lat>\n        <geo:long >-6.29</geo:long>\n        <link>http://us.rd.yahoo.com/dailynews/rss/weather/Dublin__IE/*http://weather.yahoo.com/forecast/EIXX0014_f.html</link>\n        <pubDate>Sat, 06 Dec 2014 9:59 pm GMT</pubDate>\n        <yweather:condition  code=\"27\" date=\"Sat, 06 Dec 2014 9:59 pm GMT\" temp=\"48\" text=\"Mostly Cloudy\"/>\n        <description><![CDATA[<img src=\"img/27.gif\"/><br /> <b>Current Conditions:</b><br /> Mostly Cloudy, 48 F<BR /> <BR /><b>Forecast:</b><BR /> Sat - Light Rain/Wind Late. High: 48 Low: 42<br /> Sun - Mostly Sunny/Wind. High: 44 Low: 37<br /> Mon - Sunny. High: 43 Low: 37<br /> Tue - Showers/Wind. High: 53 Low: 39<br /> Wed - Partly Cloudy/Wind. High: 45 Low: 39<br /> <br /> <a href=\"http://us.rd.yahoo.com/dailynews/rss/weather/Dublin__IE/*http://weather.yahoo.com/forecast/EIXX0014_f.html\">Full Forecast at Yahoo! Weather</a><BR/><BR/> (provided by <a href=\"http://www.weather.com\" >The Weather Channel</a>)<br/>]]></description>\n        <yweather:forecast  code=\"11\" date=\"6 Dec 2014\" day=\"Sat\" high=\"48\" low=\"42\" text=\"Light Rain/Wind Late\"/>\n        <yweather:forecast  code=\"24\" date=\"7 Dec 2014\" day=\"Sun\" high=\"44\" low=\"37\" text=\"Mostly Sunny/Wind\"/>\n        <yweather:forecast  code=\"32\" date=\"8 Dec 2014\" day=\"Mon\" high=\"43\" low=\"37\" text=\"Sunny\"/>\n        <yweather:forecast  code=\"11\" date=\"9 Dec 2014\" day=\"Tue\" high=\"53\" low=\"39\" text=\"Showers/Wind\"/>\n        <yweather:forecast  code=\"24\" date=\"10 Dec 2014\" day=\"Wed\" high=\"45\" low=\"39\" text=\"Partly Cloudy/Wind\"/>\n        <guid isPermaLink=\"false\">EIXX0014_2014_12_10_7_00_GMT</guid>\n      </item>\n    </channel>\n  </results>\n</query>\n<!--  total: 27  -->\n<!--  engine4.yql.bf1.yahoo.com  -->\n```", "```cpp\nimport QtQuick 2.3\nimport QtQuick.Controls 1.2\n\nRectangle {\n  Column {\n    anchors.fill: parent\n    spacing: 6\n\n    Label {\n      id: location\n      width: parent.width\n      fontSizeMode: Text.Fit\n      minimumPointSize: 9\n      font.pointSize: 12\n    }\n\n    Row {\n      spacing: 20\n      width: parent.width\n      height: parent.height\n\n      Label {\n        id: temp\n        width: parent.width / 2\n        height: parent.height\n        fontSizeMode: Text.Fit\n        minimumPointSize: 12\n        font.pointSize: 72\n        font.bold: true\n      }\n\n      Label {\n        id: wind\n        width: temp.width - 20\n        height: parent.height\n        fontSizeMode: Text.Fit\n        minimumPointSize: 9\n        font.pointSize: 24\n      }\n    }\n  }\n\n  Image {\n    id: attrImg\n    anchors { right: parent.right; bottom: parent.bottom }\n    fillMode: Image.PreserveAspectFit\n    source: 'https://poweredby.yahoo.com/purple.png'\n  }\n\n  function query (woeid) {\n    var url = 'https://query.yahooapis.com/v1/public/yql?q=select * from weather.forecast where woeid = ' + woeid + '&format=json'\n    var res\n    var doc = new XMLHttpRequest()\n    doc.onreadystatechange = function() {\n      if (doc.readyState == XMLHttpRequest.DONE) {\n        res = doc.responseText\n        parseJSON(res)\n      }\n    }\n    doc.open('GET', url, true)\n    doc.send()\n  }\n\n  function parseJSON(data) {\n    var obj = JSON.parse(data)\n\n    if (typeof(obj) == 'object') {\n      if (obj.hasOwnProperty('query')) {\n        var ch = obj.query.results.channel\n        var loc = '', win = ''\n        for (var lk in ch.location) {\n          loc += ch.location[lk] + ', '\n        }\n        for (var wk in ch.wind) {\n          win += wk + ': ' + ch.wind[wk] + '\\n'\n        }\n        location.text = loc\n        temp.text = ch.item.condition.temp + ch.units.temperature\n        wind.text = win\n      }\n    }\n  }\n}\n```", "```cpp\nimport QtQuick 2.3\nimport QtQuick.Controls 1.2\nimport \"qrc:/\"\n\nApplicationWindow {\n  visible: true\n  width: 240\n  height: 320\n  title: qsTr(\"Weather QML\")\n\n  Row {\n    id: inputField\n    anchors { top: parent.top; topMargin: 10; left: parent.left; leftMargin: 10; right: parent.right; rightMargin: 10 }\n    spacing: 6\n\n    Label {\n      id: woeidLabel\n      text: \"WOEID\"\n    }\n    TextField {\n      width: inputField.width - woeidLabel.width\n      inputMethodHints: Qt.ImhDigitsOnly\n      onAccepted: weather.query(text)\n    }\n  }\n\n  Weather {\n    anchors { top: inputField.bottom; topMargin: 10; left: parent.left; leftMargin: 10; right: parent.right; rightMargin: 10; bottom: parent.bottom; bottomMargin: 10 }\n    id: weather\n  }\n}\n```"]