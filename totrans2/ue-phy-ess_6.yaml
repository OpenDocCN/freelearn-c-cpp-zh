- en: Chapter 6. Materials
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第六章：材料
- en: Every video game provides a kind of colorful presentation for the player (even
    in black and white). As most players experience memorable parts of the game, this
    is what a player hears and detects visually in the game. This detection can be
    about an image, some notes, or something known as texture.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 每个视频游戏都为玩家提供了一种色彩丰富的展示（即使在黑白中）。由于大多数玩家都会体验到游戏中的难忘部分，这就是玩家在游戏中听到和视觉上检测到的。这种检测可以是关于图像、一些笔记，或被称为纹理的东西。
- en: '**Texture** is a digital shell that covers objects in the game world. They
    can be unique or repetitive over a big area during the play in the different levels
    of the game. They can be interactive with the player or world, artistic, fantasy,
    or real and physical.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**纹理**是覆盖游戏世界中物体的数字壳层。在游戏的各个级别中，它们可以在大区域内是独特的或重复的。它们可以与玩家或世界交互，具有艺术性、幻想性，或真实和物理性。'
- en: For example, sea mostly has a real texture of water. Some old engines just handle
    a simple image of water, whereas some modern engines (such as UE4) can provide
    the wave motion over the texture. Water is well known by everyone on our planet,
    and physical rules related to water have already been discovered by everyone during
    their lifetime.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，海洋大多具有真实的水纹理。一些旧引擎只是处理水的简单图像，而一些现代引擎（如UE4）可以在纹理上提供波浪运动。水是我们星球上每个人都知道的，与水相关的物理规则已经在他们的一生中被每个人发现。
- en: On the other hand, *Alien* skin is something mostly related to art and fantasy
    of the game story. There is no experimental or proven physical aspect for such
    a thing. It can wave or vibrate with many different forms.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，*外星皮肤*主要与游戏故事的艺术和幻想相关。对于这样的事物，没有实验或已证实的物理特性。它可以以许多不同的形式波动或振动。
- en: The art of creating materials in UE4 covers the physical and artistic features
    of design in detailed textures for the game.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在UE4中创建材料的艺术涵盖了游戏详细纹理设计中的物理和艺术特性。
- en: What is physical material?
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是物理材料？
- en: Unreal Engine 4 defines a new method for creating materials. This method is
    based on the physical aspects of the real world. Things such as light reflections
    or heaviness will directly affect your model in the game world as visual elements
    and interactive behavior. You can make an ice cube that moves on the surface like
    a real one, or you can make waves of the ocean that have their own movements and
    reflect sunlight.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 虚幻引擎4定义了一种创建材料的新方法。这种方法基于现实世界的物理特性。诸如光线反射或重量等事物将直接作为视觉元素和交互行为影响游戏世界中的模型。你可以制作一个像真实冰块一样在表面上移动的冰块，或者你可以制作具有自己运动和反射阳光的海洋波浪。
- en: 'Basically, the quality of material has a direct connection to the graphics
    card and technologies involved in the CPU and the memory speed of the machine
    of a user. This leads developers and art directors to answer some important questions:
    how does our game render materials? Is it necessary that a user should have a
    super good machine to get what designers plan to show, or can we solve the quality
    aspect in simple ways?'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，材料的质量与图形卡以及用户机器中涉及的CPU和内存速度有直接联系。这导致开发者和艺术总监回答一些重要问题：我们的游戏如何渲染材料？用户是否需要一台超级好的机器才能获得设计师计划展示的内容，或者我们能否以简单的方式解决质量方面的问题？
- en: A material can be created in three different ways. The first method uses an
    image that is copied to memory. This image gets loaded several times from the
    memory and depends on the size and alpha channel. It also gets some processing
    time from the CPU. The other method is to use the shaders technology. Here, the
    graphics card and the CPU are involved in creating a fully calculated shell on
    the surface of the object that represents the material. The final one is a mix
    of both. Unreal Engine 4 has all the tools to develop materials of high quality.
    At the same time, artists/developers can include some Shader-based effect on the
    surface of object. These features can be customized. This means that you can allow
    the players to set the graphics options of the game depending on the machine they
    use.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 材料可以通过三种不同的方式创建。第一种方法使用一个复制到内存中的图像。这个图像从内存中加载多次，并依赖于大小和alpha通道。它还会从CPU中获得一些处理时间。另一种方法是使用着色器技术。在这里，显卡和CPU参与在物体表面创建一个完全计算出的壳层，以表示材料。最后一种方法是两者的混合。虚幻引擎4拥有所有开发高质量材料所需的工具。同时，艺术家/开发者可以在物体表面包括一些基于着色器的效果。这些功能可以进行自定义。这意味着你可以允许玩家根据他们使用的机器设置游戏的图形选项。
- en: Let's go through an example of visual and interactive elements and how to create
    a physics-based material in the next section.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过一个示例来了解视觉和交互元素以及如何创建基于物理的材质，在下一节中。
- en: Creating the first material
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建第一个材质
- en: 'Before we start working in Unreal Editor, we will need to have a project to
    work with. Perform the following steps:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始在虚幻编辑器中工作之前，我们需要有一个项目来工作。执行以下步骤：
- en: First, open Unreal Editor by clicking on the **Launch** button from the Unreal
    Engine launcher.
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，通过点击虚幻引擎启动器中的**启动**按钮打开虚幻编辑器。
- en: Then, start a new project from **Project** browser by selecting the **New Project**
    tab. Now, select **Blank** and make sure that **With Starter Content** is selected.
    Name the project `material_test`.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，从**项目浏览器**中选择**新项目**选项卡，开始一个新的项目。现在，选择**空白**并确保**包含启动内容**被选中。将项目命名为`material_test`。
- en: From **Content Browser**, click on the **Props** folder. You will see a series
    of models that you can drag and drop onto the stage. Select **SM_MatPreviewMesh_02**
    and drag an instance of it to the stage. Then, press the *F* key to focus the
    camera on your shape. We will use this shape to describe the physical aspects
    of materials in the game. You can choose other shapes and follow the next steps.![Creating
    the first material](img/image00307.jpeg)
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**内容浏览器**中，点击**道具**文件夹。您将看到一系列可以拖放到舞台上的模型。选择**SM_MatPreviewMesh_02**并将其实例拖放到舞台上。然后，按*F*键将相机聚焦到您的形状上。我们将使用这个形状来描述游戏中材质的物理特性。您可以选择其他形状并遵循下一步。![创建第一个材质](img/image00307.jpeg)
- en: Now, click on the **Materials** folder and right click on an empty space in
    the preview section. From the menu, select **Material** and then enter `mymaterial`
    as the name for the new one. Now, drag and drop this material onto the **Materials**
    section in **Element0**, in **Details** menu. Now your new material is defined
    in the model:![Creating the first material](img/image00308.jpeg)
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击**材质**文件夹，在预览部分的空白空间上右键单击。从菜单中选择**材质**，然后将新材质命名为`mymaterial`。现在，将此材质拖放到**元素0**的**材质**部分，在**详情**菜单中。现在，您的新材质已在模型中定义：![创建第一个材质](img/image00308.jpeg)
- en: Rotate the shape and zoom in and out of the surface. It's important to learn
    how you can easily navigate your camera around the model when you create materials.
    Unreal Engine 4 provides the basic elements of physical light and ray processing
    in real time for the materials. It also calculates how rough the surface is and
    then dynamically renders this on the shape. All these are at the same time connected
    to world details, such as sunlight or any other source of light, gravity, and
    materials around the shape. Therefore, it is good practice to check your object
    from different angles and zoom value. Try to reach out to the angles, as shown
    in the following screenshot:![Creating the first material](img/image00309.jpeg)
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 旋转形状并放大缩小表面。学习如何在创建材质时轻松地在模型周围导航相机是很重要的。虚幻引擎4为材质提供实时物理光和光线处理的基本元素。它还计算表面的粗糙程度，然后动态地将这些渲染到形状上。所有这些同时与世界细节相连，如阳光或任何其他光源、重力以及形状周围的材质。因此，检查您的对象从不同的角度和缩放值是很重要的。尽量达到以下截图所示的视角：![创建第一个材质](img/image00309.jpeg)
- en: 'Also, the model that we are using has two elements: **Element0** and **Element1**.
    **Element0** is the surface or shell of the model, whereas **Element1** is similar
    to the core of the shape. Both can accept different materials from the **Material**
    folder.'
  id: totrans-18
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 此外，我们使用的模型有两个元素：**元素0**和**元素1**。**元素0**是模型的表面或外壳，而**元素1**类似于形状的核心。两者都可以接受来自**材质**文件夹的不同材质。
- en: Double-click on **Element0** in the **Materials** section of the **Details**
    menu. This opens the blueprint and the material editor for your material. In the
    middle of the screen, there is a blueprint of the current material. This is completely
    new and is named `mymaterial`.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击**元素0**在**详情**菜单的**材质**部分。这打开了您的材质的蓝图和材质编辑器。屏幕中间是当前材质的蓝图。这是一个全新的蓝图，命名为`mymaterial`。
- en: 'Before we go too far, click on **Apply** from the top menu and check your model.
    It''s similar to a black surface that covers the shell; your material is simply
    applied to the model, as shown in the following screenshot:'
  id: totrans-20
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在我们走得太远之前，点击顶部菜单中的**应用**并检查您的模型。它类似于覆盖外壳的黑色表面；您的材质只是简单地应用到模型上，如下面的截图所示：
- en: '![Creating the first material](img/image00310.jpeg)'
  id: totrans-21
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![创建第一个材质](img/image00310.jpeg)'
- en: From now on, you will learn how to change this layer on the shape using the
    blueprint in UE4.
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从现在开始，你将学习如何使用UE4中的蓝图来改变形状上的这一层。
- en: Double-click on **Element0** to go back to the material blueprint. As you can
    see in the following screenshot, there is a box with your material name (`mymaterial`).
    This box has some features to connect the blueprint units:![Creating the first
    material](img/image00311.jpeg)
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 双击**Element0**返回到材料蓝图。正如你在下面的截图中所见，有一个带有你的材料名称（`mymaterial`）的盒子。这个盒子有一些连接蓝图单元的功能：![创建第一个材料](img/image00311.jpeg)
- en: Imagine that this box is kind of an output. You will send data to base color,
    metallic, and the rest of the inputs of this box. It creates a surface for your
    model and then outputs this data to your model's surface. As you can see, we don't
    have any input for this box at this stage. As a result, our material is simple
    and without any color or texture. You will have a sample of your material in the
    top-left corner of your screen that you can rotate or zoom with the help of your
    mouse.
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 想象这个盒子是一种输出。你将数据发送到基础颜色、金属以及其他这个盒子的输入。它为你的模型创建一个表面，然后将这些数据输出到模型的表面。正如你所见，在这个阶段我们并没有为这个盒子提供任何输入。因此，我们的材料很简单，没有任何颜色或纹理。你将在屏幕的左上角看到一个你材料的样本，你可以通过鼠标旋转或缩放它。
- en: The physics of materials
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 材料物理学
- en: Each material in Unreal Engine 4 follows some physical properties to be defined
    by a designer. This is somehow different from the previous versions of the engine.
    Unreal Engine 4 gives developers and artists more options to create complex materials
    with higher performance compare to old versions. Also, you can invent or create
    dynamic materials with this structure.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 虚幻引擎4中的每个材料都遵循一些物理属性，这些属性由设计师定义。这在某种程度上与引擎的早期版本不同。虚幻引擎4为开发者和艺术家提供了更多选项，以创建比旧版本性能更高的复杂材料。此外，你还可以使用这种结构发明或创建动态材料。
- en: As you can see in the preceding screenshot, there are a number of commands on
    the left-hand side of your material blueprint editor in the **Palette** section.
    Some have shortcuts to use. For example, you can drag and drop **Constant** from
    here onto your screen, or simply hold the *1* key on your keyboard and left-click
    your mouse on the screen. Both these methods give you a constant number to connect
    the input of the other box in the blueprint. Also, each box has some properties
    in the **Details** menu. These properties can be customized.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你在前面的截图中所见，在你的材料蓝图编辑器的左侧**调色板**部分有许多命令。一些有快捷方式可以使用。例如，你可以从这里拖放**常量**到你的屏幕上，或者简单地按键盘上的*1*键，然后用鼠标左键点击屏幕。这两种方法都会给你一个常数，用来连接蓝图上其他盒子的输入。此外，每个盒子在**详细信息**菜单中都有一些属性。这些属性是可以定制的。
- en: 'Now let''s make a material, based on physical rules, inside the Unreal Engine
    4:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们基于物理规则，在虚幻引擎4中创建一个材料：
- en: At the top of the `mymaterial` box, locate **Base Color**. This property defines
    the color of the material and accepts numbers called vector numbers. Vectors in
    Unreal Engine 4 can handle 2, 3, and 4 numbers together.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`mymaterial`盒子的顶部，找到**基础颜色**。这个属性定义了材料颜色，并接受称为向量数字的数字。虚幻引擎4中的向量可以同时处理2、3和4个数字。
- en: This example describes the main concept of vectors. Now, imagine that you have
    three chocolate boxes named `2Vector`, `3Vector`, and `4Vector`. When you open
    `2Vector`, you will find two chocolates together in the box. When you open `3Vector`,
    you will find three chocolates together in the box, and so on. If you send one
    of these boxes to someone, it means that you have sent all the chocolates together
    in the box to the destination. Now, when it is opened at the destination, all
    the chocolates are there at the same time. In this scenario, the chocolate box
    is a vector and the chocolates are the members of the vector. The members of the
    vector have the same weight on interaction between the user and themselves.
  id: totrans-30
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这个例子描述了向量的主要概念。现在，想象你有三个名为`2Vector`、`3Vector`和`4Vector`的巧克力盒子。当你打开`2Vector`时，你会在盒子里找到两块巧克力在一起。当你打开`3Vector`时，你会在盒子里找到三块巧克力在一起，以此类推。如果你把这些盒子中的一个送给某人，这意味着你把盒子里的所有巧克力一起送到目的地。现在，当它在目的地打开时，所有的巧克力都同时出现。在这种情况下，巧克力盒子是一个向量，巧克力是向量的成员。向量的成员在与用户及其自身交互时具有相同的权重。
- en: We can use vectors when we need to use large amounts of data at the same time
    to apply physical properties in the engine. Color is a physical property made
    from three numbers for RGB values (red, green, and blue). We need to send three
    numbers, all together to this input, so the best choice is to send a vector number.
  id: totrans-31
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当我们需要在引擎中应用物理属性的同时处理大量数据时，我们可以使用向量。颜色是由三个数字组成的物理属性，用于RGB值（红色、绿色和蓝色）。我们需要将三个数字一起发送到这个输入，所以最好的选择是发送一个向量数字。
- en: 'On the right-hand side of the screen in **Palette**, locate **Constant2Vector**,
    drag and drop an instance of it onto the stage, or hold the *3* key and right-click
    on the stage, as shown in the following screenshot. Now, right-click on black
    area, set the color, and connect the box to **Base Color** on the `mymaterial`
    box. The values of RGB are shown in the **Details** menu as well. You can change
    them between `0` and `1`, so for example, pure yellow will be **R**: `1.0`, **G**:
    `1.0`, and **B**: `0.0`. Change this to **R**: `1.0`, **G**: `0.327`, and **B**:
    `0.0` to have an orange color on the model:'
  id: totrans-32
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '在**调色板**的屏幕右侧，找到**Constant2Vector**，将其实例拖放到舞台或按住*3*键并在舞台上右键单击，如图所示。现在，在黑色区域右键单击，设置颜色，并将该框连接到`mymaterial`框上的**Base
    Color**。RGB的值也在**Details**菜单中显示。您可以在`0`和`1`之间更改它们，例如，纯黄色将是**R**: `1.0`，**G**:
    `1.0`，和**B**: `0.0`。将其更改为**R**: `1.0`，**G**: `0.327`，和**B**: `0.0`以在模型上得到橙色：'
- en: '![The physics of materials](img/image00312.jpeg)'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![材料物理学](img/image00312.jpeg)'
- en: 'Metallic surface is another physical aspect of your material. It defines how
    metallic your object looks like in case of the shininess of lights around. Locate
    **Metallic** under **Base Color** on the `mymaterial` box, then drag and drop
    one **Constant** from **Palette** on the right-hand side. Change its value to
    `1.0` in the **Details** section. Click on **Apply** at the top and check your
    model. It looks similar to unpolished gold. Now, go back to the material editor
    and change the color to **R**: `0.2`, **G**: `0.2`, and **B**: `0.2`. Click on
    **Apply** at the top and check your model. Now, it looks similar to unpolished
    silver, as shown in the following screenshot:![The physics of materials](img/image00313.jpeg)'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '金属表面是您材质的另一个物理特性。它定义了在周围光线亮度的情况下，您的物体看起来有多金属。在`mymaterial`框下找到**Metallic**，然后从右侧的**Palette**拖放一个**Constant**。在**Details**部分将其值更改为`1.0`。单击顶部的**Apply**并检查您的模型。它看起来类似于未经抛光的金。现在，返回到材质编辑器，并将颜色更改为**R**:
    `0.2`，**G**: `0.2`，和**B**: `0.2`。在顶部单击**Apply**并检查您的模型。现在，它看起来类似于未经抛光的银，如图所示：![材料物理学](img/image00313.jpeg)'
- en: Each material can provide the physical behavior of soft or none of the soft
    surfaces. Imagine the difference between a mirror and the white surface of a wall
    made by chalk. The big difference is that the mirror reflects the light in a linear
    way, but the chalk breaks the light into many different angles. As a result, you
    can't see any reflection of the shape on the wall.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每种材质都可以提供软或非软表面的物理行为。想象一下镜子和由粉笔制成的墙壁白色表面的区别。巨大的区别在于镜子以线性方式反射光线，而粉笔将光线分解成许多不同的角度。结果，您在墙上看不到任何形状的反射。
- en: Let's try this by changing the color to white by setting **R**, **G**, and **B**
    to `1.0` for your **Base Color** property. Now, change the metallic value to `0.0`
    and then drag and drop one **Constant** from **Palette** on the right-hand side
    of your screen. Connect this to the **Roughness** property on the `mymaterial`
    box. Now, click on apply and check your model. It looks similar to a plastic with
    a mirror-like reflection of other objects on the surface. Now, go back back to
    the material editor and change its value to `1.0` in the **Details** section.
    Again, click on apply and check your model. Now, it looks similar a piece of chalk
    with absolutely no reflections of other objects around, as shown in the following
    screenshot:![The physics of materials](img/image00314.jpeg)
  id: totrans-36
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们通过将**R**，**G**，和**B**设置为`1.0`来更改颜色，以设置您的**Base Color**属性。现在，将金属值更改为`0.0`，然后从屏幕右侧的**Palette**拖放一个**Constant**。将其连接到`mymaterial`框上的**Roughness**属性。现在，单击**apply**并检查您的模型。它看起来类似于具有类似镜面反射其他物体表面的塑料。现在，返回到材质编辑器，并在**Details**部分将其值更改为`1.0`。再次单击**apply**并检查您的模型。现在，它看起来像是一块没有任何周围物体反射的粉笔，如图所示：![材料物理学](img/image00314.jpeg)
- en: Now, change the metallic value to `1.0` and click on **Apply**. The result is
    a nice reflective mirror surface around the object. Let's go back to the material
    editor. What you see is a fully metallic surface with maximum shininess of light
    and an absolute reflective surface that reflects light in the most linear and
    direct form. This is the physical descriptions of this material. So, if you wish
    to create a golden object similar to the following screenshot, you should change
    the values to `1.0`, `0.46`, and `1.0` for **Base Color**, `1.0` for **Metallic**,
    and `0.28` for **Roughness**:![The physics of materials](img/image00315.jpeg)
  id: totrans-37
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，将金属值更改为`1.0`并点击**应用**。结果是物体周围出现了一个漂亮的反射镜面。让我们回到材质编辑器。你所看到的是一个完全金属化的表面，具有最大的光泽度，并且是一个绝对反射表面，以最线性、最直接的形式反射光线。这是这种材料的物理描述。因此，如果你希望创建一个类似于以下截图的金色物体，你应该将**基础颜色**的值更改为`1.0`、`0.46`和`1.0`，将**金属**的值更改为`1.0`，将**粗糙度**的值更改为`0.28`：![材料的物理特性](img/image00315.jpeg)
- en: Sometimes, you need to create some shiny plastics (such as pool balls). For
    this purpose, Unreal Engine 4 defines some physical methods to simulate plastic-like
    materials. Change your metallic property to `0` and then change roughness to `0`.
    Now, click on **Apply** and check the model. As you can see, the model looks similar
    to a plastic shiny toy. Set the **Specular** property to `1.0` by adding one **Constant**
    to it. Similarly, change other properties as well. Now, click on **Apply** and
    check your model. The images of surrounding objects will become more visible in
    the plastic. Unreal Engine 4 simulates the differences between the shiny non-metal
    surface and the metal surface by including the **Specular** value of the surface
    as physical variable.![The physics of materials](img/image00316.jpeg)
  id: totrans-38
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 有时候，你需要创建一些闪亮的塑料（例如游泳池的球）。为此，虚幻引擎4定义了一些物理方法来模拟类似塑料的材料。将你的金属属性设置为`0`，然后将粗糙度设置为`0`。现在，点击**应用**并检查模型。正如你所见，模型看起来类似于一个塑料闪亮的玩具。将**高光**属性设置为`1.0`，通过添加一个**常量**来实现。同样，更改其他属性。现在，点击**应用**并检查你的模型。塑料中的周围物体图像将变得更加清晰。虚幻引擎4通过包括表面的**高光**值作为物理变量来模拟光亮非金属表面和金属表面之间的差异。![材料的物理特性](img/image00316.jpeg)
- en: It is good practice to select a couple of real-world objects around your computer
    and create their material in the engine based on physical elements. This includes
    **Softness** (**Roughness** and **Specular** inside the engine) and **Shininess**,
    related to the **Metallic** property. For example, try to create green apple skin,
    shoes, cooking tools (such as a spoon or fork), and paper.
  id: totrans-39
  prefs:
  - PREF_IND
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你电脑周围的一些真实世界物体，并在引擎中根据物理元素创建它们的材质是一个好的实践。这包括**柔软度**（引擎内部的**粗糙度**和**高光**）和与**金属**属性相关的**光泽度**。例如，尝试创建绿色苹果皮、鞋子、烹饪工具（如勺子或叉子）和纸张。
- en: Some materials need more physical aspects than has been mentioned before. For
    example, water has some patterns similar to waves on its surface and transparency.
    Also, the way light reflects on the surface of water is different from metal or
    plastic. To create these kinds of materials, which mostly have patterns and shadows
    on the surface, Unreal Engine 4 uses some images known as **Normal** **Maps**.
    Click on the **Texture** folder in your editor, find `T_Ground_Moss_N` and drag
    it onto your material editor, and connect this to the **Normal** property of `mymaterial`.
    Now, change **Base Color** to `0.4`, `0.5`, and `0.5` for the values of RGB. Then,
    click on **Apply** and check your model.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一些材料需要比之前提到的更多物理特性。例如，水在其表面有一些类似于波浪的图案和透明度。此外，光线在水表面的反射方式与金属或塑料不同。为了创建这些类型的材料，这些材料通常在表面有图案和阴影，虚幻引擎4使用一些称为**法线****贴图**的图像。点击你的编辑器中的**纹理**文件夹，找到`T_Ground_Moss_N`并将其拖放到材质编辑器中，并将其连接到`mymaterial`的**法线**属性。现在，将**基础颜色**的RGB值更改为`0.4`、`0.5`和`0.5`。然后，点击**应用**并检查你的模型。
- en: As you can see in the following screenshot, your model will have a surface similar
    to a stone, which in different angles of light shows shadows.
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如以下截图所示，你的模型将有一个类似于石头的表面，在不同的光照角度下显示出阴影。
- en: '![The physics of materials](img/image00317.jpeg)'
  id: totrans-42
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![材料的物理特性](img/image00317.jpeg)'
- en: The texture on the surface of your model can also accept movements in the *X*
    and *Y* direction. Find **Panner** in **Palette** on the right-hand side of your
    material editor and drag it onto the stage and then connect this to the UV's input
    on your **Texture Sample**. Select both boxes and hit *Ctrl* + *W*. This shortcut
    duplicates your selection. Now, add the **Multiply** box and connect your boxes,
    as shown in the following screenshot. Then, change **Metallic** to `0.7` and **Roughness**
    to `0.0`. Now, change **Base Color** to `0.2`, `0.5`, and `1.0` for RGB to see
    the water. Change the values of **Panner** to `0.02`, `0.0`, `0.01`, and `-0.011`
    to generate water waves on your model.![The physics of materials](img/image00318.jpeg)
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你的模型表面的纹理也可以接受**X**和**Y**方向上的移动。在材质编辑器的右侧找到**Panner**，并将其拖到舞台上，然后连接到**纹理样本**的UV输入。选择两个框，然后按*Ctrl*
    + *W*。这个快捷键会复制你的选择。现在，添加**乘法**框，并将你的框连接起来，如图下所示。然后，将**金属度**更改为`0.7`，将**粗糙度**更改为`0.0`。现在，将**基础颜色**更改为RGB的`0.2`、`0.5`和`1.0`以看到水。将**Panner**的值更改为`0.02`、`0.0`、`0.01`和`-0.011`以在你的模型上生成波浪。![材料的物理特性](img/image00318.jpeg)
- en: Now, let's talk about other physical aspects. For this, close your project and
    create a new project from **Project** browser by selecting the **New Project**
    tab. Select **First Person** and make sure that **With Starter Content** is selected.
    Then, select the **Material** folder and right-click on an empty space, navigate
    to **Physics**, select **Physical Material**, and name it `mymaterial`:![The physics
    of materials](img/image00319.jpeg)
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，让我们谈谈其他物理方面。为此，关闭你的项目，并通过在**项目**浏览器中选择**新建项目**选项卡来创建一个新的项目。选择**第一人称**并确保**包含启动内容**被选中。然后，选择**材质**文件夹，在空白空间上右键单击，导航到**物理**，选择**物理材质**，并将其命名为`mymaterial`：![材料的物理特性](img/image00319.jpeg)
- en: Now, select a cube, click on **Apply**, and double-click on **Materials** on
    the right-hand side to navigate to the material editor. In the **Details** section
    of **Phys Materials** on the left-hand side, click and select `mymaterial`; this
    will apply your physical material to the shape. Now, click on **Apply** at the
    top to go back to the material editor, as shown in the following screenshot:![The
    physics of materials](img/image00320.jpeg)
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，选择一个立方体，点击**应用**，然后在右侧双击**材料**以导航到材质编辑器。在左侧的**物理材质**的**详细信息**部分，点击并选择`mymaterial`；这将应用你的物理材质到形状上。现在，点击顶部的**应用**返回到材质编辑器，如图下所示：![材料的物理特性](img/image00320.jpeg)
- en: As you can see, there isn't any change on the surface. We created a different
    kind of material that is responsible for the physical interaction of the shape,
    along with other shapes around. Let's click on **Play** and test how your cube
    responds to your shooting. Then, press **Stop**, double-click on `mymaterial`,
    and change **Density** to `20` in the new window. Now, click on **Play**. You
    will find that your cube appears to be heavier than the other cubes and moves
    very slowly in response to the shooting.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如你所见，表面上没有变化。我们创建了一种不同类型的材料，它负责形状的物理交互，以及周围的形状。让我们点击**播放**来测试你的立方体对你的射击如何响应。然后，按**停止**，双击`mymaterial`，并在新窗口中将**密度**更改为`20`。现在，点击**播放**。你会发现你的立方体看起来比其他立方体更重，并且对射击的反应非常缓慢。
- en: Click on **Stop** to go back to the editor, double-click again on `mymaterial`,
    and change **Density** to `1.0` (the default value). This time, change **Restitution**
    from `0.3` to `2.3`. Now, go back to the editor, click on **Play**, and shoot
    at the box. It seems that the box has some more elastic movement.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**停止**返回到编辑器，再次双击`mymaterial`，将**密度**更改为`1.0`（默认值）。这次，将**恢复系数**从`0.3`更改为`2.3`。现在，返回到编辑器，点击**播放**，并向盒子射击。看起来盒子有更多的弹性运动。
- en: Now, click on **Stop** and again open the **Details** menu for `mymaterial`
    by double- clicking on it. Set **Restitution** to `0.3` (the default value). This
    time, change **Friction** to `-24` and play again. This property prepares an ice-like
    behavior for your shape.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击**停止**，再次通过双击打开`mymaterial`的**详细信息**菜单。将**恢复系数**设置为`0.3`（默认值）。这次，将**摩擦**更改为`-24`并再次播放。这个属性为你的形状准备了一种类似冰的行为。
- en: You can create a simple game by changing **Density** to `10`, **Restitution**
    to `2.3`, and **Friction** to `-24`. Now, try to hit other cubes with the one
    that you defined your physical materials with.
  id: totrans-49
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 你可以通过将**密度**设置为`10`，**恢复系数**设置为`2.3`，以及**摩擦**设置为`-24`来创建一个简单的游戏。现在，尝试用你定义物理材质的那个立方体去撞击其他立方体。
- en: '![The physics of materials](img/image00321.jpeg)'
  id: totrans-50
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![材料的物理特性](img/image00321.jpeg)'
- en: Start a new project from **Project** browser by selecting the **New Project**
    tab. Select **First Person** and make sure that **With Starter Content** is selected
    and name the project `material_test`.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 通过**项目**浏览器中的**新建项目**选项卡开始一个新的项目。选择**第一人称**，确保**包含启动内容**被选中，并将项目命名为`material_test`。
- en: Summary
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Making materials is an art in game design, and the new generation of Unreal
    Engine, which is 4, provides sufficient levels of detail design for the artists
    and developers in this area. Basically, the first step of making each material
    in Unreal Engine 4 is to address the physical features of this object. Features
    such as Metallic or *Color* and *Density* are some examples of how you can make
    a material inside your game world, which we went through in this chapter in detail.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 制作材料是游戏设计中的艺术，新一代的虚幻引擎4为该领域的艺术家和开发者提供了足够的细节设计级别。基本上，在虚幻引擎4中制作每种材料的第一个步骤是处理这个对象的物理特性。例如，金属、*颜色*和*密度*等特性，展示了你如何在游戏世界中制作材料，这些内容我们在本章中已详细讲解。
