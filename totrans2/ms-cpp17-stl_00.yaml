- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: The C++ language has a long history, dating back to the 1980s. Recently it has
    undergone a renaissance, with major new features being introduced in 2011 and
    2014\. At press time, the C++17 standard is just around the corner.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: C++语言有着悠久的历史，可以追溯到20世纪80年代。最近，它经历了一次复兴，2011年和2014年引入了重大新特性。在出版时，C++17标准即将到来。
- en: C++11 practically doubled the size of the standard library, adding such headers
    as `<tuple>`, `<type_traits>`, and `<regex>`. C++17 doubles the library again,
    with additions such as `<optional>`, `<any>`, and `<filesystem>`. A programmer
    who’s been spending time writing code instead of watching the standardization
    process might fairly feel that the standard library has gotten away from him--that
    there’s so many new things in the library that he'll never be able to master the
    whole thing, or even to sort the wheat from the chaff. After all, who wants to
    spend a month reading technical documentation on `std::locale` and `std::ratio`,
    just to find out that they aren't useful in your daily work?
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: C++11实际上将标准库的大小翻了一番，添加了如`<tuple>`、`<type_traits>`和`<regex>`等头文件。C++17再次将库翻了一番，添加了如`<optional>`、`<any>`和`<filesystem>`等新特性。那些一直忙于编写代码而不是关注标准化过程程序员可能会觉得标准库已经脱离了他的掌控——因为库中有太多新事物，他可能永远无法掌握整个库，甚至无法区分精华和糟粕。毕竟，谁愿意花一个月的时间阅读关于`std::locale`和`std::ratio`的技术文档，结果发现它们在日常工作中并不实用？
- en: In this book, I'll teach you the most important features of the C++17 standard
    library. In the interest of brevity, I omit some parts, such as the aforementioned
    `<type_traits>`; but we'll cover the entire modern STL (every standard container
    and every standard algorithm), plus such important topics as smart pointers, random
    numbers, regular expressions, and the new-in-C++17 `<filesystem>` library.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，我将教授C++17标准库最重要的特性。为了简洁起见，我省略了一些部分，例如上述的`<type_traits>`；但我们将会涵盖整个现代STL（每个标准容器和每个标准算法），以及诸如智能指针、随机数、正则表达式和C++17中引入的新`<filesystem>`库等重要主题。
- en: I'll teach by example. You'll learn to build your own iterator type; your own
    memory allocator using `std::pmr::memory_resource`; your own thread pool using
    `std::future`.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我将通过示例进行教学。你将学习如何构建自己的迭代器类型；使用`std::pmr::memory_resource`构建自己的内存分配器；使用`std::future`构建自己的线程池。
- en: I'll teach concepts beyond what you'd find in a reference manual. You'll learn
    the difference between monomorphic, polymorphic, and generic algorithms ([Chapter
    1](part0021.html#K0RQ0-2fdac365b8984feebddfbb9250eaf20d), *Classical Polymorphism
    and Generic Programming*); what it means for `std::string` or `std::any` to be
    termed a "vocabulary type" ([Chapter 5](part0074.html#26I9K0-2fdac365b8984feebddfbb9250eaf20d),
    *Vocabulary Types*); and what we might expect from future C++ standards in 2020
    and beyond.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 我将教授那些在参考手册中找不到的概念。你将学习单态、多态和泛型算法之间的区别（[第1章](part0021.html#K0RQ0-2fdac365b8984feebddfbb9250eaf20d)，*经典多态和泛型编程*）；对于`std::string`或`std::any`来说，被称为“词汇类型”意味着什么（[第5章](part0074.html#26I9K0-2fdac365b8984feebddfbb9250eaf20d)，*词汇类型*）；以及我们可能从2020年及以后的C++标准中期待什么。
- en: I assume that you are already reasonably familiar with the core language of
    C++11; for example, that you already understand how to write class and function
    templates, the difference between lvalue and rvalue references, and so on.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 我假设你已经对C++11的核心语言相当熟悉；例如，你已经理解了如何编写类和函数模板，lvalue和rvalue引用之间的区别等等。
- en: What this book covers
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[Chapter 1](part0021.html#K0RQ0-2fdac365b8984feebddfbb9250eaf20d), *Classical
    Polymorphism and Generic Programming*, covers classical polymorphism (virtual
    member functions) and generic programming (templates).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[第1章](part0021.html#K0RQ0-2fdac365b8984feebddfbb9250eaf20d)，*经典多态和泛型编程*，涵盖了经典多态（虚成员函数）和泛型编程（模板）。'
- en: '[Chapter 2](part0026.html#OPEK0-2fdac365b8984feebddfbb9250eaf20d), *Iterators
    and Ranges*, explains the concept of *iterator* as a generalization of pointer,
    and the utility of half-open ranges expressed as a pair of iterators.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[第2章](part0026.html#OPEK0-2fdac365b8984feebddfbb9250eaf20d)，*迭代器和范围*，解释了迭代器作为指针泛化的概念，以及以迭代器对表示的半开范围的有用性。'
- en: '[Chapter 3](part0036.html#12AK80-2fdac365b8984feebddfbb9250eaf20d), *The Iterator-Pair
    Algorithms*, explores the vast variety of standard generic algorithms that operate
    on ranges expressed as iterator-pairs.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第3章](part0036.html#12AK80-2fdac365b8984feebddfbb9250eaf20d)，*迭代器对算法*，探讨了在迭代器对表示的范围上操作的大量标准泛型算法。'
- en: '[Chapter 4](part0052.html#1HIT80-2fdac365b8984feebddfbb9250eaf20d), *The Container
    Zoo*, explores the almost equally vast variety of standard container class templates,
    and which containers are suitable for which jobs.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第4章](part0052.html#1HIT80-2fdac365b8984feebddfbb9250eaf20d)，*容器动物园*，探讨了标准容器类模板的几乎同样广泛的多样性，以及哪些容器适合哪些工作。'
- en: '[Chapter 5](part0074.html#26I9K0-2fdac365b8984feebddfbb9250eaf20d), *Vocabulary
    Types*, walks you through algebraic types such as `std::optional`. and ABI-friendly
    type-erased types such as `std::function`.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第5章](part0074.html#26I9K0-2fdac365b8984feebddfbb9250eaf20d)，*词汇类型*，带您了解代数类型，如`std::optional`，以及与ABI兼容的类型擦除类型，如`std::function`。'
- en: '[Chapter 6](part0093.html#2OM4A0-2fdac365b8984feebddfbb9250eaf20d), *Smart
    Pointers*, teaches the purpose and use of smart pointers.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](part0093.html#2OM4A0-2fdac365b8984feebddfbb9250eaf20d)，*智能指针*，介绍了智能指针的目的和使用方法。'
- en: '[Chapter 7](part0108.html#36VSO0-2fdac365b8984feebddfbb9250eaf20d), *Concurrency*,
    covers atomics, mutexes, condition variables, threads, futures, and promises.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](part0108.html#36VSO0-2fdac365b8984feebddfbb9250eaf20d)，*并发*，涵盖了原子操作、互斥锁、条件变量、线程、未来和承诺。'
- en: '[Chapter 8](part0129.html#3R0OI0-2fdac365b8984feebddfbb9250eaf20d), *Allocators*,
    explains the new features of C++17''s `<memory_resource>` header.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](part0129.html#3R0OI0-2fdac365b8984feebddfbb9250eaf20d)，*分配器*，解释了C++17的`<memory_resource>`头文件的新特性。'
- en: '[Chapter 9](part0144.html#49AH00-2fdac365b8984feebddfbb9250eaf20d), *Iostreams*,
    explores the evolution of the C++ I/O model, from `<unistd.h>` to `<stdio.h>`
    to `<iostream>`.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[第9章](part0144.html#49AH00-2fdac365b8984feebddfbb9250eaf20d)，*I/O流*，探讨了C++
    I/O模型的发展，从`<unistd.h>`到`<stdio.h>`再到`<iostream>`。'
- en: '[Chapter 10](part0161.html#4PHAI0-2fdac365b8984feebddfbb9250eaf20d), *Regular
    Expressions*, teaches regular expressions in C++.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[第10章](part0161.html#4PHAI0-2fdac365b8984feebddfbb9250eaf20d)，*正则表达式*，介绍了C++中的正则表达式。'
- en: '[Chapter 11](part0174.html#55U1S0-2fdac365b8984feebddfbb9250eaf20d), *Random
    Numbers*, walks you through C++''s support for pseudo-random number generation.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[第11章](part0174.html#55U1S0-2fdac365b8984feebddfbb9250eaf20d)，*随机数*，带您了解C++对伪随机数生成的支持。'
- en: '[Chapter 12](part0188.html#5J99O0-2fdac365b8984feebddfbb9250eaf20d), *Filesystem*,
    covers the new-in-C++17 `<filesystem>` library.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[第12章](part0188.html#5J99O0-2fdac365b8984feebddfbb9250eaf20d)，*文件系统*，涵盖了C++17中引入的新`<filesystem>`库。'
- en: What you need for this book
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要这本书什么
- en: As this book is not a reference manual, it might be useful for you to have a
    reference manual, such as cppreference ([en.cppreference.com/w/cpp](https://en.cppreference.com/w/cpp)),
    at your side to clarify any confusing points. It will definitely help to have
    a C++17 compiler handy. At press time, there are several more or less feature-complete
    C++17 implementations, including GCC, Clang, and Microsoft Visual Studio. You
    can run them locally or via many free online compiler services, such as Wandbox
    (wandbox.org), Godbolt (gcc.godbolt.org), and Rextester (rextester.com).
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这本书不是参考手册，你可能需要一本参考手册，例如cppreference ([en.cppreference.com/w/cpp](https://en.cppreference.com/w/cpp))，以便在你身边澄清任何令人困惑的点。手头有一个C++17编译器肯定会很有帮助。在出版时，有几种功能相对完整的C++17实现，包括GCC、Clang和Microsoft
    Visual Studio。您可以在本地运行它们，或者通过许多免费的在线编译器服务，如Wandbox (wandbox.org)、Godbolt (gcc.godbolt.org)
    和 Rextester (rextester.com)。
- en: Who this book is for
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书是为谁而写的
- en: This book is for developers who would like to master the C++17 STL and make
    full use of its components. Prior C++ knowledge is assumed.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是为希望掌握C++17 STL并充分利用其组件的开发者而编写的。假设读者具备先前的C++知识。
- en: Conventions
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 规范
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本书中，您将找到许多文本样式，用于区分不同类型的信息。以下是一些这些样式的示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, user input, and Twitter handles are shown as follows: "The
    `buffer()` function accepts arguments of type `int`."'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter用户名显示如下：“`buffer()`函数接受类型为`int`的参数。”
- en: 'A block of code is set as follows:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**New terms** and **important words** are shown in bold.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要词汇**以粗体显示。'
- en: Warnings or important notes appear like this.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示看起来像这样。
- en: Tips and notes appear like this.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士和注意事项看起来像这样。
- en: Reader feedback
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读者反馈
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book--what you liked or disliked. Reader feedback is important for us as
    it helps us develop titles that you will really get the most out of. To send us
    general feedback, simply e-mail `feedback@packtpub.com`, and mention the book's
    title in the subject of your message. If there is a topic that you have expertise
    in and you are interested in either writing or contributing to a book, see our
    author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。告诉我们您对这本书的看法——您喜欢或不喜欢什么。读者反馈对我们很重要，因为它帮助我们开发出您真正能从中获得最大收益的标题。要发送一般反馈，请简单地发送电子邮件至
    `feedback@packtpub.com`，并在邮件主题中提及书的标题。如果您在某个主题上具有专业知识，并且您有兴趣撰写或为书籍做出贡献，请参阅我们的作者指南[www.packtpub.com/authors](http://www.packtpub.com/authors)。
- en: Customer support
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户支持
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经是 Packt 书籍的骄傲拥有者，我们有一些事情可以帮助您从购买中获得最大收益。
- en: Downloading the example code
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码
- en: 'You can download the example code files for this book from your account at
    [http://www.packtpub.com](http://www.packtpub.com). If you purchased this book
    elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you. You can download the
    code files by following these steps:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[http://www.packtpub.com](http://www.packtpub.com)的账户下载本书的示例代码文件。如果您在其他地方购买了这本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便将文件直接通过电子邮件发送给您。您可以通过以下步骤下载代码文件：
- en: Log in or register to our website using your e-mail address and password.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您的电子邮件地址和密码登录或注册我们的网站。
- en: Hover the mouse pointer on the SUPPORT tab at the top.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标指针悬停在顶部的“支持”标签上。
- en: Click on Code Downloads & Errata.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“代码下载与勘误”。
- en: Enter the name of the book in the Search box.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入书的名称。
- en: Select the book for which you're looking to download the code files.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择您想要下载代码文件的书籍。
- en: Choose from the drop-down menu where you purchased this book from.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择您购买本书的地方。
- en: Click on Code Download.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“代码下载”。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 文件下载完成后，请确保您使用最新版本的以下软件解压缩或提取文件夹：
- en: WinRAR / 7-Zip for Windows
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适用于 Windows 的 WinRAR / 7-Zip
- en: Zipeg / iZip / UnRarX for Mac
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适用于 Mac 的 Zipeg / iZip / UnRarX
- en: 7-Zip / PeaZip for Linux
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 适用于 Linux 的 7-Zip / PeaZip
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Mastering-the-Cpp17-STL](https://github.com/PacktPublishing/Mastering-the-Cpp17-STL).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 本书代码包也托管在 GitHub 上，网址为[https://github.com/PacktPublishing/Mastering-the-Cpp17-STL](https://github.com/PacktPublishing/Mastering-the-Cpp17-STL)。我们还有其他来自我们丰富图书和视频目录的代码包可供选择，网址为[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)。请查看它们！
- en: Errata
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 勘误
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books--maybe a mistake in the text
    or the code--we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title. To view the previously
    submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the Errata section.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们已经尽一切努力确保我们内容的准确性，但错误仍然会发生。如果您在我们的某本书中发现错误——可能是文本或代码中的错误——如果您能向我们报告这一点，我们将不胜感激。通过这样做，您可以节省其他读者的挫败感，并帮助我们改进本书的后续版本。如果您发现任何勘误，请通过访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)，选择您的书籍，点击勘误提交表单链接，并输入您的勘误详情来报告它们。一旦您的勘误得到验证，您的提交将被接受，勘误将被上传到我们的网站或添加到该标题的勘误部分下的现有勘误列表中。要查看之前提交的勘误，请访问[https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)，并在搜索字段中输入书籍名称。所需信息将出现在勘误部分下。
- en: Piracy
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 侵权
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy. Please contact us at `copyright@packtpub.com`
    with a link to the suspected pirated material. We appreciate your help in protecting
    our authors and our ability to bring you valuable content.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在互联网上侵犯版权材料是一个跨所有媒体的持续问题。在Packt，我们非常重视保护我们的版权和许可证。如果您在互联网上发现我们作品的任何非法副本，请立即提供位置地址或网站名称，以便我们可以寻求补救措施。请通过`copyright@packtpub.com`与我们联系，并提供疑似盗版材料的链接。我们感谢您在保护我们作者和我们为您提供有价值内容的能力方面的帮助。
- en: Questions
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: If you have a problem with any aspect of this book, you can contact us at `questions@packtpub.com`,
    and we will do our best to address the problem.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对本书的任何方面有问题，您可以通过`questions@packtpub.com`与我们联系，我们将尽力解决问题。
