- en: Chapter 7. Terrain and Cinematics
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we will cover a few level-enhancing features. We will create
    some outdoor terrain for our level as well as add a short cinematic sequence at
    the start of the game level.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will look at the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
- en: Creating an outdoor terrain
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Adding a shortcut for a cinematic sequence at the beginning of the same level
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Introducing terrain manipulation
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Terrain manipulation is needed when you want to create large natural landscape
    areas, such as mountainous or valley areas that are covered with foliage. This
    can be in the form of trees/grass, lakes, and rivers that are covered with rocks
    or snow, and so on. The Landscape tool in Unreal Engine 4 allows you to creatively
    design a variety of terrains for your game maps easily, while allowing the game
    to run at a reasonable frame rate.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
- en: When playing in a map that has large outdoor terrains, for example, maps with
    a large number of trees or many elevations, such as mountains, the effective frame
    rate is expected to be reduced due to an increase in the number of polygons that
    need to be rendered on the screen. Hence, being well-versed in landscaping so
    that polygon counts are kept under control is important to ensure that the map
    is actually playable. It is also good to bear in mind to make use of optimization
    techniques, such as LOD and fog to mask the distant places, which can give you
    a sense of unending open land. If you are planning to create an open world, you
    can also use the Procedural Foliage tool (available in Unreal 4.8 and higher versions)
    to spawn these features for you.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
- en: Let's get ourselves familiarized with the Unreal Landscaping tool and start
    creating some outdoor environments for our game level. We will learn how to perform
    simple contouring of the outdoor space with low hills, grass, and trees. Then,
    we will create a small pond in the area. For more accurate landscaping, we can
    import a height map to help us with the creation of the landscape.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
- en: Exercise – creating hills using the Landscape tool
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Let''s perform the following steps to create hills using the Landscape tool:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
- en: Open `Chapter6.umap` and save it under `Chapter7_Terrain.umap`.
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Go to **Modes**, click on the Landscape tool (the icon looks like a mountain)
    and then click on **Manage**.
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Select **Create New** (the other option here is to make use of a height map,
    which we will cover later in the chapter).
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: To select a Material, you can click on the search icon and type `M_Ground_Grass`,
    or go to **Content Browser** | **Content** | **Materials**, select **M_Ground_Grass**,
    and click on the arrow next to **Landscape Material** to assign the material.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'For this example, we are going to leave all of the landscape settings at their
    default values that are listed, as follows. The next section will explain the
    options for the rest of the values in further detail:'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Scale**: X = 100 Y = 100 Z = 100'
  id: totrans-16
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Section Size**: 63 x 63 quads'
  id: totrans-17
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Section Per Component**: 1 x 1 section'
  id: totrans-18
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Number of Components**: 8 x 8'
  id: totrans-19
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Overall Resolution**: 505 x 505'
  id: totrans-20
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: The following screenshot shows the top view of the grass landscape that we have
    created. Notice the 64 green squares. You will need to switch to the **Top** view
    to view it.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating hills using the Landscape tool](img/B03679_07_01.jpg)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
- en: 'Now, we''ll switch over to the **Perspective** view. The grass landscape seems
    like it''s covering half the house. Take a look at the following screenshot:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating hills using the Landscape tool](img/B03679_07_02.jpg)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
- en: 'Note that if we had created the landscape on an empty map, we would not have
    this issue, as we would have built the house on the landscape grass instead. So,
    we have to perform an additional step here to move the landscape grass under the
    house so that we do not have a house that''s submerged under the grass. You need
    to select **Landscape** and **LandscapeGizmoActiveActor** from **World Outliner**,
    as shown on the right-hand side of the following screenshot. Remember to switch
    **Mode** back to **Place**, instead of the **Landscape** we were in to create
    the grass. The **Place** mode allows the translation/rotation of the selected
    object. Move the grass to just below the house, as shown in the following screenshot:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating hills using the Landscape tool](img/B03679_07_03.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
- en: Note
  id: totrans-27
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Note that this step is performed because we add the landscape grass after we've
    built the house.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we are ready to sculpt this flat land into some terrain. Go to **Modes**
    | **Landscape** | **Sculpt** again. Use the Sculpt tool, **Circle Brush**, and
    the **Smooth Falloff** combination, as shown in the upcoming screenshot. The default
    settings should be as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
- en: '**Brush Size**: **2048**'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Brush Falloff**: **0.5**'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tool Strength**: **0.3**'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'To illustrate the size of the 2048 brush, I have switched to the **Top** view:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating hills using the Landscape tool](img/B03679_07_04.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
- en: 'When **Brush Size** is set to **1000**, the brush radius is reduced, as shown
    in the following screenshot:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating hills using the Landscape tool](img/B03679_07_05.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
- en: 'Now that we have an idea about the difference in radii, we will switch back
    to the **Perspective** view. Position your working screen to a slightly angled
    top perspective view, as shown in the following screenshot. Set **Brush size**
    to **1000** and **Tool Strength** to **0.4**:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating hills using the Landscape tool](img/B03679_07_06.jpg)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
- en: Start by creating low hills around the house by clicking on the area around
    the house. I used a mix between a brush size of 1000 and 2048.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
- en: The following screenshot shows how the area looked after I worked on it for
    a bit. Note that the area in front of the wide windows where I created a depression.
    This is achieved by holding *Ctrl* and then clicking on the area. This depression
    will take the form of a lake in front of the dining area.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating hills using the Landscape tool](img/B03679_07_07.jpg)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
- en: Create two box BSPs to fill up the depressed area. Apply the Lake Water material
    to the box BSPs. The following screenshot shows the same area with the box BSPs
    put in place. Use the Translation tool to keep both BSP areas on the same ground
    level at the location of the depression.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating hills using the Landscape tool](img/B03679_07_08.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
- en: 'Next, I touched up the external area of the house. Use the **Unlit** mode to
    help you see the house better. This screenshot shows you how the house and area
    around it look after touching them up with the **MyGreyWall** material:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating hills using the Landscape tool](img/B03679_07_09.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
- en: Go back to the **Lit** mode, build the level, and then take a look at it. Adjust
    any lighting in the map so that it's lit up appropriately. Rebuild until you are
    satisfied with what you get.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
- en: Add trees and plants to make the area a little more realistic. I have downloaded
    a package from Marketplace that has some foliage to help me with this.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: Go to Marketplace on the Unreal Start Page. Under **Environments**, look for
    free downloadable content called **Open World Demo Collection**. The following
    screenshot shows free **Open World Demo Collection** in Marketplace. After downloading
    the package, add it to the project that you are working on.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating hills using the Landscape tool](img/B03679_07_10.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
- en: We now have a basic outdoor terrain for our map.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: Landscape creation options
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After going through the preceding exercise, you now have a good idea about how
    landscaping in Unreal Engine 4 fundamentally functions. In this section, we will
    add to the skills we have acquired so far and learn how to adjust or utilize features/functions
    of the Landscaping tool that is available to us.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
- en: Multiple landscapes
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: It is possible to have multiple landscapes in the same map. This allows you
    to split the creation process into different layers. If you have more than one
    landscape in the map, you will need to select a layer before modifying it.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: Using custom material
  id: totrans-55
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: You can import any material you want to use for the landscape; you can make
    your own grass, crops, sand texture, and so on. Since the custom material is mostly
    used for large areas of the map, it is good to bear in mind that you need to keep
    the material repeatable and optimized.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: Importing height maps and layers
  id: totrans-57
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Why do we use height maps in landscaping? These allow a quicker and more precise
    way to create elevations/troughs in the Unreal Editor. For example, we can use
    a height map to store elevation information for a mountain that is 3000m in height
    and of a certain diameter. When we import the height map, the terrain is automatically
    shaped according to it. It is definitely a time-saving method that helps us create
    more precise landscape features without having to click, click, click to sculpt.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Height maps and layers can first be created externally using common tools, such
    as Photoshop, World Machine, ZBrush, and Mudbox by artists. Detailed instructions
    need to be followed to ensure the successful importation of the height map. This
    can be found in the Unreal Engine 4 documentation at [https://docs.unrealengine.com/latest/INT/Engine/Landscape/Custom/index.html](https://docs.unrealengine.com/latest/INT/Engine/Landscape/Custom/index.html).
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 高度图和层最初可以由艺术家使用常见的工具在外部创建，例如Photoshop、World Machine、ZBrush和Mudbox。需要遵循详细说明以确保成功导入高度图。这可以在Unreal
    Engine 4文档中找到：[https://docs.unrealengine.com/latest/INT/Engine/Landscape/Custom/index.html](https://docs.unrealengine.com/latest/INT/Engine/Landscape/Custom/index.html)。
- en: Scale
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 缩放
- en: 'The **Scale** settings determine the scaling of the landscape. We have used
    X: 100 and Y: 100 to give us the area of the land that this landscape will cover.
    The Z value is kept as 100 to provide some height to create elevation.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**缩放**设置确定景观的缩放。我们使用了X: 100和Y: 100来给出这个景观将覆盖的土地面积。Z值保持为100，以提供一些高度来创建地形高差。'
- en: The number of components
  id: totrans-62
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 组件的数量
- en: A component is the basic unit for rendering and culling. There is a fixed cost
    that's associated with the overall number of components; hence, it is capped at
    32 x 32\. Going beyond this value would affect the performance of your game level.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 组件是渲染和剔除的基本单元。与组件的总数相关联有一个固定成本；因此，它被限制在32 x 32。超过这个值会影响您游戏级别的性能。
- en: Section Size
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 部分大小
- en: '**Section Size** determines how large each section is. It determines how the
    landscape is divided up. Large sections mean fewer overall components because
    the pie is divided into larger chunks. Fewer chunks to manage indicate a lower
    overall CPU cost.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**部分大小**确定每个部分的大小。它决定了景观如何划分。较大的部分意味着整体组件更少，因为饼被分成更大的块。管理块更少意味着整体CPU成本更低。'
- en: However, a large section is not as effective when managing the LOD as compared
    to a smaller section. When there are smaller sections, we also get smaller component
    sizes (when the pie is of the same size, cutting it into smaller chunks indicates
    that you have less on your plate if you take one chunk). Since components are
    the basic unit used for culling and rendering, this means quicker responses to
    LOD changes due to the reduced area. LOD determines the number of vertices that
    need to be calculated. If LOD is more effective, we have fewer calculations to
    do, and the CPU cost is more optimized with smaller sections.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，与较小的部分相比，较大的部分在管理LOD方面并不那么有效。当有较小的部分时，我们也会得到较小的组件大小（当饼的大小相同时，将其切割成更小的块意味着如果你拿一块，你的负担会更轻）。由于组件是用于剔除和渲染的基本单元，这意味着对LOD变化的响应会更快，因为面积减少了。LOD确定需要计算的顶点数量。如果LOD更有效，我们就有更少的计算要做，并且通过较小的部分，CPU成本更加优化。
- en: The catch here is balancing the size of the sections to avoid having too many
    components to go through and too few components might result in poor LOD management.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的关键是平衡部分的大小，以避免有太多的组件需要处理，而组件过少可能会导致LOD管理不佳。
- en: Note
  id: totrans-68
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: '**Sections Per Component**'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**每个组件的部分**'
- en: You have options ranging from 1 x 1 or 2 x 2 sections per component. What this
    means is that you have the option of having either one or four sections in each
    component. Since a component is the most basic unit in rendering and culling,
    for the 1 x 1 section, you can have one section rendered at the same time. For
    2 x 2 sections per component, you can have four sections rendered at the same
    time. To limit the number of calculations needed to render a component, the size
    of each section should not be too large.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以选择每个组件的1 x 1或2 x 2部分。这意味着您在每个组件中可以选择有一个或四个部分。由于组件是渲染和剔除的最基本单元，对于1 x 1部分，您可以同时渲染一个部分。对于每个组件的2
    x 2部分，您可以同时渲染四个部分。为了限制渲染组件所需的计算数量，每个部分的大小不应太大。
- en: Introducing cinematics
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引入电影
- en: Cinematics were developed largely for motion pictures, films, and movies. Today,
    we apply cinematic techniques to non-interactive game sequences, known as **cut
    scenes**, to enhance the gaming experience. The overall gaming experience has
    to be designed with cut scenes in mind as they usually fulfil certain game design
    objectives. These objectives are often slotted in between gameplay to enrich the
    storytelling experience in games.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**电影**、电影和电影的发展很大程度上是为了电影。今天，我们应用电影技术到非交互式的游戏序列，称为**过场动画**，以增强游戏体验。整体游戏体验必须考虑到**过场动画**，因为它们通常满足某些游戏设计目标。这些目标通常在游戏玩法之间安排，以丰富游戏中的叙事体验。'
- en: Very much like shooting a movie, we would need to decide what kind of shots
    need to be taken, which angles to shoot from, how much zooming is needed, how
    many cameras to use, and what path the camera needs to take in order to develop
    a motion picture sequence of our object/objects of focus. The techniques employed
    to create this clip are known as **cinematic techniques**.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 非常类似于拍摄电影，我们需要决定需要拍摄什么样的镜头，从哪个角度拍摄，需要多少缩放，需要使用多少个摄像机，以及摄像机需要采取的路径，以便发展出我们关注对象/对象的运动画面序列。用于创建此剪辑的技术被称为**电影技术**。
- en: So, in this chapter, we will first go through a few key objectives that explain
    why cinematics are needed in games, and you learn a couple of simple cinematic
    techniques that we could use. You will also learn about the tools that Unreal
    Engine 4 offers to apply the techniques we have learned in order to create appropriate
    cinematic sequences for your game.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本章中，我们将首先探讨几个关键目标，解释为什么游戏需要电影，并学习一些简单的电影技术，我们可以使用。你还将了解虚幻引擎4提供的工具，以便应用我们学到的技术，为你的游戏创建适当的电影序列。
- en: Cinematic techniques are created by cinematic experts who focus on creating
    cut scenes for your games. Alternatively, you could also engage a cinematic creation
    contracting company to get this done for you professionally.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**电影技术**是由专注于为你的游戏创建**过场动画**的电影专家创造的。或者，你也可以聘请一个电影制作承包公司来为你专业地完成这项工作。'
- en: Why do we need cut scenes?
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么我们需要**过场动画**？
- en: When a game is designed, a fair amount of the game designing time is put into
    designing how players interact with the objects in the game and how this interaction
    can be made fun. The interactive portion of the game needs to be supplemented
    and cut scenes can help fill the gaps.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 当设计游戏时，相当一部分游戏设计时间被用于设计玩家如何与游戏中的对象互动，以及如何使这种互动变得有趣。游戏中的互动部分需要补充，而**过场动画**可以帮助填补这些空白。
- en: Cut scenes can be employed in games to help designers tell a story when you
    are playing the game. This technique can be employed before the game begins to
    draw the players into the mission itself and justifies why a mission has to be
    accomplished for the player. This helps the player to understand the storyline,
    create meaning for their actions, and draw the player into the game.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在游戏中，可以使用**过场动画**来帮助设计师在玩家玩游戏时讲述故事。这种技巧可以在游戏开始之前使用，以吸引玩家进入任务本身，并解释为什么任务对玩家来说必须完成。这有助于玩家理解剧情，为他们的行为赋予意义，并将玩家吸引到游戏中。
- en: Another objective of cut scenes can be to highlight key areas in the game in
    order to give the players a glimpse of what to expect and provide subtle hints
    to successfully win the game. This information would be useful, especially in
    difficult to beat game levels or when the player is meeting the chief monster
    in the game.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**过场动画**的另一个目标可能是突出游戏中的关键区域，以便让玩家一瞥可以期待的内容，并给出成功赢得游戏的微妙提示。这些信息在难以击败的游戏关卡或玩家遇到游戏中的主要怪物时尤其有用。'
- en: Game designers also sometimes use cut scenes to reward players after a difficult
    battle. They amplify the effect of their success and play out the happy ending
    of their win in order to create positive emotions in the players. I am sure that
    there are endless creative ways to utilize cut scenes in games and how we could
    positively include them to enhance the gaming experience.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 游戏设计师有时也会使用**过场动画**在一场艰难的战斗后奖励玩家。它们放大了成功的效应，并演绎他们胜利的欢乐结局，以在玩家中创造积极的情绪。我相信，在游戏中利用**过场动画**的方法是无穷无尽的，并且我们可以以积极的方式将它们融入以增强游戏体验。
- en: However, it is necessary to ensure that the use of cut scenes is justified well
    because cut scenes actually take the control of the game away from the player.
    Games are expected to be interactive, and we do not want to convert this into
    a passive multimedia experience when there are too many cut scenes.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
- en: Keeping these basic game design objectives in mind, let's now explore some technical
    cinematic fundamentals that will provide you the groundwork to design your own
    cinematics in games.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
- en: Cinematic techniques
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The camera is the main tool that's used to create effects for cinematics. You
    can achieve various cinematic effects by adjusting the camera functions and finding/moving
    the camera to a good spot to capture a significant key object(s) of interest.
    This section will provide some technical terms that you can use to describe to
    your coworker/contractor how a particular cinematic sequence should be recorded.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
- en: Adjusted camera functions
  id: totrans-85
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Here are some commonly used functions that you can adjust on a camera to capture
    a scene.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
- en: Zoom
  id: totrans-87
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Zooming in on an object gives you a closer view on the object; providing more
    details about it. Zooming out takes your view further away from the object; it
    provides a perspective for the object with regard to its surroundings.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
- en: Zooming is achieved by adjusting the focal length of the camera lens; the camera
    itself stays in the same position.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
- en: Field of view
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Field of view** (**FOV**) is the area that is visible from a particular position
    and orientation in space. FOV for a camera is dependent on the lens and can be
    expressed as *FOV = 2 arctan(SensorSize/2f),* where *f* is the focal length.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
- en: 'For humans, FOV is the area that we can see without moving our head. The horizontal
    FOV kind of ends at the outer corner of the eye, as shown in the following image,
    which is about 62 degrees to the left-hand side and right-hand side (source: [http://buildmedia.com/what-are-survey-accurate-visual-simulations/](http://buildmedia.com/what-are-survey-accurate-visual-simulations/)):'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
- en: '![Field of view](img/B03679_07_11.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
- en: What this means is that whatever is outside this FOV is not visible to the entity.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
- en: Depth of field
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: '**Depth of field** (**DOF**) is best expressed as a photo, such as the following
    one, where only the object of interest is very sharp and anything behind is it
    blurred. In the following image (source: [http://vegnews.com/articles/page.do?catId=2&pageId=2125](http://vegnews.com/articles/page.do?catId=2&pageId=2125)),
    the gyoza/dumplings appear sharp and beyond these, the bowl/bottle is blurred.
    The small DOF in the photo allows the foreground (gyoza) to be emphasized and
    the background to be de-emphasized. This is a very good technique to bring visual
    attention to objects of interest in photography as well as in cinematics.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
- en: '![Depth of field](img/B03679_07_12.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
- en: DOF is also known to provide an effective focus range. The method to determine
    this range is to measure the distance between the closest object and farthest
    object in a scene that appears to be sharp in an image. Although a lens is made
    to focus on one distance at a time, the gradual decrease in sharpness is difficult
    to perceive under normal viewing conditions.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
- en: Camera movement
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In filming, the camera is positioned at different angles and locations, and
    the camera moves with the actor/vehicle and so on. This camera movement can be
    described using some of the terms here.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
- en: Tilt
  id: totrans-101
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The camera is moved in a similar way to how you nod your head. The camera is
    pivoted at a fixed spot, and turning it up/down is known as tilting. The following
    figure shows the side view of the camera with arrows illustrating the tilting:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
- en: '![Tilt](img/B03679_07_13.jpg)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
- en: Pan
  id: totrans-104
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The camera is moved in a similar way to how you turn your head to look to the
    left-hand side and the right-hand side. The camera is pivoted at a fixed spot
    and turning it to the left-hand side/right-hand side is known as **panning**.
    This figure shows the top view of the camera with arrows demonstrating how panning
    works:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
- en: '![Pan](img/B03679_07_14.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
- en: Dolly/track/truck
  id: totrans-107
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: A dolly moves the entire camera toward or away from the object. It is quite
    similar to zooming in/out since you also going closer/further to the object, except
    that dollying moves the camera along a path toward/away from the object.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
- en: 'Trucking moves the camera sideways, that is, to the left-hand side or right-hand,
    along a track. Trucking is often confused with panning. The entire camera moves
    in trucking, but in panning, the camera stays in a fixed location and only the
    lens is swept to the left-hand side/right-hand side. Tracking is a specific form
    of trucking as it follows an object of interest in parallel. The following figure
    shows the back view of a camera dollying along a path:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
- en: '![Dolly/track/truck](img/B03679_07_15.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
- en: Pedestal
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'Pedestal is the moving of the camera up and down a vertical track. The following
    figure illustrates the camera moving up and down a vertical track:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
- en: '![Pedestal](img/B03679_07_16.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
- en: Capturing a scene
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When capturing a scene, the overall scene is what matters most. You need to
    keep certain things in mind, such as what comprises the scene and its lighting;
    what you select determines how impactful the cut scene is. Here are a few factors
    that need to be addressed when composing a good cut scene.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
- en: Lighting
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Light affects how a scene shows up in photo/cut scene. We need to have the right
    lighting in place to capture the mood of the scene.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
- en: Framing
  id: totrans-118
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Framing decides how the shot needs to be taken. Everything in the frame is important
    and you should pay attention to everything that is within the frame. How each
    shot transitions to the next also needs to be considered when creating a cut scene.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
- en: Some framing rules
  id: totrans-120
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'The framing rules are as follows:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
- en: Make sure the horizontals are level in the frame and the verticals are straight
    up along the frame.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Rule of Thirds. This rule divides the frame into nine sections. The points
    of interest should occur at one-third or two-thirds of the way up (or across)
    the frame rather than in the center. For example, the sky takes up approx. Two-thirds
    of this frame.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Strategic empty spaces are provided in front, above, or behind the subject to
    allow space for the subject to move into/look into.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Avoid having half an object captured in the frame.
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shot types
  id: totrans-126
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Here are some terms used to describe shots that can be taken for the frame:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
- en: '**Extreme Wide Shot (EWS) /** **Extreme Long Shot (ELS)**: This shot puts the
    subject into the environment. The shot is taken from a distance so that the environment
    around the subject can be seen. This type of a shot is very often used to establish
    a scene.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Wide Shot (WS) / Long Shot (LS)**: In a wide or long shot, the subject takes
    up the full frame. The subject is in the frame entirely with little space around
    it.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Medium Shot (MS)**: The medium shot has more of the subject in the frame
    and less of the environment.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Close Up Shot (CU)**: The subject covers approximately half the frame. This
    increases the focus on the subject.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Extreme Close Up Shot (ECU)**: The camera focuses on an important part of
    the subject.'
  id: totrans-132
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Shot plan
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: This is a plan that describes how the scene will be captured. It also describes
    how many cameras to use, the sequence in which the cameras come on, and the kind
    of shots that need to be taken in order to play out the required effect for the
    scene.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
- en: Getting familiar with the Unreal Matinee Editor
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Unreal Matinee Editor is similar to nonlinear video editors, so it is quite
    easy to pick up if you already have experience using software such as Adobe Flash.
    Creating keyframes for cameras and moving them along paths combined with modifying
    camera properties creates the matinee/cut scene for games. Additionally, you can
    also make or convert static objects to become dynamic and then animate them using
    this Matinee Editor.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
- en: Exercise – creating a simple matinee sequence
  id: totrans-137
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now, let's get hands-on and create a simple matinee sequence for your game.
    The plan is to showcase the area that we created at the beginning of the game.
    We will start with an extreme wide shot taken from the front of the house. We
    will use the dolly to take the camera toward the large windows in the dining area,
    into the kitchen area, and then the fireplace. Then, using the second camera,
    from the corner of the room, we will move toward a running guy and focus on his
    face.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
- en: 'Create a new matinee sequence from the ribbon, as shown in the following screenshot.
    Click on **Matinee** and select **Add Matinee**:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating a simple matinee sequence](img/B03679_07_17.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
- en: 'This opens up the Matinee Editor, as shown in the following screenshot:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating a simple matinee sequence](img/B03679_07_18.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
- en: 'To create the first camera, we will right-click on the **Tracks** area and
    select **Add New Camera Group**:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating a simple matinee sequence](img/B03679_07_19.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
- en: 'Going back to the map, you can see a small window in the corner of the map
    that shows what the camera is looking at. This screenshot shows where our first
    shot starts:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating a simple matinee sequence](img/B03679_07_20.jpg)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
- en: 'To create the next key where the next shot has to be taken, go back to the
    **Camera1** track, click on the small red arrow at 0.0 in the **Movement** row,
    and hit *Enter*. This duplicates the key. Press *Ctrl* and click and drag the
    red arrow to 2.00\. This screenshot shows how to do it correctly:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating a simple matinee sequence](img/B03679_07_21.jpg)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
- en: 'Now, click on the red arrow at 2.00 and go back to **Camera1** in the map.
    Right-click on it and select **Pilot ''Camera Actor1''**, as shown in this screenshot:'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating a simple matinee sequence](img/B03679_07_22.jpg)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
- en: 'Move the viewport to the position you want to have the second keyframe in.
    This screenshot shows the position of the second keyframe camera:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating a simple matinee sequence](img/B03679_07_23.jpg)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
- en: 'When the viewport is positioned, as shown in the preceding screenshot, click
    on the icon in the top-left corner of the viewport to stop the pilot mode in order
    to fix the keyframe here. The location of the icon is shown here:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating a simple matinee sequence](img/B03679_07_24.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
- en: Following the shot plan we decided on, I have moved **Camera1** along the path
    up to the fireplace. To add the second camera, repeat the steps to create a new
    camera group and name the new camera as `Camera2`.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, move the first keyframe to the end of Camera1''s final keyframe timeline.
    For me, this is set at **8.50s**; I moved the camera to the corner of the room,
    as shown in the following screenshot:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating a simple matinee sequence](img/B03679_07_25.jpg)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
- en: Repeat the steps to create keyframes for **Camera2**, move it along the path
    toward the running man, and then focus on the running man's face.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, we have two cameras that need to be told which one is playing at which
    part along the timeline. To do so, we need to create a new director group. The
    director group will dictate which camera is on air and what will be showing on
    screen. Go back to **Tracks** in the Matinee Editor. Right-click and select **Add
    New Director Group**, as shown in this screenshot:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating a simple matinee sequence](img/B03679_07_26.jpg)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
- en: 'This creates a **Director** track above the camera tracks. Select the newly
    added **Director** track at 0.00, go to the ribbon at the top, and select **Add
    Key**, as shown in this screenshot:'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
- en: '![Exercise – creating a simple matinee sequence](img/B03679_07_27.jpg)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
- en: 'The contextual menu will request that you select **Camera1** or **Camera2**.
    In this case, select **Camera1**. This fills up the entire duration of the cinematics.
    To create a key at 8.50s where **Camera1** and **Camera2** overlap, click on the
    **Director** track again and select **Add Key**. This time round, select **Camera2**.
    Move this key to **8.50**. This screenshot shows where the cameras are set up
    so that they can play correctly:'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 上下文菜单将要求您选择**Camera1**或**Camera2**。在这种情况下，请选择**Camera1**。这将填充整个电影时长。要创建一个在8.50秒处**Camera1**和**Camera2**重叠的关键帧，请再次点击**Director**轨道并选择**添加关键帧**。这次，请选择**Camera2**。将此关键帧移动到**8.50**。此截图显示了摄像机设置的位置，以便它们可以正确播放：
- en: '![Exercise – creating a simple matinee sequence](img/B03679_07_28.jpg)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![练习 – 创建简单的电影序列](img/B03679_07_28.jpg)'
- en: Finally, we are ready to play the cut scene. To tell the game to play the cut
    scene when starting the game, we need to use Blueprint. I hope you still remember
    how to use the Blueprint Editor. Click and open the Level Blueprint. Add the **Event
    BeginPlay** node and right-click and search for **Play**. Select the **Play Matineee
    Actor** option and link the nodes, as shown in the following screenshot. Now,
    save and play the level. You will see the entire matinee play before you control
    the player in the level.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们准备好播放剪辑场景。要告诉游戏在游戏开始时播放剪辑场景，我们需要使用蓝图。我希望您还记得如何使用蓝图编辑器。点击并打开关卡蓝图。添加**Event
    BeginPlay**节点，然后右键单击并搜索**播放**。选择**播放电影演员**选项，并将节点链接起来，如图所示。现在，保存并播放关卡。您将看到整个电影在您控制关卡中的玩家之前播放。
- en: '![Exercise – creating a simple matinee sequence](img/B03679_07_29.jpg)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![练习 – 创建简单的电影序列](img/B03679_07_29.jpg)'
- en: Summary
  id: totrans-167
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We covered terrain creation and matinee creation in this chapter. I hope you
    were able to enhance the game level with the new skills we explored.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章中涵盖了地形创建和电影创建。我希望您能够利用我们探索的新技能来提升游戏关卡。
- en: Terrain manipulation covers large areas of a map; hence, we also went through
    the factors that affect the playability of the map. We also went through a simple
    exercise to create the outdoor terrain of our map with some hills and a lake.
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 地形操作覆盖了地图的大部分区域；因此，我们还讨论了影响地图可玩性的因素。我们还进行了一个简单的练习，用一些山丘和湖泊创建我们地图的户外地形。
- en: Matinee creation involves a lot more technical planning before we start playing
    around with the editor itself. The use of the editor is pretty simple as it is
    similar to current video editors in the market. The techniques to create good
    cinematics were covered to help you understand their backgrounds a little better.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始使用编辑器之前，电影创建涉及更多的技术规划。编辑器的使用相当简单，因为它与市场上的当前视频编辑器类似。我们涵盖了创建良好电影的技术，以帮助您更好地理解它们的背景。
- en: This is the last chapter of the book and the final summary. I sincerely hope
    that you enjoyed reading this book and had fun playing around with Unreal Engine
    4\. Lastly, I would like to wish you all the best in creating your own games.
    Do keep at it; there is always more to learn and other new tools out there to
    help you create what you want. I am sure that you love creating games; if not,
    you would not have survived this boring book right to the end. This book only
    serves to introduce you to the world of game development and shows you the basic
    tools to create a game using Unreal Engine. The rest of this journey is now left
    to you to create a game that is fun. Good luck! Don't forget to drop me a note
    to let me know about the games you create in the future. I am waiting to hear
    from you.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 这是本书的最后一章和最终的总结。我真诚地希望您喜欢阅读这本书，并在Unreal Engine 4中玩耍。最后，我衷心祝愿您在创建自己的游戏时一切顺利。请继续努力；总有更多东西要学习，还有其他新工具可以帮助您创建您想要的东西。我相信您喜欢创建游戏；如果不，您就不会在这本无聊的书中坚持到最后。这本书仅用于向您介绍游戏开发的世界，并展示了使用Unreal
    Engine创建游戏的基本工具。剩下的旅程现在留给了您去创建一个有趣的游戏。祝您好运！别忘了给我发个消息，让我知道您未来创建的游戏。我在等待您的消息。
