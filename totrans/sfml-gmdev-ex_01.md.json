["```cpp\n#include <SFML/Graphics.hpp>\n```", "```cpp\n#include <SFML/Graphics/Color.hpp>\n```", "```cpp\n#include <SFML/Graphics.hpp>\n\nvoid main(int argc, char** argv[]){\n\n}\n```", "```cpp\n#include <SFML/Graphics.hpp>\n\nvoid main(int argc, char** argv[]){\n  sf::RenderWindow window(sf::VideoMode(640,480), \"First window!\");\n\n  while(window.isOpen()){\n    sf::Event event;\n    while(window.pollEvent(event)){\n      if(event.type == sf::Event::Closed){\n        // Close window button clicked.\n        window.close();\n      }\n    }\n    window.clear(sf::Color::Black);\n    // Draw here.\n    window.display();\n  }\n}\n```", "```cpp\nwindow.clear(sf::Color(0,0,0,255));\n```", "```cpp\nsf::RectangleShape rectangle(sf::Vector2f(128.0f,128.0f));\nrectangle.setFillColor(sf::Color::Red);\nrectangle.setPosition(320,240);\n```", "```cpp\nsf::Vector2<long> m_vector;\n```", "```cpp\nwindow.draw(rectangle); // Render our shape.\n```", "```cpp\nrectangle.setOrigin(64.0f,64.0f);\n```", "```cpp\nrectangle.setOrigin(rectangle.getSize().x / 2, rectangle.getSize().y / 2);\n```", "```cpp\n#include <SFML/Graphics.hpp>\n\nvoid main(int argc, char** argv[]){\n  sf::RenderWindow window(sf::VideoMode(640,480),\n    \"Rendering the rectangle.\");\n\n  // Creating our shape.\n  sf::RectangleShape rectangle(sf::Vector2f(128.0f,128.0f));\n  rectangle.setFillColor(sf::Color::Red);\n  rectangle.setPosition(320,240);\n  rectangle.setOrigin(rectangle.getSize().x / 2, rectangle.getSize().y / 2);\n\n  while(window.isOpen()){\n    sf::Event event;\n    while(window.pollEvent(event)){\n      if(event.type == sf::Event::Closed){\n        // Close window button clicked.\n        window.close();\n      }\n    }\n    window.clear(sf::Color::Black);\n    window.draw(rectangle); // Drawing our shape.\n    window.display();\n  }\n}\n```", "```cpp\nsf::Texture texture;\nif(!texture.loadFromFile(\"filename.png\"){\n    // Handle an error.\n}\n```", "```cpp\nsf::Sprite sprite(texture);\n...\nwindow.draw(sprite);\n```", "```cpp\nsprite.setTexture(texture);\n```", "```cpp\nvoid main(int argc, char** argv[]){\n  sf::RenderWindow window(sf::VideoMode(640,480),\n    \"Bouncing mushroom.\");\n\n  sf::Texture mushroomTexture;\n  mushroomTexture.loadFromFile(\"Mushroom.png\");\n  sf::Sprite mushroom(mushroomTexture);\n  sf::Vector2u size = mushroomTexture.getSize();\n  mushroom.setOrigin(size.x / 2, size.y / 2);\n  sf::Vector2f increment(0.4f, 0.4f);\n\n  while(window.isOpen()){\n    sf::Event event;\n    while(window.pollEvent(event)){\n      if(event.type == sf::Event::Closed){\n        window.close();\n      }\n    }\n\n    if((mushroom.getPosition().x + (size.x / 2) >\n      window.getSize().x && increment.x > 0) ||\n      (mushroom.getPosition().x - (size.x / 2) < 0 &&\n      increment.x < 0))\n    {\n        // Reverse the direction on X axis.\n        increment.x = -increment.x;\n    }\n\n    if((mushroom.getPosition().y + (size.y / 2) >\n      window.getSize().y && increment.y > 0) ||\n      (mushroom.getPosition().y - (size.y / 2) < 0 &&\n      increment.y < 0))\n    {\n         // Reverse the direction on Y axis.\n        increment.y = -increment.y;\n    }\n\n    mushroom.setPosition(mushroom.getPosition() + increment);\n\n    window.clear(sf::Color(16,16,16,255)); // Dark gray.\n    window.draw(mushroom); // Drawing our sprite.\n    window.display();\n  }\n}\n```", "```cpp\nmushroom.setColor(sf::Color(255, 0, 0, 255)); // Red tint.\n```", "```cpp\nsf::Sprite CreateSprite(std::string l_path){\n    sf::Texture texture;\n    texture.loadFromFile(l_path);\n    . . .\n    return sf::Sprite(texture);\n}\n```", "```cpp\nerror LNK2019: unresolved external symbol. . .\n\n```"]