["```cpp\nextends Node2D\n@export var speed = 500.0\n@export var up_action = \"move_up\"\n@export var down_action = \"move_down\"\n@onready var body = $CharacterBody2D\nfunc _physics_process(delta):\n     body.move_and_slide()\nfunc _unhandled_input(event):\n     if event.is_action_pressed(up_action):\n          body.velocity.y = -speed\n     elif event.is_action_released(up_action):\n          if Input.is_action_pressed(down_action):\n               body.velocity.y = speed\n          else:\n               body.velocity.y = 0.0\n     if event.is_action_pressed(down_action):\n          body.velocity.y = speed\n     elif event.is_action_released(down_action):\n          if Input.is_action_pressed(up_action):\n               body.velocity.y = -speed\n          else:\n               body.velocity.y = 0.0\n```", "```cpp\n@tool\nextends CollisionShape2D\n@export var color = Color.WHITE\nfunc _draw():\n     draw_circle(Vector2.ZERO, shape.radius, color)\n```", "```cpp\nextends Node2D\n@export var speed = 600.0\n@onready var body = $CharacterBody2D\nfunc move():\n     body.velocity.x = [-speed, speed][randi()%2]\n     body.velocity.y = [-speed, speed][randi()%2]\nfunc reset():\n     body.global_position = global_position\n     move()\nfunc _physics_process(delta):\n     var collision = body.move_and_collide\n         (body.velocity  delta)\n     if collision:\n          body.velocity = body.velocity.bounce\n              (collision.get_normal())\n```", "```cpp\nextends Area2D\nsignal scored(score)\n@export var score = 0\nfunc _on_body_entered(body):\n     score += 1\n     scored.emit(score)\n```", "```cpp\nextends Label\nfunc update_score(new_score):\n     text = \"%s\" % new_score\n```", "```cpp\nextends Node2D\n@export var speed = 600.0\n@onready var body = $CharacterBody2D\nfunc move():\n     body.velocity.x = [-speed, speed][randi()%2]\n     body.velocity.y = [-speed, speed][randi()%2]\nfunc reset():\n     body.global_position = global_position\n     move()\nfunc _physics_process(delta):\n     var collision = body.move_and_collide\n         (body.velocity  delta)\n     if collision:\n          body.velocity = body.velocity.bounce\n              (collision.get_normal())\n```", "```cpp\n    func setup_multiplayer(player_id):\n    ```", "```cpp\n    @rpc(\"call_local\")\n    func setup_multiplayer(player_id):\n    ```", "```cpp\n    @rpc(\"call_local\")\n    func setup_multiplayer(player_id):\n         set_multiplayer_authority(player_id)\n    ```", "```cpp\n         if not is_multiplayer_authority():\n    ```", "```cpp\n         if not is_multiplayer_authority():\n              set_physics_process(false)\n    ```", "```cpp\n    if not is_multiplayer_authority():\n              set_physics_process(false)\n              set_process_unhandled_input(false)\n    ```", "```cpp\n    @rpc(\"call_local\")\n    func setup_multiplayer(player_id):\n         set_multiplayer_authority(player_id)\n         if not is_multiplayer_authority():\n              set_physics_process(false)\n              set_process_unhandled_input(false)\n    ```", "```cpp\n    func _ready():\n         randomize()\n         await(get_tree().create_timer(0.1).timeout)\n         ball.move()\n    ```", "```cpp\n         await(get_tree().create_timer(0.1).timeout)\n         if multiplayer.get_peers().size() > 0:\n    ```", "```cpp\n         await(get_tree().create_timer(0.1).timeout)\n         if multiplayer.get_peers().size() > 0:\n              if is_multiplayer_authority():\n    ```", "```cpp\n         await(get_tree().create_timer(0.1).timeout)\n         if multiplayer.get_peers().size() > 0:\n              if is_multiplayer_authority():\n                   var player_1 = multiplayer.get_peers\n                       ()[0]\n    ```", "```cpp\n         await(get_tree().create_timer(0.1).timeout)\n         if multiplayer.get_peers().size() > 0:\n              if is_multiplayer_authority():\n                   var player_1 = multiplayer.get_peers\n                       ()[0]\n                   var player_2 = multiplayer.get_peers()\n                       [1]\n    ```", "```cpp\n    if multiplayer.get_peers().size() > 0:\n              if is_multiplayer_authority():\n                   var player_1 = multiplayer.get_peers()\n                       [0]\n                   var player_2 = multiplayer.get_peers()\n                       [1]\n                   player_1_paddle.rpc\n                       (\"setup_multiplayer\", player_1)\n                   player_2_paddle.rpc\n                       (\"setup_multiplayer\", player_2)\n    ```", "```cpp\n    func _ready():\n         randomize()\n         await(get_tree().create_timer(0.1).timeout)\n         if multiplayer.get_peers().size() > 0:\n              if is_multiplayer_authority():\n                   var player_1 = multiplayer.get_peers()\n                       [0]\n                   var player_2 = multiplayer.get_peers()\n                       [1]\n                   player_1_paddle.rpc\n                       (\"setup_multiplayer\", player_1)\n                   player_2_paddle.rpc\n                       (\"setup_multiplayer\", player_2)\n         ball.move()\n    ```", "```cpp\n    func _ready():\n         if not is_multiplayer_authority():\n              set_physics_process(false)\n    ```"]