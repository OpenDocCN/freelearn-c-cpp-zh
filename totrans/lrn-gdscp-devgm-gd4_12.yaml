- en: '12'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Exporting to Multiple Platforms
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After making a game, we should get it into the hands of players. Games are meant
    to be played, after all! In the old days, this meant burning thousands to millions
    of CDs and distributing them all over the world to physical game stores, in the
    hope people would buy them. This cost tremendous amounts of money and manpower.
    Big studios would often only see 10% of the profits because the rest dissipated
    in buying physical CDs and paying distribution and store cuts. Even if you developed
    a successful hit game, the upfront investment to distribute it could stop it in
    its tracks.
  prefs: []
  type: TYPE_NORMAL
- en: With the rise of the internet and gaming platforms such as **Steam** and **Itch.io**,
    distribution has become way cheaper, sometimes even free, and easier, with nearly
    no upfront investment.
  prefs: []
  type: TYPE_NORMAL
- en: Over the course of this chapter, we’ll learn everything about exporting production
    builds for our game and even upload it to Itch.io (if you want to).
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Exporting a game for Windows, Mac, and Linux
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Uploading our game to Itch.io
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Exporting our game to other platforms
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Technical requirements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'As with every chapter, you can find the final code in the GitHub repository
    in the subfolder for this chapter: [https://github.com/PacktPublishing/Learning-GDScript-by-Developing-a-Game-with-Godot-4/tree/main/chapter12](https://github.com/PacktPublishing/Learning-GDScript-by-Developing-a-Game-with-Godot-4/tree/main/chapter12).'
  prefs: []
  type: TYPE_NORMAL
- en: Exporting for Windows, Mac, and Linux
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Exporting is the process where we take the game that we have been developing
    and make it executable outside of Godot. Yes, we can run our game from the engine’s
    editor in debug mode, but ideally, we don’t want to share our game’s code with
    players. We also don’t want our players to first have to download the whole engine
    with its editor, and then our game.
  prefs: []
  type: TYPE_NORMAL
- en: When exporting for computers, we’ll have to do a separate export for each different
    operating system, such as Windows, macOS, and Linux. An operating system is software
    that manages all the hardware and common functionality of a computer.
  prefs: []
  type: TYPE_NORMAL
- en: No matter what kind of **Operating System** (**OS**) you use, Windows, Mac,
    or Linux, Godot allows us to export a game to any other platform. This way, we
    can easily make exports for all our users, no matter what platform they prefer.
  prefs: []
  type: TYPE_NORMAL
- en: Before we can export to any platform though, we’ll need to download the export
    template.
  prefs: []
  type: TYPE_NORMAL
- en: Downloading the export template
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'To export anything, the Godot engine uses a template that tells it how to actually
    export our game, which is unique for each Godot Engine version and called the
    **export template**. Once we have the template, we can export to any of the built-in
    platforms. We can easily download this export template from within the Godot Editor
    itself, as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: In the top menu bar, open up the **Editor** dropdown and click on **Manage Export**
    **Templates...** .
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.1 – The export templates manager can be accessed through the Editor
    drop-down menu](img/B19358_12_1.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.1 – The export templates manager can be accessed through the Editor
    drop-down menu
  prefs: []
  type: TYPE_NORMAL
- en: Click **Download** **and Install**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.2 – In the export template manager, we can download and install
    export templates](img/B19358_12_2.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.2 – In the export template manager, we can download and install export
    templates
  prefs: []
  type: TYPE_NORMAL
- en: It will take some time to download and install the export template, but you
    only need to do this once for each Godot Engine version you are using. Now, we
    are ready to do a proper export.
  prefs: []
  type: TYPE_NORMAL
- en: Making the actual exports of the game
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'With the export template for our given Godot Engine version in place, we can
    finally export the game. We’ll do this using the **Export menu**. Let’s get cracking:'
  prefs: []
  type: TYPE_NORMAL
- en: In the top menu bar, open up the **Project** dropdown and click on **Export...**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.3 – The Export… menu can be accessed through the Project drop-down
    menu](img/B19358_12_3.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.3 – The Export… menu can be accessed through the Project drop-down
    menu
  prefs: []
  type: TYPE_NORMAL
- en: This opens the **Export** menu, which contains the export settings for each
    export preset. Currently, it does not contain any export presets.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Click **Add...** and select the computer platform you are using right now (**Linux/X11**,
    **macOS**, or **Windows Desktop**).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.4 – Adding a preset for a certain platform in the Export menu](img/B19358_12_4.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.4 – Adding a preset for a certain platform in the Export menu
  prefs: []
  type: TYPE_NORMAL
- en: The platform will be added to the **Presets** list.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.5 – The Windows Desktop platform added as one of the presets](img/B19358_12_5.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.5 – The Windows Desktop platform added as one of the presets
  prefs: []
  type: TYPE_NORMAL
- en: 'Configure the export depending on the platform you added:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '`com.survivor.game` or something similar.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 12.6 – For macOS, you’ll have to specify the bundle identifier](img/B19358_12_6.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.6 – For macOS, you’ll have to specify the bundle identifier
  prefs: []
  type: TYPE_NORMAL
- en: '**For Windows and Linux only**: Enable the **Embed PCK** option. This will
    make sure that our game’s PCK file (the package file that contains all the game’s
    data, such as code and art) gets embedded into the executable of the game.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 12.7 – For Windows and Linux, enable the Embed PCK option](img/B19358_12_7.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.7 – For Windows and Linux, enable the Embed PCK option
  prefs: []
  type: TYPE_NORMAL
- en: Now, click **Export Project...** to export the game.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Create a new folder called `exports`, under which you can create a folder for
    each platform. So, if you export for Windows, put it under `exports/windows`.
    This is just to give some structure to our exports.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Disable the **Export With** **Debug** option.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.8 – Disabling the Export With Debug option](img/B19358_12_9.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.8 – Disabling the Export With Debug option
  prefs: []
  type: TYPE_NORMAL
- en: Press **Save**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: We’ll now have an export of the game for the target platform in the folder we
    just created. Repeat the steps in this section for each platform.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.9 – The exported game for Windows](img/B19358_12_10.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.9 – The exported game for Windows
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: You might have noticed there is also a button called **Export All...** in the
    export menu. When all the platforms you want to export to are set up, you can
    press this button to export all of them simultaneously.
  prefs: []
  type: TYPE_NORMAL
- en: After exporting, it’s time to publish the game and share it with the world.
  prefs: []
  type: TYPE_NORMAL
- en: Uploading our game to Itch.io
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After making a game, it is a lot of fun to share it with people you know or
    total strangers to see them interact and play with what you made. In this section,
    we’ll go through the process of putting the game on an online platform called
    Itch.io. If you don’t want to share your game for any reason, then you can skip
    this section for now; just return to it when you feel ready. But don’t worry too
    much whether it is too early or not to share a game. Player feedback is always
    a good thing, no matter what point of development you are at, and following these
    steps to create an Itch.io page is great practice too.
  prefs: []
  type: TYPE_NORMAL
- en: What is Itch.io?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Itch.io** is an online platform and store where people can distribute games,
    assets (to make games), or any other digital resource, file, or program. It is
    very well known in the game development community because a lot of developers
    put their small game experiments on there, but you can also find bigger projects.'
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.10 – The Itch.io front page](img/B19358_12_11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.10 – The Itch.io front page
  prefs: []
  type: TYPE_NORMAL
- en: Itch.io is also the place to be to participate in **game jams**. A game jam
    is a little online event where you build a game within a certain time limit around
    a certain theme. The time limit and theme differ from game jam to game jam. Afterward,
    everyone who participated plays each other’s games and gives feedback. It is a
    great way to practice creating games and get feedback from other game developers.
  prefs: []
  type: TYPE_NORMAL
- en: We’ll upload our computer builds to the Itch.io platform, but the cool thing
    is that we can also upload a web build that will be playable from within the browser
    so that people don’t have to download any files – they can just start playing.
    If we upload both the normal exports and the web export, people can still choose
    how they want to play, which gives them more options.
  prefs: []
  type: TYPE_NORMAL
- en: Exporting our game to the web
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Exporting to the web means that we make an export that can be included in any
    website and is playable from any browser, even mobile ones.
  prefs: []
  type: TYPE_NORMAL
- en: Important note
  prefs: []
  type: TYPE_NORMAL
- en: Note that when we make a web export, it will only be playable when it is run
    through a server. You will not be able to directly open the export in your favorite
    browser without running a server on your computer or hosting it on an online platform.
    Luckily, we are going to host our game on Itch.io, so you will be able to play
    it over there.
  prefs: []
  type: TYPE_NORMAL
- en: The first thing we need to do is take out the multiplayer aspect of the game
    for now.
  prefs: []
  type: TYPE_NORMAL
- en: Removing multiplayer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'For security reasons, a website should never have full access to your computer.
    That is why web exports have some limits, such as slightly worse performance and
    networking. This means that our game’s multiplayer will not work in the web export.
    There are ways to get multiplayer to work for web exports, but these are out of
    the scope of this book. With just one small change it will still work fine for
    a single player:'
  prefs: []
  type: TYPE_NORMAL
- en: 'In the `_ready()` function of the `menu.gd` script, add the following line:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The `OS.get_name()` function gives us the name of the operating system the game
    is currently running on. This makes sure that the input field for the IP address
    is not visible anymore when the player is playing on the web and cannot get stuck
    trying to connect, which could break the game for them.
  prefs: []
  type: TYPE_NORMAL
- en: With the multiplayer disables, let’s see how we can make the web export.
  prefs: []
  type: TYPE_NORMAL
- en: Making the actual web export
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The process of making a web export is equally easy as exporting to the computer
    platforms; we just add a new preset for the **Web** platform and export the project
    as normal.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.11 – Adding an export preset for the Web platform](img/figure_12.11.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.11 – Adding an export preset for the Web platform
  prefs: []
  type: TYPE_NORMAL
- en: One thing that we’ll have to ensure is that, when saving the file, we name it
    `index.html`, as demonstrated in *Figure 12**.12*. Itch.io requires this name
    because it will be looking for an `index.html` file to run the game in the browser.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.12 – Make sure you save the web export as index.html](img/B19358_12_13.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.12 – Make sure you save the web export as index.html
  prefs: []
  type: TYPE_NORMAL
- en: Now that we have the export, we’ll need to make a zip file out of it. Let’s
    learn how to do that.
  prefs: []
  type: TYPE_NORMAL
- en: Zipping the web export
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: Itch.io will require a ZIP file that contains all the exported files for the
    web export. A ZIP file is a file that bundles multiple other files into a compressed
    format, making it easier to transport them as well as making the content smaller.
  prefs: []
  type: TYPE_NORMAL
- en: Depending on the platform you use, the process is a little different.
  prefs: []
  type: TYPE_NORMAL
- en: 'For Windows and macOS, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Select all the export files.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.13 – Selecting all the exported files](img/B19358_12_14.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.13 – Selecting all the exported files
  prefs: []
  type: TYPE_NORMAL
- en: Now, right-click them so that the **Options** menu appears.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**For Windows**: Under **Send to**, select **Compressed (****zipped) folder**.'
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 12.14 – On Windows platforms, select Compressed (zipped) folder](img/B19358_12_15_revised.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.14 – On Windows platforms, select Compressed (zipped) folder
  prefs: []
  type: TYPE_NORMAL
- en: '**For macOS**: Select **Compress**.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![Figure 12.15 – On macOS platforms, select Compress](img/figure_12.15.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.15 – On macOS platforms, select Compress
  prefs: []
  type: TYPE_NORMAL
- en: Now, name the ZIP file `Survivor` `Game Web`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.16 – The resulting ZIP file](img/B19358_12_17.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.16 – The resulting ZIP file
  prefs: []
  type: TYPE_NORMAL
- en: 'For Linux, follow these steps:'
  prefs: []
  type: TYPE_NORMAL
- en: Open the Terminal application on your computer.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Use the `cd ~/path/to/game/export/folder` command, with the correct path, to
    navigate to the web export folder of the game.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now, run `zip -r "Survivor Game Web.zip" .` to create a ZIP file with the contents
    of this folder.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.17 – The Linux Terminal after running the command to make a ZIP
    file](img/B19358_12_18.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.17 – The Linux Terminal after running the command to make a ZIP file
  prefs: []
  type: TYPE_NORMAL
- en: With all the exports ready and zipped, it is time to upload the game to Itch.io.
  prefs: []
  type: TYPE_NORMAL
- en: Uploading to Itch.io
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Now that everything is ready, we can upload our game to the Itch.io platform
    and create our own page from which people can play and download the game:'
  prefs: []
  type: TYPE_NORMAL
- en: Create an account at [https://itch.io/register](https://itch.io/register). Make
    sure to check the box next to **I’m interested in distributing content on itch.io**
    because that is exactly what we want to do.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.18 – When registering for Itch.io, indicate that we want to distribute
    content](img/B19358_12_19.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.18 – When registering for Itch.io, indicate that we want to distribute
    content
  prefs: []
  type: TYPE_NORMAL
- en: Once registered, you’ll first have to verify your email address by opening the
    email that Itch.io sent to the email address you provided for your account and
    clicking on the button that says **Click to verify your** **email address**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.19 – Verify your email address](img/B19358_12_20.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.19 – Verify your email address
  prefs: []
  type: TYPE_NORMAL
- en: Back in the browser, you should have already been taken to the **Creator Dashboard**
    page. Click the big red button that says **Create** **new project**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.20 – Click on Create new project to start creating the games page](img/B19358_12_21.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.20 – Click on Create new project to start creating the games page
  prefs: []
  type: TYPE_NORMAL
- en: Give the project the title `Survivor Game`.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.21 – Give the project the title Survivor Game](img/B19358_12_22.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.21 – Give the project the title Survivor Game
  prefs: []
  type: TYPE_NORMAL
- en: Under **Kind of project**, select **HTML**. This will make sure that people
    can play the game in their browser.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.22 – Set Kind of project to HTML](img/B19358_12_23.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.22 – Set Kind of project to HTML
  prefs: []
  type: TYPE_NORMAL
- en: Now, under **Uploads**, upload each export ZIP file.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.23 – Upload all exports](img/B19358_12_24.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.23 – Upload all exports
  prefs: []
  type: TYPE_NORMAL
- en: Next, indicate what platform each export file is for. This will help people
    understand which file they need to download for their platform.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.24 – For the Windows, macOS, and Linux platforms, we should indicate
    the platform](img/B19358_12_25.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.24 – For the Windows, macOS, and Linux platforms, we should indicate
    the platform
  prefs: []
  type: TYPE_NORMAL
- en: For the ZIP file that contains the web export, select **This file will be played
    in** **the browser**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.25 – For the Web export ZIP, indicate that it can be played in
    the browser](img/B19358_12_26.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.25 – For the Web export ZIP, indicate that it can be played in the
    browser
  prefs: []
  type: TYPE_NORMAL
- en: Under `1152` px × `648` px. This is the window size of our game on the Itch
    page. These dimensions are the exact dimensions from our project settings.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.26 – For the Web export ZIP, indicate that it can be played in
    the browser](img/B19358_12_27.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.26 – For the Web export ZIP, indicate that it can be played in the
    browser
  prefs: []
  type: TYPE_NORMAL
- en: Under **Frame options**, enable **SharedArrayBuffer support**; this is needed
    for Godot Engine 4 web exports.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.27 – Enable SharedArrayBuffer support](img/B19358_12_28.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.27 – Enable SharedArrayBuffer support
  prefs: []
  type: TYPE_NORMAL
- en: Click **Save &** **view page**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.28 – Click Save & view page](img/B19358_12_29.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.28 – Click Save & view page
  prefs: []
  type: TYPE_NORMAL
- en: We’ll be taken to a preview of what our page looks like. You’ll see that the
    game needs to load for the first time. To publish it publicly, we need to go back
    to the **Edit** page.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.29 – The first time, the game will take some extra time to load](img/B19358_12_30.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.29 – The first time, the game will take some extra time to load
  prefs: []
  type: TYPE_NORMAL
- en: This time around, select **Public** under **Visibility &** **access**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![Figure 12.30 – Select Public under Visibility & access](img/B19358_12_31.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.30 – Select Public under Visibility & access
  prefs: []
  type: TYPE_NORMAL
- en: Press **Save** again.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: The game now has its own page and is online for everyone to see! Send a link
    to your friend, and share it on social media – you published a game!
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 12.31 – Our game’s Itch.io page](img/B19358_12_32.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 12.31 – Our game’s Itch.io page
  prefs: []
  type: TYPE_NORMAL
- en: Pressing **Run game** will run our game within the browser, while using the
    download buttons at the bottom of the page help us download the game for any platform
    we desire.
  prefs: []
  type: TYPE_NORMAL
- en: We know how to do the basic exports for most computers and the web, but what
    about other platforms, such as mobile and consoles? Let’s look at that next.
  prefs: []
  type: TYPE_NORMAL
- en: Exporting our game to other platforms
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now that our game is published and everyone can play it, let’s take a quick
    look at how to export to other platforms that are not regular computers.
  prefs: []
  type: TYPE_NORMAL
- en: Mobile platforms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'For mobile devices, such as Android and iOS devices, the process is a little
    more intricate. However, once the process is set up, it will be very reliable.
    You can find guides to export to mobile platforms in the official Godot Engine
    documentation:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Exporting to Android: [https://docs.godotengine.org/en/stable/tutorials/export/exporting_for_android.html](https://docs.godotengine.org/en/stable/tutorials/export/exporting_for_android.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Exporting to iOS: [https://docs.godotengine.org/en/stable/tutorials/export/exporting_for_ios.html](https://docs.godotengine.org/en/stable/tutorials/export/exporting_for_ios.html)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Next to simply exporting the game, you’ll also need to account for the fact
    that mobile devices, mostly, don’t have external buttons, so the gameplay should
    account for touchscreen controls.
  prefs: []
  type: TYPE_NORMAL
- en: Consoles
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Let’s address the elephant in the room – what about exporting to consoles, such
    as **PlayStation**, **Xbox**, or **Nintendo** consoles?
  prefs: []
  type: TYPE_NORMAL
- en: Well, the good news is that it is possible! The bad news is that because the
    Godot Engine is open source and the code libraries that are needed to export to
    these consoles are closed source, export options for these cannot be included
    in the base Godot version. So, by default, they are not in the engine.
  prefs: []
  type: TYPE_NORMAL
- en: 'However, there are companies that provide a specialized Godot Engine version
    to export to consoles and/or help port a whole game. These companies include **W4**
    (a company that employs many of the original Godot Engine developers), **Pineapple
    Works**, and **Lone Wolf Technology**. You can find an up-to-date list on the
    Godot documentation site: [https://docs.godotengine.org/en/stable/tutorials/platform/consoles.html](https://docs.godotengine.org/en/stable/tutorials/platform/consoles.html).'
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we learned how to export our game to multiple computer platforms
    such as Windows, Mac, and Linux. We also saw how we can export for the web and
    upload the game to Itch.io. Now, we are ready to create a whole game and publish
    it!
  prefs: []
  type: TYPE_NORMAL
- en: In the next chapter, we’ll learn more advanced techniques in object-oriented
    programming.
  prefs: []
  type: TYPE_NORMAL
- en: Quiz time
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What are export templates?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Why did we enable **Embed PCK** when exporting for Windows and Linux?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To what platforms can we export using the Godot Engine?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
