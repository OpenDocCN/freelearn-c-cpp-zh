["```cpp\n// FirstProject.cpp : This file contains the 'main' function. Program execution begins and ends there.\n//\n\n#include \"pch.h\"\n#include <iostream>\n\nint main()\n{\n    std::cout << \"Hello World!\\n\"; \n}\n\n// Run program: Ctrl + F5 or Debug > Start Without Debugging menu\n// Debug program: F5 or Debug > Start Debugging menu\n\n// Tips for Getting Started: \n// 1\\. Use the Solution Explorer window to add/manage files\n// 2\\. Use the Team Explorer window to connect to source control\n// 3\\. Use the Output window to see build output and other messages\n// 4\\. Use the Error List window to view errors\n// 5\\. Go to Project > Add New Item to create new code files, or Project > Add Existing Item to add existing code files to the project\n// 6\\. In the future, to open this project again, go to File > Open > Project and select the .sln file\n```", "```cpp\n// Fill out your copyright notice in the Description page of Project Settings.\n\n#pragma once\n\n#include \"CoreMinimal.h\"\n#include \"GameFramework/GameModeBase.h\"\n#include \"Chapter_01GameModeBase.generated.h\"\n\n/**\n * \n */\nUCLASS()\nclass CHAPTER_01_API AChapter_01GameModeBase : public AGameModeBase\n{\n GENERATED_BODY()\npublic:\n void BeginPlay();\n\n};\n```", "```cpp\n// Fill out your copyright notice in the Description page of Project Settings.\n\n#include \"Chapter_01GameModeBase.h\"\n\nvoid AChapter_01GameModeBase::BeginPlay()\n{\n Super::BeginPlay();\n}\n```", "```cpp\nUE_LOG(LogTemp, Warning, TEXT(\"Some warning message\") );\n```", "```cpp\n#include \"Chapter_01GameModeBase.h\"\n\nvoid AChapter_01GameModeBase::BeginPlay()\n{\n  Super::BeginPlay();\n\n // Basic UE_LOG message\n UE_LOG(LogTemp, Warning, TEXT(\"Some warning message\") );\n}\n```", "```cpp\n#include \"Chapter_01GameModeBase.h\"\n\nvoid AChapter_01GameModeBase::BeginPlay()\n{\n  Super::BeginPlay();\n\n  // Basic UE_LOG message\n\n  UE_LOG(LogTemp, Warning, TEXT(\"Some warning message\") );\n\n  // UE_LOG message with arguments\n int intVar = 5;\n float floatVar = 3.7f;\n FString fstringVar = \"an fstring variable\";\n UE_LOG(LogTemp, Warning, TEXT(\"Text, %d %f %s\"), intVar, floatVar, *fstringVar );\n}\n```", "```cpp\nFString name = \"Tim\"; \nint32 mana = 450; \nFString string = FString::Printf( TEXT( \"Name = %s Mana = \n %d\" ), *name, mana );\n```", "```cpp\nFString name = \"Tim\"; \nint32 mana = 450; \nTArray< FStringFormatArg > args; \nargs.Add( FStringFormatArg( name ) ); \nargs.Add( FStringFormatArg( mana ) ); \nFString string = FString::Format( TEXT( \"Name = {0} Mana = \n {1}\" ), args );\n\nUE_LOG( LogTemp, Warning, TEXT( \"Your string: %s\" ), \n        *string );\n```"]