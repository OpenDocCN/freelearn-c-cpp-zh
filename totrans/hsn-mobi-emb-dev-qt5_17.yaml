- en: Deploying to Mobile and Embedded
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署到移动和嵌入式
- en: Mobile phones, tablets, and watches have their platform ways to deploy apps—usually
    through an app store. Deploying plugins and other libraries needs special attention.
    In this chapter, we will discuss alternative OSes, such as Jolla's Sailfish OS,
    as embedded devices have several options. I use a Raspberry Pi as an example for
    embedded Linux devices.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 手机、平板电脑和手表都有它们自己的平台方式来部署应用程序——通常是通过应用商店。部署插件和其他库需要特别注意。在本章中，我们将讨论其他操作系统，例如 Jolla
    的 Sailfish OS，因为嵌入式设备有几种选择。我使用 Raspberry Pi 作为嵌入式 Linux 设备的示例。
- en: For the major mobile phone app stores, you will need to digitally sign your
    package with a security certificate, which the systems use as a way to identify
    the author enough to trust the application.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 对于主要的移动手机应用商店，您需要使用安全证书对您的包进行数字签名，系统使用该证书作为识别作者并足以信任应用程序的方式。
- en: A certificate involves a public-private key pair. The private key is just that.
    You keep that private. The public certificate is publicly distributable. I won't
    go into the cryptography involved here. Qt Creator calls these certificates the
    keystore and you can use Qt Creator to generate these self-signed certificates.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 证书涉及一个公钥私钥对。私钥就是那个。您只需将其保密。公开证书可以公开分发。我不会深入讲解这里涉及的加密。Qt Creator将这些证书称为密钥库，您可以使用
    Qt Creator 生成这些自签名的证书。
- en: 'We will examine the following deployment targets:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将检查以下部署目标：
- en: For Android
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 Android
- en: For iOS
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于 iOS
- en: For alternative OSes
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于其他操作系统
- en: For embedded Linux
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对于嵌入式 Linux
- en: Keep backups of your digital certificates as you will not be able to update
    your applications in the stores if you lose them.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在备份您的数字证书时，因为如果您丢失它们，您将无法在商店中更新您的应用程序。
- en: Deployment for Android
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 部署到 Android
- en: Android does not need Google Play Store to install apps; it's just most convenient.
    There are other marketplaces to choose from, such as Aptoid, Yandex, F-Droid,
    and Amazon.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Android 不需要 Google Play Store 来安装应用程序；这只是一个最方便的方式。还有其他市场可供选择，例如 Aptoid、Yandex、F-Droid
    和 Amazon。
- en: You can also sideload apps. Sideloading is installing an app by transferring
    the package by USB, memory card, or over the internet, without the use of the
    official store.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以侧载应用程序。侧载是通过通过 USB、内存卡或通过互联网传输包来安装应用程序，而不使用官方商店。
- en: Qt Creator technically can sideload the package of the application you are working
    on. It can install the package, or simply run the executable on the device without
    installing it.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，Qt Creator 可以侧载您正在工作的应用程序的包。它可以安装该包，或者在不安装的情况下简单地运行设备上的可执行文件。
- en: Essentially, you can put a package file on your web server, have people download
    it to their phones or computers, and let them manually install it.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，您可以将包文件放在您的 web 服务器上，让人们将其下载到他们的手机或电脑上，并让他们手动安装。
- en: You could also make it available on Google Play Store, by officially publishing
    it. You need to be able to sign it with a certificate that you get from your developer
    account. This certificate for Android does not need to be signed by a certificate
    authority, but can be self-signed.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以通过官方发布使其在 Google Play Store 上可用。您需要能够使用从您的开发者账户获得的证书对其进行签名。这个 Android 证书不需要由证书颁发机构签名，但可以是自签名的。
- en: The package
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 包
- en: After developing and testing your application, you will need to make a package
    so people can install it. There are a few ways to make a package, via Qt Creator
    or by the command line.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发和测试您的应用程序之后，您需要制作一个包，以便人们可以安装它。制作包有几种方式，可以通过 Qt Creator 或通过命令行进行。
- en: androiddeployqt
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: androiddeployqt
- en: The command line tool named `androiddeployqt` comes with Qt Creator for the
    Android SDK. This is a command line tool to help build and sign an Android package.
    To view its help output, run `/path/to/androiddeployqt --help`. I am not going
    to go into the command line deployment other than to say it is available to use.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 命令行工具 `androiddeployqt` 随 Qt Creator 一起提供，用于 Android SDK。这是一个命令行工具，用于帮助构建和签名
    Android 包。要查看其帮助输出，请运行 `/path/to/androiddeployqt --help`。除了说明它可用之外，我不会深入讲解命令行部署。
- en: Qt Creator
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Qt Creator
- en: 'Digital certificates in Qt Creator are handled on the Build Settings page for
    your projects. Now, let''s build:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Qt Creator 中，数字证书在项目的构建设置页面上进行处理。现在，让我们构建：
- en: 'Projects | Build will get you to the Build Settings page. If you are making
    a release, make sure your project is in Release mode from the top of this page:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 项目 | 构建 将带您进入构建设置页面。如果您正在制作发布版本，请确保您的项目在此页面的顶部处于发布模式：
- en: '![](img/cc60086f-401b-4dae-bae2-f8d9b9ee95d7.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/cc60086f-401b-4dae-bae2-f8d9b9ee95d7.png)'
- en: 'Navigate to Build Steps | Build Android APK:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到构建步骤 | 构建Android APK：
- en: '![](img/4259b16a-acac-4ecd-878c-a2cda549bed9.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4259b16a-acac-4ecd-878c-a2cda549bed9.png)'
- en: 'You will need to click on Create Templates, which will create the `manifest.xml`
    file needed for the store. The two main entries are Package name and Application
    icon. I used Android Studio to create different sized icons, because it was the
    most efficient at creating several icons at once. I started with a large PNG.
    Be sure to select the correct SDK versions, or it will become an issue later on:'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要点击创建模板，这将创建商店所需的`manifest.xml`文件。两个主要条目是包名和应用程序图标。我使用Android Studio创建不同尺寸的图标，因为它在同时创建多个图标时效率最高。我从一个大PNG开始。务必选择正确的SDK版本，否则以后可能会出现问题：
- en: '![](img/b520da3d-9632-4120-b084-c8845de0a982.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b520da3d-9632-4120-b084-c8845de0a982.png)'
- en: 'You also need to generate certificates. In the Build Steps page, find the Sign
    package section. The button on the very right of the Keystore entry, which says
    Create..., will bring up this dialog:'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还需要生成证书。在构建步骤页面中，找到签名包部分。密钥库条目最右侧的按钮，上面写着创建...，将弹出此对话框：
- en: '![](img/5229d052-7a5a-4fde-91e5-9478eb6286a7.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5229d052-7a5a-4fde-91e5-9478eb6286a7.png)'
- en: You will need to supply a Password for both Keystore and Certificate, which
    are the private and public keys.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要为密钥库和证书提供密码，它们是私钥和公钥。
- en: You also need to supply your name, Organization, City, State, and Two-letter
    country code.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还需要提供您的姓名、组织、城市、州和两位字母的国家代码。
- en: Do another build and it will create a signed Android package that you can install
    or upload to the store. You are now ready to test your app in a closed, internal,
    or open test track. Qt Creator will not help you there.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 进行另一个构建，它将创建一个已签名的Android包，您可以安装或上传到商店。现在您已经准备好在封闭的、内部的或公开的测试轨道中测试您的应用了。Qt Creator在那里不会帮到您。
- en: Test track
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试轨道
- en: You can set up an internal test track for testers in your organization. If you
    are a one-stop shop, you are the tester!
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以为您的组织中的测试者设置一个内部测试轨道。如果您是一家一站式商店，那么您就是测试者！
- en: Internal tests
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 内部测试
- en: 'You can have up to 100 internal testers. To create a testers list on Play Console,
    navigate to:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 您最多可以有100名内部测试者。要在Play Console上创建测试者列表，请导航到：
- en: Settings | Manage testers | CREATE LIST
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 设置 | 管理测试者 | 创建列表
- en: 'You will need to provide the following information:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要提供以下信息：
- en: List name
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 列表名称
- en: Email addresses (you can upload a csv email list too!)
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子邮件地址（您也可以上传csv电子邮件列表！）
- en: 'You can then add testers to an app (which you may or may not have previously
    added). Now select your app and navigate to App releases, and select one of the
    following:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以添加测试者到应用（您可能之前已经添加或尚未添加）。现在选择您的应用，导航到应用发布，并选择以下选项之一：
- en: 'Internal: An internal closed track'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内部：一个内部封闭轨道
- en: 'Alpha: A closed track'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首次发布：一个封闭轨道
- en: 'Beta: An open track'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试版：一个公开轨道
- en: 'Production: Release'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生产：发布
- en: Click on Manage (Internal) | Create Release
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 点击管理（内部）| 创建发布
- en: 'You need to make sure your account is set up, by providing the following items:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要确保您的账户已设置好，提供以下项目：
- en: Store Listing—screenshots
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 商店列表—截图
- en: Hi-res icon (512 x 512 png)
  id: totrans-49
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高分辨率图标（512 x 512 png）
- en: Feature Graphic (1,024 x 500 jpg, png)
  id: totrans-50
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特色图形（1,024 x 500 jpg, png）
- en: Content rating
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 内容评级
- en: Pricing and distribution
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定价和分发
- en: You need to upload an app package before you add testers. Once you upload your
    package app, you will need to select Review.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在添加测试者之前，您需要上传一个应用包。一旦您上传了包应用，您将需要选择“审查”。
- en: You will then be asked to select your testers list when you navigate back to
    the App releases page. You should receive a URL to share with your tester that
    they can use to download and install your internally-tested application package.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当您返回到应用发布页面时，您将被要求选择您的测试者列表。您应该会收到一个URL，可以与您的测试者分享，以便他们可以下载并安装您内部测试的应用程序包。
- en: 'That red icon at the top of the page means something needs to be checked.:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 页面顶部的那个红色图标意味着需要检查某些内容：
- en: '![](img/fe17f4e7-c342-4536-a563-5b8a16718b35.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/fe17f4e7-c342-4536-a563-5b8a16718b35.png)'
- en: In my case, I hadn't actually selected any testers to this release yet.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的情况下，我实际上还没有为这次发布选择任何测试者。
- en: 'When you add to the list of testers, it should look similar to this:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 当您向测试者列表添加内容时，它应该看起来像这样：
- en: '![](img/441ba5b3-76aa-4d6b-9edb-528f92d0eef1.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/441ba5b3-76aa-4d6b-9edb-528f92d0eef1.png)'
- en: 'Here is what your testers will see in the Google Play Store:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 您的测试者将在Google Play商店看到以下内容：
- en: '![](img/34f25046-f7bd-4be8-bcc9-22349032d3ce.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/34f25046-f7bd-4be8-bcc9-22349032d3ce.png)'
- en: Deployment on iOS is very similar, so let's look at that.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在iOS上的部署非常相似，所以让我们看看那个。
- en: Deployment for iOS
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: iOS部署
- en: 'The iOS store is perhaps the most restrictive and complicated of all the mobile
    app stores to submit an app to. It also has more exhaustive submission guidelines,
    such as: it should not replicate the functionality of native applications. The
    process to get to the point of submitting an app is also more complicated.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: iOS 商店可能是所有移动应用商店中最具限制性和复杂的，要提交应用。它也有更详尽的提交指南，例如：不应复制原生应用的功能。到达提交应用这一点的过程也更加复杂。
- en: The package
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 包
- en: 'Qt Creator comes with support for creating and signing iOS packages. As with
    Android, you will need certificates from your developer account. This is what
    you see when you log into the developer account at Apple:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: Qt Creator 支持创建和签名 iOS 包。与 Android 一样，您需要从您的开发者账户获取证书。这是您在 Apple 开发者账户登录时看到的：
- en: '![](img/8e06b7cc-dbe1-4bd2-a8bb-bdac7e502927.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8e06b7cc-dbe1-4bd2-a8bb-bdac7e502927.png)'
- en: 'Once in your developer account, click on the icon labelled Certificates, Identifiers
    & Profiles to add certificates. Notice the list under Certificates at the left:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦进入您的开发者账户，点击标有“证书、标识符和配置文件”的图标以添加证书。注意左侧的证书列表：
- en: '![](img/1158d39c-545e-4369-bf22-811bb0495ec9.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1158d39c-545e-4369-bf22-811bb0495ec9.png)'
- en: 'There are two types of Certificates: Development and Production. Production
    certificates are for release distribution. If you do not have Production certificates,
    add one now by clicking on the + icon:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种类型的证书：开发证书和生产证书。生产证书用于发布分发。如果您没有生产证书，现在可以通过点击加号图标添加一个。
- en: '![](img/6676edda-60b5-4633-be35-477b482d7f44.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6676edda-60b5-4633-be35-477b482d7f44.png)'
- en: 'That will open up the following dialog:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开以下对话框：
- en: '![](img/f614f553-fa2b-4d3d-8530-97cd0913a7b2.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f614f553-fa2b-4d3d-8530-97cd0913a7b2.png)'
- en: Select App Store and Ad Hoc. Ad Hoc means you can only install this on a few
    testing devices.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 选择“App Store”和“Ad Hoc”。Ad Hoc 意味着您只能在少数测试设备上安装。
- en: 'Next, under Identifiers, select **App IDs**:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，在“标识符”下，选择**App IDs**：
- en: '![](img/32808075-68c2-4024-b4cf-66a13b2a9dd4.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/32808075-68c2-4024-b4cf-66a13b2a9dd4.png)'
- en: 'There are two types of App IDs:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种类型的 App ID：
- en: '*Wildcard*, which can be used for multiple apps if they do not require iCloud
    or in-app purchases.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*通配符*，如果应用不需要 iCloud 或应用内购买，则可用于多个应用。'
- en: '*Explicit*, which is used for in-app purchases per application. You will need
    one of these for each app you have that uses in-app purchasing.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*显式*，用于每个应用的应用内购买。如果您有使用应用内购买的应用，您将需要其中之一。'
- en: 'You also need Provisioning Profiles:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要配置文件：
- en: '![](img/e7736952-884c-44cb-9ab1-58abd4ae3da3.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e7736952-884c-44cb-9ab1-58abd4ae3da3.png)'
- en: As you can see here, there are different types of provisioning profiles. Under
    Distribution, select App Store then the Continue button at the bottom of the page. Select
    the App ID you created previously. Select the Certificate also previously created.
    You will need to name this profile, and it must match the Bundle Identifier for
    your package. Download this and put it somewhere you remember; you will need this
    to sign the app through XCode.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，这里有不同类型的配置文件。在“分发”下选择“App Store”，然后点击页面底部的“继续”按钮。选择您之前创建的 App ID。选择也之前创建的证书。您需要为此配置文件命名，并且它必须与您的包的
    Bundle Identifier 匹配。下载此文件并将其保存在您记得的地方；您将需要此文件通过 XCode 对应用进行签名。
- en: You will also need an App ID, so select App IDs from the left and create a new
    one.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 您还需要 App ID，因此从左侧选择 App IDs 并创建一个新的。
- en: Now we can sign a release mode package.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以对发布模式的包进行签名。
- en: Qt Creator
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Qt Creator
- en: Qt Creator cannot create iOS packages itself. We need to use the Xcode project
    file that Qt Creator generates in order to create the package using Xcode.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: Qt Creator 本身无法创建 iOS 包。我们需要使用 Qt Creator 生成的 Xcode 项目文件来使用 Xcode 创建包。
- en: Select a Release build and then run `qmake` to create the Xcode project file
    we will use.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 选择发布构建，然后运行 `qmake` 以创建我们将使用的 Xcode 项目文件。
- en: Xcode
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Xcode
- en: From the build directory, open the resulting `<target>.xcodeproj` in Xcode.
    Select the project from the left to open up the project settings.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 从构建目录中，在 Xcode 中打开生成的 `<target>.xcodeproj` 文件。从左侧选择项目以打开项目设置。
- en: 'Click on General and then unselect Automatically manage signing to be able
    to manually select the package signing:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“通用”，然后取消选择“自动管理签名”，以便能够手动选择包签名：
- en: '![](img/ce97988e-3681-465e-9e13-58faa7b578bc.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ce97988e-3681-465e-9e13-58faa7b578bc.png)'
- en: 'You can import the profile by selecting Import Profile... from the drop-down
    list that is labeled Provisioning Profile, and then select Import Profile....
    Once the file dialog opens, you can navigate to where you put the `<profilename>.mobileprovision`
    file:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过从标记为“配置文件”的下拉列表中选择“导入配置文件...”来导入配置文件，然后选择“导入配置文件...”。一旦文件对话框打开，您可以导航到您放置`<profilename>.mobileprovision`文件的位置：
- en: '![](img/2e63d252-9933-4248-b512-dcd53bc6fda8.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/2e63d252-9933-4248-b512-dcd53bc6fda8.png)'
- en: You can do this for both Signing (Debug) and Signing (Release).
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以为签名（调试）和签名（发布）都这样做。
- en: 'Your Bundle Identifier must match the name of the provisioning profile. If
    it doesn''t, it will alert you:'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 您的Bundle标识符必须与配置文件名称匹配。如果不匹配，它会提醒您：
- en: '![](img/9dd88fde-728d-4f92-85f5-af6d71652526.png)'
  id: totrans-96
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9dd88fde-728d-4f92-85f5-af6d71652526.png)'
- en: 'The certificates have been applied:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 证书已经申请：
- en: '![](img/e32c019f-fc21-4c87-9185-d86dd740ed34.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e32c019f-fc21-4c87-9185-d86dd740ed34.png)'
- en: Test and build the package. It should ask you for your administrator password
    when it signs the package.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 测试并构建包。在签名包时，它应该会要求您输入管理员密码。
- en: To build a release mode package, navigate to Product | Scheme | Edit Scheme
    | Info | Build Configuration.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 要构建发布模式的包，请导航到产品 | 方案 | 编辑方案 | 信息 | 构建配置。
- en: Select Release and then build the package.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 选择发布然后构建包。
- en: 'From here, you need to grab your web browser again and navigate to the App
    Store Connect, select **My Apps**, and click on the + to create a New App:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，您需要再次打开您的网络浏览器并导航到App Store Connect，选择**我的应用**，然后点击+创建新应用：
- en: '![](img/275b8f25-d0f2-4a9d-96f9-3fc5f5e3f244.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/275b8f25-d0f2-4a9d-96f9-3fc5f5e3f244.png)'
- en: From here, fill out App Information, Pricing, and Availability.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，填写应用信息、定价和可用性。
- en: Next, add screenshots, icons, store text, and other items for the apps page
    and the App Store.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为应用页面和App Store添加截图、图标、商店文本和其他项目。
- en: To upload your app from Xcode, select Product | Archive.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 要从Xcode上传您的应用，请选择产品 | 归档。
- en: This will create the package and open the Archives window.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 这将创建包并打开存档窗口。
- en: 'You should validate the package before uploading it to the App Store, so select
    Validate App, then select profile and the certificates:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在将包上传到App Store之前，您应该验证包，因此请选择“验证应用”，然后选择配置文件和证书：
- en: '![](img/718f21e1-6790-42ff-965b-ebe8a3854b06.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/718f21e1-6790-42ff-965b-ebe8a3854b06.png)'
- en: Fix any issues you may have. This also includes adding screenshots, app icons,
    and so on for the storefront for the app. Then you can click the Distribute App button.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 修复您可能遇到的所有问题。这还包括为应用商店的店面添加截图、应用图标等。然后您可以点击“分发应用”按钮。
- en: Alternative OSes
  id: totrans-111
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 替代操作系统
- en: 'There are other mobile and embedded OSes available that you may or may not
    have heard about, such as my favorite alternative mobile OS: Jolla''s Sailfish.
    Another operating system is UBports, which is an Open Source version of Canonical''s
    now-defunct mobile phone OS, Ubuntu Touch.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 有其他可用的移动和嵌入式操作系统，您可能听说过，也可能没有听说过，例如我最喜欢的替代移动操作系统：Jolla的Sailfish。另一个操作系统是UBports，它是Canonical现在已停用的移动手机操作系统Ubuntu
    Touch的开源版本。
- en: Sailfish OS
  id: totrans-113
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Sailfish OS
- en: Sailfish OS is a continuation of Nokia's MeeGo, which was a continuation of
    Maemo.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: Sailfish OS是诺基亚MeeGo的延续，而MeeGo又是Maemo的延续。
- en: The UI is developed by Jolla, and the base OS is open source Mer, which is developed
    by Jolla and the community.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 用户界面由Jolla开发，基础操作系统是开源的Mer，由Jolla和社区开发。
- en: 'Jolla has an app store they named Harbour ([http://harbour.jolla.com](http://harbour.jolla.com)).
    At this time, you cannot sell apps through this app store:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: Jolla有一个名为Harbour的应用商店([http://harbour.jolla.com](http://harbour.jolla.com))。目前，您无法通过这个应用商店销售应用：
- en: '![](img/3b80ce25-022e-4522-a811-993aede9f94f.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3b80ce25-022e-4522-a811-993aede9f94f.png)'
- en: 'This is what my developer page looks like:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我的开发者页面看起来像：
- en: '![](img/53a4b008-a2bc-48d5-afb7-d455b8db017d.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/53a4b008-a2bc-48d5-afb7-d455b8db017d.png)'
- en: Yes, it has been five years since I have updated it.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 是的，自从我上次更新它以来已经过去了五年。
- en: 'You can install Jolla onto certain Android phones—or if you are lucky enough
    to have actual Jolla hardware or perhaps a phone that comes with Jolla installed,
    you have access to Harbour through the Store app. Here is the view of the Top
    apps page:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以将Jolla安装到某些Android手机上——如果您足够幸运拥有实际的Jolla硬件，或者如果您有一部预装了Jolla的手机，您可以通过商店应用访问Harbour。以下是顶级应用页面的视图：
- en: '![](img/90c6fa09-d95f-49d1-8a68-03a4de6ae1d8.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/90c6fa09-d95f-49d1-8a68-03a4de6ae1d8.png)'
- en: 'I have an old app in that store named Compass that I need to update to the
    new Sailfish OS version 3:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在那个商店里，我有一个名为Compass的老应用，我需要将其更新到新的Sailfish OS版本3：
- en: '![](img/bdb1a474-9b30-45d3-aba4-38eba4e03350.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/bdb1a474-9b30-45d3-aba4-38eba4e03350.png)'
- en: I need to download the Application SDK from [https://releases.sailfishos.org/sdk/installers/1.24/](https://releases.sailfishos.org/sdk/installers/1.24/).
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 我需要从 [https://releases.sailfishos.org/sdk/installers/1.24/](https://releases.sailfishos.org/sdk/installers/1.24/)
    下载应用程序 SDK。
- en: 'I install it on my Linux development machine as follows:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我将其安装在以下 Linux 开发机上：
- en: '[PRE0]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The Sailfish OS SDK is now installed!
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: Sailfish OS SDK 已安装！
- en: '![](img/30c4bfde-de9d-466f-8a16-e5dd16b3c58b.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/30c4bfde-de9d-466f-8a16-e5dd16b3c58b.png)'
- en: 'After Qt Creator opens with the Sailfish SDK, click on Sailfish OS from the
    icons on the left:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Qt Creator 打开并带有 Sailfish SDK 后，点击左侧的 Sailfish OS 图标：
- en: '![](img/3002229b-0519-4003-bb03-c529c33f21a0.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/3002229b-0519-4003-bb03-c529c33f21a0.png)'
- en: 'You should see a message that says that the build engine is not running, so
    we need to start it. Click on Start the build engine!:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 您应该会看到一个消息说构建引擎没有运行，因此我们需要启动它。点击“启动构建引擎！”：
- en: '![](img/376220ef-6daf-42ff-9aa0-1ac9555d8342.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/376220ef-6daf-42ff-9aa0-1ac9555d8342.png)'
- en: Once you do that, you get into the Sailfish Control Centre, where you can add
    components into the SDK, and apply updates if needed.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 完成上述操作后，您将进入 Sailfish 控制中心，在那里您可以向 SDK 添加组件，并在需要时应用更新。
- en: Set up your device, if you have one, and navigate to Tools | Options | Devices.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有设备，请设置您的设备，并导航到“工具”|“选项”|“设备”。
- en: Once there, click on Tools | Options | Kits and select the armv7hl kit.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 到达那里后，点击“工具”|“选项”|“套件”，并选择 armv7hl 套件。
- en: In the Devices options section, make sure that the Jolla device that you set
    up previously is selected and not the emulator, unless that is what you want to
    run the app on.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在“设备选项”部分，请确保选择您之前设置的 Jolla 设备而不是模拟器，除非您想将应用运行在模拟器上。
- en: The Jolla SDK build engine runs in a Virtual machine, so it can be used from
    any platform. The IDE it uses is Qt Creator. Jolla is unique in that you can run
    native apps for Jolla OS, but also it can run Android Apps. The gotcha about Android
    support is that there is no Google Play API.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: Jolla SDK 构建引擎在虚拟机中运行，因此可以从任何平台使用。它使用的 IDE 是 Qt Creator。Jolla 的独特之处在于您不仅可以运行
    Jolla OS 的原生应用，还可以运行 Android 应用。关于 Android 支持的注意事项是，没有 Google Play API。
- en: Now that the build engine (cross compiler) is running, we can build our app,
    test, and then make a package to upload to Harbour.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，构建引擎（交叉编译器）正在运行，我们可以构建我们的应用，测试，然后制作一个包上传到 Harbour。
- en: 'From the Projects | Run settings, make sure either Deploy by Copying Binaries or
    Deploy As RPM Package is selected for Method. If you are running it without installing
    a package, select the Copying method. Here is my updated Compass app running on
    the Jolla phone:'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 从“项目”|“运行设置”中，确保选择了“通过复制二进制文件部署”或“作为 RPM 包部署”作为方法。如果您在没有安装包的情况下运行它，请选择“复制方法”。以下是我在
    Jolla 手机上运行的更新后的 Compass 应用程序：
- en: '![](img/5a2051d2-468b-4d36-9967-91fa018c8463.png)'
  id: totrans-141
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5a2051d2-468b-4d36-9967-91fa018c8463.png)'
- en: Once you have built the release package, navigate to Sailfish OS | Publishing,
    click on the RPM validator, and select your package file to validate.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦构建了发布包，导航到 Sailfish OS | 发布，点击 RPM 验证器，并选择您的包文件进行验证。
- en: The Jolla Store interface is the least complicated of the mobile app stores
    here, in part because there are no sales of apps.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: Jolla 商店界面是这里移动应用商店中最简单的，部分原因是因为这里没有应用销售。
- en: 'Click on Add app. You will have to fill out the following:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 点击“添加应用”。您需要填写以下内容：
- en: Title
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 标题
- en: 'Details:'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 详细信息：
- en: description
  id: totrans-147
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 描述
- en: summary
  id: totrans-148
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 摘要
- en: recent changes
  id: totrans-149
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 近期更改
- en: Categorization
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分类
- en: Compatibility
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 兼容性
- en: Visual Assts (screenshots, icons)
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 视觉辅助（截图、图标）
- en: Contact details
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 联系方式
- en: Any message to QA
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 任何给 QA 的信息
- en: 'Once you submit your application to Jolla''s Harbour store, you will see something
    like this image:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您将应用程序提交到 Jolla 的 Harbour 商店，您将看到类似以下图片的内容：
- en: '![](img/4e5fb11b-d6c6-49fa-9c70-04f850fd776c.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4e5fb11b-d6c6-49fa-9c70-04f850fd776c.png)'
- en: QA will check the package and either reject or accept it.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: QA 将检查包，要么拒绝要么接受它。
- en: UBports
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: UBports
- en: UBports is a convergent OS based on Canonical's now-defunct mobile offering,
    Ubuntu Touch. Convergent means it is designed to run on desktops and mobile devices.
    It runs on various mobile phones and tablets, and the UI is based on Qt and QML.
    I run mine on a Nexus 4\. I won't go into detail, but I did wanted to mention
    it. More information can be found on: [https://ubports.com/](https://ubports.com/)
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: UBports 是基于 Canonical 现已停用的移动产品 Ubuntu Touch 的融合操作系统。融合意味着它被设计为可以在桌面和移动设备上运行。它运行在多种手机和平板电脑上，UI
    基于 Qt 和 QML。我在 Nexus 4 上运行了我的系统。我不会详细介绍，但我想提一下。更多信息可以在：[https://ubports.com/](https://ubports.com/)
    上找到。
- en: There is a simple installer for putting UBports on a supported device at [https://ubuntu-touch.io/get-ut](https://ubuntu-touch.io/get-ut).
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 在[https://ubuntu-touch.io/get-ut](https://ubuntu-touch.io/get-ut)有一个简单的安装程序，可以将UBports安装到支持的设备上。
- en: You can grab the SDK at [https://docs.ubports.com/en/latest/appdev/index.html](https://docs.ubports.com/en/latest/appdev/index.html).
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[https://docs.ubports.com/en/latest/appdev/index.html](https://docs.ubports.com/en/latest/appdev/index.html)获取SDK。
- en: Clickable
  id: totrans-162
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 可点击的
- en: The UBports SDK produces click packages from the command line. The Ubuntu Touch
    SDK IDE is no longer supported by Canonical or UBports. The store is called OpenStore.
    You need an account, and the URL to submit apps is [https://open-store.io/submit](https://open-store.io/submit).
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: UBports SDK可以从命令行生成click包。Ubuntu Touch SDK IDE不再由Canonical或UBports支持。商店被称为OpenStore。你需要一个账户，提交应用的URL是[https://open-store.io/submit](https://open-store.io/submit)。
- en: Embedded Linux
  id: totrans-164
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 嵌入式Linux
- en: Embedded Linux devices come in many different sizes and varieties. Some may
    have app stores, but most don't. There are various methods to get the OS and apps
    on the devices.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 嵌入式Linux设备有多种不同的尺寸和种类。一些可能有应用商店，但大多数没有。有各种方法将操作系统和应用程序安装到设备上。
- en: OS deployment
  id: totrans-166
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 操作系统部署
- en: The deployment of the operating system will on your device, as some embedded
    devices have very specific methods in which the operating system is deployed to
    the device. In the case of Raspberry Pi, it is easy to copy the image to an SD
    card and put that into the RPI and boot it up.
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统的部署将直接在你的设备上进行，因为一些嵌入式设备有非常特定的方法来部署操作系统到设备上。以树莓派为例，将镜像复制到SD卡并放入RPI中启动非常简单。
- en: 'I have a script named `writeIso` that I use; it consists of two lines:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我有一个名为`writeIso`的脚本，我使用它；它由两行组成：
- en: '[PRE1]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'I run it something like this:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 我运行它的方式如下：
- en: '`./writeIso /path/to/deviceImage.img /dev/sdc`'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: '`./writeIso /path/to/deviceImage.img /dev/sdc`'
- en: Other devices may have a `flash` method, whereby the image gets copied directly
    onto the device. This can be as low-level as having to use JTAG, or it could be
    higher-level, such as using Android's `adb` command. Sometimes, you have to write
    the image to an SD card, put that into the device, and then, with some combination
    of keys or buttons, flash that image into the machine's ROM.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 其他设备可能有一种`flash`方法，即镜像直接复制到设备上。这可能需要使用JTAG这样的低级方法，或者可能是使用Android的`adb`命令这样的高级方法。有时，你必须将镜像写入SD卡，将其放入设备中，然后通过一些按键或按钮的组合将镜像闪存到机器的ROM中。
- en: App deployment
  id: totrans-173
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 应用部署
- en: With a distribution with a package manager such as Raspbian or Yocto, you can
    easily distribute your application, either by installing directly on the device
    or adding to the package repository. In the case of Yocto, you can have a local
    repository to distribute.
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 使用带有包管理器的发行版，如Raspbian或Yocto，你可以轻松地分发你的应用程序，无论是直接在设备上安装还是添加到包仓库。在Yocto的情况下，你可以有一个本地仓库来分发。
- en: To get the package file onto the device, you can use Qt Creator and set up a
    generic Linux device. This requires an SSH server running on the device and some
    kind of network connection.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 要将包文件安装到设备上，你可以使用Qt Creator并设置一个通用的Linux设备。这需要在设备上运行一个SSH服务器，并建立某种类型的网络连接。
- en: You can also use the `scp` command to copy packages and/or binaries to the device.
    This also requires an SSH server.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以使用`scp`命令将包和/或二进制文件复制到设备上。这也需要一个SSH服务器。
- en: Summary
  id: totrans-177
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: There are a few different methods for OS and app deployment. Mobile phones have
    app stores, which also have various methods to submit apps. Usually, these are
    done though a web browser. You should be able to publish apps to the Android,
    iOS, and alternative OS, such as Jolla's Sailfish, app stores.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统和应用程序的部署有几种不同的方法。手机有应用商店，它们也有各种提交应用程序的方法。通常，这些操作是通过网页浏览器完成的。你应该能够将应用程序发布到Android、iOS和替代操作系统，如Jolla的Sailfish应用商店。
- en: You should also be able to distribute your app onto embedded devices, such as
    Raspberry Pi.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 你也应该能够将你的应用程序分发到嵌入式设备上，例如树莓派。
- en: In the next chapter, we will traverse into the brand new technology of Qt for
    WebAssembly that allows Qt applications to run in a web browser.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨Qt for WebAssembly这项全新的技术，它允许Qt应用程序在网页浏览器中运行。
