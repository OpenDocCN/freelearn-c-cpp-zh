- en: 'Part 2: From Source to Machine Code Generation'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, you will continue to learn how to develop your own compiler.
    You will begin by constructing the frontend, which reads the source file and creates
    an abstract syntax tree of it. Then, you will learn how to generate LLVM IR from
    the source file. Using the optimization capabilities of LLVM, you will then create
    optimized machine code. Additionally, you will explore several advanced topics,
    including generating LLVM IR for object-oriented language constructs and adding
    debug metadata.
  prefs: []
  type: TYPE_NORMAL
- en: 'This section comprises the following chapters:'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B19561_03.xhtml#_idTextAnchor055), *Turning the Source File into
    an Abstract Syntax Tree*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B19561_04.xhtml#_idTextAnchor068), *Basics of IR Generation*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B19561_05.xhtml#_idTextAnchor091), *IR Generation for High-Level
    Language Constructs*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B19561_06.xhtml#_idTextAnchor101), *Advanced IR Generation*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B19561_07.xhtml#_idTextAnchor117), *Optimizing IR*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
