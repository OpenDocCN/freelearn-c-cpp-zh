["```cpp\n#include <QApplication>\n#include <QMainWindow>\n#include <QLabel>\nint main(int argc, char *argv[])\n{\n   QApplication a(argc, argv);\n   QMainWindow mainWindow;\n   mainWindow.show();\n   return a.exec();\n}\n```", "```cpp\n#ifndef MAINWINDOW_H\n#define MAINWINDOW_H\n#include <QMainWindow>\n#include <QLabel>\nclass MainWindow : public QMainWindow\n{\n   Q_OBJECT\n   public:\n       MainWindow();\n};\n#endif\n```", "```cpp\npublic:\n   MainWindow();\n```", "```cpp\n#include \"mainwindow.h\"\nMainWindow::MainWindow()\n{\n   setWindowTitle(\"Main Window\");\n   resize(400, 700);\n   QLabel *mainLabel = new QLabel(\"Main Widget\");\n   setCentralWidget(mainLabel);\n   mainLabel->setAlignment(Qt::AlignCenter);\n}\n```", "```cpp\n#include <QApplication>\n#include \"mainwindow.h\"\nint main(int argc, char *argv[])\n{\n   QApplication app(argc, argv);\n   MainWindow mainwindow;\n   mainwindow.show();\n   return app.exec();\n}\n```", "```cpp\n% qmake -project\n```", "```cpp\n% qmake\n% make\n```", "```cpp\nHEADERS += mainwindow.h\nSOURCES += main.cpp mainwindow.cpp\n```", "```cpp\n% ./classSimpleWindow\n```", "```cpp\n% ./classSimpleWindow.app/Contents/MacOS/classSimpleWindow\n```", "```cpp\n#ifndef MAINWINDOW_H\n#define MAINWINDOW_H\n#include <QMainWindow>\n#include <QApplication>\n#include <QAction>\n#include <QtGui>\n#include <QAction>\n#include <QMenuBar>\n#include <QMenu>\n#include <Qt>\nclass MainWindow : public QMainWindow\n{\n   Q_OBJECT\n   public:\n       MainWindow();\n   private slots:\n   private:\n       // Menus\n       QMenu *fileMenu;\n       QMenu *helpMenu;\n       // Actions\n       QAction *quitAction;\n       QAction *aboutAction;\n       QAction *saveAction;\n       QAction *cancelAction;\n       QAction *openAction;\n       QAction *newAction;\n       QAction *aboutQtAction;\n\n};\n#endif\n```", "```cpp\n#include \"mainwindow.h\"\nMainWindow::MainWindow()\n{\n   setWindowTitle(\"SRM System\");\n   setFixedSize(500, 500);\n   QPixmap newIcon(\"new.png\");\n   QPixmap openIcon(\"open.png\");\n   QPixmap closeIcon(\"close.png\");\n   // Setup File Menu\n   fileMenu = menuBar()->addMenu(\"&File\");\n   quitAction = new QAction(closeIcon, \"Quit\", this);\n   quitAction->setShortcuts(QKeySequence::Quit);\n   newAction = new QAction(newIcon, \"&New\", this);\n   newAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_C));\n   openAction = new QAction(openIcon, \"&New\", this);\n   openAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_O));\n   fileMenu->addAction(newAction);\n   fileMenu->addAction(openAction);\n   fileMenu->addSeparator();\n   fileMenu->addAction(quitAction);\n   helpMenu = menuBar()->addMenu(\"Help\");\n   aboutAction = new QAction(\"About\", this);\n   aboutAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_H));\n   helpMenu->addAction(aboutAction);\n   // Setup Signals and Slots\n   connect(quitAction, &QAction::triggered, this, &QApplication::quit);\n}\n```", "```cpp\nQPixmap newIcon(\"new.png\");\nQPixmap openIcon(\"open.png\");\nQPixmap closeIcon(\"close.png\");\n```", "```cpp\nfileMenu = menuBar()->addMenu(\"&File\");\nquitAction = new QAction(closeIcon, \"Quit\", this);\nquitAction->setShortcuts(QKeySequence::Quit);\n```", "```cpp\nfileMenu->addAction(newAction);\nfileMenu->addAction(openAction);\nfileMenu->addSeparator();\nfileMenu->addAction(quitAction);\n```", "```cpp\nhelpMenu = menuBar()->addMenu(\"Help\");\naboutAction = new QAction(\"About\", this);\naboutAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_H));\nhelpMenu->addAction(aboutAction);\n```", "```cpp\nconnect(quitAction, &QAction::triggered, this, &QApplication::quit);\n```", "```cpp\nquitAction->setShortcuts(QKeySequence::Quit);\n```", "```cpp\n#include <QApplication>\n#include \"mainwindow.h\"\nint main(int argc, char *argv[])\n{\n   QApplication app(argc, argv);\n   QCoreApplication::setAttribute(Qt::AA_DontUseNativeMenuBar); //\n   MainWindow mainwindow;\n   mainwindow.show();\n   return app.exec();\n}\n```", "```cpp\n#ifndef MAINWINDOW_H\n#define MAINWINDOW_H\n#include <QMainWindow>\n#include <QApplication>\n#include <QAction>\n#include <QPushButton>\n#include <QAction>\n#include <QMenuBar>\n#include <QMenu>\n#include <QtGui>\n#include <Qt>\n#include <QToolBar>\n#include <QTableView>\nclass MainWindow : public QMainWindow\n{\n   Q_OBJECT\n   public:\n       MainWindow();\n   private slots:\n   private:\n       // Menus\n       QMenu *fileMenu;\n       QMenu *helpMenu;\n       // Actions\n       QAction *quitAction;\n       QAction *aboutAction;\n       QAction *saveAction;\n       QAction *cancelAction;\n       QAction *openAction;\n       QAction *newAction;\n       QAction *aboutQtAction;\n       QToolBar *toolbar;\n       QAction *newToolBarAction;\n       QAction *openToolBarAction;\n       QAction *closeToolBarAction;\n};\n#endif\n```", "```cpp\n#include \"mainwindow.h\"\nMainWindow::MainWindow()\n{\n   setWindowTitle(\"Form in Window\");\n   setFixedSize(500, 500);\n   QPixmap newIcon(\"new.png\");\n   QPixmap openIcon(\"open.png\");\n   QPixmap closeIcon(\"close.png\");\n   // Setup File Menu\n   fileMenu = menuBar()->addMenu(\"&File\");\n   quitAction = new QAction(closeIcon, \"Quit\", this);\n   quitAction->setShortcuts(QKeySequence::Quit);\n   newAction = new QAction(newIcon, \"&New\", this);\n   newAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_C));\n   openAction = new QAction(openIcon, \"&New\", this);\n   openAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_O));\n   fileMenu->addAction(newAction);\n   fileMenu->addAction(openAction);\n   fileMenu->addSeparator();\n   fileMenu->addAction(quitAction);\n   helpMenu = menuBar()->addMenu(\"Help\");\n   aboutAction = new QAction(\"About\", this);\n   aboutAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_H));\n   helpMenu->addAction(aboutAction);\n   // Setup Tool bar menu\n   toolbar = addToolBar(\"main toolbar\");\n   // toolbar->setMovable( false );\n   newToolBarAction = toolbar->addAction(QIcon(newIcon), \"New File\");\n   openToolBarAction = toolbar->addAction(QIcon(openIcon), \"Open File\");\n   toolbar->addSeparator();\n   closeToolBarAction = toolbar->addAction(QIcon(closeIcon), \"Quit Application\");\n   // Setup Signals and Slots\n   connect(quitAction, &QAction::triggered, this, &QApplication::quit);\n   connect(closeToolBarAction, &QAction::triggered, this, &QApplication::quit);\n}\n```", "```cpp\nnewToolBarAction = toolbar->addAction(QIcon(newIcon), \"New File\");\nopenToolBarAction = toolbar->addAction(QIcon(openIcon), \"Open File\");\ntoolbar->addSeparator();\ncloseToolBarAction = toolbar->addAction(QIcon(closeIcon), \"Quit Application\");\n```", "```cpp\nconnect(closeToolBarAction, &QAction::triggered, this, &QApplication::quit);\n```", "```cpp\n% qmake -project\n```", "```cpp\n% qmake\n% make\n% ./name_of_executable\n```", "```cpp\nopenToolBarAction = toolbar->addAction(QIcon(openIcon), \"Open File\");\n```", "```cpp\ntoolbar->setMovable(false);\n```", "```cpp\n#ifndef MAINWINDOW_H\n#define MAINWINDOW_H\n#include <QMainWindow>\n#include <QApplication>\n#include <QLabel>\n#include <QLineEdit>\n#include <QDate>\n#include <QDateEdit>\n#include <QVBoxLayout>\n#include <QHBoxLayout>\n#include <QGridLayout>\n#include <QPushButton>\n#include <QMessageBox>\n#include <QAction>\n#include <QMenuBar>\n#include <QMenu>\n#include <QtGui>\n#include <Qt>\n#include <QToolBar>\n#include <QTableView>\n#include <QHeaderView>\n```", "```cpp\nclass MainWindow : public QMainWindow\n{\n   Q_OBJECT\n   public:\n       MainWindow();\n   private slots:\n       void saveButtonClicked();\n```", "```cpp\n   private:\n       // Widgets\n       QWidget *mainWidget;\n       QVBoxLayout *centralWidgetLayout;\n       QGridLayout *formLayout;\n       QHBoxLayout *buttonsLayout;\n       QLabel *nameLabel;\n       QLabel *dateOfBirthLabel;\n       QLabel *phoneNumberLabel;\n       QPushButton *savePushButton;\n       QPushButton *newPushButton;\n       QLineEdit *nameLineEdit;\n       QDateEdit *dateOfBirthEdit;\n       QLineEdit *phoneNumberLineEdit;\n       QTableView *appTable;\n       QStandardItemModel *model;\n       // Menus\n       QMenu *fileMenu;\n       QMenu *helpMenu;\n       // Actions\n       QAction *quitAction;\n       QAction *aboutAction;\n       QAction *saveAction;\n       QAction *cancelAction;\n       QAction *openAction;\n       QAction *newAction;\n       QAction *aboutQtAction;\n       QAction *newToolBarAction;\n       QAction *openToolBarAction;\n       QAction *closeToolBarAction;\n       QAction *clearToolBarAction;\n       // Toolbar\n       QToolBar *toolbar;\n       // Icons\n       QPixmap newIcon;\n       QPixmap openIcon;\n       QPixmap closeIcon;\n       QPixmap clearIcon;\n       // init methods\n       void clearFields();\n       void createIcons();\n       void createMenuBar();\n       void createToolBar();\n       void setupSignalsAndSlot();\n       void setupCoreWidgets();\n};\n#endif\n```", "```cpp\n#include \"mainwindow.h\"\n#include \"mainwindow.h\"\nMainWindow::MainWindow()\n{\n   setWindowTitle(\"Form in Window\");\n   setFixedSize(500, 500);\n   createIcons();\n   setupCoreWidgets();\n   createMenuBar();\n   createToolBar();\n   centralWidgetLayout->addLayout(formLayout);\n   centralWidgetLayout->addWidget(appTable);\n   centralWidgetLayout->addLayout(buttonsLayout);\n   mainWidget->setLayout(centralWidgetLayout);\n   setCentralWidget(mainWidget);\n   setupSignalsAndSlots();\n}\n```", "```cpp\nvoid MainWindow::createIcons() {\n    newIcon = QPixmap(\"new.png\");\n    openIcon = QPixmap(\"open.png\");\n    closeIcon = QPixmap(\"close.png\");\n    clearIcon = QPixmap(\"clear.png\");\n}\n```", "```cpp\nvoid MainWindow::setupCoreWidgets() {\n   mainWidget = new QWidget();\n   centralWidgetLayout = new QVBoxLayout();\n   formLayout = new QGridLayout();\n   buttonsLayout = new QHBoxLayout();\n   nameLabel = new QLabel(\"Name:\");\n   dateOfBirthLabel= new QLabel(\"Date Of Birth:\");\n   phoneNumberLabel = new QLabel(\"Phone Number\");\n   savePushButton = new QPushButton(\"Save\");\n   newPushButton = new QPushButton(\"Clear All\");\n   nameLineEdit = new QLineEdit();\n   dateOfBirthEdit = new QDateEdit(QDate::currentDate());\n   phoneNumberLineEdit = new QLineEdit();\n   // TableView\n   appTable = new QTableView();\n   model = new QStandardItemModel(1, 3, this);\n   appTable->setContextMenuPolicy(Qt::CustomContextMenu);\n   appTable->horizontalHeader()->setSectionResizeMode(QHeaderView::Stretch); /** Note **/\n   model->setHorizontalHeaderItem(0, new QStandardItem(QString(\"Name\")));\n   model->setHorizontalHeaderItem(1, new QStandardItem(QString(\"Date of Birth\")));\n   model->setHorizontalHeaderItem(2, new QStandardItem(QString(\"Phone Number\")));   appTable->setModel(model)\n\n   QStandardItem *firstItem = new QStandardItem(QString(\"G. Shone\"));\n   QDate dateOfBirth(1980, 1, 1);\n   QStandardItem *secondItem = new QStandardItem(dateOfBirth.toString());\n   QStandardItem *thirdItem = new QStandardItem(QString(\"05443394858\"));\n   model->setItem(0,0,firstItem);\n   model->setItem(0,1,secondItem);\n   model->setItem(0,2,thirdItem);\n   formLayout->addWidget(nameLabel, 0, 0);\n   formLayout->addWidget(nameLineEdit, 0, 1);\n   formLayout->addWidget(dateOfBirthLabel, 1, 0);\n   formLayout->addWidget(dateOfBirthEdit, 1, 1);\n   formLayout->addWidget(phoneNumberLabel, 2, 0);\n   formLayout->addWidget(phoneNumberLineEdit, 2, 1);\n   buttonsLayout->addStretch();\n   buttonsLayout->addWidget(savePushButton);\n   buttonsLayout->addWidget(newPushButton);\n}\n```", "```cpp\nappTable->setContextMenuPolicy(Qt::CustomContextMenu);\n```", "```cpp\nappTable->horizontalHeader()->setSectionResizeMode(\nQHeaderView::Stretch); /** Note **/\n```", "```cpp\nmodel->setHorizontalHeaderItem(0, new QStandardItem(QString(\"Name\")));\n```", "```cpp\nappTable->setModel(model);\nQStandardItem *firstItem = new QStandardItem(QString(\"G. Shone\"));\nQDate dateOfBirth(1980, 1, 1);\nQStandardItem *secondItem = new QStandardItem(dateOfBirth.toString());\nQStandardItem *thirdItem = new QStandardItem(QString(\"05443394858\"));\nmodel->setItem(0,0,firstItem);\nmodel->setItem(0,1,secondItem);\nmodel->setItem(0,2,thirdItem);\n```", "```cpp\nformLayout->addWidget(nameLabel, 0, 0);\nformLayout->addWidget(nameLineEdit, 0, 1);\nformLayout->addWidget(dateOfBirthLabel, 1, 0);\nformLayout->addWidget(dateOfBirthEdit, 1, 1);\nformLayout->addWidget(phoneNumberLabel, 2, 0);\nformLayout->addWidget(phoneNumberLineEdit, 2, 1);\n```", "```cpp\nbuttonsLayout->addStretch();\nbuttonsLayout->addWidget(savePushButton);\nbuttonsLayout->addWidget(newPushButton);\n```", "```cpp\nvoid MainWindow::createMenuBar() {\n   // Setup File Menu\n   fileMenu = menuBar()->addMenu(\"&File\");\n   quitAction = new QAction(closeIcon, \"Quit\", this);\n   quitAction->setShortcuts(QKeySequence::Quit);\n   newAction = new QAction(newIcon, \"&New\", this);\n   newAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_C));\n   openAction = new QAction(openIcon, \"&New\", this);\n   openAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_O));\n   fileMenu->addAction(newAction);\n   fileMenu->addAction(openAction);\n   fileMenu->addSeparator();\n   fileMenu->addAction(quitAction);\n   helpMenu = menuBar()->addMenu(\"Help\");\n   aboutAction = new QAction(\"About\", this);\n   aboutAction->setShortcut(QKeySequence(Qt::CTRL + Qt::Key_H));\n   helpMenu->addAction(aboutAction);\n}\nvoid MainWindow::createToolBar() {\n   // Setup Tool bar menu\n   toolbar = addToolBar(\"main toolbar\");\n   // toolbar->setMovable( false );\n   newToolBarAction = toolbar->addAction(QIcon(newIcon), \"New File\");\n   openToolBarAction = toolbar->addAction(QIcon(openIcon), \"Open File\");\n   toolbar->addSeparator();\n   clearToolBarAction = toolbar->addAction(QIcon(clearIcon), \"Clear All\");\n   closeToolBarAction = toolbar->addAction(QIcon(closeIcon), \"Quit Application\");\n}\n```", "```cpp\nvoid MainWindow::setupSignalsAndSlots() {\n   // Setup Signals and Slots\n   connect(quitAction, &QAction::triggered, this, &QApplication::quit);\n   connect(closeToolBarAction, &QAction::triggered, this, &QApplication::quit);\n   connect(savePushButton, SIGNAL(clicked()), this, SLOT(saveButtonClicked()));\n}\n```", "```cpp\nvoid MainWindow::saveButtonClicked()\n{\n  QStandardItem *name = new QStandardItem(nameLineEdit->text());\n  QStandardItem *dob = new QStandardItem(dateOfBirthEdit->date().toString());\n   QStandardItem *phoneNumber = new QStandardItem(phoneNumberLineEdit->text());\n   model->appendRow({ name, dob, phoneNumber});\n   clearFields();\n}\n```", "```cpp\nvoid MainWindow::clearFields()\n{\n   nameLineEdit->clear();\n   phoneNumberLineEdit->setText(\"\");\n   QDate dateOfBirth(1980, 1, 1);\n   dateOfBirthEdit->setDate(dateOfBirth);\n}\n```", "```cpp\nQMessageBox::information(this, tr(\"RMS System\"), tr(\"Record saved successfully!\"),QMessageBox::Ok|QMessageBox::Default,\nQMessageBox::NoButton, QMessageBox::NoButton);\n```", "```cpp\n#ifndef MAINWINDOW_H\n#define MAINWINDOW_H\n#include <QMainWindow>\n#include <QApplication>\n#include <QLabel>\n#include <QLineEdit>\n#include <QDate>\n#include <QDateEdit>\n#include <QVBoxLayout>\n#include <QHBoxLayout>\n#include <QGridLayout>\n#include <QPushButton>\n#include <QMessageBox>\n#include <QAction>\n#include <QMenuBar>\n#include <QMenu>\n#include <QtGui>\n#include <Qt>\n#include <QToolBar>\n#include <QTableView>\n#include <QHeaderView>\n#include <QInputDialog>\nclass MainWindow : public QMainWindow\n{\n   Q_OBJECT\n   public:\n       MainWindow();\n   private slots:\n       void saveButtonClicked();\n       void aboutDialog();\n       void clearAllRecords();\n       void deleteSavedRecord();\n   private:\n       // Widgets\n       QWidget *mainWidget;\n       QVBoxLayout *centralWidgetLayout;\n       QGridLayout *formLayout;\n       QHBoxLayout *buttonsLayout;\n       QLabel *nameLabel;\n       QLabel *dateOfBirthLabel;\n       QLabel *phoneNumberLabel;\n       QPushButton *savePushButton;\n       QPushButton *clearPushButton;\n       QLineEdit *nameLineEdit;\n       QDateEdit *dateOfBirthEdit;\n       QLineEdit *phoneNumberLineEdit;\n       QTableView *appTable;\n       QStandardItemModel *model;\n       // Menus\n       QMenu *fileMenu;\n       QMenu *helpMenu;\n       // Actions\n       QAction *quitAction;\n       QAction *aboutAction;\n       QAction *saveAction;\n       QAction *cancelAction;\n       QAction *openAction;\n       QAction *newAction;\n       QAction *aboutQtAction;\n       QAction *newToolBarAction;\n       QAction *openToolBarAction;\n       QAction *closeToolBarAction;\n       QAction *clearToolBarAction;\n       QAction *deleteOneEntryToolBarAction;\n       // Icons\n       QPixmap newIcon;\n       QPixmap openIcon;\n       QPixmap closeIcon;\n       QPixmap clearIcon;\n       QPixmap deleteIcon;\n       // Toolbar\n       QToolBar *toolbar;\n       void clearFields();\n       void createIcons();\n       void createMenuBar();\n       void createToolBar();\n       void setupSignalsAndSlots();\n       void setupCoreWidgets();\n};\n#endif\n```", "```cpp\n#include \"mainwindow.h\"\nMainWindow::MainWindow()\n{\n   setWindowTitle(\"RMS System\");\n   setFixedSize(500, 500);\n   setWindowIcon(QIcon(\"window_logo.png\"));\n   createIcons();\n   setupCoreWidgets();\n   createMenuBar();\n   createToolBar();\n   centralWidgetLayout->addLayout(formLayout);\n   centralWidgetLayout->addWidget(appTable);\n   //centralWidgetLayout->addStretch();\n   centralWidgetLayout->addLayout(buttonsLayout);\n   mainWidget->setLayout(centralWidgetLayout);\n   setCentralWidget(mainWidget);\n   setupSignalsAndSlots();\n}\n```", "```cpp\nvoid MainWindow::setupSignalsAndSlots() {\n   // Setup Signals and Slots\n   connect(quitAction, &QAction::triggered, this, &QApplication::quit);\n   connect(aboutAction, SIGNAL(triggered()), this, SLOT(aboutDialog()));\n   connect(clearToolBarAction, SIGNAL(triggered()), this, SLOT(clearAllRecords()));\n   connect(closeToolBarAction, &QAction::triggered, this, &QApplication::quit);\n   connect(deleteOneEntryToolBarAction, SIGNAL(triggered()), this, SLOT(deleteSavedRecord()));\n   connect(savePushButton, SIGNAL(clicked()), this, SLOT(saveButtonClicked()));\n   connect(clearPushButton, SIGNAL(clicked()), this, SLOT(clearAllRecords()));\n}\n```", "```cpp\nvoid MainWindow::aboutDialog()\n{\n   QMessageBox::about(this, \"About RMS System\",\"RMS System 2.0\" \"<p>Copyright &copy; 2005 Inc.\" \"This is a simple application to demonstrate the use of windows,\" \"tool bars, menus and dialog boxes\");\n}\n```", "```cpp\nconnect(clearToolBarAction, SIGNAL(triggered()), this, SLOT(clearAllRecords()));\n```", "```cpp\nint status = QMessageBox::question( this, tr(\"Delete Records ?\"), tr(\"You are about to delete all saved records \"\n\"<p>Are you sure you want to delete all records \"),                                   QMessageBox::No|QMessageBox::Default, QMessageBox::No|QMessageBox::Escape, QMessageBox::NoButton);\nif (status == QMessageBox::Yes)\n   return model->clear();\n```", "```cpp\nvoid MainWindow::clearAllRecords()\n{\n   */\n   int status = QMessageBox::question( this, tr(\"Delete all Records ?\"), tr(\"This operation will delete all saved records. \" \"<p>Do you want to remove all saved records ? \"\n ), tr(\"Yes, Delete all records\"), tr(\"No !\"),  QString(), 1, 1);\n   if (status == 0) {\n       int rowCount = model->rowCount();\n       model->removeRows(0, rowCount);\n   }\n}\n```", "```cpp\nvoid MainWindow::saveButtonClicked()\n{\n   QStandardItem *name = new QStandardItem(nameLineEdit->text());\n   QStandardItem *dob = new QStandardItem(dateOfBirthEdit->date().toString());\n   QStandardItem *phoneNumber = new QStandardItem(phoneNumberLineEdit->text());\n   model->appendRow({ name, dob, phoneNumber});\n   clearFields();\n   QMessageBox::information(this, tr(\"RMS System\"), tr(\"Record saved successfully!\"),\n                            QMessageBox::Ok|QMessageBox::Default,\n                            QMessageBox::NoButton, QMessageBox::NoButton);\n}\n```", "```cpp\nvoid MainWindow::deleteSavedRecord()\n{\n   bool ok;\n   int rowId = QInputDialog::getInt(this, tr(\"Select Row to delete\"), tr(\"Please enter Row ID of record (Eg. 1)\"),\n  1, 1, model->rowCount(), 1, &ok );\n   if (ok)\n   {\n       model->removeRow(rowId-1);\n   }\n}\n```", "```cpp\nconnect(deleteOneEntryToolBarAction, SIGNAL(triggered()), this, \nSLOT(deleteSavedRecord()));\n```", "```cpp\nvoid MainWindow::createToolBar() {\n   // Setup Tool bar menu\n   toolbar = addToolBar(\"main toolbar\");\n   // toolbar->setMovable( false );\n   newToolBarAction = toolbar->addAction(QIcon(newIcon), \"New File\");\n   openToolBarAction = toolbar->addAction(QIcon(openIcon), \"Open File\");\n   toolbar->addSeparator();\n   clearToolBarAction = toolbar->addAction(QIcon(clearIcon), \"Clear All\");\n   deleteOneEntryToolBarAction = toolbar->addAction(QIcon(deleteIcon), \"Delete a record\");\n   closeToolBarAction = toolbar->addAction(QIcon(closeIcon), \"Quit Application\");\n}\n```"]