["```cpp\nprintf(\"Enter a number \");\nscanf(\"%d\",&n);\n```", "```cpp\nfindarmstrong(n)\n```", "```cpp\nwhile(numb >0)\n```", "```cpp\nremainder=numb%10;\n```", "```cpp\npush(remainder);\n```", "```cpp\nnumb=numb/10;\n```", "```cpp\ncount++;\n```", "```cpp\nwhile(top >=0)\n```", "```cpp\nj=pop();\nvalue=value+pow(j,count);\n```", "```cpp\nif(value==numb)return 1;\n```", "```cpp\n/* Finding whether the entered number is an Armstrong number */\n# include <stdio.h>\n# include <math.h>\n\n#define max 10\n\nint top=-1;\nint stack[max];\nvoid push(int);\nint pop();\nint findarmstrong(int );\nvoid main()\n{\n   int n;\n   printf(\"Enter a number \");\n   scanf(\"%d\",&n);\n   if (findarmstrong(n))\n      printf(\"%d is an armstrong number\",n);\n   else printf(\"%d is not an armstrong number\", n);\n}\nint findarmstrong(int numb)\n{\n   int j, remainder, temp,count,value;\n   temp=numb;\n   count=0;\n   while(numb >0)\n   {\n      remainder=numb%10;\n      push(remainder);\n      count++;\n      numb=numb/10;\n   }\n   numb=temp;\n   value=0;\n   while(top >=0)\n   {\n      j=pop();\n      value=value+pow(j,count);\n   }\n   if(value==numb)return 1;\n   else return 0;\n}\nvoid push(int m)\n{\n   top++;\n   stack[top]=m;\n}\nint pop()\n{\n   int j;\n   if(top==-1)return(top);\n   else\n   {\n      j=stack[top];\n      top--;\n      return(j);\n   }\n}\n```", "```cpp\nD:\\CBook>gcc armstrong.c -o armstrong \n```", "```cpp\nD:\\CBook>./armstrong\nEnter a number 127\n127 is not an armstrong number\n```", "```cpp\nD:\\CBook>./armstrong\nEnter a number 153\n153 is an armstrong number\n```", "```cpp\nD:\\CBook>./armstrong\nEnter a number 1634\n1634 is an armstrong number\n```", "```cpp\n#define max 100\n```", "```cpp\nint arr[max];\n```", "```cpp\nprintf(\"How many values? \");\nscanf(\"%d\",&n);\n```", "```cpp\nfor(i=0;i<n;i++)                                \n    scanf(\"%d\",&arr[i]);\n```", "```cpp\np=maxmin(arr,n);\n```", "```cpp\nstatic int mm[2];\n```", "```cpp\nif(mm[0] > ar[i])\n    mm[0]=ar[i];\n```", "```cpp\nif(mm[1]< ar[i])\n    mm[1]= ar[i];\n```", "```cpp\nreturn mm;\n```", "```cpp\nprintf(\"Minimum value is %d\\n\",*p++);\n```", "```cpp\nprintf(\"Maximum value is %d\\n\",*p);\n```", "```cpp\n/* Find out the maximum and minimum values using a function returning an array */\n# include <stdio.h>\n#define max 100\nint *maxmin(int ar[], int v);\nvoid main()\n{\n    int  arr[max];\n    int n,i, *p;\n    printf(\"How many values? \");\n    scanf(\"%d\",&n);\n    printf(\"Enter %d values\\n\", n);\n    for(i=0;i<n;i++)\n        scanf(\"%d\",&arr[i]);\n    p=maxmin(arr,n);\n    printf(\"Minimum value is %d\\n\",*p++);\n    printf(\"Maximum value is %d\\n\",*p);\n}\nint *maxmin(int ar[], int v)\n{\n    int i;\n    static int mm[2];\n    mm[0]=ar[0];\n    mm[1]=ar[0];\n    for (i=1;i<v;i++)\n    {\n        if(mm[0] > ar[i])\n            mm[0]=ar[i];\n        if(mm[1]< ar[i])\n            mm[1]= ar[i];\n    }\n    return mm;\n}\n```", "```cpp\nD:\\CBook>gcc returnarray.c -o returnarray\n```", "```cpp\nD:\\CBook>./returnarray\nHow many values? 5\nEnter 5 values\n30\n8\n77\n15\n9\nMinimum value is 8\nMaximum value is 77\n```", "```cpp\nprintf(\"Enter two numbers: \");\nscanf(\"%d %d\",&x,&y);\n```", "```cpp\ng=gcd(x,y);\n```", "```cpp\nm=a%b;\n```", "```cpp\ngcd(b,m);\n```", "```cpp\ngcd(b,m);\n```", "```cpp\nreturn(b);\n```", "```cpp\nprintf(\"Greatest Common Divisor of %d and %d is %d\",x,y,g);\n```", "```cpp\n#include <stdio.h>\nint gcd(int p, int q);\nvoid main()\n{\n    int x,y,g;\n    printf(\"Enter two numbers: \");\n    scanf(\"%d %d\",&x,&y);\n    g=gcd(x,y);\n    printf(\"Greatest Common Divisor of %d and %d is %d\",x,y,g);\n}\nint gcd(int a, int b)\n{\n    int m;\n    m=a%b;\n    if(m==0)\n        return(b);\n    else\n        gcd(b,m);\n}\n```", "```cpp\nD:\\CBook>gcc gcd.c -o gcd\n```", "```cpp\nD:\\CBook>./gcd\nEnter two numbers: 18 24\nGreatest Common Divisor of 18 and 24 is 6\nD:\\CBook>./gcd\nEnter two numbers: 9 27\nGreatest Common Divisor of 9 and 27 is 9\n```", "```cpp\nprintf(\"Enter a number in binary number \");\nscanf(\"%d\",&b);\n```", "```cpp\nd=intodecimal(b);\n```", "```cpp\nwhile(bin >0)\n```", "```cpp\nremainder=bin%10;\npush(remainder);\n```", "```cpp\nwhile(top >=0)\n```", "```cpp\nj=pop();\ndeci=deci+j*pow(2,exp);\n```", "```cpp\nvoid intohexa(int bin, int deci)\n```", "```cpp\nremainder=deci%16;\npush(remainder);\n```", "```cpp\nj=pop();\n```", "```cpp\nif(j<10)printf(\"%d\",j);\nelse printf(\"%c\",prnhexa(j));\n```", "```cpp\n//Converting binary to hex\n# include <stdio.h>\n#include  <math.h>\n#define max 10\nint top=-1;\nint stack[max];\nvoid push();\nint pop();\nchar prnhexa(int);\nint intodecimal(int);\nvoid intohexa(int, int);\nvoid main()\n{\n    int b,d;\n    printf(\"Enter a number in binary number \");\n    scanf(\"%d\",&b);\n    d=intodecimal(b);\n    printf(\"The decimal of binary number %d is %d\\n\", b, d);\n    intohexa(b,d);\n}\nint intodecimal(int bin)\n{\n    int deci, remainder,exp,j;\n    while(bin >0)\n    {\n        remainder=bin%10;\n        push(remainder);\n        bin=bin/10;\n    }\n    deci=0;\n    exp=top;\n    while(top >=0)\n    {\n        j=pop();\n        deci=deci+j*pow(2,exp);\n        exp--;\n    }\n    return (deci);\n}\nvoid intohexa(int bin, int deci)\n{\n    int remainder,j;\n    while(deci >0)\n    {\n        remainder=deci%16;\n        push(remainder);\n        deci=deci/16;\n    }\n    printf(\"The hexa decimal format of binary number %d is \",bin);\n    while(top >=0)\n    {\n        j=pop();\n        if(j<10)printf(\"%d\",j);\n        else printf(\"%c\",prnhexa(j));\n    }\n}\nvoid push(int m)\n{\n    top++;\n    stack[top]=m;\n}\nint pop()\n{\n    int j;\n    if(top==-1)return(top);\n    j=stack[top];\n    top--;\n    return(j);\n}\nchar prnhexa(int v)\n{\n    switch(v)\n    {\n        case 10: return ('A');\n                 break;\n        case 11: return ('B');\n                 break;\n        case 12: return ('C');\n                 break;\n        case 13: return ('D');\n                 break;\n        case 14: return ('E');\n                 break;\n        case 15: return ('F');\n                 break;\n    }\n}\n```", "```cpp\nD:\\CBook>gcc binaryintohexa.c -o binaryintohexa\n```", "```cpp\nD:\\CBook>./binaryintohexa\nEnter a number in binary number 110001\nThe decimal of binary number 110001 is 49\nThe hexa decimal format of binary number 110001 is 31\n```", "```cpp\nD:\\CBook>./binaryintohexa\nEnter a number in binary number 11100\nThe decimal of binary number 11100 is 28\nThe hexa decimal format of binary number 11100 is 1C\n```", "```cpp\nprintf(\"Enter a number \");\nscanf(\"%d\",&n);\n```", "```cpp\nfindpalindrome(n)\n```", "```cpp\nwhile(numb >0)\n```", "```cpp\nremainder=numb%10;\n```", "```cpp\npush(remainder);\n```", "```cpp\nnumb=numb/10;\n```", "```cpp\nj=pop();\nvalue=value+j*pow(10,count);\ncount++;\n```", "```cpp\nif(numb==value) return (1);\nelse return (0);\n```", "```cpp\n//Find out whether the entered number is a palindrome or not\n# include <stdio.h>\n#include <math.h>\n#define max 10\nint top=-1;\nint stack[max];\nvoid push();\nint pop();\nint findpalindrome(int);\nvoid main()\n{\n    int n;\n    printf(\"Enter a number \");\n    scanf(\"%d\",&n);   \n    if(findpalindrome(n))\n        printf(\"%d is a palindrome number\",n);\n    else\n        printf(\"%d is not a palindrome number\", n);\n}\nint findpalindrome(int numb)\n{\n    int j, value, remainder, temp,count;\n    temp=numb;\n    while(numb >0)\n    {\n        remainder=numb%10;\n        push(remainder);\n        numb=numb/10;\n    }\n    numb=temp;\n    count=0;\n    value=0;\n    while(top >=0)\n    {\n        j=pop();\n        value=value+j*pow(10,count);\n        count++;\n    }\n    if(numb==value) return (1);\n    else return (0);\n}\nvoid push(int m)\n{\n    top++;\n    stack[top]=m;\n}\nint pop()\n{\n    int j;\n    if(top==-1)return(top);\n    else\n    {\n        j=stack[top];\n        top--;\n        return(j);\n   }\n}\n```", "```cpp\nD:\\CBook>gcc findpalindrome.c -o findpalindrome\n```", "```cpp\nD:\\CBook>./findpalindrome\nEnter a number 123\n123 is not a palindrome number\n```", "```cpp\n D:\\CBook>./findpalindrome\nEnter a number 737\n737 is a palindrome number\n```"]