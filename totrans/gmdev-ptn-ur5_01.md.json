["```cpp\nUFUNCTION(BlueprintImplementableEvent)\nvoid Fire_Visuals();\n```", "```cpp\n#pragma once\n#include \"CoreMinimal.h\"\n#include \"GameFramework/Actor.h\"\n#include \"Target.generated.h\"\nclass USphereComponent;\nUCLASS(Abstract)\nclass EXAMPLE_API ATarget : public AActor\n{\n    GENERATED_BODY()\n    UPROPERTY(EditDefaultsOnly)\n    USphereComponent* _TargetCollision;\n    int _TimesHit;\npublic:\n    ATarget();\n    UFUNCTION()\n    void OnTargetCollisionBeginOverlap(AActor* OtherActor,\n        int32 OtherBodyIndex, bool bFromSweep, const\n        FHitResult& SweepResult);\n    UFUNCTION(BlueprintImplementableEvent)\n    Void TenHitVisuals();\n};\n```", "```cpp\n#include \"Target.h\"\n#include \"Components/SphereComponent.h\"\n#include \"ExampleProjectile.h\"\nATarget::ATarget()\n{\n    _TargetCollision =CreateDefaultSubobject <USphereComponent>\n        (TEXT(\"TargetCollision\"));\n    _TargetCollision->SetupAttachment(RootComponent);\n    _TargetCollision->\n        OnComponentBeginOverlap.AddDynamic( this,\n        &ATarget::OnTargetCollisionBeginOverlap);\n    _TimesHit = 0;\n}\nvoid ATarget::OnTargetCollisionBeginOverlap\n    (UPrimitiveComponent* OverlappedComponent, AActor*\n        OtherActor, UPrimitiveComponent* OtherComp, int32\n        OtherBodyIndex, bool bFromSweep, const FHitResult&\n        SweepResult)\n{\n    ExampleProjectile* otherProj =\n        Cast<AExampleProjectile>(OtherActor);\n    if (otherProj != nullptr)\n    {\n        _TimesHit++;\n        if (_TimesHit == 10)\n        {\n            TenHitVisuals();\n        }\n    }\n}\n```"]