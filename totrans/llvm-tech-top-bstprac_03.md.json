["```cpp\n# In an in-tree CMakeLists.txt file…\nadd_library(MyLLVMPass SHARED\n  MyPass.cpp) # Do NOT do this to add a new LLVM library\n```", "```cpp\n# In a CMakeLists.txt\nadd_llvm_component_library(LLVMFancyOpt\n  FancyOpt.cpp)\n```", "```cpp\nadd_llvm_component_library(LLVMFancyOpt\n  FancyOpt.cpp\n  LINK_COMPONENTS\n  Analysis ScalarOpts)\n```", "```cpp\nset(LLVM_LINK_COMPONENTS\n    Analysis ScalarOpts)\nadd_llvm_component_library(LLVMFancyOpt\n   FancyOpt.cpp)\n```", "```cpp\nllvm_map_components_to_libnames(output_lib_names\n  <list of component names>)\n```", "```cpp\nadd_llvm_component_library(LLVMFancyOpt\n  FancyOpt.cpp\n  LINK_LIBS\n  ${BOOST_LIBRARY})\n```", "```cpp\nadd_llvm_component_library(LLVMFancyOpt\n  FancyOpt.cpp\n  DEPENDS\n  intrinsics_gen)\n```", "```cpp\n/FancyOpt\n  |___ FancyOpt.cpp\n  |___ AggressiveFancyOpt.cpp\n  |___ CMakeLists.txt\n```", "```cpp\n# In /FancyOpt/CMakeLists.txt\nadd_llvm_component_library(LLVMFancyOpt\n  FancyOpt.cpp)\nadd_llvm_component_library(LLVMAggressiveFancyOpt\n  AggressiveFancyOpt.cpp)\n```", "```cpp\n/FancyOpt\n  |___ FancyOpt.cpp\n  |___ CMakeLists.txt\n  |___ /AggressiveFancyOpt\n       |___ AggressiveFancyOpt.cpp\n       |___ CMakeLists.txt\n```", "```cpp\nadd_llvm_component_library(LLVMFancyOpt\n  FancyOpt.cpp)\nadd_subdirectory(AggressiveFancyOpt)\n```", "```cpp\nadd_llvm_component_library(LLVMAggressiveFancyOpt\n  AggressiveFancyOpt.cpp)\n```", "```cpp\nadd_llvm_tool(myLittleTool\n  MyLittleTool.cpp)\n```", "```cpp\nadd_llvm_pass_plugin(MyPass\n   HelloWorldPass.cpp)\n```", "```cpp\n    project(MagicCLITool)\n    set(SOURCE_FILES\n        main.cpp)\n    add_executable(magic-cli\n      ${SOURCE_FILES})\n    ```", "```cpp\n    project(MagicCLITool)\n    find_package trick work, you need to supply the LLVM_DIR CMake variable while invoking the CMake command for this project:\n\n    ```", "```cpp\n\n    ```", "```cpp\n    find_package(LLVM REQUIRED CONFIG)\n    …\n    list(APPEND CMAKE_MODULE_PATH ${LLVM_CMAKE_DIR})\n    include(AddLLVM)\n    ```", "```cpp\n    find_package(LLVM REQUIRED CONFIG)\n    …\n    include(AddLLVM)\n    set(LLVM_LINK_COMPONENTS\n      Support\n      Analysis)\n    add_llvm_executable(magic-cli\n      main.cpp)\n    ```", "```cpp\n    find_package(LLVM REQUIRED CONFIG)\n    …\n    include(AddLLVM)\n    add_llvm_library(MyMagicLibrary\n      lib.cpp\n      LINK_COMPONENTS\n      Support Analysis)\n    ```", "```cpp\n    find_package(LLVM REQUIRED CONFIG)\n    …\n    include(AddLLVM)\n    add_llvm_pass_plugin(MyMagicPass\n      ThePass.cpp)\n    ```", "```cpp\n    find_package(LLVM REQUIRED CONFIG)\n    …\n    add_definitions(${LLVM_DEFINITIONS})\n    if(NOT ${LLVM_ENABLE_RTTI})\n      # For non-MSVC compilers\n      set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -fno-rtti\")\n    endif()\n    add_llvm_xxx(source.cpp)\n    ```"]