- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: The C++ programming language is one of the most widely used in the world and
    it has been so for decades. Its success isn’t due just to the performance it provides
    or maybe to its ease of use, which many would argue against, but probably to its
    versatility. C++ is a general-purpose, multi-paradigm programming language that
    blends together procedural, functional, and generic programming.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: C++编程语言是世界上使用最广泛的编程语言之一，并且已经如此几十年了。它的成功并不仅仅是因为它提供的性能，也许是因为它的易用性，尽管许多人会对此提出异议，但可能是因为它的多功能性。C++是一种通用、多范式的编程语言，它结合了过程式、函数式和泛型编程。
- en: '**Generic programming** is a paradigm of writing code such as that entities
    such as functions and classes are written in terms of types that are specified
    later. These generic entities are instantiated only when needed for specific types
    that are specified as arguments. These generic entities are known as templates
    in C++.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '**泛型编程**是一种编写代码的范例，其中函数和类等实体是以后来指定的类型编写的。这些泛型实体仅在需要为特定类型（作为参数指定）时实例化。在C++中，这些泛型实体被称为模板。'
- en: '**Metaprogramming** is the programming technique of using templates (and constexpr
    functions in C++) to generate code at compile-time that is then merged with the
    rest of the source code for compiling a final program. Metaprogramming implies
    that at least an input or an output is a type.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '**元编程**是一种编程技术，使用模板（以及C++中的constexpr函数）在编译时生成代码，然后将生成的代码与源代码的其余部分合并以编译最终程序。元编程意味着至少输入或输出是一个类型。'
- en: Templates in C++ have a reputation of being *pretty horrendous*, as described
    in the C++ Core Guideless (a document of dos and don’ts maintained by Bjarne Stroustrup
    and Herb Sutter). However, they make generic libraries possible such as the C++
    Standard Library that C++ developers use all the time. Whether you’re writing
    templates yourself or just using templates written by others (such as standard
    containers or algorithms), templates are most likely part of your daily code.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: C++中的模板以其“相当糟糕”而闻名，正如C++核心指南（由Bjarne Stroustrup和Herb Sutter维护的关于应该做什么和不应该做什么的文档）中所述。然而，它们使得泛型库成为可能，例如C++标准库，这是C++开发者经常使用的。无论您是编写自己的模板还是仅使用他人编写的模板（例如标准容器或算法），模板很可能构成了您日常代码的一部分。
- en: This book is intended to provide a good understanding of all the spectrum of
    templates available in C++ (from their basic syntax to concepts in C++20). This
    will be the focus of the first two parts of the book. The third and final part
    will help you put the newly acquired knowledge into practice to perform metaprogramming
    with templates.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在全面了解C++中所有可用的模板（从其基本语法到C++20中的概念）。这将是本书前两部分的焦点。第三部分和最后一部分将帮助您将新获得的知识应用于使用模板进行元编程。
- en: Who this book is for?
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向谁？
- en: This book is for beginner-to-intermediate C++ developers who want to learn about
    template metaprogramming as well as advanced C++ developers looking to get up
    to speed with the new C++20 features related to templates and the various idioms
    and patterns. Basic C++ coding experience is necessary to get started with this
    book.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向希望了解模板元编程的初学者到中级C++开发者，以及希望掌握与模板和C++20相关的新特性以及各种惯用和模式的先进C++开发者。要开始阅读本书，需要具备基本的C++编码经验。
- en: What this book covers
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[*Chapter 1*](B18367_01_ePub.xhtml#_idTextAnchor015), *Introduction to Templates*,
    provides an introduction to the concept of template metaprogramming in C++, with
    several simple examples, and a discussion on why we need templates and what are
    the pros and cons of using templates.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*](B18367_01_ePub.xhtml#_idTextAnchor015)，*模板简介*，介绍了C++中模板元编程的概念，包括几个简单示例，以及讨论了为什么我们需要模板以及使用模板的优缺点。'
- en: '[*Chapter 2*](B18367_02_ePub.xhtml#_idTextAnchor024), *Template Fundamentals*,
    explores all forms of templates in C++: function templates, class templates, variable
    templates, and alias templates. For each of these, we discuss the syntax and the
    details of how they work. Furthermore, the key concepts of template instantiation
    and specialization are addressed here.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*](B18367_02_ePub.xhtml#_idTextAnchor024)，*模板基础*，探讨了C++中所有形式的模板：函数模板、类模板、变量模板和别名模板。对于这些中的每一个，我们讨论了它们的语法以及它们如何工作的细节。此外，还讨论了模板实例化和特殊化的关键概念。'
- en: '[*Chapter 3*](B18367_03_ePub.xhtml#_idTextAnchor051), *Variadic Templates*,
    is dedicated entirely to variadic templates which are templates that have a variable
    number of template parameters. We discuss in detail variadic function templates,
    variadic class templates, variadic alias templates, and variadic variable templates,
    parameter packs and how they are expanded, as well as fold expressions that help
    us simplify the writing of variadic templates.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*](B18367_03_ePub.xhtml#_idTextAnchor051)，*可变参数模板*，完全致力于可变参数模板，这些模板具有可变数量的模板参数。我们详细讨论了可变函数模板、可变类模板、可变别名模板和可变变量模板，参数包及其展开方式，以及帮助我们简化可变模板编写的折叠表达式。'
- en: '[*Chapter 4*](B18367_04_ePub.xhtml#_idTextAnchor064), *Advanced Template Concepts*,
    groups a series of advanced template concepts such as dependent names and name
    lookup, template argument deduction, template recursion, perfect forwarding, generic
    and template lambdas. By understanding these topics, readers will be able to greatly
    expand the variety of templates they can read or write.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*](B18367_04_ePub.xhtml#_idTextAnchor064)，*高级模板概念*，将一系列高级模板概念如依赖名称和名称查找、模板参数推导、模板递归、完美转发、泛型和模板lambda等分组。通过理解这些主题，读者将能够极大地扩展他们可以阅读或编写的模板的多样性。'
- en: '[*Chapter 5*](B18367_05_ePub.xhtml#_idTextAnchor080), *Type Traits and Conditional
    Compilation*, is dedicated to type traits. The reader will learn about type traits,
    what traits the standard library provides, and how they can be used to solve different
    problems.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](B18367_05_ePub.xhtml#_idTextAnchor080)，*类型特性和条件编译*，致力于类型特性。读者将了解类型特性、标准库提供的特性以及如何使用它们来解决不同的问题。'
- en: '[*Chapter 6*](B18367_06_ePub.xhtml#_idTextAnchor099), *Concepts and Constraints*,
    presents the new C++20 mechanism for defining requirements for template arguments
    with concepts and constraints. You will learn about the various ways to specify
    constraints. Moreover, we provide an overview of the content of the C++20 standard
    concepts library.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*](B18367_06_ePub.xhtml#_idTextAnchor099)，*概念和约束*，介绍了C++20中用于定义模板参数要求的新的概念和约束机制。你将了解指定约束的各种方法。此外，我们还提供了C++20标准概念库内容的概述。'
- en: '[*Chapter 7*](B18367_07_ePub.xhtml#_idTextAnchor123), *Patterns and Idioms*,
    explores a series of unrelated advanced topics of using the knowledge learned
    so far into implementing various patterns. We explore the concepts of static polymorphism,
    type erasure, tag dispatching, and patterns such as the curiously recursive template
    pattern, expression templates, mixins, and typelists.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](B18367_07_ePub.xhtml#_idTextAnchor123)，*模式和惯用法*，探讨了将到目前为止学到的知识应用于实现各种模式的一系列不相关的先进主题。我们探讨了静态多态、类型擦除、标签分派等概念，以及诸如好奇的递归模板模式、表达式模板、混入和类型列表等模式。'
- en: '[*Chapter 8*](B18367_08_ePub.xhtml#_idTextAnchor179), *Ranges and Algorithms*,
    is dedicated to understanding containers, iterators, and algorithms, which are
    the core components of the standard template library. You will learn here how
    to write a generic container and an iterator type for it as well as a general-purpose
    algorithm.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B18367_08_ePub.xhtml#_idTextAnchor179)，*范围和算法*，致力于理解容器、迭代器和算法，这些是标准模板库的核心组件。在这里，你将学习如何为它编写一个泛型容器和迭代器类型，以及一个通用算法。'
- en: '[*Chapter 9*](B18367_09_ePub.xhtml#_idTextAnchor188), *The Ranges Library*,
    explores the new C++20 Ranges library with its key features such as ranges, range
    adaptors, and constrained algorithms. These enable us to write simpler code for
    working with ranges. Furthermore, you will also learn here how to write your own
    range adaptor.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B18367_09_ePub.xhtml#_idTextAnchor188)，*范围库*，探讨了新的C++20范围库及其关键特性，如范围、范围适配器和约束算法。这些特性使我们能够编写更简单的代码来处理范围。此外，你还将学习如何编写自己的范围适配器。'
- en: '*Appendix* is a short epilog that provides a summary of the book.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*附录* 是一个简短的结语，提供了本书的总结。'
- en: '*Assignment Answers* contains all the answers to the questions from all the
    chapters.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*作业答案* 包含了所有章节的所有问题的答案。'
- en: To get the most out of this book
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: To get started with this book, you need to have some basic knowledge of the
    C++ programming language. You need to know the syntax and fundamentals about classes,
    functions, operators, function overloading, inheritance, virtual functions, and
    more. However, no knowledge of templates is required, as this book will teach
    you everything from scratch.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始学习本书，您需要对 C++ 编程语言有一些基本了解。您需要了解语法以及关于类、函数、运算符、函数重载、继承、虚函数等方面的基础知识。然而，不需要模板知识，因为本书将从零开始教授您所有内容。
- en: 'All the code samples in this book are cross-platform. That means you can use
    any compiler to build and run them. However, although many snippets work with
    a C++11 compiler, there are also snippets that require a C++17 or C++20 compliant
    compiler. Therefore, we recommend you use a compiler version that supports C++20
    so you can run all the samples. The samples in this book have been tested with
    **MSVC 19.30** (**Visual Studio 2022**), **GCC 12.1/13**, and **Clang 13/14**.
    If you don’t have such a C++20 compliant compiler on your machine, you can try
    one online. We recommend one of the following:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中的所有代码示例都是跨平台的。这意味着您可以使用任何编译器来构建和运行它们。然而，尽管许多代码片段与 C++11 编译器兼容，但也有片段需要 C++17
    或 C++20 兼容的编译器。因此，我们建议您使用支持 C++20 的编译器版本，以便运行所有示例。本书中的示例已使用 **MSVC 19.30**（**Visual
    Studio 2022**）、**GCC 12.1/13** 和 **Clang 13/14** 进行测试。如果您机器上没有这样的 C++20 兼容编译器，您可以在网上尝试一个。我们推荐以下之一：
- en: Compiler Explorer ([https://godbolt.org/](https://godbolt.org/))
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Compiler Explorer ([https://godbolt.org/](https://godbolt.org/))
- en: Wandbox ([https://wandbox.org/](https://wandbox.org/))
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Wandbox ([https://wandbox.org/](https://wandbox.org/))
- en: C++ Insights ([https://cppinsights.io/](https://cppinsights.io/))
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: C++ Insights ([https://cppinsights.io/](https://cppinsights.io/))
- en: The C++ Insights online tools will be referred several times in the book for
    analyzing the code generated by the compiler.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 书中将多次提及 C++ Insights 在线工具，用于分析编译器生成的代码。
- en: You should refer to the page, [https://en.cppreference.com/w/cpp/compiler_support](https://en.cppreference.com/w/cpp/compiler_support),
    if you want to check compilers support for different versions of the C++ standard.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想检查编译器对不同版本 C++ 标准的支持情况，请参考页面 [https://en.cppreference.com/w/cpp/compiler_support](https://en.cppreference.com/w/cpp/compiler_support)。
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting of code.**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您使用的是本书的电子版，我们建议您亲自输入代码或从本书的 GitHub 仓库（下一节中提供链接）获取代码。这样做将有助于避免与代码复制粘贴相关的任何潜在错误。**'
- en: Mentions and further readings
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提及和进一步阅读
- en: 'Throughout the book, we are referring multiple times to the C++ standard. This
    document is copy-righted by the **International Organization for Standardization**.
    The official C++ standard document can be purchased from here: [https://www.iso.org/standard/79358.html](https://www.iso.org/standard/79358.html).
    However, multiple drafts of the C++ standard as well as the sources used to generate
    them are freely available on GitHub at [https://github.com/cplusplus/draft](https://github.com/cplusplus/draft).
    You cand find additional information about the C++ standard at [https://isocpp.org/std/the-standard](https://isocpp.org/std/the-standard).'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们多次提到了 C++ 标准。这份文件由 **国际标准化组织** 版权所有。官方 C++ 标准文档可以从这里购买：[https://www.iso.org/standard/79358.html](https://www.iso.org/standard/79358.html)。然而，C++
    标准的多个草案以及生成它们的源代码在 GitHub 上免费提供，网址为 [https://github.com/cplusplus/draft](https://github.com/cplusplus/draft)。您可以在
    [https://isocpp.org/std/the-standard](https://isocpp.org/std/the-standard) 找到有关
    C++ 标准的更多信息。
- en: A great online resource for C++ developers is the **C++ Reference** website,
    available at [https://en.cppreference.com/](https://en.cppreference.com/). This
    provides exhaustive documentation of the C++ language directly derived from the
    C++ standard. Content from the C++ Reference is quoted several times in the book.
    The C++ Reference content is licensed under CC-BY-SA license, [https://en.cppreference.com/w/Cppreference:Copyright/CC-BY-SA](https://en.cppreference.com/w/Cppreference:Copyright/CC-BY-SA).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 C++ 开发者来说，一个极好的在线资源是 C++ Reference 网站，网址为 [https://en.cppreference.com/](https://en.cppreference.com/)。该网站提供了直接从
    C++ 标准派生的详尽文档。本书中多次引用了 C++ Reference 的内容。C++ Reference 的内容受 CC-BY-SA 许可协议保护，[https://en.cppreference.com/w/Cppreference:Copyright/CC-BY-SA](https://en.cppreference.com/w/Cppreference:Copyright/CC-BY-SA)。
- en: At the end of each chapter, you will find a section called *Further reading*.
    This section contains a list of readings used as a bibliography and recommended
    for deepening your knowledge of the presented topics.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 每章末尾，您将找到一个名为*进一步阅读*的部分。本部分包含用作参考文献的阅读列表，并推荐用于深化您对所呈现主题的了解。
- en: Download the example code files
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Template-Metaprogramming-with-CPP](https://github.com/PacktPublishing/Template-Metaprogramming-with-CPP).
    If there’s an update to the code, it will be updated in the GitHub repository.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub下载本书的示例代码文件[https://github.com/PacktPublishing/Template-Metaprogramming-with-CPP](https://github.com/PacktPublishing/Template-Metaprogramming-with-CPP)。如果代码有更新，它将在GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他来自我们丰富图书和视频目录的代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。查看它们！
- en: Download the color images
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: 'We also provide a PDF file that has color images of the screenshots and diagrams
    used in this book. You can download it here: [https://packt.link/Un8j5](https://packt.link/Un8j5).'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一份包含本书中使用的截图和图表彩色图像的PDF文件。您可以从这里下载：[https://packt.link/Un8j5](https://packt.link/Un8j5)。
- en: Conventions used
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “This problem can be fixed by making `init` a dependent
    name.”'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称。以下是一个示例：“可以通过将`init`设置为依赖名称来修复此问题。”'
- en: 'A block of code is set as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块应如下设置：
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都应如下编写：
- en: '[PRE9]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For instance, words in menus or dialog boxes appear in **bold**. Here is an example:
    “The capacity is 8, the size is 0, and the **head** and **tail** both point to
    index **0**.”'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或您在屏幕上看到的单词。例如，菜单或对话框中的单词以**粗体**显示。以下是一个示例：“容量为8，大小为0，**头**和**尾**都指向索引**0**。”'
- en: Tips or important notes
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士或重要注意事项
- en: Appear like this.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来像这样。
- en: Get in touch
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎读者反馈。
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：如果您对本书的任何方面有疑问，请通过[mailto:customercare@packtpub.com](mailto:customercare@packtpub.com)发送电子邮件，并在邮件主题中提及书名。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误**：尽管我们已经尽最大努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，我们非常感谢您能向我们报告。请访问[www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)并填写表格。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**：如果您在互联网上以任何形式遇到我们作品的非法副本，如果您能提供位置地址或网站名称，我们将不胜感激。请通过[mailto:copyright@packt.com](mailto:copyright@packt.com)与我们联系，并提供材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**：如果您在某个主题上具有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问[authors.packtpub.com](http://authors.packtpub.com)。'
- en: Share Your Thoughts
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享您的想法
- en: Once you’ve read *Template Metaprogramming with C++*, we’d love to hear your
    thoughts! Please [click here to go straight to the Amazon review page](https://packt.link/r/1803243457)
    for this book and share your feedback.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您阅读了《使用C++的模板元编程》，我们很乐意听听您的想法！请[点击此处直接进入此书的亚马逊评论页面](https://packt.link/r/1803243457)并分享您的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 您的评论对我们和科技社区都非常重要，并将帮助我们确保我们提供高质量的内容。
