- en: '14'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Moving Ahead in the Arduino IoT Cloud
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The **Arduino IoT Cloud** offers various plans, with different features for
    each plan enabled to certain levels. In the chapter, you will be guided through
    the different options available at the time of writing, including the enterprise
    plans, and a description of the additional functionalities they provide.
  prefs: []
  type: TYPE_NORMAL
- en: Then, you will be invited to put into practice what was learned in previous
    chapters by implementing and expanding the examples with further functionalities.
    The Arduino IoT Cloud is a live product, always evolving, and this chapter will
    list official Arduino sources of information, allowing you to monitor any updates
    and future releases.
  prefs: []
  type: TYPE_NORMAL
- en: You will also get an insight into the Arduino PRO hardware and software tools,
    which are specially designed for industrial IoT solutions. This information will
    help you to design and build professional solutions for your industry.
  prefs: []
  type: TYPE_NORMAL
- en: 'In this chapter, we will cover the following main topics:'
  prefs: []
  type: TYPE_NORMAL
- en: Arduino IoT Cloud plans
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arduino PRO
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Further resources and insights
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Arduino IoT Cloud plans
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Arduino IoT Cloud comes with different plans for different types of entities,
    and every entity comes with different types of pricing plans for its users. In
    the Arduino IoT Cloud, there are mainly three entities, which include individuals,
    schools, and organizations, as shown in *Figure 14**.1*.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.1 – The Arduino IoT Cloud plans’ different categories](img/B19752_14_01.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.1 – The Arduino IoT Cloud plans’ different categories
  prefs: []
  type: TYPE_NORMAL
- en: The Arduino IoT Cloud team divided the pricing plans according to different
    categories and users, and pricing varies from category to category. There are
    also different pricing plans available in those categories. For the updated pricing
    plans and features, visit [https://cloud.arduino.cc/plans/](https://cloud.arduino.cc/plans/).
  prefs: []
  type: TYPE_NORMAL
- en: We will discuss all the categories step by step in the following subsections,
    and the business plan will be discussed in a separate section. Firstly, we will
    look at plans for individuals in the next subsection.
  prefs: []
  type: TYPE_NORMAL
- en: Plans for individuals
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: First, we will start with pricing plans for individuals. This category is specially
    designed for learners, professionals, makers, hobbyists, or anyone who wants to
    learn or use the Arduino IoT Cloud as an individual entity. For them, the Arduino
    IoT Cloud has four different plans, which include the free, entry, maker, and
    maker plus plans. All the plans have different pricing according to their features,
    except for the free plan, which is freely available to everyone without any cost.
  prefs: []
  type: TYPE_NORMAL
- en: Now, we will discuss how each plan is different from another by comparing their
    limitations and features, as well as their cost, in *Table 4.1*. We will not compare
    all the features here, as the complete details are available on the Arduino IoT
    Cloud plans page. Here, we will only discuss the important features.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Features** | **Free** | **Entry** | **Maker** | **Maker plus** |'
  prefs: []
  type: TYPE_TB
- en: '| Number of Things | 2 | 10 | 25 | 100 |'
  prefs: []
  type: TYPE_TB
- en: '| Data retention | 1 day | 15 days | 90 days | 1 year |'
  prefs: []
  type: TYPE_TB
- en: '| Cloud triggers | Not available | Not available | 100 notifications a day
    | 400 notifications a day |'
  prefs: []
  type: TYPE_TB
- en: '| Cloud variables | 5 | 10 | Unlimited |'
  prefs: []
  type: TYPE_TB
- en: '| API | Not available | 1 request a second | 10 requests a second |'
  prefs: []
  type: TYPE_TB
- en: '| Shareable dashboard | Not available | Not available | Available |'
  prefs: []
  type: TYPE_TB
- en: '| OTA | Not available | Available |'
  prefs: []
  type: TYPE_TB
- en: '| Price yearly | Free | USD 23.88 | USD 71.88 | USD 239.98 |'
  prefs: []
  type: TYPE_TB
- en: '| Price monthly | Free | Not available | USD 6.99 | USD 23.99 |'
  prefs: []
  type: TYPE_TB
- en: Table 14.1 – The plan for individuals’ features comparison
  prefs: []
  type: TYPE_NORMAL
- en: In *Table 14.1*, we compare different plans with respect to some important features.
    Firstly, we will explore the *free plan*, which only allows you to create two
    Things. One-day data retention is available, and you can create up to five cloud
    variables for your Thing. However, cloud triggers, API access, a shareable dashboard,
    and (**OTA**) features are not available. The free plan is good from a learning
    point of view, and you can even host up to two personal IoT devices.
  prefs: []
  type: TYPE_NORMAL
- en: Then, we have the *entry plan*, which is perfect for students and hobbyists
    if they want to expand their IoT devices on a smaller scale. This plan will cost
    them USD 23.88 per year and is only available in yearly billing, not monthly.
    In this plan, you will get 10 Things and 15-day data retention, with up to 10
    cloud variables for each Thing. Users will also get the benefit of the API and
    OTA features, but cloud triggers and shareable dashboard features are still not
    available.
  prefs: []
  type: TYPE_NORMAL
- en: The *maker plan* is the third plan in this category, which is good for users
    who design and develop IoT solutions and want to taste all the features of the
    Arduino IoT Cloud. It costs USD 71.88 per year and can be paid on a monthly basis.
    With this plan, users are able to create 25 Things, and 90-day data retention
    is allowed (which is a very good option for data recording). Also, users are allowed
    to set up cloud triggers for 100 notifications per day, and 10 API requests per
    second are allowed.
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we have the *maker plus plan*, which is the perfect choice for IoT
    freelancers or small-scale IoT start-ups. In this plan, users are allowed to host
    up to 100 Things with one-year data retention, which is a perfectly good combination
    for professional, small-scale deployments, and they only need to pay USD 239.98
    per year or USD 23.99 per month. You can see all the features of the Maker Plus
    plan, as well as the aforementioned plans, in *Table 4.1* or on the official website.
  prefs: []
  type: TYPE_NORMAL
- en: '*Machine learning tools* are available to all plans equally, so anyone can
    enjoy the benefit of this feature and integrate machine learning into their IoT
    solutions, making them more advanced. This offers the benefit of powerful machine
    learning on the cloud side without any hassle.'
  prefs: []
  type: TYPE_NORMAL
- en: Let’s explore the maker plus plan with respect to its cost for freelancers and
    small IoT start-ups. This plan costs USD 239.98 per year and allows you to host
    up to 100 IoT Things. If we calculate the cost per Thing, then it will be around
    USD 2.40 per Thing for one year, which is very reasonably priced, and there is
    also zero cost for infrastructure and security maintenance, as all these requirements
    are managed by the Arduino IoT Cloud team.
  prefs: []
  type: TYPE_NORMAL
- en: In this subsection, we discussed the different Arduino Cloud plans that are
    available for individuals in detail. In the upcoming subsection, we will explore
    the plans for educational institutes.
  prefs: []
  type: TYPE_NORMAL
- en: Plans for schools
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Every organization, such as Google, Microsoft, and Amazon AWS, provides a special
    pricing plan for education institutes to help them grow their students’ knowledge
    and skills, preparing them according to the latest industry trends. The Arduino
    IoT Cloud also has a special pricing plan for schools, colleges, and universities.
  prefs: []
  type: TYPE_NORMAL
- en: Besides their special pricing plan, the Arduino IoT Cloud also provides a free
    plan for students, similar to the free plan for individuals. Therefore, we will
    not discuss this and focus instead on the customized school plan. In the school
    plan category, the pricing changes according to the number of students, but the
    features available to them all remain the same. *Table 14.2* provides a detailed
    pricing plan according to the number of students. For updated pricing for schools,
    visit [https://cloud.arduino.cc/plans](https://cloud.arduino.cc/plans).
  prefs: []
  type: TYPE_NORMAL
- en: '| **Number** **of students** | **Pricing per** **member/per year** |'
  prefs: []
  type: TYPE_TB
- en: '| 5 to 50 members | USD 20 per member per year |'
  prefs: []
  type: TYPE_TB
- en: '| 51 to 100 members | USD 18 per member per year |'
  prefs: []
  type: TYPE_TB
- en: '| 101+ members | USD 15 per member per year |'
  prefs: []
  type: TYPE_TB
- en: Table 14.2 – The pricing plan for schools according to the number of students
  prefs: []
  type: TYPE_NORMAL
- en: '*Table 14.2* states the pricing according to student numbers and per member.
    Let’s explore what features they provide to every school member. In the school
    plan, every member can create up to 5 Things, with unlimited cloud variables and
    six-month data retention, which is very good, especially for PhD and master’s
    students, as they may want to collect data from IoT devices for further research
    and experiments, or are building a prototype to solve a real-world problem. Also,
    the plan provides 10 notifications per day for cloud triggers and 10 requests
    per second for APIs.'
  prefs: []
  type: TYPE_NORMAL
- en: The Arduino IoT Cloud school plan can also natively integrate with Google Classroom
    users. This makes it easy for faculty members to manage their students, assignments,
    and lots of other stuff in the Arduino IoT Cloud via Google Classroom. The Arduino
    IoT Cloud also provides centralized billing and user management that is **General
    Data Protection** **Regulation** (**GDPR**)-compliant.
  prefs: []
  type: TYPE_NORMAL
- en: 'There is another offer available to students via **GitHub Education** – the
    **Student Developer Pack**. Students can visit the official GitHub page for further
    updates and news: [https://education.github.com/pack#offers](https://education.github.com/pack#offers).
    According to the current agreement between Arduino and GitHub, Arduino provides
    six free months of the Arduino IoT Cloud maker plan, as well as a discount on
    selected development boards.'
  prefs: []
  type: TYPE_NORMAL
- en: In this subsection, we dived deep into educational pricing plans and their features
    for each student. In the following section, we will explore the Enterprise Base
    Plan in detail, which helps you to scale your product with enterprise-level features.
  prefs: []
  type: TYPE_NORMAL
- en: The enterprise base plan
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this section, we will first explore the basic features of the enterprise
    base plan, and then in different subsections, we will explore the specialized
    features that are only available in the enterprise plan, which allow organizations
    to perform bulk operations such as fleet and device management.
  prefs: []
  type: TYPE_NORMAL
- en: The enterprise base plan is specially designed for organizations that are interested
    in using the Arduino IoT Cloud as a main infrastructure for their solution deployment
    and management. In regard to pricing and devices, the plan starts from USD 42
    for 50 devices, increasing in multiples of 50 up to 500\. If you have more than
    500 devices, then you would need to directly contact the Arduino Support team
    for a customized pricing plan. Fifty devices cost USD 500 per year, and each device
    costs USD 10 per year and approximately USD 0.83 per month. This cost per device
    is very nominal, as you don’t need to pay any infrastructure or development charges,
    security costs, and so on. This plan also provides you with advanced management
    control, which will make your management and operations easier compared to other
    plans.
  prefs: []
  type: TYPE_NORMAL
- en: '**Data retention** in the enterprise plan is one year for all devices, and
    every device is allowed to send 20 notifications via **cloud triggers** and 10
    requests per second for **APIs**. Besides all of these features, organizations
    will receive **technical support** via a ticketing system, which is not available
    in other plans.'
  prefs: []
  type: TYPE_NORMAL
- en: In this subsection, we discussed the basic features of the enterprise base plan.
    Now, we will explore role-based access control and fleet management in the upcoming
    subsection.
  prefs: []
  type: TYPE_NORMAL
- en: Role-based access control and fleet management
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: At the enterprise level, there are several employees in an organization who
    manage and perform different operations. It’s mandatory for an organization to
    assign different access levels to their employees according to their responsibilities.
    To aid this, the Arduino IoT Cloud has a role-based access control system for
    organizations, where they can easily assign their employees access and manage
    it according to their job description.
  prefs: []
  type: TYPE_NORMAL
- en: Role-based access control ensures the safety and security of your devices and
    protects them from human mistakes and errors. With the help of role-based access
    control, you can share access among teams for project collaboration and assign
    device access to members at different levels, according to their management responsibility.
  prefs: []
  type: TYPE_NORMAL
- en: Another feature of the Arduino IoT Cloud enterprise base plan is fleet management.
    The Arduino IoT Cloud introduced this feature to manage a large number of devices
    effectively and easily. Fleet management contains a device filtering and grouping
    feature, bulk OTA updates, hierarchies, and many other features.
  prefs: []
  type: TYPE_NORMAL
- en: In this subsection, we discussed role-based access control and fleet management
    for devices. In the following subsection, we will explore machine learning tools
    and the Portenta X8 Manager.
  prefs: []
  type: TYPE_NORMAL
- en: Machine learning tools and the Portenta X8 Manager
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: With the rapid growth of AI and machine learning, it’s now become vital for
    IoT solutions to integrate machine learning into their solutions so that customers
    can benefit from its power to improve their operations, such as predictive maintenance,
    anomaly detection, and quality control.
  prefs: []
  type: TYPE_NORMAL
- en: The Arduino team collaborated with Edge Impulse to provide machine learning
    integration in the Arduino IoT Cloud. In Edge Impulse, you can train models using
    devices’ data, by importing them into Edge Impulse or directly connecting the
    devices, such as Arduino Nano 33 BLE Sense, Arduino Nicla Vision, Arduino Portenta
    H7, or any Linux-supported device. This feature helps developers and solution
    providers to train a model using a graphical user interface, with the help of
    a small amount of code.
  prefs: []
  type: TYPE_NORMAL
- en: Then, you can deploy these models, using TinyML, to Arduino-supported development
    boards. For further details, please visit [https://cloud.arduino.cc/machine-learning-tools/](https://cloud.arduino.cc/machine-learning-tools/).
    In the enterprise base plan, Arduino charges USD 500 per month for machine learning
    services, which include 60 minutes per job and a total of 1,000 minutes per month.
  prefs: []
  type: TYPE_NORMAL
- en: The Portenta X8 Manager is a specialized extension integrated with the Arduino
    IoT Cloud, designed to empower users in safeguarding and managing their Portenta
    X8 Linux distribution. It facilitates essential functionalities such as **secure
    maintenance**, **containerized application deployment**, and secure **OTA** differential
    updates.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Portenta X8 Manager is designed for businesses and organizations that need
    to deploy and manage large fleets of Portenta X8 devices securely and reliably.
    It provides a number of features that make it ideal for enterprise use, including
    the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Secure OTA updates**: The Portenta X8 Manager uses a secure OTA update process
    to ensure that devices are always up to date with the latest firmware and security
    patches.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Containerized applications**: The Portenta X8 Manager allows users to deploy
    and manage containerized applications on their devices. This makes it easy to
    deploy and update complex applications without having to reprogram the entire
    device.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Role-based access control** (**RBAC**): The Portenta X8 Manager supports
    RBAC so that organizations can control who has access to their devices and applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Audit logging**: The Portenta X8 Manager provides audit logging so that organizations
    can track all activity on their devices and applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Portenta X8 Manager is available as a paid add-on to the Arduino IoT Cloud
    enterprise base plan, which costs USD 250 per month. For more details, refer to
    the **Enterprise Base Plan** tab on the Arduino IoT Cloud plans page under the
    **For** **business** tab.
  prefs: []
  type: TYPE_NORMAL
- en: In this subsection, we dived deep into machine learning and the Portenta X8
    Manager add-on for the Arduino IoT Cloud enterprise base plan. In the following
    section, we will cover Arduino PRO hardware and software tools in detail.
  prefs: []
  type: TYPE_NORMAL
- en: Arduino PRO
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Arduino PRO is a separate line of products that contain professional tools in
    both the hardware and software categories. These tools are specially designed
    to carry out industrial operations, such as those found in aviation, industry
    4.0, healthcare, robotics, smart cities, and smart homes/offices. We will explore
    both the hardware and software tools step by step in the following subsections.
  prefs: []
  type: TYPE_NORMAL
- en: Arduino PRO hardware
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Arduino PRO is a line of products offered by Arduino LLC, the company behind
    the popular open source Arduino platform. Arduino PRO boards are designed for
    users who have a more advanced understanding of microcontrollers and electronics,
    and who are looking for boards that offer additional features and capabilities
    compared to the standard Arduino boards. These boards are often used by makers,
    engineers, and professionals for various applications.
  prefs: []
  type: TYPE_NORMAL
- en: In the following subsections, we will only explore three types of hardware;
    for a complete list, please visit [https://www.arduino.cc/pro/platform-hardware/](https://www.arduino.cc/pro/platform-hardware/).
  prefs: []
  type: TYPE_NORMAL
- en: The Portenta family
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Arduino Portenta family is a series of high-performance industry-rated boards.
    These boards are designed to enable simultaneous execution of high-level code,
    such as protocol stacks, machine learning, or even interpreted languages such
    as MicroPython or JavaScript, along with low-level, real-time tasks. The Portenta
    family adds two 80-pin high-density connectors at the bottom of the board, ensuring
    scalability for a wide range of applications. *Figure 14**.2* shows all the series
    of development boards from the Portenta family. All the details of these boards
    will be discussed step by step in the following paragraphs.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.2 – The Portenta series development boards](img/B19752_14_02.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.2 – The Portenta series development boards
  prefs: []
  type: TYPE_NORMAL
- en: 'A few of the development boards available in the Arduino Portenta family are
    shown in *Figure 14**.2*, and the following list details some of these boards:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Portenta X8**: A powerful, industrial-grade **system-on-module** (**SOM**)
    with a Linux OS preloaded onboard. It is capable of running device-independent
    software thanks to its modular container architecture. It also offers onboard
    Wi-Fi/Bluetooth Low Energy connectivity for secure OS/application OTA updates.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Portenta Max Carrier**: This carrier board transforms Portenta modules into
    single-board computers or reference designs that enable edge AI for high-performance
    industrial, building automation, and robotics applications.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Portenta H7 Lite Connected**: This is designed to provide the computational
    power of Portenta H7 for AI applications and low-latency control solutions. It
    is more cost-effective than the full H7 module by removing the high-resolution
    video interface feature.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Portenta H7 Lite**: A board that allows you to build your next smart project.
    It is compatible with the Arduino IoT Cloud and enables you to connect devices,
    visualize data, and control and share your projects from anywhere in the world.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Portenta Machine Control**: A fully centralized, low-power industrial control
    unit that is capable of driving equipment and machinery. It can be programmed
    using the Arduino framework or other embedded development platforms.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that these are just a few examples from the Arduino Portenta family. You
    can find more information about these boards and other related products at [https://store.arduino.cc/collections/portenta-family](https://store.arduino.cc/collections/portenta-family).
  prefs: []
  type: TYPE_NORMAL
- en: In this subsection, we explored the Portenta Series, which is specially designed
    for industrial use cases and also supports different programming languages, including
    MicroPython and JavaScript. It also gives you the option to perform concurrent
    operations in parallel. In the following subsection, we will explore the Nicla
    family, which is specially designed for voice and vision.
  prefs: []
  type: TYPE_NORMAL
- en: The Nicla family
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Arduino Nicla family is a series of industrial-oriented boards designed
    for low-power AI, machine learning, and machine vision applications. These boards
    are fully equipped with industrial-grade sensors and are designed to work as autonomous,
    battery-operated systems. *Figure 14**.3* shows Nicla Vision, but you can visit
    the official website to see other variants from the Nicla family.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.3 – The Nicla Vision development board](img/B19752_14_03.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.3 – The Nicla Vision development board
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some of the boards available in the Arduino Nicla family:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Nicla Voice**: Arduino PRO’s smallest form factor board to date. It can be
    used to upgrade or retrofit existing machines and systems. It is particularly
    suitable for wearable products, such as helmets and smart bands, due to its long
    battery-powered autonomy.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Nicla Vision**: A square-shaped board, with a 2 Mega Pixel color camera sensor
    and other built-in devices to collect various environmental data. It is suitable
    for machine-vision-based applications at the edge.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Note that these are just a few examples from the Arduino Nicla family. You can
    find more information about these boards and other related products at [https://www.arduino.cc/pro/hardware-nicla-family](https://www.arduino.cc/pro/hardware-nicla-family).
  prefs: []
  type: TYPE_NORMAL
- en: In this subsection, we discussed Nicla Voice and Nicla Vision, and both these
    development boards are specially designed for industrial use cases where voice
    and vision are mandatory requirements to control the machine process, such as
    logistics and loading and unloading robots. In the following subsection, we will
    discuss the latest product from Arduino, which is Opta PLC.
  prefs: []
  type: TYPE_NORMAL
- en: Opta PLC
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The Arduino Opta is a secure, easy-to-use micro PLC with industrial IoT capabilities,
    designed in partnership with Finder. It allows professionals to scale up automation
    projects while leveraging the open and widely known Arduino ecosystem. The Opta
    board is equipped with a powerful STM32H747XI dual-core Cortex®-M7 + M4 MCU, enabling
    real-time control, monitoring, and predictive maintenance applications. It supports
    secure OTA firmware updates and establishes data security from the hardware to
    the cloud, through its onboard security element and X.509 standard compliance.
    The Opta board also offers various connectivity options, such as Ethernet, Wi-Fi,
    and Bluetooth Low Energy. *Figure 14**.4* shows Opta PLC; other variants have
    the same shape but differ in communication features.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.4 – Opta PLC](img/B19752_14_04.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.4 – Opta PLC
  prefs: []
  type: TYPE_NORMAL
- en: 'The Arduino Opta family includes the following variants and shown in *Figure
    14**.4* (all variants look are same in shape but different in connectivity so
    here I just added one picture):'
  prefs: []
  type: TYPE_NORMAL
- en: '**Opta Lite**: This variant features Ethernet onboard and USB-C programming
    ports'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Opta RS485**: In addition to Ethernet, this variant also provides an RS485
    half-duplex connectivity interface'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Opta Wi-Fi**: The most versatile variant, this offers Wi-Fi/Bluetooth Low
    Energy connectivity'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: To program the Arduino Opta board, you can use the Arduino PLC IDE, which supports
    the five programming languages defined by the IEC 61131-3 standard – Ladder, Functional
    Block Diagram, Structured Text, Sequential Function Chart, and Instruction List.
    This makes PLC programming easy and allows you to quickly code PLC applications,
    or port existing ones, to Arduino Opta or Portenta Machine Control.
  prefs: []
  type: TYPE_NORMAL
- en: For more information about the Arduino Opta family and its features, visit [https://www.arduino.cc/pro/hardware-arduino-opta](https://www.arduino.cc/pro/hardware-arduino-opta).
  prefs: []
  type: TYPE_NORMAL
- en: In these subsections, we have explored the three main top-of-the-line Arduino
    PRO hardware products. In the following section, we will explore the Arduino PRO
    software tools.
  prefs: []
  type: TYPE_NORMAL
- en: Arduino PRO software
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Along with its hardware tools, Arduino developed software in its Pro series,
    which includes the **IoT Cloud**, **IDE 2**, **Arduino CLI application**, the
    **Arduino PLC IDE**, and the **Speech Recognition Engine** library. For complete
    details about these tools, visit [https://www.arduino.cc/pro/platform-software/](https://www.arduino.cc/pro/platform-software/).
  prefs: []
  type: TYPE_NORMAL
- en: In the following subsections, we will cover the Arduino PLC IDE and the Speech
    Recognition Engine.
  prefs: []
  type: TYPE_NORMAL
- en: Arduino PLC IDE
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: 'The Arduino PLC IDE is an integrated development environment that allows you
    to program Portenta Machine Control and Arduino Opta, using the five programming
    languages defined by the IEC 61131-3 standard. These languages are as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Ladder Diagram
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Functional Block Diagram
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Structured Text
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sequential Function Chart
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Instruction List
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Arduino PLC IDE interface is shown in *Figure 14**.5*. which is totally
    different from the Arduino IDE. It supports various programming interfaces, as
    mentioned in the previous bullet points but one of the famous programming interfaces
    for PLC is the Ladder Diagram, which is specially used by PLC engineers to program
    the PLC.
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 14.5 – The Arduino PLC IDE](img/B19752_14_05.jpg)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14.5 – The Arduino PLC IDE
  prefs: []
  type: TYPE_NORMAL
- en: The Arduino PLC IDE offers an intuitive user interface (shown in *Figure 14**.5*),
    complete with a suite of debugging tools, including watch windows, breakpoints
    with step-by-step execution, triggers, oscilloscope functionality, and live debug
    mode. It further extends its capabilities with rapid porting solutions and enables
    the integration of PLC programming alongside Arduino sketches, through an integrated
    sketch editor. This synergy permits the effortless exchange of variables between
    these two environments, facilitating the inclusion of deterministic cyclic tasks
    and multitasking within your software application.
  prefs: []
  type: TYPE_NORMAL
- en: The Arduino PLC IDE supports various industrial fieldbus protocols, including
    Modbus RTU, Modbus TCP, and CANOpen. It offers a wide set of pre-installed libraries
    and function blocks, as well as the option to create custom libraries. To program
    with IEC 61131-3, you will need to unlock the hardware with a lifetime license
    key, available at the Arduino Official Store.
  prefs: []
  type: TYPE_NORMAL
- en: For more information about the Arduino PLC IDE and its features, please visit
    the official page at [https://www.arduino.cc/pro/software-plc-ide/](https://www.arduino.cc/pro/software-plc-ide/).
  prefs: []
  type: TYPE_NORMAL
- en: In this subsection, we discussed the Arduino PLC IDE, which is specially designed
    for Arduino Opta PLC to program it. The Arduino PLC supports five different languages
    to program in. In the following subsection, we will explore the Speech Recognition
    Engine library.
  prefs: []
  type: TYPE_NORMAL
- en: The Speech Recognition Engine library
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: The **Arduino Speech Recognition Engine** is a powerful software library that
    enables you to develop projects based on speech recognition. It allows you to
    interact with machines using voice commands, without the need for vocal training
    or an internet connection. The library was developed by Cyberon, a worldwide leader
    in speech recognition, and is designed to be easy to use and compatible with multiple
    Arduino boards and the Arduino IDE. It supports voice commands in over 40 languages,
    regardless of the speaker’s voice, tone, or accent. You can configure multiple
    wake-up words and sequences without retraining for different users.
  prefs: []
  type: TYPE_NORMAL
- en: The Speech Recognition Engine is ideal for various applications, such as smart
    buildings and home automation, information kiosks, vending machines, smart beds
    in hospitals, and emergency alert systems. It can listen to anyone speaking to
    it while ignoring background noise.
  prefs: []
  type: TYPE_NORMAL
- en: 'To get started with the Arduino Speech Recognition Engine, you can visit the
    official Arduino website: [https://www.arduino.cc/pro/software-speech-recognition-engine/](https://www.arduino.cc/pro/software-speech-recognition-engine/).
    It offers a robust library featuring an integrated AI/ML engine that excels in
    phoneme-based modeling. This advanced library enables the recognition of multiple
    wake-up words and sequences of commands without the need for vocal training. The
    library is compatible with multiple Arduino boards and requires no additional
    hardware, software, or internet connectivity.'
  prefs: []
  type: TYPE_NORMAL
- en: Note that there is also another Arduino board called Nicla Voice, which was
    discussed in the *Arduino PRO hardware* section. This board implements always-on
    speech and motion recognition at the edge. It integrates a neural decision processor
    from Syntiant (NDP120) to run multiple AI algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: In the Arduino PRO section and subsections, we explored the main Arduino PRO
    top-of-the-line development boards, including the Portenta series, the Nicla series,
    and the OPTA PLC series. We also explored Arduino PRO software, including the
    Arduino PLC IDE and the Speech Recognition Engine library. In the following section,
    we will cover some further resources for your learning.
  prefs: []
  type: TYPE_NORMAL
- en: Further resources and insights
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Arduino continuously evolves its products and services according to the latest
    demands and trends. Hence, it’s difficult to cover everything. So far, I have
    just mentioned some useful resources that will help you to keep yourself updated
    with the latest news and features.
  prefs: []
  type: TYPE_NORMAL
- en: 'It’s best to keep an eye on the Arduino official blog for the latest news related
    to its products and updates at [https://blog.arduino.cc/](https://blog.arduino.cc/).
    Communities always share and help users to learn, so become part of the fastest-growing
    community by joining the Arduino Community forum, which can be found here: [https://forum.arduino.cc/](https://forum.arduino.cc/).
    You can also share your projects and learn from others’ projects at Arduino Project
    Hub: [https://projecthub.arduino.cc](https://projecthub.arduino.cc). For instant
    communication with fellow community members, you can join the Discord channel:
    [https://discord.gg/jQJFwW7](https://discord.gg/jQJFwW7).'
  prefs: []
  type: TYPE_NORMAL
- en: Along with the Arduino community, you can also be part of some other globally
    famous maker communities, such as [https://Hackster.io](https://Hackster.io) and
    [https://instructables.com/](https://instructables.com/). On these platforms,
    you will find the latest projects along with complete descriptions, and they are
    a good way to keep yourself updated. After learning from these communities, it’s
    your turn to submit your DIY projects to them to educate other community members.
    The two aforementioned communities also host contests in different categories;
    try to participate in them.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a list of other Arduino resources that will help you to further your
    learning:'
  prefs: []
  type: TYPE_NORMAL
- en: '*Getting Started with Arduino* *products*: [https://www.arduino.cc/en/Guide](https://www.arduino.cc/en/Guide)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Documentation: [https://docs.arduino.cc/](https://docs.arduino.cc/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Arduino Cloud documentation: [https://cloud.arduino.cc/resources](https://cloud.arduino.cc/resources)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'A reference to the Arduino programming language: [https://www.arduino.cc/reference/en/](https://www.arduino.cc/reference/en/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Built-in examples of Arduino IDE documentation: [https://docs.arduino.cc/built-in-examples/](https://docs.arduino.cc/built-in-examples/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Built-in libraries and their example documentation: [https://docs.arduino.cc/library-examples/](https://docs.arduino.cc/library-examples/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Arduino official support and knowledge base: [https://support.arduino.cc/hc/en-us](https://support.arduino.cc/hc/en-us)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Arduino Education: [https://www.arduino.cc/education](https://www.arduino.cc/education)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Hardware: [https://www.arduino.cc/en/hardware](https://www.arduino.cc/en/hardware)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Pro hardware: [https://www.arduino.cc/pro](https://www.arduino.cc/pro)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In this section, we explored the different online resources that will help you
    to keep yourself updated with new developments, as well as become part of the
    online maker communities, keeping yourself engaged for further learning.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this chapter, we explored different pricing plans for individuals, educational
    institutes, and enterprise organizations. All the plans were discussed in depth,
    and we also compared the plans to explore further differences. The Arduino IoT
    Cloud provides features with different thresholds for different plans, according
    to users’ needs. Then, we explored the Arduino PRO software and hardware tools
    in depth, allowing you to make informed decisions when developing industrial solutions.
    Finally, we explored further resources that can provide you with the latest news
    and updates about product developments, and we also shared different community
    resources that a user can benefit from by becoming a member.
  prefs: []
  type: TYPE_NORMAL
- en: So, after reading this chapter, you will be able to identify which pricing plan
    you need for your usage and also guide your organization or customers, according
    to their needs, on which Arduino Cloud plan is suitable for them. You also now
    know the Arduino PRO hardware development boards, including the Portenta, Nicla,
    and Opta series, as well as Arduino PRO software, including the Arduino PLC IDE
    and the Speech Recognition Engine. This Pro line will help you to identify and
    choose specific hardware and software tools for your professional and industrial-grade
    solutions. Finally, you now know how to keep yourself updated by following the
    links provided in the *Further resources and* *insights* section.
  prefs: []
  type: TYPE_NORMAL
- en: As we reach the end of *Arduino IoT Cloud for Developers*, I hope this journey
    has been as enlightening and rewarding for you as it has been for me. The world
    of IoT is a realm of limitless possibilities, where the things around us become
    more intelligent, responsive, and interconnected.
  prefs: []
  type: TYPE_NORMAL
- en: Through these pages, we explored the fundamentals of IoT, delved deep into the
    capabilities of the Arduino IoT Cloud, and brought our knowledge to life through
    hands-on projects. We embraced the power of data exchange, advanced scripting,
    and practical applications that enhance our lives.
  prefs: []
  type: TYPE_NORMAL
- en: Remember that IoT development is a continuous adventure, with countless opportunities
    waiting for you. As you move forward, keep experimenting, creating, and innovating.
    The world needs your ideas, your solutions, and your vision for a smarter, more
    connected future.
  prefs: []
  type: TYPE_NORMAL
- en: Whether you’re a novice or an experienced developer, I encourage you to stay
    curious, keep learning, and never stop exploring. The intersection of IoT and
    Arduino is a place where innovation thrives, and it’s now your playground.
  prefs: []
  type: TYPE_NORMAL
- en: Thank you for embarking on this journey with me. Here’s to the endless possibilities
    that IoT and the Arduino IoT Cloud bring to our lives. The future is yours to
    create.
  prefs: []
  type: TYPE_NORMAL
