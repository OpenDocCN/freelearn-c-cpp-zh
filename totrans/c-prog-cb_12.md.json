["```cpp\nfp = fopen (argv[1], \"w\");\n```", "```cpp\nprintf(\"Enter content for the file\\n\");\ngets(str);\n```", "```cpp\nwhile(strcmp(str, \"stop\") !=0)\n```", "```cpp\nfputs(str,fp);\n```", "```cpp\nfclose(fp);\n```", "```cpp\n#include <string.h>\n#include <stdio.h>\n#include <stdlib.h>\n\nvoid main (int argc, char* argv[])\n{\n   char str[255];\n   FILE *fp;\n\n  fp = fopen (argv[1], \"w\");\n  if (fp == NULL) {\n     perror (\"An error occurred in creating the file\\n\");\n    exit(1);\n  }\n  printf(\"Enter content for the file\\n\");\n  gets(str);\n  while(strcmp(str, \"stop\") !=0){\n      fputs(str,fp);\n      gets(str);\n  }\n  fclose(fp);\n}\n```", "```cpp\nD:\\CBook>gcc createtextfile.c -o createtextfile\n```", "```cpp\nD:\\CBook>createtextfile textfile.txt\nEnter content for the file\nI am trying to create a sequential file. it is through C programming.   It is very hot today\nI have a cat.  do you like animals?    It might rain\nThank you. bye\nstop\n```", "```cpp\nfp = fopen (argv [1],\"r\");\n```", "```cpp\nif (fp == NULL) {\n    printf(\"%s file does not exist\\n\", argv[1]);\n    exit(1);\n}\n```", "```cpp\nwhile (!feof(fp))\n```", "```cpp\nfgets(buffer, BUFFSIZE, fp);\nputs(buffer);\n```", "```cpp\nfclose(fp);\n```", "```cpp\n#include <stdio.h>\n#include <stdlib.h>\n\n#define BUFFSIZE 255\n\nvoid main (int argc, char* argv[])\n{\n   FILE *fp;\n   char buffer[BUFFSIZE];\n\n  fp = fopen (argv [1],\"r\");\n  if (fp == NULL) {\n    printf(\"%s file does not exist\\n\", argv[1]);\n    exit(1);\n  }\n  while (!feof(fp))\n  {\n    fgets(buffer, BUFFSIZE, fp);\n    puts(buffer);\n  }\n  fclose(fp);\n}\n```", "```cpp\nD:\\CBook>gcc readtextfile.c -o readtextfile\n```", "```cpp\nD:\\CBook>readtextfile textfile.txt\nI am trying to create a sequential file. it is through C programming.   It is very hot today. I have a cat.  do you like animals?    It might rain. Thank you. bye\n```", "```cpp\nstruct data{\n    char str[ 255 ];\n};\n```", "```cpp\nfp = fopen (argv[1], \"wb\");\n```", "```cpp\nif (fp == NULL) {\n    perror (\"An error occurred in creating the file\\n\");\n    exit(1);\n}\n```", "```cpp\nprintf(\"Enter file content:\\n\");\ngets(line.str);\n```", "```cpp\nwhile(strcmp(line.str, \"stop\") !=0){\n    fwrite( &line, sizeof(struct data), 1, fp );\n```", "```cpp\nfclose(fp);\n```", "```cpp\n#include <string.h>\n#include <stdio.h>\n#include <stdlib.h>\n\nstruct data{  \n    char str[ 255 ];  \n};\n\nvoid main (int argc, char* argv[])\n{\n    FILE *fp;\n    struct data line;\n    fp = fopen (argv[1], \"wb\");\n    if (fp == NULL) {\n        perror (\"An error occurred in creating the file\\n\");            \n        exit(1);\n    }\n    printf(\"Enter file content:\\n\");\n    gets(line.str);\n    while(strcmp(line.str, \"stop\") !=0){\n        fwrite( &line, sizeof(struct data), 1, fp );\n        gets(line.str);\n    }\n    fclose(fp);\n}\n```", "```cpp\nD:\\CBook>gcc createrandomfile.c -o createrandomfile\n```", "```cpp\nD:\\CBook>createrandomfile random.data\nEnter file content:\nThis is a random file. I am checking if the code is working\nperfectly well. Random file helps in fast accessing of\ndesired data. Also you can access any content in any order.\nstop\n```", "```cpp\nstruct data{\n    char str[ 255 ];\n};\n```", "```cpp\nfp = fopen (argv[1], \"rb\");\n```", "```cpp\nif (fp == NULL) {\n    perror (\"An error occurred in opening the file\\n\");\n    exit(1);\n}\n```", "```cpp\nfseek(fp, 0L, SEEK_END); \nn = ftell(fp);\nnol=n/sizeof(struct data);\n```", "```cpp\nfor (i=1;i<=nol;i++)\nfread(&line,sizeof(struct data),1,fp);\n```", "```cpp\nputs(line.str);\n```", "```cpp\nfclose(fp);\n```", "```cpp\n#include <string.h>\n#include <stdio.h>\n#include <stdlib.h>\n\nstruct data{       \n    char str[ 255 ];  \n};\n\nvoid main (int argc, char* argv[])\n{\n    FILE *fp;\n    struct data line;\n    int n,nol,i;\n    fp = fopen (argv[1], \"rb\");\n    if (fp == NULL) {\n        perror (\"An error occurred in opening the file\\n\");\n        exit(1);\n    }\n    fseek(fp, 0L, SEEK_END);      \n    n = ftell(fp);\n    nol=n/sizeof(struct data);\n    rewind(fp);\n    printf(\"The content in file is :\\n\");\n    for (i=1;i<=nol;i++)\n    {\n        fread(&line,sizeof(struct data),1,fp);\n        puts(line.str);\n    }\n    fclose(fp);\n}\n```", "```cpp\nD:\\CBook>gcc readrandomfile.c -o readrandomfile\n```", "```cpp\nD:\\CBook>readrandomfile random.data\nThe content in file is :\nThis is a random file. I am checking if the code is working\nperfectly well. Random file helps in fast accessing of\ndesired data. Also you can access any content in any order.\n```", "```cpp\nfp = fopen (argv [1],\"r\");\nfq = fopen (argv[2], \"w\");\n```", "```cpp\nif (fp == NULL) {\n    printf(\"%s file does not exist\\n\", argv[1]);\n    exit(1);\n}\nif (fq == NULL) {\n    perror (\"An error occurred in creating the file\\n\");\n    exit(1);\n}\n```", "```cpp\nwhile (!feof(fp))\nfgets(buffer, BUFFSIZE, fp);\n```", "```cpp\nn=strlen(buffer);\n```", "```cpp\nfor(i=0;i<n;i++)\n```", "```cpp\nbuffer[i]=buffer[i]+45;\n```", "```cpp\nfputs(buffer,fq);\n```", "```cpp\nfclose (fp);\nfclose (fq);\n```", "```cpp\n#include <stdio.h>\n#include <stdlib.h>\n#include <string.h> \n#define BUFFSIZE 255\nvoid main (int argc, char* argv[])\n{\n    FILE *fp,*fq;\n    int  i,n;\n    char buffer[BUFFSIZE];\n    fp = fopen (argv [1],\"r\");\n    if (fp == NULL) {\n        printf(\"%s file does not exist\\n\", argv[1]);\n        exit(1);\n    }\n    fq = fopen (argv[2], \"w\");                    if (fq == NULL) {\n        perror (\"An error occurred in creating the file\\n\");\n        exit(1);\n    }\n    while (!feof(fp))\n    {\n        fgets(buffer, BUFFSIZE, fp);\n        n=strlen(buffer);\n        for(i=0;i<n;i++)\n            buffer[i]=buffer[i]+45;   \n        fputs(buffer,fq);\n    }\n    fclose (fp);\n    fclose (fq); \n}\n```", "```cpp\nD:\\CBook>gcc decryptfile.c -o decryptfile\n```", "```cpp\nD:\\CBook>type encrypted.txt\n≤4@≤GEL<A:≤GB≤6E84G8≤4≤F8DH8AG<4?≤9<?8≤<G≤<F≤G;EBH:;≤≤CEB:E4@@<A:≤≤≤G≤<F≤I8EL≤;BG≤GB74L≤;4I8≤4≤64G≤≤7B≤LBH≤?<>8≤4A<@4?F≤≤≤≤G≤@<:;G≤E4<A';4A>≤LBH≤5L8\n```", "```cpp\nD:\\CBook>decryptfile encrypted.txt originalfile.txt\n```", "```cpp\nD:\\CBook>type originalfile.txt\nI am trying to create a sequential file. it is through C programming.   It is very hot today. I have a cat.  do you like animals?    It might rain. Thank you. bye\n```"]