- en: '*Preface*'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*前言*'
- en: About
  id: totrans-1
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于
- en: This section briefly introduces the author and coverage of the book.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节简要介绍了作者和本书的内容。
- en: About the Book
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于本书
- en: Your experience and knowledge always influence the approach you take and the
    tools you use to write your programs. With a sound understanding of how to approach
    your goal and what software paradigms to use, you can create high-performing applications
    quickly and efficiently.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 你的经验和知识始终会影响你采取的方法和编写程序时使用的工具。通过对如何实现目标以及使用哪些软件范式有良好的理解，你可以快速高效地创建高性能的应用程序。
- en: In this two-part book, you'll discover the untapped features of object-oriented
    programming and use it with other software tools to code fast and efficient applications.
    The first part of the book begins with a discussion on how OOP is used today and
    moves on to analyze the ideas and problems that OOP doesn't address. It continues
    by deconstructing the complexity of OOP, showing you its fundamentally simple
    core. You'll see that, by using the distinctive elements of OOP, you can learn
    to build your applications more easily.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在这本两卷书中，你将发现面向对象编程未被充分利用的特性，并使用其他软件工具来快速高效地编写应用程序。本书的第一部分从讨论面向对象编程的当前应用开始，然后分析面向对象编程没有解决的问题。接着，它通过分解面向对象编程的复杂性，向你展示其根本上的简单核心。你会发现，通过使用面向对象编程的独特元素，你可以学会更轻松地构建你的应用程序。
- en: The next part of this book talks about acquiring the skills to become a better
    programmer. You'll get an overview of how various tools, such as version control
    and build management, help make your life easier. This book also discusses the
    pros and cons of other programming paradigms, such as aspect-oriented programming
    and functional programming, and helps to select the correct approach for your
    projects. It ends by talking about the philosophy behind designing software and
    what it means to be a "good" developer.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本书接下来的部分将讨论获得成为更好的程序员所需的技能。你将了解各种工具，如版本控制和构建管理，如何帮助你更容易地生活。本书还讨论了其他编程范式（如面向方面编程和函数式编程）的优缺点，并帮助你为项目选择正确的方法。最后，本书讨论了设计软件背后的哲学以及成为一名“优秀”的开发者意味着什么。
- en: By the end of this two-part book, you will have learned that OOP is not always
    complex, and you will know how you can evolve into a better programmer by learning
    about ethics, teamwork, and documentation.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 到本书两卷结束的时候，你将了解到面向对象编程并不总是复杂的，你将知道如何通过学习道德、团队合作和文档来成为一个更好的程序员。
- en: About the Author
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 关于作者
- en: '**Graham Lee** is an experienced programmer and writer. He has written books
    including *Professional Cocoa Application Security*, *Test-Driven iOS Development*,
    *APPropriate Behaviour*, and *APPosite Concerns*. He is a developer who''s been
    doing this stuff for long enough to want to start telling other people about the
    mistakes he''s made, in the hope that they''ll avoid repeating them. In his case,
    this means having worked for about 12 years as a professional. His first programming
    experience can hardly be called professional at all: that was done in BASIC on
    a Dragon 32 microcomputer. He''s been paid for software written in Perl, Python,
    Bash, LISP, Pascal, C, Objective-C, Java, Applescript, Ruby, C++, JavaScript,
    and probably some other things.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '**格雷厄姆·李**是一位经验丰富的程序员和作家。他撰写了包括《专业Cocoa应用程序安全》、《测试驱动iOS开发》、《APPropriate Behaviour》和《APPosite
    Concerns》在内的书籍。他是一位从业时间足够长，以至于想要开始告诉其他人他犯过的错误，希望他们能避免重蹈覆辙的开发者。在他的情况下，这意味着他作为一名专业人士工作了大约12年。他的第一次编程经历几乎不能称为专业：那是在Dragon
    32微型计算机上用BASIC完成的。他为用Perl、Python、Bash、LISP、Pascal、C、Objective-C、Java、Applescript、Ruby、C++、JavaScript编写的软件获得了报酬，可能还有一些其他的东西。'
- en: Please find me on *Twitter* ([https://twitter.com/iwasleeg](https://twitter.com/iwasleeg)),
    *quitter* ([https://quitter.se/leeg](https://quitter.se/leeg)), or *my blog* ([https://sicpers.info](https://quitter.se/leeg))
    to comment or query anything here.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 请在*Twitter*（[https://twitter.com/iwasleeg](https://twitter.com/iwasleeg)）、*quitter*（[https://quitter.se/leeg](https://quitter.se/leeg)）或*我的博客*（[https://sicpers.info](https://quitter.se/leeg)）上找到我，对这里的内容进行评论或提问。
- en: Learning Objectives
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学习目标
- en: Untangle the complexity of OOP by breaking it down to its essential building
    blocks.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将其分解为其基本构建块，解开面向对象编程的复杂性。
- en: Realize the full potential of OOP to design efficient, maintainable programs.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 充分发挥面向对象编程（OOP）的潜力，设计高效、可维护的程序。
- en: Utilize coding best practices, including **Test-Driven Development** (**TDD**),
    pair programming, and code reviews, to improve your work.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 利用编码最佳实践，包括**测试驱动开发**（**TDD**）、结对编程和代码审查，以提高你的工作质量。
- en: Use tools, such as source control and IDEs, to work more efficiently.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用工具，如版本控制和集成开发环境（IDEs），以提高工作效率。
- en: Learn how to most productively work with other developers.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习如何与开发者最有效地合作。
- en: Build your own software development philosophy.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建你自己的软件开发哲学。
- en: Audience
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 目标受众
- en: This book is ideal for programmers who want to understand the philosophy behind
    creating software and what it means to be "good" at designing software. Programmers
    who want to deconstruct the OOP paradigm and see how it can be reconstructed in
    a clear, straightforward way will also find this book useful. To understand the
    ideas expressed in this book, you must be an experienced programmer who wants
    to evolve their practice.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本书非常适合想要理解软件开发背后的哲学以及“设计软件优秀”意味着什么的程序员。想要解构面向对象（OOP）范式并看到它如何以清晰、直接的方式重建的程序员也会发现这本书很有用。要理解本书中表达的思想，你必须是一位经验丰富的程序员，并且希望发展自己的实践。
- en: Approach
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 方法
- en: This book takes an autobiographical approach to explain the various concepts.
    The information in this book is based on the author's opinions and desired future
    directions. The author introduces key ideas and concepts, before going on to explain
    them in detail, outline their pros and cons, and guide you in how to most effectively
    use them in your own development.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本书采用自传体方法来解释各种概念。本书中的信息基于作者的观点和期望的未来方向。作者介绍了关键思想和概念，然后详细解释它们，概述它们的优缺点，并指导你如何在你的开发中最有效地使用它们。
- en: Acknowledgements
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 致谢
- en: This book is the result of a long-running research activity, and I hope that
    any work I have built upon is appropriately cited. Nonetheless, the ideas here
    are not mine alone (that distinction is reserved for the mistakes), and many conversations
    online, at conferences, and with colleagues have shaped the way I think about
    objects. A complete list would be impossible to construct, and an incomplete list
    would be unfair. So, I'll just say thank you.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是长期研究活动的成果，我希望我所依赖的任何工作都得到了适当的引用。尽管如此，这里的思想并非完全是我个人的（这种区别留给了错误），而且许多在线对话、会议和与同事的交流塑造了我对对象思考的方式。构建一个完整的列表是不可能的，一个不完整的列表也是不公平的。所以，我只想说谢谢。
