["```cpp\ndouble average(int*, int);\n```", "```cpp\ndouble average(int* array, int length) {\n  if (length <= 0) {\n    return 0;\n  }\n  double sum = 0.0;\n  for (int i = 0; i < length; i++) {\n    sum += array[i];\n  }\n  return sum / length;\n}\n```", "```cpp\n#ifndef EXTREMEC_EXAMPLES_CHAPTER_2_1_H\n#define EXTREMEC_EXAMPLES_CHAPTER_2_1_Htypedef enum {\n  NONE,\n  NORMAL,\n  SQUARED\n} average_type_t;\n// Function declaration\ndouble avg(int*, int, average_type_t);\n#endif\n```", "```cpp\n#include \"ExtremeC_examples_chapter2_1.h\"\ndouble avg(int* array, int length, average_type_t type) {\n  if (length <= 0 || type == NONE) {\n    return 0;\n  }\n  double sum = 0.0;\n  for (int i = 0; i < length; i++) {\n    if (type == NORMAL) {\n      sum += array[i];\n    } else if (type == SQUARED) {\n      sum += array[i] * array[i];\n    }\n  }\n  return sum / length;\n}\n```", "```cpp\n#include <stdio.h>\n#include \"ExtremeC_examples_chapter2_1.h\"\nint main(int argc, char** argv) {\n  // Array declaration\n  int array[5];\n  // Filling the array\n  array[0] = 10;\n  array[1] = 3;\n  array[2] = 5;\n  array[3] = -8;\n  array[4] = 9;\n  // Calculating the averages using the 'avg' function\n  double average = avg(array, 5, NORMAL);\n  printf(\"The average: %f\\n\", average);\n  average = avg(array, 5, SQUARED);\n  printf(\"The squared average: %f\\n\", average);\n  return 0;\n}\n```", "```cpp\n$ gcc -E ExtremeC_examples_chapter2_1.c\n# 1 \"ExtremeC_examples_chapter2_1.c\"\n# 1 \"<built-in>\"\n# 1 \"<command-line>\"\n# 31 \"<command-line>\"\n# 1 \"/usr/include/stdc-predef.h\" 1 3 4\n# 32 \"<command-line>\" 2\n# 1 \"ExtremeC_examples_chapter2_1.c\"\n# 1 \"ExtremeC_examples_chapter2_1.h\" 1\ntypedef enum {\n  NONE,\n  NORMAL,\n  SQUARED\n} average_type_t;\ndouble avg(int*, int, average_type_t);\n# 5 \"ExtremeC_examples_chapter2_1.c\" 2\ndouble avg(int* array, int length, average_type_t type) {\n  if (length <= 0 || type == NONE) {\n    return 0;\n  }\n  double sum = 0;\n  for (int i = 0; i < length; i++) {\n    if (type == NORMAL) {\n      sum += array[i];\n    } else if (type == SQUARED) {\n      sum += array[i] * array[i];\n    }\n  }\n  return sum / length;\n}\n$\n```", "```cpp\n$ gcc -S ExtremeC_examples_chapter2_1.c\n$ cat ExtremeC_examples_chapter2_1.s\n    .file   \"ExtremeC_examples_chapter2_1.c\"\n    .text\n    .globl  avg\n    .type   avg, @function\navg:\n.LFB0:\n    .cfi_startproc\n    pushq   %rbp\n    .cfi_def_cfa_offset 16\n    .cfi_offset 6, -16\n    movq    %rsp, %rbp\n    .cfi_def_cfa_register 6\n    movq    %rdi, -24(%rbp)\n    movl    %esi, -28(%rbp)\n    movl    %edx, -32(%rbp)\n    cmpl    $0, -28(%rbp)\n    jle .L2\n    cmpl    $0, -32(%rbp)\n    jne .L3\n.L2:\n    pxor    %xmm0, %xmm0\n    jmp .L4\n.L3:\n    ...\n.L8:\n    ...\n.L6:\n    ...\n.L7:\n    ...\n.L5:\n  ...\n.L4:\n  ...\n.LFE0:\n    .size   avg, .-avg\n    .ident  \"GCC: (Ubuntu 7.3.0-16ubuntu3) 7.3.0\"\n    .section    .note.GNU-stack,\"\",@progbits\n$\n```", "```cpp\n$ cat ExtremeC_examples_chapter2_1.s\n    .arch armv5t\n    .fpu softvfp\n    .eabi_attribute 20, 1\n    .eabi_attribute 21, 1\n    .eabi_attribute 23, 3\n    .eabi_attribute 24, 1\n    .eabi_attribute 25, 1\n    .eabi_attribute 26, 2\n    .eabi_attribute 30, 6\n    .eabi_attribute 34, 0\n    .eabi_attribute 18, 4\n    .file\t\"ExtremeC_examples_chapter2_1.s\"\n    .global    __aeabi_i2d\n    .global    __aeabi_dadd\n    .global    __aeabi_ddiv\n    .text\n    .align\t2\n    .global    avg\n    .syntax unified\n    .arm\n    .type  avg, %function\navg:\n    @ args = 0, pretend = 0, frame = 32\n    @ frame_needed = 1, uses_anonymous_args = 0\n    push    {r4, fp, lr}\n    add    fp, sp, #8\n    sub    sp, sp, #36\n    str    r0, [fp, #-32]\n    str    r1, [fp, #-36]\n    str    r2, [fp, #-40]\n    ldr    r3, [fp, #-36]\n    cmp    r3, #0\n    ble    .L2\n    ldr    r3, [fp, #-40]\n    cmp    r3, #0\n    bne    .L3\n.L2:\n    ...\n.L3:\n    ...\n.L8:\n    ...\n.L6:\n    ...\n.L7:\n    ...\n.L5:\n    ...\n.L4:\n    mov\tr0, r3\n    mov\tr1, r4\n    sub\tsp, fp, #8\n    @ sp needed\n    pop\t{r4, fp, pc}\n    .size\tavg, .-avg\n    .ident\t\"GCC: (Ubuntu/Linaro 5.4.0-6ubuntu1~16.04.9) 5.4.0 20160609\"\n    .section    .note.GNU-stack,\"\",%progbits\n$\n```", "```cpp\n$ as ExtremeC_examples_chapter2_1.s -o ExtremeC_examples_chapter2_1.o\n$\n```", "```cpp\n$ gcc -c ExtremeC_examples_chapter2_1.c\n$\n```", "```cpp\n$ gcc -c ExtremeC_examples_chapter2_1.c -o impl.o\n$ gcc -c ExtremeC_examples_chapter2_1_main.c -o main.o\n$\n```", "```cpp\n$ ld impl.o main.o\nld: warning: cannot find entry symbol _start; defaulting to 00000000004000e8\nmain.o: In function 'main':\nExtremeC_examples_chapter3_1_main.c:(.text+0x7a): undefined reference to 'printf'\nExtremeC_examples_chapter3_1_main.c:(.text+0xb7): undefined reference to 'printf'\nExtremeC_examples_chapter3_1_main.c:(.text+0xd0): undefined reference to '__stack_chk_fail'\n$\n```", "```cpp\n$ gcc impl.o main.o\n$ ./a.out\nThe average: 3.800000\nThe squared average: 55.800000\n$\n```", "```cpp\n#include <stdio.h>\n#define file 1000\nHello, this is just a simple text file but ending with .c extension!\nThis is not a C file for sure!\nBut we can preprocess it!\n```", "```cpp\n$ gcc -E sample.c\n# 1 \"sample.c\"\n# 1 \"<built-in>\" 1\n# 1 \"<built-in>\" 3\n# 341 \"<built-in>\" 3\n# 1 \"<command line>\" 1\n# 1 \"<built-in>\" 2\n# 1 \"sample.c\" 2\n# 1 \"/usr/include/stdio.h\" 1 3 4\n# 64 \"/usr/include/stdio.h\" 3 4\n# 1 \"/usr/include/_stdio.h\" 1 3 4\n# 68 \"/usr/include/_stdio.h\" 3 4\n# 1 \"/usr/include/sys/cdefs.h\" 1 3 4\n# 587 \"/usr/include/sys/cdefs.h\" 3 4\n# 1 \"/usr/include/sys/_symbol_aliasing.h\" 1 3 4\n# 588 \"/usr/include/sys/cdefs.h\" 2 3 4\n# 653 \"/usr/include/sys/cdefs.h\" 3 4\n...\n...\nextern int __vsnprintf_chk (char * restrict, size_t, int, size_t,\n       const char * restrict, va_list);\n# 412 \"/usr/include/stdio.h\" 2 3 4\n# 2 \"sample.c\" 2\nHello, this is just a simple text 1000 but ending with .c extension!\nThis is not a C 1000 for sure!\nBut we can preprocess it!\n$\n```", "```cpp\n$ cpp ExtremeC_examples_chapter2_1.c\n# 1 \"ExtremeC_examples_chapter2_1.c\"\n# 1 \"<built-in>\" 1\n# 1 \"<built-in>\" 3\n# 340 \"<built-in>\" 3\n# 1 \"<command line>\" 1\n# 1 \"<built-in>\" 2\n...\n...\n# 5 \"ExtremeC_examples_chapter2_1.c\" 2\ndouble avg(int* array, int length, average_type_t type) {\n  if (length <= 0 || type == NONE) {\n    return 0;\n  }\n  double sum = 0;\n  for (int i = 0; i < length; i++) {\n    if (type == NORMAL) {\n      sum += array[i];\n    } else if (type == SQUARED) {\n      sum += array[i] * array[i];\n    }\n  }\n  return sum / length;\n}\n$\n```", "```cpp\n$ clang -E ExtremeC_examples_chapter2_1.c  > ex2_1.i\n$ clang -E ex2_1.i\nclang: warning: ex2_1.i: previously preprocessed input\n[-Wunused-command-line-argument]\n$\n```", "```cpp\nint main() {\n  int var1 = 1;\n  double var2 = 2.5;\n  int var3 = var1 + var2;\n  return 0;\n}\n```", "```cpp\nint average(int a, int b) {\n  return (a + b) / 2;\n}\nint sum(int* numbers, int count) {\n  int sum = 0;\n  for (int i = 0; i < count; i++) {\n    sum += numbers[i];\n  }\n  return sum;\n}\n```", "```cpp\n$ gcc -c ExtremeC_examples_chapter2_3.c -o target.o\n$\n```", "```cpp\n$ nm target.o\n0000000000000000 T average\n000000000000001d T sum\n$\n```", "```cpp\n$ readelf -s target.o\nSymbol table '.symtab' contains 10 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND\n     1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ExtremeC_examples_chapter\n     2: 0000000000000000     0 SECTION LOCAL  DEFAULT    1\n     3: 0000000000000000     0 SECTION LOCAL  DEFAULT    2\n     4: 0000000000000000     0 SECTION LOCAL  DEFAULT    3\n     5: 0000000000000000     0 SECTION LOCAL  DEFAULT    5\n     6: 0000000000000000     0 SECTION LOCAL  DEFAULT    6\n     7: 0000000000000000     0 SECTION LOCAL  DEFAULT    4\n     8: 0000000000000000    29 FUNC    GLOBAL DEFAULT    1 average\n     9: 000000000000001d    69 FUNC    GLOBAL DEFAULT    1 sum\n$\n```", "```cpp\n$ objdump -d target.o\ntarget.o:     file format elf64-x86-64\nDisassembly of section .text:\n0000000000000000 <average>:\n   0:   55                      push   %rbp\n   1:   48 89 e5                mov    %rsp,%rbp\n   4:   89 7d fc                mov    %edi,-0x4(%rbp)\n   7:   89 75 f8                mov    %esi,-0x8(%rbp)\n   a:   8b 55 fc                mov    -0x4(%rbp),%edx\n   d:   8b 45 f8                mov    -0x8(%rbp),%eax\n  10:   01 d0                   add    %edx,%eax\n  12:   89 c2                   mov    %eax,%edx\n  14:   c1 ea 1f                shr    $0x1f,%edx\n  17:   01 d0                   add    %edx,%eax\n  19:   d1 f8                   sar    %eax\n  1b:   5d                      pop    %rbp\n  1c:   c3                      retq\n000000000000001d <sum>:\n  1d:   55                      push   %rbp\n  1e:   48 89 e5                mov    %rsp,%rbp\n  21:   48 89 7d e8             mov    %rdi,-0x18(%rbp)\n  25:   89 75 e4                mov    %esi,-0x1c(%rbp)\n  28:   c7 45 f8 00 00 00 00    movl   $0x0,-0x8(%rbp)\n  2f:   c7 45 fc 00 00 00 00    movl   $0x0,-0x4(%rbp)\n  36:   eb 1d                   jmp    55 <sum+0x38>\n  38:   8b 45 fc                mov    -0x4(%rbp),%eax\n  3b:   48 98                   cltq\n  3d:   48 8d 14 85 00 00 00    lea    0x0(,%rax,4),%rdx\n  44:   00\n  45:   48 8b 45 e8             mov    -0x18(%rbp),%rax\n  49:   48 01 d0                add    %rdx,%rax\n  4c:   8b 00                   mov    (%rax),%eax\n  4e:   01 45 f8                add    %eax,-0x8(%rbp)\n  51:   83 45 fc 01             addl   $0x1,-0x4(%rbp)\n  55:   8b 45 fc                mov    -0x4(%rbp),%eax\n  58:   3b 45 e4                cmp    -0x1c(%rbp),%eax\n  5b:   7c db                   jl     38 <sum+0x1b>\n  5d:   8b 45 f8                mov    -0x8(%rbp),%eax\n  60:   5d                      pop    %rbp\n  61:   c3                      retq\n$\n```", "```cpp\n#ifndef EXTREMEC_EXAMPLES_CHAPTER_2_4_DECLS_H\n#define EXTREMEC_EXAMPLES_CHAPTER_2_4_DECLS_H\nint add(int, int);\nint multiply(int, int);\n#endif\n```", "```cpp\nint add(int a, int b) {\n  return a + b;\n}\n```", "```cpp\nint multiply(int a, int b) {\n  return a * b;\n}\n```", "```cpp\n#include \"ExtremeC_examples_chapter2_4_decls.h\"\nint main(int argc, char** argv) {\n  int x = add(4, 5);\n  int y = multiply(9, x);\n  return 0;\n}\n```", "```cpp\n$ gcc -c ExtremeC_examples_chapter2_4_add.c -o add.o\n$ gcc -c ExtremeC_examples_chapter2_4_multiply.c -o multiply.o\n$ gcc -c ExtremeC_examples_chapter2_4_main.c -o main.o\n$\n```", "```cpp\n$ nm add.o\n0000000000000000 T add\n$\n```", "```cpp\n$ nm multiply.o\n0000000000000000 T multiply\n$\n```", "```cpp\n$ nm main.o\n                 U add\n                 U _GLOBAL_OFFSET_TABLE_\n0000000000000000 T main\n                 U multiply\n$\n```", "```cpp\n$ gcc add.o multiply.o main.o\n$\n```", "```cpp\n$ gcc add.o main.o\nmain.o: In function 'main':\nExtremeC_examples_chapter2_4_main.c:(.text+0x2c): undefined reference to 'multiply'\ncollect2: error: ld returned 1 exit status\n$\n```", "```cpp\n$ gcc main.o multiply.o\nmain.o: In function 'main':\nExtremeC_examples_chapter2_4_main.c:(.text+0x1a): undefined reference to 'add'\ncollect2: error: ld returned 1 exit status\n$\n```", "```cpp\n$ gcc add.o multiply.o\n/usr/lib/gcc/x86_64-linux-gnu/7/../../../x86_64-linux-gnu/Scrt1.o: In function '_start':\n(.text+0x20): undefined reference to 'main'\ncollect2: error: ld returned 1 exit status\n$\n```", "```cpp\nint add(int a, int b, int c, int d) {\n  return a + b + c + d;\n}\n```", "```cpp\n#include <stdio.h>\nint add(int, int);\nint main(int argc, char** argv) {\n  int x = add(5, 6);\n  printf(\"Result: %d\\n\", x);\n  return 0;\n}\n```", "```cpp\n$ gcc -c ExtremeC_examples_chapter2_5_add.c -o add.o\n$ gcc -c ExtremeC_examples_chapter2_5_main.c -o main.o\n$ gcc add.o main.o -o ex2_5.out\n$\n```", "```cpp\n$ ./ex2_5.out\nResult: -1885535197\n$ ./ex2_5.out\nResult: 1679625283\n$\n```", "```cpp\nint add(int a, int b, int c, int d) {\n  return a + b + c + d;\n}\n```", "```cpp\nint add(int a, int b) {\n  return a + b;\n}\n```", "```cpp\n$ gcc -c ExtremeC_examples_chapter2_6_add_1.c -o add_1.o\n$ gcc -c ExtremeC_examples_chapter2_6_add_2.c -o add_2.o\n$\n```", "```cpp\n$ objdump -d add_1.o\nadd_1.o:     file format elf64-x86-64\nDisassembly of section .text:\n0000000000000000 <add>:\n   0:   55                      push   %rbp\n   1:   48 89 e5                mov    %rsp,%rbp\n   4:   89 7d fc                mov    %edi,-0x4(%rbp)\n   7:   89 75 f8                mov    %esi,-0x8(%rbp)\n   a:   89 55 f4                mov    %edx,-0xc(%rbp)\n   d:   89 4d f0                mov    %ecx,-0x10(%rbp)\n  10:   8b 55 fc                mov    -0x4(%rbp),%edx\n  13:   8b 45 f8                mov    -0x8(%rbp),%eax\n  16:   01 c2                   add    %eax,%edx\n  18:   8b 45 f4                mov    -0xc(%rbp),%eax\n  1b:   01 c2                   add    %eax,%edx\n  1d:   8b 45 f0                mov    -0x10(%rbp),%eax\n  20:   01 d0                   add    %edx,%eax\n  22:   5d                      pop    %rbp\n  23:   c3\n$\n```", "```cpp\n$ objdump -d add_2.o\nadd_2.o:     file format elf64-x86-64\nDisassembly of section .text:\n0000000000000000 <add>:\n   0:   55                      push   %rbp\n   1:   48 89 e5                mov    %rsp,%rbp\n   4:   89 7d fc                mov    %edi,-0x4(%rbp)\n   7:   89 75 f8                mov    %esi,-0x8(%rbp)\n   a:   8b 55 fc                mov    -0x4(%rbp),%edx\n   d:   8b 45 f8                mov    -0x8(%rbp),%eax\n  10:   01 d0                   add    %edx,%eax\n  12:   5d                      pop    %rbp\n  13:   c3                      retq\n$\n```", "```cpp\n4:  89 7d fc                mov    %edi,-0x4(%rbp)\n7:  89 75 f8                mov    %esi,-0x8(%rbp)\na:  89 55 f4                mov    %edx,-0xc(%rbp)\nd:  89 4d f0                mov    %ecx,-0x10(%rbp)\n```", "```cpp\n4:  89 7d fc                mov    %edi,-0x4(%rbp)\n7:  89 75 f8                mov    %esi,-0x8(%rbp)\n```", "```cpp\n$ g++ -c ExtremeC_examples_chapter2_6_add_1.o\n$ g++ -c ExtremeC_examples_chapter2_6_add_2.o\n$ readelf -s ExtremeC_examples_chapter2_6_add_1.o\nSymbol table '.symtab' contains 9 entries:\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n   0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND\n   1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ExtremeC_examples_chapter\n   2: 0000000000000000     0 SECTION LOCAL  DEFAULT    1\n   3: 0000000000000000     0 SECTION LOCAL  DEFAULT    2\n   4: 0000000000000000     0 SECTION LOCAL  DEFAULT    3\n   5: 0000000000000000     0 SECTION LOCAL  DEFAULT    5\n   6: 0000000000000000     0 SECTION LOCAL  DEFAULT    6\n   7: 0000000000000000     0 SECTION LOCAL  DEFAULT    4\n   8: 0000000000000000    36 FUNC    GLOBAL DEFAULT    1 _Z3addiiii\n$ readelf -s ExtremeC_examples_chapter2_6_add_2.o\nSymbol table '.symtab' contains 9 entries:\n  Num:    Value          Size Type    Bind   Vis      Ndx Name\n   0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND\n   1: 0000000000000000     0 FILE    LOCAL  DEFAULT  ABS ExtremeC_examples_chapter\n   2: 0000000000000000     0 SECTION LOCAL  DEFAULT    1\n   3: 0000000000000000     0 SECTION LOCAL  DEFAULT    2\n   4: 0000000000000000     0 SECTION LOCAL  DEFAULT    3\n   5: 0000000000000000     0 SECTION LOCAL  DEFAULT    5\n   6: 0000000000000000     0 SECTION LOCAL  DEFAULT    6\n   7: 0000000000000000     0 SECTION LOCAL  DEFAULT    4\n   8: 0000000000000000    20 FUNC    GLOBAL DEFAULT    1 _Z3addii\n$\n```"]