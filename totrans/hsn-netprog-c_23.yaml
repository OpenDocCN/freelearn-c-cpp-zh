- en: Example Programs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book's code repository, located at [https://github.com/codeplea/hands-on-network-programming-with-c](https://github.com/codeplea/hands-on-network-programming-with-c), 
    includes 44 example programs. These programs are explained in detail throughout
    the book.
  prefs: []
  type: TYPE_NORMAL
- en: Code license
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The example programs provided in this book''s code repository are released
    under the MIT license, the text of which follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Code included with this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The following is a list of the 44 example programs included with this book,
    by chapter.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 1 – Introducing Networks and Protocols
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter includes the following example programs:'
  prefs: []
  type: TYPE_NORMAL
- en: '`win_init.c`: Example code to initialize Winsock (Windows only)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`win_list.c`: Lists all local IP addresses (Windows only)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`unix_list.c`: Lists all local IP addresses (Linux and macOS only)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapter 2 – Getting to Grips with Socket APIs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter includes the following example programs:'
  prefs: []
  type: TYPE_NORMAL
- en: '`sock_init.c`: Example program to include all necessary headers and initialize'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`time_console.c`: Prints the current date and time to the console'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`time_server.c`: Serves a web page giving the current date and time'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`time_server_ipv6.c`: The same as the preceding code but listens for IPv6 connections'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`time_server_dual.c`: The same as the preceding code but listens for IPv6/IPv4
    dual-stack connections'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapter 3 – An In-Depth Overview of TCP Connections
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter includes the following example programs:'
  prefs: []
  type: TYPE_NORMAL
- en: '`tcp_client.c`: Establishes a TCP connection and sends/receives data from the
    console.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tcp_serve_toupper.c`: A TCP server servicing multiple connections using `select()`.
    Echoes received data back to the client all in uppercase.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tcp_serve_toupper_fork.c`: The same as the preceding code but uses `fork()` instead
    of `select()`. (Linux and macOS only.)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tcp_serve_chat.c`: A TCP server that relays received data to every other connected
    client.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapter 4 – Establishing UDP Connections
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter includes the following example programs:'
  prefs: []
  type: TYPE_NORMAL
- en: '`udp_client.c`: Sends/receives UDP data from the console'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`udp_recvfrom.c`: Uses `recvfrom()` to receive one UDP datagram'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`udp_sendto.c`: Uses `sendto()` to send one UDP datagram'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`udp_serve_toupper.c`: Listens for UDP data and echoes it back to the sender
    all in uppercase'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`udp_serve_toupper_simple.c`: The same as the preceding code but doesn''t use `select()`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapter 5 – Hostname Resolution and DNS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter includes the following example programs:'
  prefs: []
  type: TYPE_NORMAL
- en: '`lookup.c`: Uses `getaddrinfo()` to look up addresses for a given hostname'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`dns_query.c`: Encodes and sends a UDP DNS query, then listens for and decodes
    the response'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapter 6 – Building a Simple Web Client
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter includes the following example program:'
  prefs: []
  type: TYPE_NORMAL
- en: '`web_get.c`: A minimal HTTP client to download a web resource from a given
    URL'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapter 7 – Building a Simple Web Server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter includes the following example programs:'
  prefs: []
  type: TYPE_NORMAL
- en: '`web_server.c`: A minimal web server capable of serving a static website'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`web_server2.c`: A minimal web server (no globals)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapter 8 – Making Your Program Send Email
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter includes the following example program:'
  prefs: []
  type: TYPE_NORMAL
- en: '`smtp_send.c`: A simple program to transmit an email'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapter 9 – Loading Secure Web Pages with HTTPS and OpenSSL
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The examples in this chapter use OpenSSL. Be sure to link to the OpenSSL libraries
    when compiling (`-lssl -lcrypto`):'
  prefs: []
  type: TYPE_NORMAL
- en: '`openssl_version.c`: A program to report the installed OpenSSL version'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`https_simple.c`: A minimal program that requests a web page using HTTPS'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`https_get.c`: The HTTP client of [Chapter 6](de3d2e9b-b94e-47d1-872c-c2ecb34c4026.xhtml), *Building
    a Simple Web Client*, modified to use HTTPS'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tls_client.c`: The TCP client program of [Chapter 3](eb2e080f-fad2-4e14-b4c1-9a6c124df77c.xhtml), *An
    In-Depth Overview of TCP Connections*, modified to use TLS'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`tls_get_cert.c`: Prints a certificate from a TLS server'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapter 10 – Implementing a Secure Web Server
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The examples in this chapter use OpenSSL. Be sure to link to the OpenSSL libraries
    when compiling (`-lssl -lcrypto`):'
  prefs: []
  type: TYPE_NORMAL
- en: '`tls_time_server.c`: The time server of [Chapter 2](4f41c930-c4b4-47e5-b9ef-f8faf21fa96b.xhtml),
    *Getting to Grips with Socket APIs*, modified to use HTTPS'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`https_server.c`: The web server of [Chapter 7](f352830e-089c-4369-b7a2-18a896e1c5d5.xhtml),
    *Building a Simple Web Server*, modified to use HTTPS'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapter 11 – Establishing SSH Connections with libssh
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The examples in this chapter use `libssh`. Be sure to link to the `libssh`
    libraries when compiling (`-lssh`):'
  prefs: []
  type: TYPE_NORMAL
- en: '`ssh_version.c`: A program to report the `libssh` version'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ssh_connect.c`: A minimal client that establishes an SSH connection'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ssh_auth.c`: A client that attempts SSH client authentication using a password'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ssh_command.c`: A client that executes a single remote command over SSH'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ssh_download.c`: A client that downloads a file over SSH/SCP'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapter 12 – Network Monitoring and Security
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter doesn't include any example programs.
  prefs: []
  type: TYPE_NORMAL
- en: Chapter 13 – Socket Programming Tips and Pitfalls
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This chapter includes the following example programs:'
  prefs: []
  type: TYPE_NORMAL
- en: '`connect_timeout.c`: Shows how to time out a `connect()` call early.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`connect_blocking.c`: For comparison with `connect_timeout.c`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`server_reuse.c`: Demonstrates the use of `SO_REUSEADDR`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`server_noreuse.c`: For comparison with `server_reuse.c`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`server_crash.c`: This server purposefully writes to a TCP socket after the
    client disconnects.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`error_text.c`: Shows how to obtain error code descriptions.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`big_send.c:` A TCP client that sends lots of data after connecting. Used to
    show the blocking behavior of `send()`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`server_ignore.c`: A TCP server that accepts connections, then simply ignores
    them. Used to show the blocking behavior of `send()`.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`setsize.c`: Shows the maximum number of sockets `select()` can handle.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Chapter 14 – Web Programming for the Internet of Things
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This chapter doesn't include any example programs.
  prefs: []
  type: TYPE_NORMAL
