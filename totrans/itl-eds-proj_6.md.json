["```cpp\nvoid setup()\n  {\n    Serial.begin(9600);\n  }\n\nvoid loop()\n  {\n    Serial.println(\"Hi, Reporting in from Intel Edison\");\n    delay(500);\n  }\n\n```", "```cpp\nvoid setup()  \n  { \n    Serial1.begin(9600); \n  } \n\nvoid loop()  \n  { \n    Serial1.println(\"Hi, Reporting in from Intel Edison\"); \n    delay(500); \n  } \n\n```", "```cpp\n<Window x:Class=\"RobotController.MainWindow\"        mc:Ignorable=\"d\" Title=\"MainWindow\" Height=\"350\" Width=\"525\" Background=\"#FF070B64 <Grid> <Grid.ColumnDefinitions> <ColumnDefinition Width=\"335*\"/> <ColumnDefinition Width=\"182*\"/> </Grid.ColumnDefinitions> <TextBlock x:Name=\"status\" HorizontalAlignment=\"Left\"\n    Margin=\"172,111,0,0\" TextWrapping=\"Wrap\" Text=\"Disconnected\"\n    VerticalAlignment=\"Top\" Foreground=\"White\"/> <TextBox x:Name=\"comno\" HorizontalAlignment=\"Left\" Height=\"23\"\n    Margin=\"172,83,0,0\" TextWrapping=\"Wrap\" Text=\"COM13\"\n    VerticalAlignment=\"Top\" Width=\"177\" Grid.ColumnSpan=\"2\"/> <Button x:Name=\"on\" Content=\"ON\" HorizontalAlignment=\"Left\"\n    Margin=\"170,191,0,0\" VerticalAlignment=\"Top\" Width=\"74\" Height=\"52\"\n    Click=\"on_Click\"/> <Button x:Name=\"off\" Content=\"OFF\" HorizontalAlignment=\"Left\"\n    Margin=\"275,191,0,0\" VerticalAlignment=\"Top\" Width=\"74\" Height=\"52\"\n    Grid.ColumnSpan=\"2\" Click=\"off_Click\"/> <Button x:Name=\"connect\" Content=\"Connect\"\n    HorizontalAlignment=\"Left\" Margin=\"172,132,0,0\"\n    VerticalAlignment=\"Top\" Width=\"75\" Click=\"connect_Click\"/> <Button x:Name=\"disconnect\" Content=\"Disconnect\"\n    HorizontalAlignment=\"Left\" Margin=\"274,132,0,0\"\n    VerticalAlignment=\"Top\" Width=\"75\" Grid.ColumnSpan=\"2\"\n    Click=\"disconnect_Click\"/> </Grid> </Window>\n\n```", "```cpp\nusing System.IO.Ports;  \n\n```", "```cpp\nSerialPort sp= new SerialPort(); \n\n```", "```cpp\ntry \n  { \n    String portName = comno.Text; \n      sp.PortName = portName; \n      sp.BaudRate = 9600; \n      sp.Open(); \n      status.Text = \"Connected\"; \n  } \n    catch (Exception) \n  { \n     MessageBox.Show(\"Please give a valid port number or check your connection\");    \n  } \n\n```", "```cpp\ntry \n  { \n    sp.Close(); \n    status.Text = \"Disconnected\"; \n  } \n    catch (Exception) \n  { \n    MessageBox.Show(\"First Connect and then disconnect\"); \n  } \n\n```", "```cpp\nprivate void on_Click(object sender, RoutedEventArgs e) \n  { \n    try \n      { \n        sp.WriteLine(\"1\"); \n      } \n        catch(Exception) \n      { \n         MessageBox.Show(\"Not connected\"); \n      } \n  } \n\nprivate void off_Click(object sender, RoutedEventArgs e) \n  { \n    try \n      { \n        sp.WriteLine(\"2\"); \n      } \n        catch (Exception) \n      { \n        MessageBox.Show(\"Not connected\"); \n      } \n  } \n\n```", "```cpp\nusing System; \nusing System.Collections.Generic; \nusing System.Linq; \nusing System.Text; \nusing System.Threading.Tasks; \nusing System.Windows; \nusing System.Windows.Controls; \nusing System.Windows.Data; \nusing System.Windows.Documents; \nusing System.Windows.Input; \nusing System.Windows.Media; \nusing System.Windows.Media.Imaging; \nusing System.Windows.Navigation; \nusing System.Windows.Shapes; \nusing System.IO.Ports; \n\nnamespace RobotController \n{ \n    /// <summary> \n    /// Interaction logic for MainWindow.xaml \n    /// </summary> \n    public partial class MainWindow : Window \n    { \n        SerialPort sp = new SerialPort(); \n        public MainWindow() \n        { \n            InitializeComponent(); \n        } \n\n        private void connect_Click(object sender, RoutedEventArgs e) \n        { \n            try \n            { \n                String portName = comno.Text; \n                sp.PortName = portName; \n                sp.BaudRate = 9600; \n                sp.Open(); \n                status.Text = \"Connected\"; \n            } \n            catch (Exception) \n            { \n\n                MessageBox.Show(\"Please give a valid port number or check your connection\"); \n            } \n\n        } \n\n        private void disconnect_Click(object sender, RoutedEventArgs e) \n        { \n            try \n            { \n                sp.Close(); \n                status.Text = \"Disconnected\"; \n            } \n            catch (Exception) \n            { \n\n                MessageBox.Show(\"First Connect and then disconnect\"); \n            } \n        } \n\n        private void on_Click(object sender, RoutedEventArgs e) \n        { \n            try \n            { \n                sp.WriteLine(\"1\"); \n            } \n            catch(Exception) \n            { \n                MessageBox.Show(\"Not connected\"); \n            } \n        } \n\n        private void off_Click(object sender, RoutedEventArgs e) \n        { \n            try \n            { \n                sp.WriteLine(\"2\"); \n            } \n            catch (Exception) \n            { \n                MessageBox.Show(\"Not connected\"); \n            } \n        } \n    } \n} \n\n```", "```cpp\nvoid setup()  \n  { \n    pinMode(13,OUTPUT); \n    Serial.begin(9600); \n  } \nvoid loop()  \n  { \n    if(Serial.available()>0) \n      { \n         char c= Serial.read(); \n         if(c=='1') \n         digitalWrite(13,HIGH); \n         else if(c=='2') \n         digitalWrite(13,LOW); \n       } \n  } \n\n```", "```cpp\nint pwm1=6,dir1=2,brk1=3,pwm2=9,dir2=4,brk2=5; \nvoid setup()  \n{ \n  pinMode(2,OUTPUT); \n  pinMode(6,OUTPUT); \n  pinMode(3,OUTPUT); \n  pinMode(4,OUTPUT); \n  pinMode(5,OUTPUT); \n  pinMode(9,OUTPUT); \n} \nvoid loop()  \n{ \n  forward(); \n  delay(10000); \n  backward(); \n  delay(10000); \n  left(); \n  delay(10000); \n  right(); \n  delay(10000); \n  stop(); \n  delay(10000); \n} \nvoid forward() \n{ \n  //Left side motors  \n  digitalWrite(2,LOW); //Direction \n  digitalWrite(3,LOW); //Brake \n  analogWrite(6,122); \n  //Right side motor \n  digitalWrite(4,LOW); //Direction \n  digitalWrite(5,LOW); //Brake \n  analogWrite(9,122); \n} \nvoid backward() \n{ \n  //Left side motors  \n  digitalWrite(2,HIGH);//Direction \n  digitalWrite(3,LOW); //Brake \n  analogWrite(6,122); \n  //Right side motor \n  digitalWrite(4,HIGH);//Direction \n  digitalWrite(5,LOW); //Brake \n  analogWrite(9,122); \n} \nvoid left() \n{ \n  //Left side motors  \n  digitalWrite(2,LOW);//Direction \n  digitalWrite(3,LOW); //Brake \n  analogWrite(6,122); \n  //Right side motor \n  digitalWrite(4,HIGH);//Direction \n  digitalWrite(5,LOW); //Brake \n  analogWrite(9,122); \n} \nvoid right() \n{ \n  //Left side motors  \n  digitalWrite(2,HIGH);//Direction \n  digitalWrite(3,LOW); //Brake \n  analogWrite(6,122); \n  //Right side motor \n  digitalWrite(4,LOW);//Direction \n  digitalWrite(5,LOW); //Brake \n  analogWrite(9,122); \n} \nvoid stop() \n{ \n  //Left side motors  \n  digitalWrite(2,LOW);//Direction \n  digitalWrite(3,HIGH); //Brake \n  analogWrite(6,122); \n  //Right side motor \n  digitalWrite(4,LOW);//Direction \n  digitalWrite(5,HIGH); //Brake \n  analogWrite(9,122); \n} \n\n```", "```cpp\n#define SLOW_SPEED 165 \n#define MAX_SPEED 255 \nint pwm1=6,dir1=2,brk1=3,pwm2=9,dir2=4,brk2=5; \nvoid setup()  \n{ \nSerial1.begin(9600); \n  pinMode(2,OUTPUT); \n  pinMode(6,OUTPUT); \n  pinMode(3,OUTPUT); \n  pinMode(4,OUTPUT); \n  pinMode(5,OUTPUT); \n  pinMode(9,OUTPUT); \n} \n/* \n         * 1: Fast front \n         * 0: Fast back \n         * 3: Fast right \n         * 4: Fast left \n         * 5: STOP \n         * 6: Slow front \n         * 7: Slow back \n         * 8: Slow right \n         * 9: Slow left \n         * */ \nvoid loop()  \n{ \n  if(Serial1.available()>0) \n  { \n    char c= Serial1.read(); \n    if(c=='1') \n    forward(MAX_SPEED); \n    else if(c=='0') \n    backward(MAX_SPEED); \n    else if(c=='3') \n    right(MAX_SPEED); \n    else if(c=='4') \n    left(MAX_SPEED); \n    else if(c=='6') \n    forward(SLOW_SPEED); \n    else if(c=='7') \n    backward(SLOW_SPEED); \n    else if(c=='8') \n    right(SLOW_SPEED); \n    else if(c=='9') \n    left(SLOW_SPEED); \n    else if(c=='5') \n    stop();   \n  } \n} \nvoid forward(int speed) \n{ \n  //Left side motors  \n  digitalWrite(2,LOW); //Direction \n  digitalWrite(3,LOW); //Brake \n  analogWrite(6,speed); \n  //Right side motor \n  digitalWrite(4,LOW); //Direction \n  digitalWrite(5,LOW); //Brake \n  analogWrite(9,speed); \n} \nvoid backward(int speed) \n{ \n  //Left side motors  \n  digitalWrite(2,HIGH);//Direction \n  digitalWrite(3,LOW); //Brake \n  analogWrite(6,speed); \n  //Right side motor \n  digitalWrite(4,HIGH);//Direction \n  digitalWrite(5,LOW); //Brake \n  analogWrite(9,speed); \n} \nvoid left(int speed) \n{ \n  //Left side motors  \n  digitalWrite(2,LOW);//Direction \n  digitalWrite(3,LOW); //Brake \n  analogWrite(6,speed); \n  //Right side motor \n  digitalWrite(4,HIGH);//Direction \n  digitalWrite(5,LOW); //Brake \n  analogWrite(9,speed); \n} \nvoid right(int speed) \n{ \n  //Left side motors  \n  digitalWrite(2,HIGH);//Direction \n  digitalWrite(3,LOW); //Brake \n  analogWrite(6,speed); \n  //Right side motor \n  digitalWrite(4,LOW);//Direction \n  digitalWrite(5,LOW); //Brake \n  analogWrite(9,speed); \n} \nvoid stop() \n{ \n  //Left side motors  \n  digitalWrite(2,LOW);//Direction \n  digitalWrite(3,HIGH); //Brake \n  analogWrite(6,122); \n  //Right side motor \n  digitalWrite(4,LOW);//Direction \n  digitalWrite(5,HIGH); //Brake \n  analogWrite(9,122); \n} \n\n```", "```cpp\n<Button x:Name=\"front_fast\" Content=\"Front\" HorizontalAlignment=\"Left\" VerticalAlignment=\"Top\" Width=\"75\" Margin=\"204,56,0,0\" Height=\"48\" GotMouseCapture=\"front_fast_GotMouseCapture\" LostMouseCapture=\"front_fast_LostMouseCapture\" />\n\n```", "```cpp\n<ProgressBar x:Name=\"pb1\" HorizontalAlignment=\"Left\" Height=\"10\" Margin=\"92,273,0,0\" VerticalAlignment=\"Top\" Width=\"300\"/>\n\n```", "```cpp\n<Button Content=\"Press to activate keyboard controls\" Name=\"kbp\" HorizontalAlignment=\"Left\" Margin=\"582,454,0,0\" VerticalAlignment=\"Top\" Width=\"202\" Height=\"52\" KeyDown=\"kbp_KeyDown\" KeyUp=\"Kbp_KeyUp\"/>\n\n```", "```cpp\n<Window x:Class=\"BET_Controller_v2.MainWindow\"        Title=\"URC V1.0.0.1\" Height=\"720\" Width=\"1360\" Loaded=\"Window_Loaded\">\n <Grid> <TextBlock HorizontalAlignment=\"Left\" TextWrapping=\"Wrap\"\n    Text=\"Controls invloving high speed\" VerticalAlignment=\"Top\"\n    Height=\"25\" Width=\"269\" Margin=\"10,0,0,0\"/> <Rectangle Fill=\"#FFF4F4F5\" HorizontalAlignment=\"Left\" Height=\"13\"\n    Stroke=\"Black\" VerticalAlignment=\"Top\" Width=\"498\"\n    Margin=\"10,25,0,0\"/> <Button x:Name=\"front_fast\" Content=\"Front\"\n      HorizontalAlignment=\"Left\" VerticalAlignment=\"Top\" Width=\"75\"\n      Margin=\"204,56,0,0\" Height=\"48\"\n      GotMouseCapture=\"front_fast_GotMouseCapture\"\n      LostMouseCapture=\"front_fast_LostMouseCapture\" /> <Button x:Name=\"back_fast\" Content=\"back\"\n      HorizontalAlignment=\"Left\" VerticalAlignment=\"Top\" Width=\"75\"\n      Margin=\"204,193,0,0\" Height=\"53\"\n      GotMouseCapture=\"back_fast_GotMouseCapture\"\n      LostMouseCapture=\"back_fast_LostMouseCapture\"/>\n      <Button x:Name=\"left_fast\" Content=\"left\"\n      HorizontalAlignment=\"Left\" VerticalAlignment=\"Top\" Width=\"74\"\n      Margin=\"92,125,0,0\" Height=\"50\"\n      GotMouseCapture=\"left_fast_GotMouseCapture\"\n      LostMouseCapture=\"left_fast_LostMouseCapture\" />\n <Button x:Name=\"right_fast\" Content=\"right\"\n      HorizontalAlignment=\"Left\" VerticalAlignment=\"Top\" Width=\"76\"\n      Margin=\"316,125,0,0\" Height=\"50\"\n      GotMouseCapture=\"right_fast_GotMouseCapture\"\n      LostMouseCapture=\"right_fast_LostMouseCapture\" /> <Button x:Name=\"stop_fast\" Content=\"stop\"\n      HorizontalAlignment=\"Left\" VerticalAlignment=\"Top\" Width=\"75\"\n      Margin=\"204,125,0,0\" Height=\"50\"\n      RenderTransformOrigin=\"0.362,0.5\" Click=\"stop_fast_Click\" /> <Rectangle Fill=\"#FFF4F4F5\" HorizontalAlignment=\"Left\" Height=\"13\"\n    Stroke=\"Black\" VerticalAlignment=\"Top\" Width=\"498\"\n    Margin=\"10,305,0,0\"/> <TextBlock HorizontalAlignment=\"Left\" TextWrapping=\"Wrap\"\n  Text=\"Controls invloving low speed\" VerticalAlignment=\"Top\"\n  Height=\"25\" Width=\"269\" Margin=\"10,323,0,0\"/> <Button x:Name=\"front_slow\" Content=\"front\"\n      HorizontalAlignment=\"Left\" Margin=\"204,374,0,0\"\n      VerticalAlignment=\"Top\" Width=\"75\" Height=\"53\"\n      GotMouseCapture=\"front_slow_GotMouseCapture\"\n      LostMouseCapture=\"front_slow_LostMouseCapture\"/> <Button x:Name=\"back_slow\" Content=\"back\"\n      HorizontalAlignment=\"Left\" Margin=\"204,526,0,0\"\n      VerticalAlignment=\"Top\" Width=\"75\" Height=\"53\"\n      LostMouseCapture=\"back_slow_LostMouseCapture\"\n      GotMouseCapture=\"back_slow_GotMouseCapture\" /> <Button x:Name=\"right_slow\" Content=\"right\"\n      HorizontalAlignment=\"Left\" Margin=\"316,454,0,0\"\n      VerticalAlignment=\"Top\" Width=\"76\" Height=\"53\"\n      LostMouseCapture=\"right_slow_LostMouseCapture\"\n      GotMouseCapture=\"right_slow_GotMouseCapture\" /> <Button x:Name=\"left_slow\" Content=\"left\"\n      HorizontalAlignment=\"Left\" Margin=\"92,454,0,0\"\n      VerticalAlignment=\"Top\" Width=\"74\" Height=\"53\"\n      GotMouseCapture=\"left_slow_GotMouseCapture\"\n      LostMouseCapture=\"left_slow_LostMouseCapture\" /> <Button x:Name=\"stop_slow\" Content=\"stop\"\n      HorizontalAlignment=\"Left\" Margin=\"204,454,0,0\"\n      VerticalAlignment=\"Top\" Width=\"75\" Height=\"53\"\n      Click=\"stop_slow_Click\"/> <Rectangle Fill=\"#FFF4F4F5\" HorizontalAlignment=\"Left\" Height=\"13\"\n    Stroke=\"Black\" VerticalAlignment=\"Top\" Width=\"255\"\n    Margin=\"552,25,0,0\"/> <TextBlock HorizontalAlignment=\"Left\" TextWrapping=\"Wrap\"\n  Text=\"Special controls\" VerticalAlignment=\"Top\" Height=\"25\"\n  Width=\"269\" Margin=\"552,0,0,0\"/> <Button x:Name=\"rr360\" Content=\"360 deg rotation right\"\n      HorizontalAlignment=\"Left\" Margin=\"607,94,0,0\"\n      VerticalAlignment=\"Top\" Width=\"138\" Height=\"53\"\n      RenderTransformOrigin=\"0.498,0.524\" Click=\"rr360_Click\"/> <Button x:Name=\"lr360\" Content=\"360 deg rotation left\"\n      HorizontalAlignment=\"Left\" Margin=\"607,193,0,0\"\n      VerticalAlignment=\"Top\" Width=\"138\" Height=\"53\"\n      RenderTransformOrigin=\"0.498,0.524\" Click=\"lr360_Click\" /> <TextBlock HorizontalAlignment=\"Left\" TextWrapping=\"Wrap\"\n  Text=\"Command will be displayed below\" VerticalAlignment=\"Top\"\n  Height=\"25\" Width=\"484\" Margin=\"858,13,0,0\"/> <Rectangle Fill=\"#FFF4F4F5\" HorizontalAlignment=\"Left\" Height=\"10\"\n    Stroke=\"Black\" VerticalAlignment=\"Top\" Width=\"484\"\n    Margin=\"858,43,0,0\"/> <TextBlock x:Name=\"cmd\" HorizontalAlignment=\"Left\"\n  Margin=\"858,72,0,0\" TextWrapping=\"Wrap\" Text=\"Commands\"\n  VerticalAlignment=\"Top\" Height=\"174\" Width=\"484\"/> <TextBox x:Name=\"cno\" HorizontalAlignment=\"Left\" Height=\"29\"\n  Margin=\"858,273,0,0\" TextWrapping=\"Wrap\" Text=\"COM13\"\n  VerticalAlignment=\"Top\" Width=\"85\"/> <Button x:Name=\"connect\" Content=\"Connect\"\n      HorizontalAlignment=\"Left\" Margin=\"858,307,0,0\"\n      VerticalAlignment=\"Top\" Width=\"85\" Height=\"41\"\n      RenderTransformOrigin=\"0.498,0.524\" Click=\"connect_Click\" /> <Button x:Name=\"disconnect\" Content=\"Disconnect\"\n      HorizontalAlignment=\"Left\" Margin=\"964,307,0,0\"\n      VerticalAlignment=\"Top\" Width=\"85\" Height=\"41\"\n      RenderTransformOrigin=\"0.498,0.524\" Click=\"disconnect_Click\" /> <Button x:Name=\"rst\" Content=\"Reset\" HorizontalAlignment=\"Left\"\n      Margin=\"607,295,0,0\" VerticalAlignment=\"Top\" Width=\"138\"\n      Height=\"53\" RenderTransformOrigin=\"0.498,0.524\" Click=\"rst_Click\"\n      /> <TextBlock HorizontalAlignment=\"Left\" Margin=\"858,353,0,0\" x:Name=\"s\" \n  TextWrapping=\"Wrap\" Text=\"Click Connect to connect\"\n  VerticalAlignment=\"Top\" Height=\"33\" Width=\"191\"/> <ProgressBar x:Name=\"pbkc\" HorizontalAlignment=\"Left\" Height=\"10\"\n    Margin=\"549,569,0,0\" VerticalAlignment=\"Top\" Width=\"272\"/> <ProgressBar x:Name=\"pb2\" HorizontalAlignment=\"Left\" Height=\"10\"\n    Margin=\"92,631,0,0\" VerticalAlignment=\"Top\" Width=\"300\"/> <ProgressBar x:Name=\"pb1\" HorizontalAlignment=\"Left\" Height=\"10\"\n    Margin=\"92,273,0,0\" VerticalAlignment=\"Top\" Width=\"300\"/> <Rectangle Fill=\"#FFF4F4F5\" HorizontalAlignment=\"Left\" Height=\"12\"\n    Stroke=\"Black\" VerticalAlignment=\"Top\" Width=\"269\"\n    Margin=\"552,374,0,0\"/> <TextBlock HorizontalAlignment=\"Left\" TextWrapping=\"Wrap\"\n  Text=\"Keybooard controls\" VerticalAlignment=\"Top\" Height=\"25\"\n  Width=\"269\" Margin=\"552,392,0,0\"/> <Button Content=\"Press to activate keyboard controls\" Name=\"kbp\"\n      HorizontalAlignment=\"Left\" Margin=\"582,454,0,0\"\n      VerticalAlignment=\"Top\" Width=\"202\" Height=\"52\"\n      KeyDown=\"kbp_KeyDown\" KeyUp=\"Kbp_KeyUp\"/> <Rectangle Fill=\"#FFF4F4F5\" HorizontalAlignment=\"Left\" Height=\"11\"\n    Stroke=\"Black\" VerticalAlignment=\"Top\" Width=\"484\"\n    Margin=\"858,391,0,0\"/> <TextBlock HorizontalAlignment=\"Left\" TextWrapping=\"Wrap\" Text=\"Enter\n  the password below to activate all controls. The password was\n  supplied by the administrator with the bundel.\"\n  VerticalAlignment=\"Top\" Height=\"51\" Width=\"269\"\n  Margin=\"858,414,0,0\"/> <Button x:Name=\"activate\" Content=\"Activate\"\n      HorizontalAlignment=\"Left\" Margin=\"1052,631,0,0\"\n      VerticalAlignment=\"Top\" Width=\"75\" Height=\"33\"\n      Click=\"activate_Click\" KeyDown=\"activate_KeyDown\"/> <PasswordBox x:Name=\"pswrdbox\" HorizontalAlignment=\"Left\"\n  Margin=\"1025,585,0,0\" VerticalAlignment=\"Top\" Height=\"25\" Width=\"124\"\n  PasswordChar=\"*\" FontSize=\"24\"/> <Rectangle Fill=\"#FFF4F4F5\" HorizontalAlignment=\"Left\" Height=\"645\"\n    Stroke=\"Black\" VerticalAlignment=\"Top\" Width=\"5\" Margin=\"834,8,0,0\"\n    RenderTransformOrigin=\"0.5,0.5\"> </Rectangle><Rectangle Fill=\"#FFF4F4F5\" HorizontalAlignment=\"Left\"\n    Height=\"645\" Stroke=\"Black\" VerticalAlignment=\"Top\" Width=\"5\"\n    Margin=\"539,19,0,0\" RenderTransformOrigin=\"0.5,0.5\"/>\n </Grid> </Window>\n\n```", "```cpp\nprivate void kbp_KeyDown(object sender, KeyEventArgs e) \n        { \n            Keyboard.Focus(kbp); \n            if (e.Key == Key.W) \n            { \n                sp.WriteLine(\"1\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"W: fast forward\"; \n            } \n            else if (e.Key == Key.S) \n            { \n                sp.WriteLine(\"0\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"S: fast back\"; \n            } \n            else if (e.Key == Key.A) \n            { \n                sp.WriteLine(\"4\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"A: fast left\"; \n            } \n            else if (e.Key == Key.D) \n            { \n                sp.WriteLine(\"3\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"D: fast right\"; \n            } \n            else if (e.Key == Key.NumPad8) \n            { \n                sp.WriteLine(\"6\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"9: slow front\"; \n            } \n            else if (e.Key == Key.NumPad2) \n            { \n                sp.WriteLine(\"7\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"2: slow back\"; \n            } \n            else if (e.Key == Key.NumPad6) \n            { \n                sp.WriteLine(\"8\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"6: slow right\"; \n            } \n            else if (e.Key == Key.NumPad4) \n            { \n                sp.WriteLine(\"9\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"D: slow left\"; \n            } \n\n        } \n\n```", "```cpp\nprivate void Kbp_KeyUp(object sender, KeyEventArgs e) \n  { \n    sp.WriteLine(\"5\"); \n    pbkc.IsIndeterminate = false; \n    cmd.Text = \"STOP\"; \n  } \n\n```", "```cpp\nprivate void front_fast_GotMouseCapture(object sender, MouseEventArgs e) \n  { \n    sp.WriteLine(\"1\"); \n    cmd.Text = \"Fast Forward\"; \n    pb1.IsIndeterminate = true; \n } \n\nprivate void front_fast_LostMouseCapture(object sender, MouseEventArgs e) \n  { \n    sp.WriteLine(\"5\"); \n    cmd.Text = \"STOP\"; \n    pb1.IsIndeterminate = false; \n  } \n\n```", "```cpp\nusing System; \nusing System.Collections.Generic; \nusing System.Linq; \nusing System.Text; \nusing System.Threading.Tasks; \nusing System.Windows; \nusing System.Windows.Controls; \nusing System.Windows.Data; \nusing System.Windows.Documents; \nusing System.Windows.Input; \nusing System.Windows.Media; \nusing System.Windows.Media.Imaging; \nusing System.Windows.Navigation; \nusing System.Windows.Shapes; \nusing System.IO.Ports; \n\nnamespace BET_Controller_v2 \n{ \n    /// <summary> \n    /// Interaction logic for MainWindow.xaml \n    /// </summary> \n    public partial class MainWindow : Window \n    { \n        SerialPort sp = new SerialPort(); \n        public MainWindow() \n        { \n            InitializeComponent(); \n            Closing += new System.ComponentModel.CancelEventHandler(MainWindow_Closing); \n        } \n\n        private void MainWindow_Closing(object sender, System.ComponentModel.CancelEventArgs e) \n        { \n            if (MessageBox.Show(\"Do you really want to exit?\", \"Exit\", MessageBoxButton.YesNo) == MessageBoxResult.No) \n            { \n                e.Cancel = true; \n            } \n        } \n/* \n         * 1: Fast front \n         * 0: Fast back \n         * 3: Fast right \n         * 4: Fast left \n         * 5: STOP \n         * 6: Slow front \n         * 7: Slow back \n         * 8: Slow right \n         * 9: Slow left \n         * */ \n        //Keyboard Controls \n        private void kbp_KeyDown(object sender, KeyEventArgs e) \n        { \n            Keyboard.Focus(kbp); \n            if (e.Key == Key.W) \n            { \n                sp.WriteLine(\"1\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"W: fast forward\"; \n            } \n            else if (e.Key == Key.S) \n            { \n                sp.WriteLine(\"0\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"S: fast back\"; \n            } \n            else if (e.Key == Key.A) \n            { \n                sp.WriteLine(\"4\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"A: fast left\"; \n            } \n            else if (e.Key == Key.D) \n            { \n                sp.WriteLine(\"3\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"D: fast right\"; \n            } \n            else if (e.Key == Key.NumPad8) \n            { \n                sp.WriteLine(\"6\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"9: slow front\"; \n            } \n            else if (e.Key == Key.NumPad2) \n            { \n                sp.WriteLine(\"7\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"2: slow back\"; \n            } \n            else if (e.Key == Key.NumPad6) \n            { \n                sp.WriteLine(\"8\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"6: slow right\"; \n            } \n            else if (e.Key == Key.NumPad4) \n            { \n                sp.WriteLine(\"9\"); \n                pbkc.IsIndeterminate = true; \n                cmd.Text = \"D: slow left\"; \n            } \n\n        } \n//Key release event handlers \n        private void Kbp_KeyUp(object sender, KeyEventArgs e) \n        { \n            sp.WriteLine(\"5\"); \n            pbkc.IsIndeterminate = false; \n            cmd.Text = \"STOP\"; \n        } \n//Connect to the hardware \n        private void connect_Click(object sender, RoutedEventArgs e) \n        { \n            try \n            { \n                String pno = cno.Text; \n                sp.PortName = pno; \n                sp.BaudRate = 9600; \n                sp.Open(); \n                s.Text = \"Connected\"; \n            } \n            catch (Exception) \n            { \n\n                MessageBox.Show(\"Please check the com port number or the hardware attached to it\"); \n            } \n        } \n        //Disconnect from the hardware \n        private void disconnect_Click(object sender, RoutedEventArgs e) \n        { \n            try \n            { \n                sp.Close(); \n                s.Text = \"Disconnected\"; \n            } \n            catch (Exception) \n            { \n\n                MessageBox.Show(\"Some error occured with the connection\"); \n            } \n        } \n\n        private void front_fast_GotMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"1\"); \n            cmd.Text = \"Fast Forward\"; \n            pb1.IsIndeterminate = true; \n        } \n\n        private void front_fast_LostMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"5\"); \n            cmd.Text = \"STOP\"; \n            pb1.IsIndeterminate = false; \n        } \n\n        private void back_fast_GotMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"0\"); \n            cmd.Text = \"Fast Backward\"; \n            pb1.IsIndeterminate = true; \n        } \n\n        private void back_fast_LostMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"5\"); \n            cmd.Text = \"STOP\"; \n            pb1.IsIndeterminate = false; \n        } \n\n        private void left_fast_GotMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"4\"); \n            cmd.Text = \"Fast left\"; \n            pb1.IsIndeterminate = true; \n        } \n\n        private void left_fast_LostMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"5\"); \n            cmd.Text = \"STOP\"; \n            pb1.IsIndeterminate = false; \n        } \n\n        private void activate_Click(object sender, RoutedEventArgs e) \n        { \n         // Password and activation section \n            string s = pswrdbox.Password; \n            if(s==\"12345\") \n            { \n                MessageBox.Show(\"Congrats Black e Track Controller V2 is activated\"); \n                front_fast.IsEnabled = true; \n                back_fast.IsEnabled = true; \n                stop_fast.IsEnabled = true; \n                left_fast.IsEnabled = true; \n                right_fast.IsEnabled = true; \n                front_slow.IsEnabled = true; \n                back_slow.IsEnabled = true; \n                right_slow.IsEnabled = true; \n                left_slow.IsEnabled = true; \n                stop_slow.IsEnabled = true; \n                rr360.IsEnabled = true; \n                lr360.IsEnabled = true; \n                rst.IsEnabled = true; \n                kbp.IsEnabled = true; \n            } \n            else \n            { \n                MessageBox.Show(\"Sorry you have entered wrong password. Please enter the correct credentials or contact your system administrator.\"); \n            } \n        } \n\n        private void right_fast_GotMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"3\"); \n            cmd.Text = \"Fast Right\"; \n            pb1.IsIndeterminate = true; \n        } \n\n        private void right_fast_LostMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"5\"); \n            cmd.Text = \"STOP\"; \n            pb1.IsIndeterminate = false; \n        } \n\n        private void front_slow_GotMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"6\"); \n            cmd.Text = \"Slow Front\"; \n            pb2.IsIndeterminate = true; \n        } \n\n        private void front_slow_LostMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"5\"); \n            cmd.Text = \"STOP\"; \n            pb2.IsIndeterminate = false; \n        } \n        private void back_slow_LostMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"5\"); \n            cmd.Text = \"STOP\"; \n            pb2.IsIndeterminate = false; \n        } \n\n        private void back_slow_GotMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"7\"); \n            cmd.Text = \"Slow Back\"; \n            pb2.IsIndeterminate = true; \n        } \n        private void left_slow_GotMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"9\"); \n            cmd.Text = \"Slow Left\"; \n            pb2.IsIndeterminate = true; \n        } \n\n        private void left_slow_LostMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"5\"); \n            cmd.Text = \"STOP\"; \n            pb2.IsIndeterminate = false; \n        } \n\n        private void right_slow_LostMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"5\"); \n            cmd.Text = \"STOP\"; \n            pb2.IsIndeterminate = false; \n        } \n\n        private void right_slow_GotMouseCapture(object sender, MouseEventArgs e) \n        { \n            sp.WriteLine(\"8\"); \n            cmd.Text = \"Slow Right\"; \n            pb2.IsIndeterminate = true; \n        } \n\n        private void stop_fast_Click(object sender, RoutedEventArgs e) \n        { \n            sp.WriteLine(\"5\"); \n            cmd.Text = \"STOP\"; \n        } \n\n        private void stop_slow_Click(object sender, RoutedEventArgs e) \n        { \n            sp.WriteLine(\"5\"); \n            cmd.Text = \"STOP\"; \n        } \n\n        private void rr360_Click(object sender, RoutedEventArgs e) \n        { \n            sp.WriteLine(\"4\"); \n            cmd.Text = \"360 deg right rotation\"; \n        } \n\n        private void lr360_Click(object sender, RoutedEventArgs e) \n        { \n            sp.WriteLine(\"3\"); \n            cmd.Text = \"360 deg left rotation\"; \n        } \n\n        private void rst_Click(object sender, RoutedEventArgs e) \n        { \n            MessageBox.Show(\"The control doesn't exist now\"); \n        } \n\n   //Window loaded event handler for deactivating all controls by default \n        private void Window_Loaded(object sender, RoutedEventArgs e) \n        { \n            front_fast.IsEnabled = false; \n            back_fast.IsEnabled = false; \n            stop_fast.IsEnabled = false; \n            left_fast.IsEnabled = false; \n            right_fast.IsEnabled = false; \n            front_slow.IsEnabled = false; \n            back_slow.IsEnabled = false; \n            right_slow.IsEnabled = false; \n            left_slow.IsEnabled = false; \n            stop_slow.IsEnabled = false; \n            rr360.IsEnabled = false; \n            lr360.IsEnabled = false; \n            rst.IsEnabled = false; \n            kbp.IsEnabled = false; \n        } \n        private void activate_KeyDown(object sender, KeyEventArgs e) \n        {             \n            if ((e.Key == Key.B) && Keyboard.IsKeyDown(Key.LeftCtrl) && Keyboard.IsKeyDown(Key.LeftAlt)) \n            { \n                MessageBox.Show(\"Password: 12345\"); \n            } \n        }            \n    } \n} \n\n```"]