["```cpp\nfunc setup_controller(index):\n    for action in InputMap.get_actions():\n        var new_action = action + \"%s\" % index\n        InputMap.add_action(new_action)\n        for event in InputMap.action_get_events(action):\n            var new_event = event.duplicate()\n            new_event.device = index\n            InputMap.action_add_event(new_action, event)\n        for property in get_property_list():\n            if not typeof(get(property.name)) ==\n                TYPE_STRING:\n                continue\n            if get(property.name) == action:\n                set(property.name, new_action)\n```", "```cpp\nextends Node2D\n@onready var body = $CharacterBody2D\n@onready var shape = $CharacterBody2D/CollisionShape2D\n@onready var interactive_area = $CharacterBody2D/\n    InteractiveArea2D\nvar lift_transformer = null\nfunc _on_interactive_area_2d_area_entered(area):\n    lift_transformer = area.get_node\n        (\"GrabbingRemoteTransform2D\")\nfunc _on_interactive_area_2d_interacted():\n    lift_transformer.remote_path =\n        lift_transformer.get_path_to(body)\n```", "```cpp\nclass_name InteractiveArea2D\nextends Area2D\nsignal interacted\nsignal interaction_available\nsignal interaction_unavailable\n@export var interact_input_action = \"interact\"\nfunc _ready():\n    set_process_unhandled_input(false)\nfunc _unhandled_input(event):\n    if event.is_action_pressed(interact_input_action):\n        interacted.emit()\n        get_viewport().set_input_as_handled()\nfunc _on_area_entered(_area):\n    set_process_unhandled_input(true)\n    interaction_available.emit()\nfunc _on_area_exited(_area):\n    set_process_unhandled_input(false)\n    interaction_unavailable.emit()\n```", "```cpp\nextends Marker2D\n@export var players_scene = preload(\"res://08.designing-\n    online-platformer/Actors/Player/Player2D.tscn\")\nfunc _ready():\n    if Input.get_connected_joypads().size() < 1:\n        var player = players_scene.instantiate()\n        add_child(player)\n        return\n    for i in Input.get_connected_joypads():\n        var player = players_scene.instantiate()\n        add_child(player)\n        player.setup_controller(i)\n```", "```cpp\n    func _ready():\n        await(get_tree().create_timer(0.1).timeout)\n    ```", "```cpp\n    func _ready():\n        await(get_tree().create_timer(0.1).timeout)\n        if multiplayer.get_peers().size() < 1:\n    ```", "```cpp\n    func _ready():\n        await(get_tree().create_timer(0.1).timeout)\n        if multiplayer.get_peers().size() < 1:\n            if Input.get_connected_joypads().size() < 1:\n                var player = players_scene.instantiate()\n                add_child(player)\n                return\n            for i in Input.get_connected_joypads():\n                var player = players_scene.instantiate()\n                add_child(player)\n                player.setup_controller(i)\n            return\n    ```", "```cpp\n        if is_multiplayer_authority():\n                for i in range(0, multiplayer.get_peers().\n                    size()):\n    ```", "```cpp\n        if is_multiplayer_authority():\n                for i in range(0, multiplayer.get_peers().\n                    size()):\n                    var player = players_scene.\n                        instantiate()\n    ```", "```cpp\n    if is_multiplayer_authority():\n            for i in range(0, multiplayer.get_peers().\n                size()):\n                var player = players_scene.instantiate()\n                var player_id = multiplayer.get_peers()[i]\n                player.name = str(player_id)\n                add_child(player)\n    ```", "```cpp\n    if is_multiplayer_authority():\n            for i in range(0, multiplayer.get_peers().\n                size()):\n                var player = players_scene.instantiate()\n                var player_id = multiplayer.get_peers()[i]\n                player.name = str(player_id)\n                add_child(player)\n                await(get_tree().create_timer(0.1).\n                    timeout)\n    ```", "```cpp\n    if is_multiplayer_authority():\n            for i in range(0, multiplayer.get_peers().\n                size()):\n                var player = players_scene.instantiate()\n                var player_id = multiplayer.get_peers()[i]\n                player.name = str(player_id)\n                add_child(player)\n                await(get_tree().create_timer(0.1).\n                    timeout)\n                player.rpc(\"setup_multiplayer\", player_id)\n    ```", "```cpp\nextends Marker2D\n@export var players_scene = preload(\"res://08.designing-\n    online-platformer/Actors/Player/Player2D.tscn\")\nfunc _ready():\n    await(get_tree().create_timer(0.1).timeout)\n    if multiplayer.get_peers().size() < 1:\n        if Input.get_connected_joypads().size() < 1:\n            var player = players_scene.instantiate()\n            add_child(player)\n            return\n        for i in Input.get_connected_joypads():\n            var player = players_scene.instantiate()\n            add_child(player)\n            player.setup_controller(i)\n        return\n    if is_multiplayer_authority():\n        for i in range(0, multiplayer.get_peers().size()):\n            var player = players_scene.instantiate()\n            var player_id = multiplayer.get_peers()[i]\n            player.name = str(player_id)\n            add_child(player)\n            await(get_tree().create_timer(0.1).timeout)\n            player.rpc(\"setup_multiplayer\", player_id)\nfunc _on_multiplayer_spawner_spawned(node):\n    node.rpc(\"setup_multiplayer\", int(str(node.name)))\n```", "```cpp\n    func setup_multiplayer(player_id):\n    ```", "```cpp\n    @rpc(\"any_peer\", \"call_local\")\n    func setup_multiplayer(player_id):\n    ```", "```cpp\n    @rpc(\"any_peer\", \"call_local\")\n    func setup_multiplayer(player_id):\n        set_multiplayer_authority(player_id)\n    ```", "```cpp\n    @rpc(\"any_peer\", \"call_local\")\n    func setup_multiplayer(player_id):\n        set_multiplayer_authority(player_id)\n        var is_player = str(player_id) == str(name)\n    ```", "```cpp\n    @rpc(\"any_peer\", \"call_local\")\n    func setup_multiplayer(player_id):\n        set_multiplayer_authority(player_id)\n        var is_player = str(player_id) == str(name)\n        set_physics_process(is_player)\n        set_process_unhandled_input(is_player)\n    ```", "```cpp\n    @rpc(\"any_peer\", \"call_local\")\n    func setup_multiplayer(player_id):\n        set_multiplayer_authority(player_id)\n        var is_player = str(player_id) == str(name)\n        set_physics_process(is_player)\n        set_process_unhandled_input(is_player)\n        label.text = \"P%s\" % get_index()\n    ```", "```cpp\nfunc _on_interactive_area_2d_area_entered(area):\n    lift_transformer = area.get_node\n        (\"GrabbingRemoteTransform2D\")\n    set_multiplayer_authority\n        (area.get_multiplayer_authority())\n```"]