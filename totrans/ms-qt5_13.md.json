["```cpp\nTEMPLATE = subdirs \n\nSUBDIRS += \\ \n    gallery-core \\ \n    gallery-desktop \\ \n    gallery-mobile \n\ngallery-desktop.depends = gallery-core \ngallery-mobile.depends = gallery-core \n\n```", "```cpp\n@ECHO off \n\nset DIST_DIR=dist\\desktop-windows \nset BUILD_DIR=build \nset OUT_DIR=gallery \n\nmkdir %DIST_DIR% && pushd %DIST_DIR% \nmkdir %BUILD_DIR% %OUT_DIR% \n\npushd %BUILD_DIR% \n%QTDIR%\\bin\\qmake.exe ^ \n  -spec win32-g++ ^ \n  \"CONFIG += release\" ^ \n  ..\\..\\..\\ch13-gallery-packaging.pro \n\n%MINGWROOT%\\bin\\mingw32-make.exe qmake_all \n\npushd gallery-core \n%MINGWROOT%\\bin\\mingw32-make.exe && popd \n\npushd gallery-desktop \n%MINGWROOT%\\bin\\mingw32-make.exe && popd \n\npopd \ncopy %BUILD_DIR%\\gallery-core\\release\\gallery-core.dll %OUT_DIR% \ncopy %BUILD_DIR%\\gallery-desktop\\release\\gallery-desktop.exe %OUT_DIR% \n%QTDIR%\\bin\\windeployqt %OUT_DIR%\\gallery-desktop.exe %OUT_DIR%\\gallery-core.dll \n\npopd \n\n```", "```cpp\nlinux { \n    target.path = $$_PRO_FILE_PWD_/../dist/desktop-linux/root/usr/lib/ \n    INSTALLS += target \n} \n\n```", "```cpp\nlinux { \n    target.path = $$_PRO_FILE_PWD_/../dist/desktop-linux/root/usr/bin/ \n    INSTALLS += target \n} \n\n```", "```cpp\n#!/bin/bash \n\nDIST_DIR=dist/desktop-linux \nBUILD_DIR=build \nROOT_DIR=root \n\nBIN_DIR=$ROOT_DIR/usr/bin \nLIB_DIR=$ROOT_DIR/usr/lib \n\nmkdir -p $DIST_DIR && cd $DIST_DIR \nmkdir -p $BIN_DIR $LIB_DIR $BUILD_DIR \n\npushd $BUILD_DIR \n$QTDIR/bin/qmake \\ \n    -spec linux-g++ \\ \n    \"CONFIG += release\" \\ \n    ../../../ch13-gallery-packaging.pro \n\nmake qmake_all \npushd gallery-core && make && make install ; popd \npushd gallery-desktop && make && make install ; popd \npopd \n\n```", "```cpp\nfpm --input-type dir \\ \n    --output-type deb \\ \n    --force \\ \n    --name gallery-desktop \\ \n    --version 1.0.0 \\ \n    --vendor \"Mastering Qt 5\" \\ \n    --description \"A Qt gallery application to organize and manage your pictures in albums\" \\ \n    --depends qt5-default \\ \n    --depends libsqlite3-dev \\ \n    --chdir $ROOT_DIR \\ \n    --package gallery-desktop_VERSION_ARCH.deb \n\n```", "```cpp\nsudo dpkg -i  dist/desktop-linux/gallery-desktop_1.0.0_amd64.deb\nsudo apt-get install -f\n\n```", "```cpp\n$ gallery-desktop \ngallery-desktop: /usr/lib/x86_64-linux-gnu/libQt5Core.so.5: version `Qt_5.7' not found (required by gallery-desktop)\ngallery-desktop: /usr/lib/x86_64-linux-gnu/libQt5Core.so.5: version `Qt_5' not found (required by gallery-desktop)\n...\ngallery-desktop: /usr/lib/x86_64-linux-gnu/libQt5Core.so.5: version `Qt_5' not found (required by /usr/lib/libgallery-core.so.1)\n\n```", "```cpp\n$ ldd /usr/bin/gallery-desktop\n libgallery-core.so.1 => /usr/lib/libgallery-core.so.1 (0x00007f8110775000)\n libQt5Widgets.so.5 => /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5 (0x00007f81100e8000)\n libQt5Gui.so.5 => /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5 (0x00007f810fb9f000)\n libQt5Core.so.5 => /usr/lib/x86_64-linux-gnu/libQt5Core.so.5 (0x00007f810f6c9000)\n ...\n libXext.so.6 => /usr/lib/x86_64-linux-gnu/libXext.so.6 (0x00007f810966e000)\n\n```", "```cpp\n$ ll /usr/lib/x86_64-linux-gnu/libQt5Core.*\n-rw-r--r-- 1 root root    1014 may    2 15:37 libQt5Core.prl\nlrwxrwxrwx 1 root root      19 may    2 15:39 libQt5Core.so -> libQt5Core.so.5.5.1\nlrwxrwxrwx 1 root root      19 may    2 15:39 libQt5Core.so.5 -> libQt5Core.so.5.5.1\nlrwxrwxrwx 1 root root      19 may    2 15:39 libQt5Core.so.5.5 -> libQt5Core.so.5.5.1\n-rw-r--r-- 1 root root 5052920 may    2 15:41 libQt5Core.so.5.5.1\n\n```", "```cpp\n#!/bin/bash \n\nDIST_DIR=dist/desktop-linux \nBUILD_DIR=build \n\nmkdir -p $DIST_DIR && cd $DIST_DIR \nmkdir -p $BUILD_DIR \n\npushd $BUILD_DIR \n$QTDIR/bin/qmake \\ \n    -spec linux-g++ \\ \n    \"CONFIG += release\" \\ \n    ../../../ch13-gallery-packaging.pro \nmake qmake_all \npushd gallery-core && make ; popd \npushd gallery-desktop && make ; popd \npopd \n\nexport QT_PLUGIN_PATH=$QTDIR/plugins/ \nexport LD_LIBRARY_PATH=$QTDIR/lib:$(pwd)/build/gallery-core \n\nlinuxdeployqt \\ \n    build/gallery-desktop/gallery-desktop \\ \n    -appimage \n\nmv build/gallery-desktop.AppImage . \n\n```", "```cpp\n#!/bin/bash \n\nDIST_DIR=dist/desktop-macosx \nBUILD_DIR=build \n\nmkdir -p $DIST_DIR && cd $DIST_DIR \nmkdir -p $BUILD_DIR \n\npushd $BUILD_DIR \n$QTDIR/bin/qmake \\ \n  -spec macx-clang \\ \n  \"CONFIG += release x86_64\" \\ \n  ../../../ch13-gallery-packaging.pro \nmake qmake_all \npushd gallery-core && make ; popd \npushd gallery-desktop && make ; popd \n\ncp gallery-core/*.dylib \\ \n    gallery-desktop/gallery-desktop.app/Contents/Frameworks/ \n\ninstall_name_tool -change \\ \n  libgallery-core.1.dylib \\ \n  @rpath/libgallery-core.1.dylib \\ \n  gallery-desktop/gallery-desktop.app/Contents/MacOS/gallery-desktop \npopd \n\n$QTDIR/bin/macdeployqt \\ \n    build/gallery-desktop/gallery-desktop.app \\ \n    -dmg \n\nmv build/gallery-desktop/gallery-desktop.dmg . \n\n```", "```cpp\n$ otool -L dist/desktop-macosx/build/gallery-desktop/gallery-desktop.app/Contents/MacOS/gallery-desktop \ndist/desktop-macosx/build/gallery-desktop/gallery-desktop.app/Contents/MacOS/gallery-desktop:\n libgallery-core.1.dylib (compatibility version 1.0.0, current version 1.0.0)\n @rpath/QtWidgets.framework/Versions/5/QtWidgets (compatibility version 5.7.0, current version 5.7.0)\n...\n /usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1226.10.1)\n\n```", "```cpp\nTEMPLATE = app \n... \nandroid { \n    contains(ANDROID_TARGET_ARCH,x86) { \n        ANDROID_EXTRA_LIBS = \\ \n            $$[QT_INSTALL_LIBS]/libQt5Sql.so \n    } \n\n    DISTFILES += \\ \n        android/AndroidManifest.xml \\ \n        android/gradle/wrapper/gradle-wrapper.jar \\ \n        android/gradlew \\ \n        android/res/values/libs.xml \\ \n        android/build.gradle \\ \n        android/gradle/wrapper/gradle-wrapper.properties \\ \n        android/gradlew.bat \n\n    ANDROID_PACKAGE_SOURCE_DIR = $$PWD/android \n} \n\n```", "```cpp\n#!/bin/bash \n\nDIST_DIR=dist/mobile-android \nBUILD_DIR=build \nAPK_DIR=apk \nKEYSTORE_PATH=\"$(pwd)/scripts/android-data\" \nANDROID_BUILD_PATH=\"$(pwd)/$DIST_DIR/$BUILD_DIR/android-build\" \n\nmkdir -p $DIST_DIR && cd $DIST_DIR \nmkdir -p $APK_DIR $BUILD_DIR \n\npushd $BUILD_DIR \n$QTDIR_ANDROID/bin/qmake \\ \n    -spec android-g++ \\ \n    \"CONFIG += release\" \\ \n    ../../../ch13-gallery-packaging.pro \nmake qmake_all \npushd gallery-core && make ; popd \npushd gallery-mobile && make ; popd \npushd gallery-mobile && make INSTALL_ROOT=$ANDROID_BUILD_PATH install ; popd \n\n$QTDIR_ANDROID/bin/androiddeployqt \n    --input ./gallery-mobile/android-libgallery-mobile.so-deployment-settings.json \\ \n    --output $ANDROID_BUILD_PATH \\ \n    --deployment bundled \\ \n    --android-platform android-23 \\ \n    --jdk $JAVA_HOME \\ \n    --ant $ANT_ROOT/ant \\ \n    --sign $KEYSTORE_PATH/android.keystore myandroidkey \\ \n    --storepass 'masteringqt' \n\ncp $ANDROID_BUILD_PATH/bin/QtApp-release-signed.apk ../apk/cute-gallery.apk \npopd \n\n```", "```cpp\n#!/bin/bash \n\nDIST_DIR=dist/mobile-ios \nBUILD_DIR=build \n\nmkdir -p $DIST_DIR && cd $DIST_DIR \nmkdir -p $BIN_DIR $LIB_DIR $BUILD_DIR \n\npushd $BUILD_DIR \n$QTDIR_IOS/bin/qmake \\ \n  -spec macx-ios-clang \\ \n  \"CONFIG += release iphoneos device\" \\ \n  ../../../ch13-gallery-packaging.pro \nmake qmake_all \npushd gallery-core && make ; popd \npushd gallery-mobile && make ; popd \n\npopd \n\n```"]