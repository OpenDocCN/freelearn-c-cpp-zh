- en: Autonomous Robotics with Intel Edison
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用英特尔爱迪生进行自主机器人
- en: Robotics is a branch of engineering that deals with the design, development,
    and
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人工程是工程的一个分支，涉及设计、开发和
- en: application of robots. While robots can take the form of human beings, most
    robots are
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人的应用。虽然机器人可以采取人类的形式，但大多数机器人都是
- en: designed to perform a specific set of tasks, and it may just look like a machine
    or
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 设计来执行一组特定的任务，它可能看起来就像一台机器或
- en: anything that is not human. What we are interested in is how the Intel Edison
    can be used to
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 任何非人类的东西。我们感兴趣的是英特尔爱迪生如何被用来
- en: develop robots. This chapter will cover the autonomous aspect of robotics and
    will mainly
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 开发机器人。本章将涵盖机器人的自主方面，并将主要
- en: 'cover the following topics:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 将涵盖以下主题：
- en: Architecture of a robotic system
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人系统的架构
- en: Intel Edison as a controller
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 英特尔爱迪生作为控制器
- en: Connecting sensors with the Intel Edison
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将传感器与英特尔爱迪生连接
- en: Calibration of sensors with real-time environment
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用实时环境校准传感器
- en: Actuators: motors, servos, and so on
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 执行器：电机、伺服电机等
- en: Motordrivers: Dual H bridge configuration
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电机驱动器：双H桥配置
- en: Speed control
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 速度控制
- en: Patching everything together: Line follower robot
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将一切整合：循线机器人
- en: More advanced line follower robots based on the PID control system
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 基于PID控制系统的更高级循线机器人
- en: This chapter will deal with a line follower robot and will explore all the components
    of it and discuss some tips and tricks for advanced line following. All the code
    in this chapter will be written using the Arduino IDE.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将处理循线机器人，并探讨其所有组件，并讨论一些高级循线的技巧和窍门。本章中的所有代码都将使用Arduino IDE编写。
- en: Architecture of a typical robotic system
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 典型机器人系统的架构
- en: 'In a typical autonomous robotic system, the **sensor** does the job of gathering
    data. Based on the data, the controller initially processes it and then performs
    an action that results in an action by the use of **actuators**:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在典型的自主机器人系统中，**传感器**负责收集数据。基于这些数据，控制器最初对其进行处理，然后通过使用**执行器**执行动作：
- en: '![](img/image_05_001-1.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_001-1.jpg)'
- en: Architecture of a robotic system
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人系统的架构
- en: We can also have a **dashboard** that may just display what exactly is happening,
    or sometimes can provide some commands to the robot. Different models exist of
    the architecture. The preceding architecture is such that the components of a
    robot are said to be horizontally organized. The information gathered through
    sensors goes through multiple steps before getting executed as an action. Beside
    the horizontal flow, there can be vertical flow, where the control may shift to
    the actuator at any time without completion of the entire process. It's like a
    queue of cars moving on a highway, and then a single car takes a exit ramp and
    exits. The line follower robot that we will develop will use the horizontal approach,
    which is the most primitive.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以有一个**仪表盘**，它可能只是显示正在发生的事情，或者有时可以向机器人提供一些命令。架构的模型有很多种。前面的架构是这样的，机器人的组件被认为是水平组织的。通过传感器收集的信息在执行动作之前需要经过多个步骤。除了水平流动之外，还可能有垂直流动，控制可以在整个流程完成之前随时转移到执行器。这就像高速公路上行驶的汽车队列，然后一辆车驶入出口匝道并离开。我们将开发的循线机器人将使用水平方法，这是最原始的方法。
- en: Intel Edison as a controller
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 英特尔爱迪生作为控制器
- en: Throughout the book, we have seen the use of the Intel Edison in various applications.
    In every case, we have stressed on the use of it as a controller because of its
    features. Now, in the field of robotics, we are again stressing on it as a microcontroller,
    but the question is, why?
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在整本书中，我们已经看到了英特尔爱迪生在各个应用中的使用。在每种情况下，我们都强调其作为控制器的作用，因为其特性。现在，在机器人领域，我们再次强调其作为微控制器的作用，但问题是，为什么？
- en: Well, when we are dealing with robotics, in some cases we may need the core
    capabilities of the Intel Edison. The Intel Edison has a built-in BLE, Wi-Fi,
    and some features that make it perfect for use in robotics. The Arduino compatible
    expansion board allows us to use generic Arduino shields for peripherals and motor
    driving, while the core capabilities provide us some extra functionality for the
    robot, such as voice-based commands and uploading data to the cloud.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，当我们处理机器人时，在某些情况下，我们可能需要英特尔爱迪生的核心功能。英特尔爱迪生内置了蓝牙低功耗（BLE）、Wi-Fi以及一些使其非常适合用于机器人的特性。Arduino
    兼容的扩展板允许我们使用通用的Arduino外设板和电机驱动器，而核心功能为机器人提供了一些额外的功能，例如基于语音的命令和将数据上传到云端。
- en: 'All this comes in a single unit. So, instead of using multiple peripherals,
    the Intel Edison provides us the flexibility to use everything under a single
    roof. The ability to attach a camera also adds more spice to it:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都在一个单元中。因此，我们不需要使用多个外围设备，英特尔Edison为我们提供了在单一屋檐下使用所有设备的灵活性。能够附加摄像头也为其增添了更多风味：
- en: '![](img/image_05_002-1.jpg)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_05_002-1.jpg)'
- en: 'Spider bot by Intel. It uses the Intel Edison and a custom expansion board
    for controlling servos. Picture credit: [https://i.ytimg.com/vi/3NeJisPvHcU/maxresdefault.jpg](https://i.ytimg.com/vi/3NeJisPvHcU/maxresdefault.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 英特尔蜘蛛机器人。它使用英特尔Edison和定制的扩展板来控制伺服系统。图片来源：[https://i.ytimg.com/vi/3NeJisPvHcU/maxresdefault.jpg](https://i.ytimg.com/vi/3NeJisPvHcU/maxresdefault.jpg)
- en: Connecting sensors to the Intel Edison
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将传感器连接到Intel Edison
- en: 'In [Chapter 2](bada9944-ec60-4e8f-8d88-0085dd1c8210.xhtml), *Weather Station
    (IoT)*, we had a brief discussion about sensors. Here we are more focused on sensors
    that will help the robot find where exactly it is in an environment. We are going
    to deal with two sensors and how you can calibrate them:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](bada9944-ec60-4e8f-8d88-0085dd1c8210.xhtml) *气象站（物联网）*中，我们简要讨论了传感器。在这里，我们更关注那些帮助机器人确定其在环境中的确切位置的传感器。我们将处理两个传感器以及如何校准它们：
- en: Ultrasonic sensors (HCSR04)
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超声波传感器（HCSR04）
- en: Infrared sensors for detection of lines
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于检测线条的红外传感器
- en: The reason behind the use of the preceding sensors is that we use these sensors
    in robotics. However, others are also used, but these are the most commonly used.
    Now the next question that arises is "how do they operate and how do we hook up
    with the Intel Edison?"
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面传感器的理由是我们将这些传感器用于机器人技术。然而，其他传感器也被使用，但这些是最常用的。现在下一个问题是“它们是如何操作的，我们如何将它们连接到英特尔Edison？”
- en: Let's have a look at each of them.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看它们中的每一个。
- en: Ultrasonic sensor (HCSR04)
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 超声波传感器（HCSR04）
- en: 'The main purpose of using this sensor is for the measurement of distances.
    In our case it may not be needed, but it is very useful in beginner robotics:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 使用此传感器的主要目的是测量距离。在我们的情况下可能不需要，但在初学者机器人技术中非常有用：
- en: '![](img/image_05_003-1.jpg)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_05_003-1.jpg)'
- en: Ultrasonic sensor HCSR04
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 超声波传感器 HCSR04
- en: It emits ultrasonic sound waves, which, if anything is present, then gets back
    a reflected and picked up by the receiver. Based on the duration of pulse output
    and the pulse received, we calculate the distance.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 它发出超声波，如果有物体存在，则反射并被接收器接收。根据脉冲输出时间和接收到的脉冲，我们计算距离。
- en: 'The sensor can provide readings ranging from 2 cm to 400 cm. It contains the
    emitter and the receiver, and thus we can just plug and play with our Intel Edison.
    The operating voltage is +5V DC. The operation isn''t affected by sunlight or
    dark materials, and is thus efficient for finding distances. Another thing to
    be noted is that the beam angle is 15 degrees:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 该传感器可以提供从2厘米到400厘米的读数。它包含发射器和接收器，因此我们可以直接将我们的Intel Edison插入并使用。工作电压为+5V直流。操作不受阳光或深色材料的影响，因此非常适合寻找距离。需要注意的是，光束角度为15度：
- en: '![](img/image_05_004-1.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_05_004-1.jpg)'
- en: Beam angle
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 光束角度
- en: Let's have a look at some sample code for using the preceding module.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看使用前面模块的一些示例代码。
- en: 'There is no direct method of calculating the distance directly from the sensors.
    We need to use two GPIO pins. The first will be the trigger pin, which will be
    configured as the output, while the second will be the echo pin, which will be
    in input mode. The moment we send a pulse through the trigger pin, we wait for
    an incoming pulse in the echo pin. The timing difference and a little bit of mathematics
    gives us the distance:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 从传感器直接计算距离没有直接的方法。我们需要使用两个GPIO引脚。第一个将是触发引脚，它将被配置为输出，而第二个将是回声引脚，它将处于输入模式。当我们通过触发引脚发送脉冲时，我们等待在回声引脚上接收到的脉冲。时间差和一些数学计算给出了距离：
- en: '[PRE0]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'In the preceding code, concentrate on the loop method. Initially, we send a
    low pulse to get a clean high pulse. Next, we send a high pulse for `10` seconds.
    Finally, we get the high pulse in the echo pin and use the `pulseIn()` method
    to calculate the duration. The duration is sent to another method, where we use
    the known parameter of the speed of sound to calculate the distance. To use this
    code on the Edison, connect the HCSR04 sensor to the Edison by following this
    circuit diagram:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，关注循环方法。最初，我们发送一个低脉冲以获得干净的高脉冲。接下来，我们发送一个高脉冲`10`秒。最后，我们在回波引脚上获得高脉冲，并使用`pulseIn()`方法来计算持续时间。持续时间被发送到另一个方法，在那里我们使用已知的声速参数来计算距离。要在Edison上使用此代码，请按照以下电路图将HCSR04传感器连接到Edison：
- en: '![](img/image_05_005-1.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_005-1.jpg)'
- en: Circuit diagram
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 电路图
- en: 'Use the preceding circuitry to connect your HCSR04 to your Edison. Next, upload
    the code and open the serial monitor:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 使用前面的电路连接您的HCSR04到您的Edison。接下来，上传代码并打开串行监视器：
- en: '![](img/image_05_006.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_006.png)'
- en: Serial monitor reading for HCSR04
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: HCSR04的串行监视器读数
- en: The preceding screenshot shows us the serial monitor where we get the readings
    of the distance measured.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的截图显示了我们的串行监视器，我们在其中获得了测量距离的读数。
- en: Applications of HCSR04
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: HCSR04的应用
- en: This sensor has lots of applications, especially in autonomous robotics. Even
    mapping can be accomplished using this sensor. When a HCSR04 is placed on top
    of a servo motor, the HCSR04 can be used to map the entire 360 degrees. These
    are extremely useful when we want to perform **simultaneous localization and mapping**
    (**SLAM**).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 此传感器有众多应用，尤其是在自主机器人领域。甚至可以使用此传感器完成地图绘制。当HCSR04放置在伺服电机顶部时，HCSR04可以用来绘制整个360度的地图。这些在我们要执行**同时定位与地图构建**（**SLAM**）时非常有用。
- en: Infrared sensors
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 红外传感器
- en: These sensors have multiple utilities. Starting from line detection to edge
    detection, these sensors can even be optimized to be used as proximity sensors.
    Even our smartphones use these sensors. They are usually located near the front
    speakers. These sensors also work on the principle of sending and receiving signals.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 这些传感器有多种用途。从线检测到边缘检测，这些传感器甚至可以优化为用作接近传感器。甚至我们的智能手机也使用这些传感器。它们通常位于前置扬声器附近。这些传感器也基于发送和接收信号的原则工作。
- en: Working methodology
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作方法
- en: 'The following image is a commonly used infrared sensor:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像是常用的红外传感器：
- en: '![](img/image_05_007-1.jpg)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_007-1.jpg)'
- en: 'Infrared sensor: Picture source: [http://www.amazon.in/Robosoft-Systems-Single-Sensor-Module/dp/B00U3LKGTG](http://www.amazon.in/Robosoft-Systems-Single-Sensor-Module/dp/B00U3LKGTG)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 红外传感器：图片来源：[http://www.amazon.in/Robosoft-Systems-Single-Sensor-Module/dp/B00U3LKGTG](http://www.amazon.in/Robosoft-Systems-Single-Sensor-Module/dp/B00U3LKGTG)
- en: It has an emitter and a receiver. The output can either be digital or analog.
    The emitter sends an infrared wave. Based on the object, it is reflected back
    and the signal is picked up by the receiver. Based on that, we know that we have
    something in close proximity.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 它有一个发射器和接收器。输出可以是数字或模拟。发射器发送红外波。基于物体，它被反射回来，信号被接收器接收。基于此，我们知道我们附近有东西。
- en: 'There are multiple applications for infrared sensors:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 红外传感器有多个应用：
- en: Detection of objects in close proximity
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 检测近距离物体
- en: Measuring temperature
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测量温度
- en: Infrared cameras
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 红外相机
- en: Passive infrared for motion detection
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 被动红外运动检测
- en: The first was already discussed. The second one is the use of infrared detectors
    for detection of the infrared spectrum, and based on that, we calculate the temperature.
    Infrared cameras are widely used in the military, firefighting, and many places
    where we need to know from a distance that temperatures are high. The third one
    is the PIR. Passive infrared modules are used for motion detection and are used
    for automating homes.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个已经讨论过了。第二个是使用红外探测器来检测红外光谱，基于此，我们计算温度。红外相机在军事、消防和许多我们需要从远处知道温度很高的地方得到广泛应用。第三个是PIR。被动红外模块用于运动检测，并用于家庭自动化。
- en: Digital and analog outputs for infrared sensors
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 红外传感器的数字和模拟输出
- en: We have already mentioned that these sensors either give a digital output or
    an analog output. But why are we so concerned about this? It's mainly because
    of the reason that in a typical line following we may use digital values, but
    in high-speed line follower robots, we opt for analog values. The greatest advantage
    is that there will be a smooth transition from a white surface to a black surface,
    and in a high-speed line following, we control the speed of the motors based on
    the sensor analog input, and therefore have more efficient control. For simple
    purposes, we go for digital output.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经提到，这些传感器要么提供数字输出，要么提供模拟输出。但我们为什么如此关注这一点呢？主要是因为在典型的循线中，我们可能使用数字值，但在高速循线机器人中，我们选择模拟值。最大的优点是，从白色表面到黑色表面的过渡将更加平滑，在高速循线中，我们根据传感器的模拟输入控制电机的速度，因此具有更有效的控制。对于简单用途，我们选择数字输出。
- en: Calibration of the infrared sensor module
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 红外传感器模块的校准
- en: 'Infrared sensor modules need to be calibrated for the following reasons:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 红外传感器模块需要校准的原因如下：
- en: The environment may be too bright for the sensor to actually detect anything
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境可能对传感器来说过于明亮，以至于无法实际检测到任何东西。
- en: Due to changes in environmental parameters, we may need to calibrate them to
    suit our needs
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 由于环境参数的变化，我们可能需要对其进行校准以满足我们的需求。
- en: 'Let us consider a line follower robot under two sets of conditions:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑在两种条件下使用循线机器人：
- en: In a normally lit environment (indoor)
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在正常照明的环境中（室内）
- en: In a sunny environment (outdoor)
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在阳光明媚的环境中（户外）
- en: When the robot runs efficiently in an indoor environment under ambient light,
    it is not necessarily true that it will do the same outdoors. The reason is that
    the sensors are infrared and in a brightly lit environment, especially in sunlight,
    it's harder to detect. Now, how do we calibrate the sensors? Every sensor module
    has a potentiometer that controls the sensitivity of the sensor. This potentiometer
    needs to be adjusted according to the surroundings so that you get appropriate
    readings.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当机器人在室内环境下的环境光下高效运行时，并不一定意味着它会在户外做同样的事情。原因是传感器是红外传感器，在明亮的环境中，尤其是在阳光下，检测会更困难。那么，我们如何校准传感器呢？每个传感器模块都有一个电位器，用于控制传感器的灵敏度。这个电位器需要根据周围环境进行调整，以便获得适当的读数。
- en: Now, when you are dealing with robotics, keep some code handy, because it might
    be required. Similarly for calibration, we follow very simple steps.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，当你处理机器人时，请随身携带一些代码，因为可能需要。同样，对于校准，我们遵循非常简单的步骤。
- en: 'Let us consider a simple line follower use case. We need to follow a black
    line on a white track. The steps are as follows:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑一个简单的循线使用案例。我们需要跟随白色轨道上的黑色线条。步骤如下：
- en: Place the robot or the sensor in the ideal position (ideal position stands for
    the position where your robot needs to be, that is, at the center of the line).
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将机器人或传感器放置在理想位置（理想位置指的是机器人需要所在的位置，即线的中心）。
- en: If the robot is not yet constructed, then cover your sensor with paper and hold
    it at or about 2 cm above the track.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果机器人尚未构建，请用纸覆盖传感器，并将其保持在或大约2厘米高于轨道的位置。
- en: Now check the values of the sensor with the code to be shown in the following
    steps.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，检查传感器的值，代码将在以下步骤中展示。
- en: There should be a stark difference between the sensor that is above the white
    line and the sensor that is above the black line. If you have both the sensors
    above white line then the values should be exactly similar else adjust the potentiometer.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 白色线条上方的传感器和黑色线条上方的传感器之间应该有明显的差异。如果你两个传感器都在白色线条上方，那么它们的值应该完全相同，否则调整电位器。
- en: Similarly, carry out the process by placing both the sensors over the black
    line.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 同样，通过将两个传感器都放置在黑色线条上方来执行此过程。
- en: Carry out the entire process again if the environment or, more precisely, the
    lighting conditions change.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果环境或更确切地说，照明条件发生变化，请再次执行整个流程。
- en: Hardware setup for calibration and sensor reading
  id: totrans-85
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 校准和传感器读数的硬件设置
- en: 'Follow the following circuit diagram for the hardware setup:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下电路图进行硬件设置：
- en: '![](img/image_05_008-1.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_05_008-1.jpg)'
- en: Sensor calibration circuit
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器校准电路
- en: The circuit is pretty straightforward and simple to understand. Just attach
    two sensors to the **A0** and **A1** pins and the common **Vcc** and **Gnd** connections.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 电路相当直接且易于理解。只需将两个传感器连接到**A0**和**A1**引脚，以及公共的**Vcc**和**Gnd**连接。
- en: 'Now, let''s get on with the code:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们继续编写代码：
- en: '[PRE1]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The preceding code returns us the values and readings from both the sensors.
    After you burn the code into the Intel Edison, you will start receiving the values
    from the sensors. Now, it is required to perform the tests as mentioned in calibration
    to calibrate the sensors.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码返回了从传感器获取的值和读数。在将代码烧录到英特尔爱迪生之后，你将开始接收传感器的值。现在，需要按照校准中提到的测试进行测试以校准传感器。
- en: Actuators - DC motors and servos
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 执行器 - 直流电机和伺服电机
- en: In every robotics project the robot needs to get some mobility. For mobility,
    we use DC motors or servos. This section will deal with motors and types of motor.
    The next section will deal with how we can control the motors using the Intel
    Edison.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在每一个机器人项目中，机器人都需要获得一些移动性。为了移动性，我们使用直流电机或伺服电机。本节将讨论电机和电机类型。下一节将讨论如何使用英特尔爱迪生控制电机。
- en: Electrical motors are electromechanical devices that convert electrical energy
    to mechanical energy. The two electrical components in a motor are the field windings
    and the armature. It's a two pole device. The armature is usually on the rotor,
    while the field windings are usually on the stator.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 电动机是机电装置，将电能转换为机械能。电动机中的两个电气元件是磁场绕组和电枢。它是一个两极装置。电枢通常位于转子，而磁场绕组通常位于定子。
- en: 'Permanent magnet motors use permanent magnets to supply field flux:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 永磁电机使用永磁体提供磁场通量：
- en: '![](img/image_05_009.jpg)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_05_009.jpg)'
- en: Permanent magnet motor
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 永磁电机
- en: These motors are restricted by the load they can drive, and that's a disadvantage.
    However, considering the fact that we are focusing on robotics and on a small-scale
    basis, we are opting for this kind of motor.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 这些电机受其能驱动的负载限制，这是一个缺点。然而，考虑到我们专注于机器人和小规模应用，我们选择了这种类型的电机。
- en: 'These motors generally operate at 9V-12V, with a maximum full-load current
    of around 2-3 A. In robotics, we mainly deal with three types of DC motor:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这些电机通常在9V-12V电压下运行，最大满载电流约为2-3 A。在机器人技术中，我们主要处理三种类型的直流电机：
- en: Continuous DC
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 恒定直流
- en: Stepper
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 步进电机
- en: Servo
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 伺服电机
- en: 'Continuous DC motors are continuous rotation devices. When the power is switched
    on the motor rotates, and if polarity is reversed, it rotates in the opposite
    direction. These motors are widely used for providing mobility to the robot. Normally,
    DC motors come with gears, which provide some more torque:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 恒定直流电机是连续旋转装置。当电源开启时，电机旋转，如果极性反转，则反向旋转。这些电机广泛应用于为机器人提供移动性。通常，直流电机带有齿轮，这提供了更多的扭矩：
- en: '![](img/image_05_010-1.jpg)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_05_010-1.jpg)'
- en: 'A DC motor. Picture source: [http://img.directindustry.com/images_di/photo-g/61070-3667645.jpg](http://img.directindustry.com/images_di/photo-g/61070-3667645.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 直流电机。图片来源：[http://img.directindustry.com/images_di/photo-g/61070-3667645.jpg](http://img.directindustry.com/images_di/photo-g/61070-3667645.jpg)
- en: 'The next category is a servo motor. The speed of these motors is controlled
    by varying the width of pulses with a technique known as pulse width modulation.
    Servo motors are generally an assembly of four things: a DC motor, a gearing set,
    a control circuit and a position sensor (usually a potentiometer). Generally,
    a servo motor contains three set of wires: Vcc, Gnd, and signal. Due to thier
    precise nature, servo motors have a complete different use case, where position
    is an important parameter. Servo motors do not rotate freely like a standard DC
    motor. Instead, the angle of rotation is limited to 180 degrees (or so) back and
    forth. The control signal comes as a **Pulse Width Modulation** (**PWM**) signal:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个类别是伺服电机。这些电机的速度通过脉冲宽度调制技术，即通过改变脉冲宽度来控制。伺服电机通常由四个部分组成：直流电机、齿轮组、控制电路和位置传感器（通常是电位计）。通常，伺服电机包含三组线：Vcc、Gnd和信号。由于其精确性，伺服电机有完全不同的应用场景，其中位置是一个重要参数。伺服电机不像标准直流电机那样自由旋转。相反，旋转角度限制在180度（或更多）的往返之间。控制信号以**脉冲宽度调制（PWM**）信号的形式出现：
- en: '![](img/image_05_011.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_05_011.png)'
- en: 'A servo motor: Picture source: [https://electrosome.com/wp-content/uploads/2012/06/Servo-Motor.gif](https://electrosome.com/wp-content/uploads/2012/06/Servo-Motor.gif)'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 伺服电机：图片来源：[https://electrosome.com/wp-content/uploads/2012/06/Servo-Motor.gif](https://electrosome.com/wp-content/uploads/2012/06/Servo-Motor.gif)
- en: 'Finally, stepper motors are an advanced form of servo motor. They provide a
    full 360-degree rotation and it''s a continuous motion. The stepper motor utilizes
    multiple toothed electromagnets arranged together around a central gear to define
    the position. They require an external controller circuit to individually excite
    each electromagnet. Stepper motors are available in two varieties; unipolar and
    bipolar. Bipolar motors are the strongest type of stepper motor and usually have
    four or eight leads:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，步进电机是伺服电机的先进形式。它们提供完整的360度旋转，并且是连续运动。步进电机利用围绕中心齿轮排列的多个齿形电磁铁来定义位置。它们需要一个外部控制器电路来单独激励每个电磁铁。步进电机有两种类型：单极和双极。双极电机是步进电机中最强的一种，通常有四个或八个引脚：
- en: '![](img/image_05_012-1.jpg)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_012-1.jpg)'
- en: Stepper motor
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 步进电机
- en: In the project of line following, we'll be dealing with DC motors. But motors
    cannot be directly hooked up to the Intel Edison, and therefore we need an interfacing
    circuit, more commonly known as a motor driver.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在跟随线项目里，我们将处理直流电机。但是电机不能直接连接到英特尔爱迪生，因此我们需要一个接口电路，通常被称为电机驱动器。
- en: Motor drivers
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电机驱动器
- en: Since motors consume voltage and current that cannot be supplied by the GPIO
    pins alone, we opt for motor drivers. These have an external power supply and
    use the microcontroller's GPIO pins to receive the control signal. Based on the
    control signals received, the motor rotates at a particular speed. There are lots
    of motor drivers available on the market; we will be concentrating on L293D initially,
    and then a custom and a high-power driver.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 由于电机消耗的电压和电流不能仅由GPIO引脚提供，我们选择使用电机驱动器。这些驱动器有外部电源，并使用微控制器的GPIO引脚接收控制信号。根据接收到的控制信号，电机以特定的速度旋转。市场上有很多电机驱动器；我们最初将专注于L293D，然后是定制和高功率驱动器。
- en: The target of any motor driver is to receive control signals from the controller
    here, the Intel Edison, and send the final output to the motor. Typically, a motor
    driver can rotate the motor in both directions and also control the speed.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 任何电机驱动器的目标是从控制器这里，即英特尔爱迪生，接收控制信号，并将最终输出发送到电机。通常，电机驱动器可以控制电机在两个方向上旋转，也可以控制速度。
- en: L293D
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: L293D
- en: 'L293D is a typical motor driver integrated circuit that can drive two motors
    in both directions. It''s like a starter for every robotics project. It''s a 16-bit
    IC:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: L293D是一种典型的电机驱动集成电路，可以驱动两个电机在两个方向上。它就像是每个机器人项目的启动器。它是一个16位IC：
- en: '![](img/image_05_013.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_013.png)'
- en: 'Pinout for L293D. Picture source: [http://www.gadgetronicx.com](http://www.gadgetronicx.com)'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: L293D的引脚排列。图片来源：[http://www.gadgetronicx.com](http://www.gadgetronicx.com)
- en: The maximum voltage for Vs motor supply is 36V. It can supply a max current
    of 600mA per channel.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Vs电机供电的最大电压是36V。它可以为每个通道提供最大600mA的电流。
- en: 'It works on the concept of H bridge. The circuit allows the flow of current
    in either direction. Let''s have a look at the H bridge circuit first:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 它基于H桥的概念。该电路允许电流在两个方向上流动。我们先看看H桥电路：
- en: '![](img/image_05_014.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_014.png)'
- en: 'Simple layout of an H bridge circuit. Picture source: [https://en.wikipedia.org/](https://en.wikipedia.org/)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: H桥电路的简单布局。图片来源：[https://en.wikipedia.org/](https://en.wikipedia.org/)
- en: Here, **S1**, **S2**, **S3**, and **S4** are switches that in real life contain
    transistors. The operation is extremely simple. When **S1** and **S4** are on,
    the central motor rotates in one direction while the reverse happens when **S2**
    and **S3** are on. **S1**, **S2**, **S3**, and **S4** receive control signals
    from the microcontroller and operate the direction of the motor accordingly.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，**S1**、**S2**、**S3**和**S4**是开关，在现实生活中包含晶体管。操作极其简单。当**S1**和**S4**打开时，中心电机向一个方向旋转，而当**S2**和**S3**打开时，则发生相反的情况。**S1**、**S2**、**S3**和**S4**从微控制器接收控制信号，并相应地操作电机的方向。
- en: The L293D consists of two such circuits. Thus, we can control up to two motors.
    One can use the L293D as a module or just as a standalone IC. Normally what we
    need to worry about are four pins, where we'll send control signals. We have the
    pin layout for L293D. Let's have a look at what signals will result in what kind
    of action.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: L293D由两个这样的电路组成。因此，我们可以控制多达两个电机。可以将L293D用作模块或仅作为独立的IC。通常我们只需要担心四个引脚，我们将在这里发送控制信号。我们有L293D的引脚布局。让我们看看哪些信号会导致什么样的动作。
- en: Pins 1-8 are responsible for one motor, while pins 9-16 are responsible for
    the other.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 引脚1-8负责一个电机，而引脚9-16负责另一个。
- en: Enable pin is set to logic high for the operation. The same goes for the other
    side.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 使能引脚设置为逻辑高以进行操作。另一侧也是如此。
- en: 'What needs to be tampered with are the input pins 2, 7, 10, and 15\. The motors
    are connected to pins 3, 6, 11, and 14\. Vss is for the power supply for the motor,
    while Vss or Vcc is for the internal power supply. While enable 1 and enable 2,
    that is pins 1 and 9, are set to high depending on the condition:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 需要调整的是输入引脚 2、7、10 和 15。电机连接到引脚 3、6、11 和 14。Vss 是电机电源，而 Vss 或 Vcc 是内部电源。当使能 1
    和使能 2，即引脚 1 和 9，根据条件设置为高时：
- en: '| **Pin 2 or 10** | **Pin 7 or 15** | **Motor** |'
  id: totrans-130
  prefs: []
  type: TYPE_TB
  zh: '| **引脚 2 或 10** | **引脚 7 或 15** | **电机** |'
- en: '| High | Low | Clockwise |'
  id: totrans-131
  prefs: []
  type: TYPE_TB
  zh: '| 高 | 低 | 顺时针 |'
- en: '| High | High | Stop |'
  id: totrans-132
  prefs: []
  type: TYPE_TB
  zh: '| 高 | 高 | 停止 |'
- en: '| Low | Low | Stop |'
  id: totrans-133
  prefs: []
  type: TYPE_TB
  zh: '| 低 | 低 | 停止 |'
- en: '| Low | High | Anti-clockwise |'
  id: totrans-134
  prefs: []
  type: TYPE_TB
  zh: '| 低 | 高 | 逆时针 |'
- en: The preceding table summarizes the action triggered based on the input. It is
    to be noticed that if both the input pins are either on or off then the motor
    won't rotate. Now in typical L293D modules, only four control pins are exposed
    and the main voltage supply and Gnd pins are exposed. In the preceding table,
    it is mentioned as **2 or 10** and **7 or 15**. The pair goes as 2 and 7 or 10
    and 15\. It means that 2 is on or 10 is off and the same goes for the other as
    well. The motion of the motor, which is designated as **clockwise** and **anti-clockwise**,
    depends on the connection of the motor. Assume that the rotation direction reverses
    when the control signal changes.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的表格总结了基于输入触发的动作。需要注意的是，如果两个输入引脚都开启或关闭，则电机不会旋转。在典型的 L293D 模块中，只有四个控制引脚和主要电压供电及
    Gnd 引脚是暴露的。在前面的表格中，提到的是 **2 或 10** 和 **7 或 15**。这对引脚是 2 和 7 或 10 和 15。这意味着 2 是开启或
    10 是关闭，其他引脚同理。电机的运动，即指定为 **顺时针** 和 **逆时针**，取决于电机的连接。假设当控制信号改变时，旋转方向会反转。
- en: Circuit diagram
  id: totrans-136
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电路图
- en: Construct the following temporary circuit to test out the motors. The enable
    pins are to be connected to **5V** of the Intel Edison and **Gnd** to **Gnd**.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 构建以下临时电路以测试电机。使能引脚应连接到英特尔爱迪生的 **5V**，而 **Gnd** 连接到 **Gnd**。
- en: It's recommended to use motor driver modules instead of a standalone IC. This
    allows us to accomplish things in a much simpler way.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 建议使用电机驱动模块而不是独立的 IC。这使我们能够以更简单的方式完成任务。
- en: '**CP1** and **CP2** are the control pins for the first motor, while **CP3**
    and **CP4** are the control pins for the second motor:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**CP1** 和 **CP2** 是第一台电机的控制引脚，而 **CP3** 和 **CP4** 是第二台电机的控制引脚：'
- en: '![](img/image_05_015-1.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_015-1.jpg)'
- en: Circuit diagram for motor testing
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 电机测试电路图
- en: When dealing with robotics, it is advised to keep sample code with which you
    can test that your motor driver is working or not. The code discussed here will
    explain how one can do so.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理机器人技术时，建议保留可以测试您的电机驱动器是否正常工作的示例代码。这里讨论的代码将解释如何做到这一点。
- en: 'This part is especially important because it is necessary as the motor testing
    unit and also for calibration. This code also depends on your motor connection
    and it may require trial and error:'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 这部分特别重要，因为它是作为电机测试单元和校准所必需的。此代码也取决于您的电机连接，可能需要尝试和错误：
- en: '[PRE2]'
  id: totrans-144
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The preceding code is very simple to understand. Here, we have broken it into
    several methods for `forward`, `backward`, `left`, `right`, and `stop`. These
    methods will be responsible for sending control signals to the motor driver using
    `digitalWrite`. Point to be noted is that this code may not work. It all depends
    on how your motor is connected. So, when you burn this code to your Intel Edison,
    make a note of which direction your motor is rotating for the initial 10 seconds.
    If both motors rotate in the same direction, well then you are lucky enough of
    not tampering with the connections. If, however, you observe rotation in opposite
    directions, then reverse the connection of one of the motors from its motor driver.
    This will allows the motor to rotate in the other direction, so both the motors
    will rotate in the same direction.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的代码非常简单易懂。在这里，我们将它分解为几个方法，用于 `前进`、`后退`、`左转`、`右转` 和 `停止`。这些方法将负责通过 `digitalWrite`
    向电机驱动器发送控制信号。需要注意的是，此代码可能无法正常工作。这完全取决于您的电机如何连接。因此，当您将此代码烧录到英特尔爱迪生时，请记录电机在前 10
    秒内的旋转方向。如果两个电机以相同方向旋转，那么您很幸运，不需要调整连接。然而，如果您观察到相反方向的旋转，那么请将其中一个电机的连接从其电机驱动器中反转。这将允许电机以相反方向旋转，因此两个电机将以相同方向旋转。
- en: Another important point to be noted is that considering the methods `left` and
    `right`, we notice that motors rotate in different directions. That's how the
    steering system of a robot is implemented. It will be discussed in a later section
    of this chapter.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个需要注意的重要点是，考虑到`left`和`right`方法，我们注意到电机以不同的方向旋转。这就是机器人转向系统实现的方式。它将在本章的后续部分讨论。
- en: While dealing with motor drivers, please go through the specifications first.
    Then go for connections and coding.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理电机驱动器时，请首先查阅规格说明。然后进行连接和编码。
- en: Speed control of DC motors
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 直流电机速度控制
- en: Now that we know how to control a motor and its direction of rotation, let's
    have a look at controlling the speed of a motor, which is necessary for advanced
    maneuvering.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了如何控制电机及其旋转方向，让我们看看如何控制电机的速度，这对于高级操控是必要的。
- en: The speed control happens through the PWM technique, where we vary the width
    of pulses to control the speed.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 速度控制是通过PWM技术实现的，其中我们通过改变脉冲宽度来控制速度。
- en: 'This technique is used to get analog results by digital means. The digital
    pins on the Intel Edison produce a square wave:'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 这种技术用于通过数字方式获得模拟结果。英特尔爱迪生的数字引脚产生方波：
- en: '![](img/image_05_016.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_016.png)'
- en: Typical square wave
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 典型方波
- en: The on and off pattern can simulate voltages between a full on **5V** and a
    full off **0V**. This is manipulated by altering the time the signal spends on
    and the time the signal spends off. The duration of the on time is called **pulse
    width**. In order for us to get varying pulse values, we change or modulate the
    pulse width. If this is done fast enough, then the result is a value between 0-5V.
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 开关模式可以模拟从全开**5V**到全关**0V**之间的电压。这是通过改变信号处于开启和关闭状态的时间来实现的。开启时间的持续时间称为**脉冲宽度**。为了获得变化的脉冲值，我们改变或调制脉冲宽度。如果这样做足够快，那么结果就是0-5V之间的一个值。
- en: 'There are PWM pins on the Arduino breakout board for the Intel Edison. These
    pins are used:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 在Arduino扩展板上为英特尔爱迪生提供了PWM引脚。这些引脚被用于：
- en: '![](img/image_05_017.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_017.jpg)'
- en: 'PWM samples. Picture source: [www.arduino.cc](http://www.arduino.cc)'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: PWM样本。图片来源：[www.arduino.cc](http://www.arduino.cc)
- en: Now we can implement this to control the speed of our own motors. In the preceding
    L293D IC, the enable pins can be used for PWM input.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以实现这个来控制我们自己的电机的速度。在先前的L293D IC中，使能引脚可以用作PWM输入。
- en: 'Modules of L293D mainly expose the following pins:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: L293D模块主要暴露以下引脚：
- en: Input 1 for motor 1
  id: totrans-160
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电机1的输入1
- en: Input 2 for motor 1
  id: totrans-161
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电机1的输入2
- en: Input 1 for motor 2
  id: totrans-162
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电机2的输入1
- en: Input 2 for motor 2
  id: totrans-163
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电机2的输入2
- en: Enable for motor 1
  id: totrans-164
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使能1的电机
- en: Enable for motor 2
  id: totrans-165
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使能2的电机
- en: Vcc
  id: totrans-166
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Vcc
- en: Gnd
  id: totrans-167
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gnd
- en: 'Take a look at the following module:'
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 看看以下模块：
- en: '![](img/image_05_018-1.jpg)'
  id: totrans-169
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_018-1.jpg)'
- en: 'L293D motor driver module:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: L293D电机驱动模块：
- en: A total of eight pins are exposed, as mentioned previously.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，总共暴露了八个引脚。
- en: 'Connect the enable pins to any of the PWM pins on the Intel Edison:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 将使能引脚连接到英特尔爱迪生上的任何PWM引脚：
- en: Enable 1 to digital pin 6
  id: totrans-173
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使能1连接到数字引脚6
- en: Enable 2 to digital pin 9
  id: totrans-174
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使能2连接到数字引脚9
- en: Next, to control the speed we need to use the `analogWrite` method in those
    enabled PWM pins on the Intel Edison.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，为了控制速度，我们需要在英特尔爱迪生上那些已启用的PWM引脚中使用`analogWrite`方法。
- en: 'To set the frequency of the Intel Edison''s PWM control, use the example shown
    in the following link and clone it:'
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 要设置英特尔爱迪生PWM控制的频率，请使用以下链接中的示例并克隆它：
- en: '[https://github.com/MakersTeam/Edison/blob/master/Arduino-Examples/setPWM_Edison.ino](https://github.com/MakersTeam/Edison/blob/master/Arduino-Examples/setPWM_Edison.ino)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/MakersTeam/Edison/blob/master/Arduino-Examples/setPWM_Edison.ino](https://github.com/MakersTeam/Edison/blob/master/Arduino-Examples/setPWM_Edison.ino)'
- en: The range of values of the `analogWrite` method is 0-255, where 0 is always
    off and 255 is always on.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: '`analogWrite`方法的值范围是0-255，其中0始终是关闭的，255始终是开启的。'
- en: 'Now using this modify the preceding code to set the enable pin values. An example
    of using it is shown here. The task of controlling the pins in a fully-fledged
    motion is left to the reader:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 现在用这个修改前面的代码来设置使能引脚的值。这里展示了如何使用它的一个例子。在完全有动力的运动中控制引脚的任务留给读者：
- en: '[PRE3]'
  id: totrans-180
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: In the preceding code, stress on the `forward` method, where we've used `analogWrite (PWM,
    122)`. This means that the motor should now rotate half of its original speed.
    This technique can be used for faster line following robots and speed control.
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，强调`forward`方法，我们使用了`analogWrite (PWM, 122)`。这意味着电机现在应该以原始速度的一半旋转。这种技术可用于更快的线跟踪机器人速度控制。
- en: More advanced motor drivers
  id: totrans-182
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更高级的电机驱动器
- en: 'While dealing with robotics, there may be some cases where L293D isn''t quite
    a good option due to its current limitation. In those cases, we opt for more powerful
    drivers. Let''s have a look at another product from robokits, which can pretty
    much drive powerful high torque motors:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理机器人技术时，可能会遇到一些情况，由于L293D的电流限制，它并不是一个好的选择。在这些情况下，我们选择更强大的驱动器。让我们看看robokits的另一个产品，它可以驱动高扭矩的电机：
- en: '![](img/image_05_019-1.jpg)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_05_019-1.jpg)'
- en: 'Dual motor driver high power. Picture source: [http://robokits.co.in/motor-drives/dual-dc-motor-driver-20a](http://robokits.co.in/motor-drives/dual-dc-motor-driver-20a)'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 双电机驱动高功率。图片来源：[http://robokits.co.in/motor-drives/dual-dc-motor-driver-20a](http://robokits.co.in/motor-drives/dual-dc-motor-driver-20a)
- en: 'The preceding motor driver is my personal favorite. It has multiple controls
    and can drive high torque motors. The driver has the following five control pins:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的电机驱动器是我个人的最爱。它具有多个控制功能，可以驱动高扭矩电机。驱动器有以下五个控制引脚：
- en: '**Gnd**: Ground.'
  id: totrans-187
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Gnd**: 地线。'
- en: '**DIR**: When low, the motor rotates in one direction; when high, it rotates
    in another direction.'
  id: totrans-188
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DIR**: 当低电平时，电机朝一个方向旋转；当高电平时，它朝另一个方向旋转。'
- en: '**PWM**: Pulse width modulation to control the speed of the motor. Recommended
    frequency range is 20 Hz - 400 Hz.'
  id: totrans-189
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PWM**: 脉宽调制以控制电机的速度。推荐频率范围是20 Hz - 400 Hz。'
- en: '**BRK**: When high, it halts the motor in operation.'
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**BRK**: 当处于高电平时，它将停止电机的运行。'
- en: '**5V**: Regulated 5V output from the motor driver board.'
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**5V**: 电机驱动板提供的调节后的5V输出。'
- en: From the description of the pins discussed here, it should be clear as to why
    this is a better choice.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里讨论的引脚描述中，应该很清楚为什么这是一个更好的选择。
- en: 'The voltage and current specifications are as follows:'
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 电压和电流规格如下：
- en: 'Voltage range: 6V to 18V'
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电压范围：6V至18V
- en: 'Max current: 20 A'
  id: totrans-195
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最大电流：20 A
- en: 'The current and the voltage rating help us to drive motors with max load. We
    have used this motor driver for many of our applications, and it serves without
    fail. However, there are other motor drivers also on the market that can provide
    a similar functionality. The choice of which motor driver to use depends on certain
    factors, as discussed here:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 电流和电压规格帮助我们以最大负载驱动电机。我们已经在许多应用中使用了这个电机驱动器，并且它始终如一地提供服务。然而，市场上也有其他可以提供类似功能的电机驱动器。选择使用哪种电机驱动器取决于某些因素，如本节所讨论的：
- en: '**Power**: It all depends on how much power the motor needs to run at full
    capacity. The current drawn at full load and at no load condition. If you are
    going to use a high torque motor driver with an L293D, you may end up frying your
    motor driver.'
  id: totrans-197
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**功率**: 这完全取决于电机在满载下运行所需的功率。满载和空载条件下的电流。如果你打算使用L293D的高扭矩电机驱动器，你可能会烧毁你的电机驱动器。'
- en: '**Maneuvering**: According to the use case of the problem, the choice of motor
    is yours and ultimately the choice of the motor driver. In high speed line following,
    we require PWM capability, thus we need a driver that is capable of handling PWM
    signals.'
  id: totrans-198
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**操控**: 根据问题的使用案例，电机选择由你决定，最终是电机驱动器的选择。在高速线跟踪中，我们需要PWM功能，因此我们需要一个能够处理PWM信号的驱动器。'
- en: Ultimately based on your use case choose your motor driver.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，根据你的使用案例选择你的电机驱动器。
- en: 'The following is an image of a small yet high performance UGV powered using
    the previous motor driver that we developed:'
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 下图是使用我们之前开发的电机驱动器的小型高性能UGV的图片：
- en: '![](img/image_05_020-1.jpg)'
  id: totrans-201
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_05_020-1.jpg)'
- en: Black-e-Track UGV. The UGV's motors are high torque 300 RPM and can climb steep
    slopes of up to 75 degrees.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: Black-e-Track UGV。UGV的电机是高扭矩300 RPM，可以爬上高达75度的陡坡。
- en: Now we have a fairly good idea of how motor drivers work and how we can choose
    a good motor driver.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对电机驱动器的工作原理以及如何选择一个好的电机驱动器有了相当好的了解。
- en: Line follower robot (patching everything together)
  id: totrans-204
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 线跟踪机器人（整合所有内容）
- en: Based on the previous sections of this chapter, we have got a fairly good idea
    as to how everything needs to be brought under a single platform. Let's go in
    to the steps and have a look at how a line follower robot works.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 根据本章前面的部分，我们已经对如何将所有内容整合到一个平台上有了相当好的了解。让我们深入了解步骤，看看线跟踪机器人是如何工作的。
- en: Fundamental concepts of a line follower
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 线跟踪的基本概念
- en: 'The following figure shows the concept of a line follower robot:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了线跟踪机器人的概念：
- en: '![](img/image_05_021-1.jpg)'
  id: totrans-208
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_05_021-1.jpg)'
- en: Line follower concept
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 线跟踪概念
- en: In the preceding figure, we have two conditions. The first is when the left
    sensor is over the line and the second is the same for the right sensor. The black
    line is the track that the robot should follow. There are sensors represented
    by blocks. Let's consider the left-hand side of the preceding figure.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 在前一个图中，我们有两种情况。第一种是当左侧传感器位于线条上时，第二种情况与右侧传感器相同。黑色线条是机器人应该跟随的轨道。有传感器用方块表示。让我们考虑前一个图的左侧。
- en: Initially, both the sensors are over the white surface that is in position 1,
    as shown in the preceding figure. Next, consider position 2 on the left-hand side
    of the image. The left sensor comes over the black line and the sensor gets activated.
    Based on this, we intercept sensor readings and relay control signals to the motor
    driver. In the preceding case, specific to the left-hand side of the image, we
    get that the left sensor detected the line and thus the robot should not go forward,
    instead it should take a slight left turn until and unless both the sensors return
    the same value.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 初始时，两个传感器都位于前一个图中的位置1上的白色表面上。接下来，考虑图像左侧的位置2。左侧传感器覆盖黑色线条，传感器被激活。基于此，我们拦截传感器读数并将控制信号中继到电机驱动器。在前一个案例中，针对图像的左侧，我们得到左侧传感器检测到线条，因此机器人不应该向前移动，而应该轻微向左转弯，直到两个传感器返回相同的值。
- en: The same is the case for the right-hand side of the figure where the right sensor
    detects the black line and the motion execution command is triggered. This is
    the case of a simple line follower robot where a single colored line needs to
    be followed. Things get a bit different with multiple colored lines that need
    to be followed.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 图的右侧情况也是如此，右侧传感器检测到黑色线条，并触发运动执行命令。这是一个简单的跟随线条的机器人案例，需要跟随单色线条。如果需要跟随多色线条，情况会有所不同。
- en: Now that we know the exact process of following a line, we can now focus more
    on how the robot executes turns and the robot structure.
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经知道了跟随线条的确切过程，现在我们可以更多地关注机器人如何执行转弯以及机器人结构。
- en: Robot motion execution
  id: totrans-214
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 机器人运动执行
- en: 'To understand how a robot executes its motions, let''s consider a four-wheel
    drive robot:'
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: 为了理解机器人如何执行其运动，让我们考虑一个四轮驱动机器人：
- en: '![](img/image_05_022-1.jpg)'
  id: totrans-216
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_05_022-1.jpg)'
- en: Typical 4WD robot structure
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 典型的4WD机器人结构
- en: The robot can follow a differential drive-based system where a turn is executed
    the side where the robot turns, that side's wheel rotates either in the reverse
    direction, or slows down, or stops. If you are dealing with two wheels, then stopping
    one side and rotating the other will also do. However, if you are using four wheels,
    then it's always safe to go for reverse rotation, or it will give rise to wheel
    slip condition. Again, when using two wheels, we opt for the use of a castor wheel,
    which keeps the robot balanced. Details of wheel slip condition and other structural
    elements will be discussed in [Chapter 6](56a788c0-bef4-43e2-91cb-02b2d981c5c0.xhtml), *Manual
    Robotics with Intel Edison*.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人可以跟随基于差速驱动的系统，其中转弯是在机器人转弯的一侧执行，该侧的轮子以相反方向旋转，或减速，或停止。如果你处理的是两个轮子，停止一侧并旋转另一侧也可以。然而，如果你使用四个轮子，那么始终选择反向旋转是安全的，否则会导致轮胎打滑。再次强调，当使用两个轮子时，我们选择使用万向轮，以保持机器人平衡。轮胎打滑条件和其他结构元素的详细信息将在[第6章](56a788c0-bef4-43e2-91cb-02b2d981c5c0.xhtml)，*使用Intel
    Edison的机器人手册*中讨论。
- en: Hardware requirements for line follower robots
  id: totrans-219
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 跟随线条机器人所需的硬件清单
- en: 'The list of hardware required for a simple two-wheel drive line follower robot
    is as follows:'
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 简单两轮驱动跟随线条机器人所需的硬件清单如下：
- en: Robot chassis
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人底盘
- en: 9V DC motors
  id: totrans-222
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9V直流电机
- en: Motor driver L293D
  id: totrans-223
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电机驱动器L293D
- en: Two infrared sensors
  id: totrans-224
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个红外传感器
- en: 9V DC power supply
  id: totrans-225
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 9V直流电源
- en: Two wheels
  id: totrans-226
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个轮子
- en: One castor
  id: totrans-227
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个万向轮
- en: Intel Edison, which is used as a controller
  id: totrans-228
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Intel Edison，用作控制器
- en: The process of attaching the motors to the chassis and the castor won't be shown.
    A circuit diagram will be shown, and arranging all the components depends on the
    reader.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 将电机连接到底盘和万向轮的过程将不会展示。将展示电路图，所有组件的排列取决于读者。
- en: 'Use a two or a four-wheel drive robot chassis, and as we are using two wheels
    we will fit the castor on the front of the robot. The the sensors should be at
    the front, on either side of the robot. Let''s consider a 2D model of our robot:'
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 使用两轮或四轮驱动机器人底盘，由于我们使用两个轮子，因此将在机器人前方安装万向轮。传感器应位于机器人前部，两侧。让我们考虑一个2D模型：
- en: '![](img/image_05_023-1.jpg)'
  id: totrans-231
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_05_023-1.jpg)'
- en: 2D robot model of a typical line follower
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 典型线跟踪机器人的2D机器人模型
- en: The preceding figure is a 2D model of the line follower robot with 2WD. The
    sensors should be on either side and the castor in the middle. While the L293D
    and the Intel Edison can be located anywhere, the position of the castor, sensors,
    motors, and obviously the wheels should be the same or similar to the structure
    shown in the preceding figure.
  id: totrans-233
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的图是2WD线跟踪机器人的2D模型。传感器应位于两侧，万向轮位于中间。虽然L293D和Intel Edison可以放置在任何位置，但万向轮、传感器、电机以及显然是轮子的位置应该与前面图中所示的结构相同或相似。
- en: Make sure that the distance from the sensor to the ground is optimum for detection
    of the line. This distance must be calculated during the calibration of the sensors.
  id: totrans-234
  prefs: []
  type: TYPE_NORMAL
  zh: 确保传感器到地面的距离对于检测线条是最佳的。这个距离必须在传感器的校准期间计算。
- en: 'The hardware setup usually takes a bit of time as it involves a lot of tickling
    of wires and loose soldering joints usually add in more problems. Now, before
    moving forward with the code, let''s wire everything up with the following circuit
    diagram:'
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 硬件设置通常需要一些时间，因为它涉及到很多电线处理和松动的焊接接头通常会带来更多问题。现在，在继续编写代码之前，让我们使用以下电路图将所有东西连接起来：
- en: '![](img/image_05_024-1.jpg)'
  id: totrans-236
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_05_024-1.jpg)'
- en: Circuit diagram for line follower robot
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 线跟踪机器人的电路图
- en: The preceding circuit is a combination of what we've done so far in this chapter.
    A common ground, a **Vcc** line, is created that connects the **L293D**, **Intel
    Edison**, and the **sensors**. The **9V DC** power supply powers the motors, while
    the control pins are responsible for sending control signals from the Intel Edison.
    The output of the sensors is connected to the digital pins of the Intel Edison.
    Finally, the motor driver controls the motors based on the control signals.
  id: totrans-238
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的电路是我们在本章中迄今为止所做内容的组合。创建了一个公共地线、一个**Vcc**线路，它连接了**L293D**、**Intel Edison**和**传感器**。**9V
    DC**电源为电机供电，而控制引脚负责从Intel Edison发送控制信号。传感器的输出连接到Intel Edison的数字引脚。最后，电机驱动器根据控制信号控制电机。
- en: 'If you have a close look at the preceding circuit diagram, then everything
    fits into the typical robotics architecture:'
  id: totrans-239
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你仔细观察前面的电路图，那么所有内容都符合典型的机器人架构：
- en: '![](img/image_05_025-1.jpg)'
  id: totrans-240
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/image_05_025-1.jpg)'
- en: Robotics architecture
  id: totrans-241
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人架构
- en: But the dashboard is missing. We may add a dashboard, but as of now, we aren't
    interested in that aspect.
  id: totrans-242
  prefs: []
  type: TYPE_NORMAL
  zh: 但仪表盘缺失。我们可能添加仪表盘，但到目前为止，我们对此不感兴趣。
- en: Now that the hardware is done with all the connections and circuitry, let's
    add a code to it to make it run.
  id: totrans-243
  prefs: []
  type: TYPE_NORMAL
  zh: 现在硬件部分已经完成所有连接和电路，让我们添加代码让它运行。
- en: 'The algorithm is very simple, as follows:'
  id: totrans-244
  prefs: []
  type: TYPE_NORMAL
  zh: 算法非常简单，如下所示：
- en: Check the left sensor value.
  id: totrans-245
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查左传感器值。
- en: If detected, turn `left`.
  id: totrans-246
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果检测到，向**左**转。
- en: Or else, check the `right` sensor value.
  id: totrans-247
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 否则，检查**右**传感器值。
- en: If detected, turn `right`.
  id: totrans-248
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果检测到，向**右**转。
- en: Else if both detected.
  id: totrans-249
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 否则如果都检测到。
- en: Stop the motion.
  id: totrans-250
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 停止运动。
- en: Or else, move `forward`.
  id: totrans-251
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 否则，就向前移动`前进`。
- en: 'The following is the code for this:'
  id: totrans-252
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的代码是针对这个的：
- en: '[PRE4]'
  id: totrans-253
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In the preceding code, which is very similar to that of the motor testing, only
    the `void loop()` is replaced by the main logic, as described in the algorithm.
    We've used macros for defining sensor and motor pins.
  id: totrans-254
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，它与电机测试的代码非常相似，只是将`void loop()`替换为算法中描述的主要逻辑。我们使用了宏来定义传感器和电机引脚。
- en: The code initially sets the pins to either input mode or output mode. Next,
    we store the input values of the sensor. Finally, based on the sensor input, we
    process the robot motion.
  id: totrans-255
  prefs: []
  type: TYPE_NORMAL
  zh: 代码最初将引脚设置为输入模式或输出模式。接下来，我们存储传感器的输入值。最后，根据传感器输入，我们处理机器人的运动。
- en: After you burn the code on your Intel Edison, the robot should run. Try a simple
    track initially, and once your robot runs, then go for a more tight turns. Again,
    it should be kept in mind that in the preceding code, our right sensor may be
    your left sensor. In that case you must change the position or just change the
    condition.
  id: totrans-256
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的Intel Edison上烧录代码后，机器人应该会运行。最初尝试一个简单的轨道，一旦你的机器人开始运行，然后尝试更紧密的转弯。再次提醒，要注意在前面代码中，我们的右传感器可能是你的左传感器。在这种情况下，你必须更改位置或只是更改条件。
- en: 'Thus, through a combination of sensors and very simple processing, we can control
    the motors of a robot and follow a line. Now, if the problem statement asked you
    to reverse the condition and follow a white line on a black surface, we''d need
    to tamper with the code a bit, especially in condition checking. The result will
    be as follows:'
  id: totrans-257
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，通过传感器和非常简单的处理相结合，我们可以控制机器人的电机并跟随线条。现在，如果问题陈述要求你反转条件，在黑色表面上跟随白色线条，我们需要稍微修改代码，特别是在条件检查方面。结果将如下：
- en: '[PRE5]'
  id: totrans-258
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Just the 1s and 0s need to be interchanged.
  id: totrans-259
  prefs: []
  type: TYPE_NORMAL
  zh: 只需交换1和0。
- en: Now that we have fairly basic knowledge of developing a basic line follower
    robot, let's have a brief look at an advanced form of line following and tackle
    some of the basic concepts.
  id: totrans-260
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对开发基本循线机器人有了相当基本的了解，让我们简要地看看循线的高级形式，并解决一些基本概念。
- en: Advanced line follower robot concepts
  id: totrans-261
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级循线机器人概念
- en: 'So far, we have focused on basic line follower robots of following a single
    line. Now let''s complicate things a bit and try to solve the following section
    of a track using the previous logic:'
  id: totrans-262
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直专注于跟随单条线的简单循线机器人。现在让我们稍微复杂一点，尝试使用之前的逻辑解决轨道的以下部分：
- en: '![](img/image_05_026-1.jpg)'
  id: totrans-263
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_026-1.jpg)'
- en: Intersection track
  id: totrans-264
  prefs: []
  type: TYPE_NORMAL
  zh: 交叉轨道
- en: In the preceding track, if we use two sensors, then things will get out of hand
    because the robot should go forward, but according to the algorithm discussed
    before when both sensors are returning `1`, the robot should stop. Then how do
    we tackle such cases?
  id: totrans-265
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的轨道上，如果我们使用两个传感器，那么事情就会变得失控，因为机器人应该向前移动，但根据之前讨论的算法，当两个传感器都返回`1`时，机器人应该停止。那么我们如何处理这种情况？
- en: 'The answer lies in the use of more than two sensors. Let''s have a look at
    the following figure:'
  id: totrans-266
  prefs: []
  type: TYPE_NORMAL
  zh: 答案在于使用超过两个传感器。让我们看看以下图示：
- en: '![](img/image_05_027-1.jpg)'
  id: totrans-267
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_027-1.jpg)'
- en: Intersection 3 sensor concept
  id: totrans-268
  prefs: []
  type: TYPE_NORMAL
  zh: 交叉3传感器概念
- en: 'In the preceding figure, we have shown the use of three sensors. Let''s consider
    the following values:'
  id: totrans-269
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图中，我们展示了三个传感器的使用。让我们考虑以下值：
- en: If the sensor is on black, it sends `1`
  id: totrans-270
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果传感器位于黑色区域，它发送`1`
- en: If the sensor is on white, it sends `0`
  id: totrans-271
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果传感器位于白色区域，它发送`0`
- en: 'Now, in **position 1**, we get a value of `010` and on **position 1**, the
    value is `111`. This means that `111` represents an intersection. We can have
    it for left and right junctions too:'
  id: totrans-272
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在**位置1**，我们得到一个值为`010`，而在**位置1**，值是`111`。这意味着`111`代表一个交叉点。我们也可以为左右交汇处使用它：
- en: '![](img/image_05_028-1.jpg)'
  id: totrans-273
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_028-1.jpg)'
- en: Intersection - 2
  id: totrans-274
  prefs: []
  type: TYPE_NORMAL
  zh: 交叉 - 2
- en: 'Here, the value for left (**position 1**) will be `110` and for right it will
    be `011`. Now it''s easier to detect intersecting points and also at the same
    time prevent the robot from executing false turns. To implement this in code,
    it''s very simple:'
  id: totrans-275
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，左侧（**位置1**）的值为`110`，而右侧的值为`011`。现在更容易检测交点，同时也能防止机器人执行错误的转向。要在代码中实现这一点，非常简单：
- en: '[PRE6]'
  id: totrans-276
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: It should be noted that the preceding method needs to be applied based on the
    scenario of the track. Sometimes it is even required to ignore intersections.
    It totally depends on the track. The placement of the sensors can also play a
    very crucial role in line following.
  id: totrans-277
  prefs: []
  type: TYPE_NORMAL
  zh: 应该注意的是，前面的方法需要根据轨道的情景应用。有时甚至需要忽略交叉点。这完全取决于轨道。传感器的放置也在循线中扮演着非常关键的角色。
- en: 'There is a popular line follower robot that has a curved arrangement of sensors.
    It''s the Polulu 3 pi robot:'
  id: totrans-278
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种流行的循线机器人，其传感器排列呈曲线状。它是Polulu 3pi机器人：
- en: '![](img/image_05_029-1.jpg)'
  id: totrans-279
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_029-1.jpg)'
- en: 'Polulu 3pi robot. Image source: [https://www.pololu.com/product/975](https://www.pololu.com/product/975)'
  id: totrans-280
  prefs: []
  type: TYPE_NORMAL
  zh: Polulu 3pi机器人。图片来源：[https://www.pololu.com/product/975](https://www.pololu.com/product/975)
- en: 'Normally we use five or six sensors for a line follower robot. It comes as
    a module known as a line sensor array:'
  id: totrans-281
  prefs: []
  type: TYPE_NORMAL
  zh: 通常我们为循线机器人使用五个或六个传感器。它作为一个名为线传感器阵列的模块：
- en: '![](img/image_05_030-1.jpg)'
  id: totrans-282
  prefs: []
  type: TYPE_IMG
  zh: '![](img/image_05_030-1.jpg)'
- en: 'Line sensor array. Image source: [http://robokits.co.in/sensors/line-sensor-array](http://robokits.co.in/sensors/line-sensor-array)'
  id: totrans-283
  prefs: []
  type: TYPE_NORMAL
  zh: 线传感器阵列。图片来源：[http://robokits.co.in/sensors/line-sensor-array](http://robokits.co.in/sensors/line-sensor-array)
- en: Proportional integral derivative - based control
  id: totrans-284
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 比例积分微分（PID）控制
- en: '**Proportional integral derivative** (**PID**) is a control loop feedback mechanism.
    The main point of using a PID-based control is for efficiently controlling motors
    or actuators. The main task of the PID is to minimize the error of whatever we
    are controlling.'
  id: totrans-285
  prefs: []
  type: TYPE_NORMAL
  zh: '**比例积分微分**（**PID**）是一种控制回路反馈机制。使用基于PID的控制的主要目的是高效地控制电机或执行器。PID的主要任务是使我们所控制的任何东西的误差最小化。'
- en: It takes an input and then calculates the deviation or error from the intended
    behavior and ultimately adjusts the output.
  id: totrans-286
  prefs: []
  type: TYPE_NORMAL
  zh: 它接收输入并计算与预期行为的偏差或误差，最终调整输出。
- en: 'Line following may be accurate at lower speeds, but at higher speeds, things
    may get out of hand or out of control. That''s when the PID comes into the picture.
    Let''s have a look at some of the terminology:'
  id: totrans-287
  prefs: []
  type: TYPE_NORMAL
  zh: 在较低速度下，跟随线条可能很准确，但在较高速度下，事情可能会失控。这时PID就派上用场了。让我们看看一些术语：
- en: '**Error**: The error is something that the device isn''t doing the right way.
    If the RPM of a motor is 380 and the desired RPM is 372 then the error is 380-372=8.'
  id: totrans-288
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**误差**：误差是设备没有正确执行的事情。如果电机的RPM是380，而期望的RPM是372，那么误差是380-372=8。'
- en: '**Proportional** (**P**): It is directly proportional to the error.'
  id: totrans-289
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**比例**（**P**）：它与误差成正比。'
- en: '**Integral** (**I**): It depends on the cumulative error over a period of time.'
  id: totrans-290
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**积分**（**I**）：它取决于一段时间内的累积误差。'
- en: '**Derivative** (**D**): It depends on the rate of change of error.'
  id: totrans-291
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导数**（**D**）：它取决于误差的变化率。'
- en: '**Constant factor**: When the terms P, I, and D are included in code, it is
    done by multiplying with some constant factors:'
  id: totrans-292
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**常数因子**：当P、I和D项包含在代码中时，是通过乘以某些常数因子来完成的：'
- en: 'P: Factor (Kp)'
  id: totrans-293
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'P: 因子（Kp）'
- en: 'I: Factor (Ki)'
  id: totrans-294
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'I: 因子（Ki）'
- en: 'D: Factor (Kd)'
  id: totrans-295
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: 'D: 因子（Kd）'
- en: '**Error measurement**: Consider a line follower robot with a five-sensor array
    that returns digital values; let''s have a look at the error measurement. The
    input obtained from the sensors needs to be weighted depending on the possible
    combinations of the input. Consider the following table:'
  id: totrans-296
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**误差测量**：考虑一个具有五个传感器阵列的跟随线条机器人，该阵列返回数字值；让我们看看误差测量。从传感器获得的输入需要根据输入的可能组合进行加权。考虑以下表格：'
- en: '| **                    Binary value** | **Weighted value** |'
  id: totrans-297
  prefs: []
  type: TYPE_TB
  zh: '| **                    二进制值** | **加权值** |'
- en: '|                     00001 | 4 |'
  id: totrans-298
  prefs: []
  type: TYPE_TB
  zh: '|                     00001 | 4 |'
- en: '|                     00011 | 3 |'
  id: totrans-299
  prefs: []
  type: TYPE_TB
  zh: '|                     00011 | 3 |'
- en: '|                     00010 | 2 |'
  id: totrans-300
  prefs: []
  type: TYPE_TB
  zh: '|                     00010 | 2 |'
- en: '|                     00110 | 1 |'
  id: totrans-301
  prefs: []
  type: TYPE_TB
  zh: '|                     00110 | 1 |'
- en: '|                     00100 | 0 |'
  id: totrans-302
  prefs: []
  type: TYPE_TB
  zh: '|                     00100 | 0 |'
- en: '|                     01100 | -1 |'
  id: totrans-303
  prefs: []
  type: TYPE_TB
  zh: '|                     01100 | -1 |'
- en: '|                     01000 | -2 |'
  id: totrans-304
  prefs: []
  type: TYPE_TB
  zh: '|                     01000 | -2 |'
- en: '|                     11000 | -3 |'
  id: totrans-305
  prefs: []
  type: TYPE_TB
  zh: '|                     11000 | -3 |'
- en: '|                     10000 | -4 |'
  id: totrans-306
  prefs: []
  type: TYPE_TB
  zh: '|                     10000 | -4 |'
- en: '|                     00000 | -5 |'
  id: totrans-307
  prefs: []
  type: TYPE_TB
  zh: '|                     00000 | -5 |'
- en: The range of values is from -5 to +5\. The measurement of the position of the
    robot is taken several times in a second and then, with the average, we determine
    the errors.
  id: totrans-308
  prefs: []
  type: TYPE_NORMAL
  zh: 值的范围是从 -5 到 +5。机器人的位置测量每秒进行几次，然后，通过平均值，我们确定误差。
- en: '**PID formulae**: The error value calculated needs to affect the real motion
    of the robot. We need to simply add the error value to the output to adjust the
    robot''s motion.'
  id: totrans-309
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**PID公式**：计算出的误差值需要影响机器人的实际运动。我们需要简单地将误差值添加到输出中，以调整机器人的运动。'
- en: '**Proportional**:'
  id: totrans-310
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**比例**：'
- en: '*Difference = Target position - Present position*'
  id: totrans-311
  prefs: []
  type: TYPE_NORMAL
  zh: '*差分 = 目标位置 - 当前位置*'
- en: '*Proportional = Kp * Difference*'
  id: totrans-312
  prefs: []
  type: TYPE_NORMAL
  zh: '*比例 = Kp * 差分*'
- en: The preceding approach works, but it is found that for a quick response time,
    if we use a large constant or if the error value is large then the output overshoots
    the set point. In order to avoid that, the derivative is brought into the picture.
  id: totrans-313
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的方法有效，但发现对于快速响应时间，如果我们使用大的常数或误差值很大，则输出会超过设定点。为了避免这种情况，导数被引入到图中。
- en: '**Derivative**: Derivative is the rate of change of error.'
  id: totrans-314
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**导数**：导数是误差变化的速率。'
- en: '*Rate of change = (Difference - Previous difference) / Time interval*'
  id: totrans-315
  prefs: []
  type: TYPE_NORMAL
  zh: '*变化率 = （差分 - 上一次差分）/ 时间间隔*'
- en: '*Derivative = Kd * Rate of change*'
  id: totrans-316
  prefs: []
  type: TYPE_NORMAL
  zh: '*导数 = Kd * 变化率*'
- en: The timing interval is obtained by using the timer control of the Intel Edison.
    This helps us to calculate how quickly the error changes, and based on that, the
    output is set.
  id: totrans-317
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用英特尔爱迪生的定时器控制来获取时间间隔。这有助于我们计算误差变化的快慢，并根据这一点设置输出。
- en: '**Integral:**'
  id: totrans-318
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**积分**：'
- en: '*Integral = Integral + Difference*'
  id: totrans-319
  prefs: []
  type: TYPE_NORMAL
  zh: '*积分 = 积分 + 差分*'
- en: '*Integral = Ki * Integral*'
  id: totrans-320
  prefs: []
  type: TYPE_NORMAL
  zh: '*积分 = Ki * 积分*'
- en: The integral improves the steady state performance. All the errors are thus
    added together and the result is applied on the motion of the robot.
  id: totrans-321
  prefs: []
  type: TYPE_NORMAL
  zh: 积分改善了稳态性能。因此，所有误差都被累加起来，并将结果应用于机器人的运动。
- en: 'The final control signal is obtained from this:'
  id: totrans-322
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的控制信号来自这里：
- en: '*Proportional + Integral + Derivative*'
  id: totrans-323
  prefs: []
  type: TYPE_NORMAL
  zh: '*比例 + 积分 + 微分*'
- en: '**Tuning**: PID implementation can''t help you, rather it will degrade the
    motion of the robot unless and until it is tuned. The tuning parameters are Kp,
    Ki, and Kd. The tuning value depends on various parameters, such as the friction
    of the ground, the light conditions, the center of mass, and many more. It varies
    from one robot to the other.'
  id: totrans-324
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**调整**：PID实现不能帮助你，除非它被调整，否则它将降低机器人的运动。调整参数是Kp、Ki和Kd。调整值取决于各种参数，例如地面的摩擦、光照条件、质心等。它因机器人而异。'
- en: Set everything to zero and start with Kp first. Set Kp to `1` and see the condition
    of the robot. The goal is to make the robot follow the line even if it's wobbly.
    If the robot overshoots and loses the line, decrease Kp. If it's not able to take
    turns or seems sluggish, increase Kp.
  id: totrans-325
  prefs: []
  type: TYPE_NORMAL
  zh: 将所有设置都设为零，并首先设置Kp。将Kp设为`1`并观察机器人的状态。目标是使机器人即使在摇摆的情况下也能跟随线条。如果机器人超出了界限并失去了线条，则减小Kp。如果它无法转弯或看起来反应迟钝，则增加Kp。
- en: Once the robot follows the line more or less correctly, assign `1` to Kd. For
    now, skip Ki. Increase the value of Ki until you see less wobbling. Once the robot
    is fairly stable and able to follow the line more or less correctly, assign a
    value ranging from 0.5-1 in Ki. If the value is too low, not much of a difference
    would be found. If the value is too high, then the robot may jerk left and right
    quickly. You may end up incrementing by `.01`.
  id: totrans-326
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦机器人大致正确地跟随线条，将`1`分配给Kd。现在跳过Ki。增加Ki的值，直到你看到更少的摇摆。一旦机器人相当稳定并且能够大致正确地跟随线条，将0.5-1之间的值分配给Ki。如果值太低，就不会发现太大的差异。如果值太高，那么机器人可能会快速左右摆动。你可能需要以`.01`的增量进行增加。
- en: PID doesn't implement effective results unless it's properly tuned, so coding
    only won't yield proper results.
  id: totrans-327
  prefs: []
  type: TYPE_NORMAL
  zh: PID如果不经过适当的调整，就不会产生有效结果，所以仅仅编码是无法得到正确结果的。
- en: Open-ended question for the reader
  id: totrans-328
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对读者的开放式问题
- en: The PID use case was explained. Try to implement it in code and write and implement
    a line follower algorithm with the use of five-six sensors. These practice use
    cases will explain all the concepts behind line following.
  id: totrans-329
  prefs: []
  type: TYPE_NORMAL
  zh: 已经解释了PID用例。尝试在代码中实现它，并使用五到六个传感器编写和实现一个线跟踪算法。这些实践用例将解释线跟踪背后的所有概念。
- en: Summary
  id: totrans-330
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter about autonomous robotics, we have covered multiple topics,
    including dealing from sensors and motor drivers, and how to calibrate sensors
    and test motor drivers. We also covered line follower robot use cases in detail
    and also had a chance to look at more advanced controls, and ultimately ended
    with the PID-based control system.
  id: totrans-331
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章关于自主机器人的章节中，我们涵盖了多个主题，包括处理传感器和电机驱动器，以及如何校准传感器和测试电机驱动器。我们还详细介绍了线跟踪机器人的用例，并有机会了解更高级的控制方法，最终以基于PID的控制系统结束。
- en: In [Chapter 6](56a788c0-bef4-43e2-91cb-02b2d981c5c0.xhtml), *Manual Robotics
    with Intel Edison*, we'll cover manual robotics and develop some controller software.
    We'll also cover more hardware topics pertaining to a robot.
  id: totrans-332
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第6章](56a788c0-bef4-43e2-91cb-02b2d981c5c0.xhtml)《使用英特尔爱迪生的手动机器人》中，我们将涵盖手动机器人并开发一些控制器软件。我们还将涵盖更多与机器人相关的硬件主题。
