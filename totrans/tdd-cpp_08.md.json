["```cpp\nTEST(\"Test will pass without any confirms\")\n{\n}\n```", "```cpp\n<object><does something><qualification>\n```", "```cpp\nTEST(\"Test bool confirms\")\n{\n    bool result = isNegative(0);\n    CONFIRM_FALSE(result);\n    result = isNegative(-1);\n    CONFIRM_TRUE(result);\n}\n```", "```cpp\nTEST_SUITE(\"Request can be sent and response received\", \"Service 1\")\n{\n    std::string user = \"123\";\n    std::string path = \"\";\n    std::string request = \"Hello\";\n    std::string expectedResponse = \"Hi, \" + user;\n    std::string response = gService1.service().handleRequest(\n        user, path, request);\n    CONFIRM_THAT(response, Equals(expectedResponse));\n}\n```", "```cpp\nTEST(\"Test many float comparisons\")\n{\n    int totalCount {1'000};\n    int passCount = performComparisons<float>(totalCount);\n    CONFIRM_THAT(passCount, Equals(totalCount));\n}\n```", "```cpp\nTEST(\"Test small float values\")\n{\n    // Based on float epsilon = 1.1920928955078125e-07\n    CONFIRM_THAT(0.000001f, NotEquals(0.000002f));\n}\nTEST(\"Test large float values\")\n{\n    // Based on float epsilon = 1.1920928955078125e-07\n    CONFIRM_THAT(9'999.0f, Equals(9'999.001f));\n}\n```", "```cpp\nTEST(\"Overridden default tag not used to filter messages\")\n{\n    MereTDD::SetupAndTeardown<TempFilterClause> filter;\n    MereMemo::addFilterLiteral(filter.id(), info);\n    std::string message = \"message \";\n    message += Util::randomString();\n    MereMemo::log(debug) << message;\n    bool result = Util::isTextInFile(message,          \"application.log\");\n    CONFIRM_FALSE(result);\n}\n```", "```cpp\nstd::string createTestTable ()\n{\n    // If this was real code, it might open a\n    // connection to a database, create a temp\n    // table with a random name, and return the\n    // table name.\n    return \"test_data_01\";\n}\n```"]