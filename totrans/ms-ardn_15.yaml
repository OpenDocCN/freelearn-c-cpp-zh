- en: DC Motors and Motor Controllers
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 直流电机和电机控制器
- en: So far, in this book, all of the projects have been stationary projects. By
    stationary projects I mean the projects had no way to move on their own. In this
    chapter, we will look at how we can add DC motors to any project, giving it the
    ability to move on its own. When using DC motors, I would recommend using a motor
    controller to control them. Motor controllers enable us to very easily connect
    an external power supply to the motor and control the direction and speed of the
    motor.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在这本书中，所有的项目都是固定项目。我所说的固定项目是指这些项目无法自行移动。在本章中，我们将探讨如何将直流电机添加到任何项目中，使其能够自行移动。在使用直流电机时，我建议使用电机控制器来控制它们。电机控制器使我们能够非常容易地将外部电源连接到电机，并控制电机的方向和速度。
- en: 'In this chapter, you will learn:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习：
- en: How a brushed DC motor works
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 刷式直流电机的工作原理
- en: How an H-bridge works
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: H桥的工作原理
- en: How to use the L298 and L293D motor controllers
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何使用L298和L293D电机控制器
- en: Introduction
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: A DC motor is a class of rotary electrical device that converts electrical energy
    into physical motion. There are numerous types of DC motors; however, in this
    chapter, we will look at one specific type, which is the **brushed DC motor**.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 直流电机是一类将电能转换为物理运动的旋转电气设备。直流电机有多种类型；然而，在本章中，我们将探讨一种特定类型，即**刷式直流电机**。
- en: Brushed DC motors are used in a wide variety of applications, ranging from toys
    and robotics to powered windows and power tools. Some advantages of brushed DC
    motors are their initial low cost, simple control, and low-speed torque. The disadvantages
    of these motors are their high maintenance costs and low lifespan in high-intensity
    environments. For the prototyping and robotic projects that we normally do with
    the Arduino, the disadvantages of the brushed DC motors are normally not a concern.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 刷式直流电机广泛应用于各种应用中，从玩具和机器人到电动窗户和电动工具。刷式直流电机的一些优点是它们的初始成本低、控制简单和低速扭矩。这些电机的缺点是维护成本高和在高强度环境中的使用寿命短。对于我们通常使用Arduino进行的原型设计和机器人项目，刷式直流电机的缺点通常不是问题。
- en: At the center of a brushed DC motor is a spinning armature, which contains an
    electromagnet. To the outside of the spinning armature is a permanent, stationary
    magnet. When the electromagnet in the armature is powered, a magnetic field is
    created that attracts and repels the permanent stationary magnets. This causes
    the armature to begin spinning.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 刷式直流电机的中心是一个旋转的转子，其中包含一个电磁铁。在旋转的转子外部是一个永久的、静止的磁铁。当转子中的电磁铁通电时，会产生一个磁场，吸引和排斥永久的静止磁铁。这导致转子开始旋转。
- en: To keep the armature spinning, the polarity of the electromagnet needs to be
    reversed. To do this a segmented copper sleeve called a **commutator** is used, which
    resides on the axle of the motor. As the motor turns, brushes slide over the commutator,
    coming in to contact with different parts of the commutator, causing the polarity
    of the magnet to switch.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使转子持续旋转，电磁铁的极性需要反转。为此，使用了一个称为**换向器**的分段铜套，它位于电机的轴上。随着电机的转动，电刷在换向器上滑动，接触换向器的不同部分，导致磁铁的极性切换。
- en: 'The following diagram illustrates the parts of the brushed DC motor:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表说明了刷式直流电机的部件：
- en: '![](img/4c071ff2-14a0-4960-bf0b-d20fe10d6f18.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/4c071ff2-14a0-4960-bf0b-d20fe10d6f18.png)'
- en: 'Brushed DC motors come in numerous shapes and sizes. Some of these motors have
    built-in gearboxes that can change the torque and speed that the motor will spin
    at. The following photograph shows some examples of brushed DC motors:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 刷式直流电机有多种形状和尺寸。其中一些电机内置了变速箱，可以改变电机旋转时的扭矩和速度。以下照片展示了刷式直流电机的几个示例：
- en: '![](img/9f38db2a-1e24-463b-bc03-3725bf6ddc0e.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9f38db2a-1e24-463b-bc03-3725bf6ddc0e.png)'
- en: 'Powering a DC motor directly from the Arduino for anything other than demonstration
    purposes, is usually not a good idea because the voltage and current provided
    from the pin headers are pretty limited. We can use a motor controller to control
    the direction and speed of a DC motor from the Arduino while still providing an
    external power source to power it. In this chapter, we will look at how we can
    use the L298 dual H-bridge motor driver, shown in the following photograph, and
    also how to use the L293D chip:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 直接从 Arduino 为直流电机供电（除了演示目的之外），通常不是一个好主意，因为从引脚头提供的电压和电流相当有限。我们可以使用电机控制器从 Arduino
    控制直流电机的方向和速度，同时仍然提供外部电源为其供电。在本章中，我们将探讨如何使用以下照片中所示的 L298 双 H-桥电机驱动器，以及如何使用 L293D
    芯片：
- en: '![](img/b123636d-dada-4d2c-badb-a4cef320a8e0.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b123636d-dada-4d2c-badb-a4cef320a8e0.png)'
- en: 'The L298 motor driver enables us to control the direction and speed of two
    motors. This driver allows us to control motors from 5V all the way up to 35V
    with a maximum current of 2A. If the supply voltage is 12V or less, we can also
    use the 5V output to power the Arduino. The L298 motor driver has several inputs,
    outputs and power connectors that are labeled. These inputs from left to right
    are:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: L298 电机驱动器使我们能够控制两个电机的方向和速度。此驱动器允许我们控制从 5V 到 35V 的电机，最大电流为 2A。如果供电电压为 12V 或更低，我们还可以使用
    5V 输出为 Arduino 供电。L298 电机驱动器有几个标记的输入、输出和电源连接器。这些从左到右的输入如下：
- en: '**ENA**: Enables motor A and controls the speed of the motor'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ENA**：启用电机 A 并控制电机速度'
- en: '**IN1 and IN2**: Controls the direction of motor A'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IN1 和 IN2**：控制电机 A 的方向'
- en: '**IN3 and IN4**: Controls the direction of motor B'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**IN3 和 IN4**：控制电机 B 的方向'
- en: '**ENB**: Enables motor B and controls the speed of the motor'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**ENB**：启用电机 B 并控制电机速度'
- en: 'ENA and ENB normally have jumpers across the pins. In order to control brushed
    DC motors, we will need to remove these jumpers and connect the pin to a PWM port.
    The outputs are:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: ENA 和 ENB 通常在引脚上跨接跳线。为了控制刷式直流电机，我们需要移除这些跳线并将引脚连接到 PWM 端口。输出如下：
- en: '**OUT1 and OUT2**: Output power to motor A'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OUT1 和 OUT2**：输出功率到电机 A'
- en: '**OUT3 and OUT4**: Output power to motor B'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**OUT3 和 OUT4**：电机 B 的输出功率'
- en: 'The power inputs, from left to right, are:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 从左到右，电源输入如下：
- en: '**Vmotor**: Power from an external source that will be used to power the motors'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vmotor**：用于为电机供电的外部电源'
- en: '**GND**: Ground'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GND**：地'
- en: '**Vout**: 5V output that can be used to power the Arduino'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Vout**：5V 输出，可用于为 Arduino 供电'
- en: 'If we are building a project where we have limited space, rather than using
    a motor controller such as the L298 dual H-bridge motor driver, we can use an
    integrated chip such as the **L293D H-bridge IC**. The L293D chip can drive two
    motors, similar, to the L298 motor driver, and can power motors up to 35V with
    600mA of steady current with a maximum of 1.2A. The following diagram shows the
    pinout for the L293D IC:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们正在构建一个空间有限的项目，而不是使用 L298 双 H-桥电机驱动器这样的电机控制器，我们可以使用如 **L293D H-桥集成电路** 这样的集成芯片。L293D
    芯片可以驱动两个电机，类似于 L298 电机驱动器，并且可以用 600mA 的稳定电流为电机供电，最大可达 1.2A。以下图示显示了 L293D IC 的引脚排列：
- en: '![](img/e4aebe63-a6fb-4da4-8a6e-3e715188a2d5.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e4aebe63-a6fb-4da4-8a6e-3e715188a2d5.png)'
- en: 'Both the L298 motor controller and the L293D chip are H-bridges. Let''s take
    a quick look at how an H-bridge works. An H-bridge is an electric circuit that
    allows us to apply a voltage to our motors in either direction allowing the motor
    to run forwards or backwards. The term H-bridge comes from the typical graphic
    representation of the circuit, which looks like a capital H. The following diagram
    shows how an H-bridge works:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: L298 电机控制器和 L293D 芯片都是 H-桥。让我们快速了解一下 H-桥的工作原理。H-桥是一种电路，允许我们对电机施加电压，使其可以正向或反向运行。H-桥这个术语来自电路的典型图形表示，看起来像一个大写的
    H。以下图示显示了 H-桥的工作原理：
- en: '![](img/4985c326-ff2e-4764-8d90-173757e2c94f.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4985c326-ff2e-4764-8d90-173757e2c94f.png)'
- en: An H-bridge is usually built with four solid state switches. As we see in the
    preceding image, when switches 1 and 3 (**I1** and **I3**) are open and switches
    2 and 4 (**I2** and **I4**) are closed, the right side of the motor is connected
    to the power supply while the left side is connected to ground, spinning the motor
    in one direction. If switches 1 and 3 (**I1** and **I3**) are closed and switches
    2 and 4 (**I2** and **I4**) are open, then the left side of the motor is connected
    to the power supply while the right side is connected to ground, spinning the
    motor in the other direction.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: H-桥通常由四个固态开关组成。正如我们在前面的图像中看到的那样，当开关1和3（**I1**和**I3**）打开，开关2和4（**I2**和**I4**）关闭时，电机的右侧连接到电源，左侧连接到地，使电机向一个方向旋转。如果开关1和3（**I1**和**I3**）关闭，开关2和4（**I2**和**I4**）打开，那么电机的左侧连接到电源，右侧连接到地，使电机向另一个方向旋转。
- en: Let's look at the parts that we will need for our projects in this chapter.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看本章项目中我们将需要的部件。
- en: Components needed
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 需要的组件
- en: In this chapter, you will need the following components.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你需要以下组件。
- en: One Arduino Uno or compatible board
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Arduino Uno或兼容板
- en: One L298 motor driver
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个L298电机驱动器
- en: One L293D H-bridge chip
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个L293D H-桥芯片
- en: Two brushed DC motors
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个刷式直流电机
- en: One external 12V battery (or other external DC power source such as a 9V battery)
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个外部12V电池（或其他外部直流电源，如9V电池）
- en: Jumper wires
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跳线
- en: One breadboard
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个面包板
- en: Circuit diagrams
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电路图
- en: 'In this chapter, we will create two projects. The first project will use the
    L298 motor driver to control a single motor and the second project will use the
    L293D chip to control a single motor. Here is the circuit diagram for the L298
    motor driver project:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将创建两个项目。第一个项目将使用L298电机驱动器控制单个电机，第二个项目将使用L293D芯片控制单个电机。以下是L298电机驱动器项目的电路图：
- en: '![](img/885bf7d0-5c9a-411f-a751-385e84cbc5cd.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/885bf7d0-5c9a-411f-a751-385e84cbc5cd.png)'
- en: 'Before we explain this diagram, let''s look at the circuit diagram for the
    L293D chip circuit as well because there are a lot of similarities between these
    two diagrams:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们解释这个图之前，让我们也看看L293D芯片电路的电路图，因为这两个图之间有很多相似之处：
- en: '![](img/c0c8c36d-14ce-4cc5-90b5-e201c3690dbd.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c0c8c36d-14ce-4cc5-90b5-e201c3690dbd.png)'
- en: The first thing to note with these two diagrams is the circuits contain a common
    ground. What this means is the ground connectors on the Arduino, battery and the
    motor controllers (both the L298 and L293D) are all connected together. In projects
    like these, which include multiple power sources, we must have a common ground
    between all devices and power sources.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 注意这两个图的第一点是电路包含一个公共地。这意味着Arduino、电池和电机控制器（L298和L293D）上的地连接器都连接在一起。在这些包含多个电源的项目中，我们必须在所有设备和电源之间有一个公共地。
- en: In both circuits, the PWM out of 10 pins on the Arduino are connected to the
    enable pin on the motor controller. Also, in both circuits, the digital 2 and
    3 pins are connected to the IN1 and IN2 pins on the motor controllers. This enables
    us to use the same code for both projects.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在这两个电路中，Arduino上的10个引脚的PWM输出连接到电机控制器的使能引脚。同样，在这两个电路中，数字2和3引脚连接到电机控制器的IN1和IN2引脚。这使得我们可以为这两个项目使用相同的代码。
- en: Now let's look at the code for these projects.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看这些项目的代码。
- en: Code
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码
- en: 'The code to control the motors only needs to use the standard `digitalWrite()`
    and `analogWrite()` functions from the Arduino standard library, so no external
    libraries are needed for this code. Therefore, our code will start off by defining
    the pins on the Arduino that are connected to the motor controllers. This following
    code does this:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 控制电机的代码只需要使用Arduino标准库中的标准`digitalWrite()`和`analogWrite()`函数，因此不需要为这段代码使用外部库。因此，我们的代码将从定义连接到电机控制器的Arduino引脚开始。以下代码就是这样做的：
- en: '[PRE0]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Now we will need to configure the pins for output in the `setup()` function
    as shown in the following code:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要在`setup()`函数中配置输出引脚，如下代码所示：
- en: '[PRE1]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now we are ready to power the motors. Let''s put the following code into the
    `loop()` function:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经准备好给电机供电了。让我们将以下代码放入`loop()`函数中：
- en: '[PRE2]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The `loop()` function starts off by using the `digitalWrite()` function to set
    input `1` on the motor controller to `HIGH` and input `2` to `LOW`. The `analogWrite()`
    function is then used to create a duty cycle of 250 to the enable pin on the motor
    controller. Remember the PWM pins have a maximum duty cycle of 255; therefore,
    once the `analogWrite()` function is performed, the motor should start spinning
    at almost full speed.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`loop()`函数一开始使用`digitalWrite()`函数将电机控制器上的输入`1`设置为`HIGH`，输入`2`设置为`LOW`。然后使用`analogWrite()`函数在电机控制器上的使能引脚上创建一个占空比为250。记住PWM引脚的最大占空比为255；因此，一旦执行`analogWrite()`函数，电机应该以接近全速开始旋转。'
- en: 'In order for a brushed DC motor to spin, one input must be HIGH, and the other
    must be LOW. If the inputs are both HIGH, both LOW or the duty cycle on the enable
    pin is 0, the motor will not spin. The following chart shows this:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使直流有刷电机旋转，一个输入必须为`HIGH`，另一个必须为`LOW`。如果输入都是`HIGH`，都是`LOW`或者使能引脚上的占空比为0，电机将不会旋转。以下图表显示了这一点：
- en: '| IN1 | IN2 | Enable Duty Cycle | Result |'
  id: totrans-61
  prefs: []
  type: TYPE_TB
  zh: '| IN1 | IN2 | Enable Duty Cycle | Result |'
- en: '| HIGH | LOW | >0 | Motor spins on direction |'
  id: totrans-62
  prefs: []
  type: TYPE_TB
  zh: '| HIGH | LOW | >0 | Motor spins in the same direction |'
- en: '| LOW | HIGH | >0 | The motor spins other direction |'
  id: totrans-63
  prefs: []
  type: TYPE_TB
  zh: '| LOW | HIGH | >0 | The motor spins in the opposite direction |'
- en: '| HIGH | HIGH |  | Motor stopped |'
  id: totrans-64
  prefs: []
  type: TYPE_TB
  zh: '| HIGH | HIGH |  | Motor stopped |'
- en: '| LOW | LOW |  | Motor stopped |'
  id: totrans-65
  prefs: []
  type: TYPE_TB
  zh: '| LOW | LOW |  | Motor stopped |'
- en: '|  |  | 0 | Motor stopped |'
  id: totrans-66
  prefs: []
  type: TYPE_TB
  zh: '|  |  | 0 | Motor stopped |'
- en: After the `analogWrite()` function is called, the `delay` function is used to
    pause the execution of the application for two seconds to let the motor run. The
    `analogWrite()` function is then called again to set the duty cycle to 0, which
    will stop the motor from spinning and delay for one second to give the motor a
    chance to stop.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在调用`analogWrite()`函数之后，使用`delay()`函数暂停应用程序的执行两秒钟，以便电机运行。然后再次调用`analogWrite()`函数将占空比设置为0，这将停止电机旋转，并延迟一秒钟，给电机一个停止的机会。
- en: The `digitalWrite()` functions are then used to input 1 pin `LOW` and the input
    2 pin `HIGH` which is the opposite of how they were originally set which will
    spin the motor in the opposite direction. The `analogWrite()` function is then
    called to set the duty cycle to 125, which will start spinning the motor at half
    speed. The `delay` function is then used to pause the execution of the application
    for two seconds, and then we stop the motor again.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 然后使用`digitalWrite()`函数将一个引脚设置为`LOW`，另一个引脚设置为`HIGH`，这与它们最初设置的方式相反，这将使电机以相反方向旋转。然后调用`analogWrite()`函数将占空比设置为125，这将使电机以半速开始旋转。然后使用`delay()`函数暂停应用程序的执行两秒钟，然后再次停止电机。
- en: Running the project
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 运行项目
- en: When this code is run, the motor should spin in one direction for two seconds,
    stop for one second, spin in the other direction for two seconds, stop for one
    second and then start over.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行此代码时，电机应在一个方向上旋转两秒钟，停止一秒钟，然后在另一个方向上旋转两秒钟，停止一秒钟，然后重新开始。
- en: Challenge
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挑战
- en: For this chapter's challenge, try to add second motors to both projects and
    then change the code so both motors will spin at the same time. You could also
    try to wire the motors so they will spin in the same direction if you apply a
    `HIGH` value to the IN1 and IN3 pins with a `LOW` value to the IN2 and IN4 pins.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 对于本章的挑战，尝试给两个项目都添加第二个电机，然后修改代码，使两个电机同时旋转。你也可以尝试将电机接线，以便在将IN1和IN3引脚设置为`HIGH`值，IN2和IN4引脚设置为`LOW`值时，它们会以相同方向旋转。
- en: Summary
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we learned the basics of how a brushed DC motor works and how
    we can use both the L298 motor driver and the L293D chip to control a brushed
    DC motor. We also learned how an H-bridge works.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了直流有刷电机的基本工作原理以及如何使用L298电机驱动器和L293D芯片来控制直流有刷电机。我们还学习了H桥的工作原理。
- en: In the next chapter, we will look at a different kind of DC motor. This motor
    is called a servo motor and is used in projects where precise positioning is needed,
    such as with robotic arms.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将探讨另一种类型的直流电机。这种电机被称为伺服电机，用于需要精确定位的项目中，例如在机械臂上。
