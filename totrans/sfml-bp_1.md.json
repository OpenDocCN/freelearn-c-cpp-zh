["```cpp\n    for(auto& var : table){...}.\n    ```", "```cpp\n    class Func(){ void operator()(){/* code here */}};\n    auto f = [](){/* code here*/};\n    ```", "```cpp\nsudo apt-get install gcc g++ clang -y\n\n```", "```cpp\nsudo apt-get install cmake cmake-gui -y\n\n```", "```cpp\nsudo apt-get install libglu1-mesa-dev freeglut3-dev mesa-common-dev libxrandr-dev libfreetype6-dev libglew-dev libjpeg-dev libsndfile1-dev libopenal-dev -y\n\n```", "```cpp\ncd /your/path/to/SFML-2.2/build\n\n```", "```cpp\nsudo make install\n\n```", "```cpp\nint main(int argc,char* argv[])\n{\n    sf::RenderWindow window(sf::VideoMode(400, \n400),\"01_Introduction\");\n    window.setFramerateLimit(60);\n\n    //create a circle\n    sf::CircleShape circle(150);\n    circle.setFillColor(sf::Color::Blue);\n    circle.setPosition(10, 20);\n\n    //game loop\n    while (window.isOpen())\n    {\n       //manage the events\n        sf::Event event;\n        while(window.pollEvent(event))\n        {\n            if ((event.type == sf::Event::Closed)\n                or (event.type == sf::Event::KeyPressed and \nevent.key.code == sf::Keyboard::Escape))\n                window.close(); //close the window\n        }\n        window.clear(); //clear the windows to black\n        window.draw(circle); //draw the circle\n        window.display(); //display the result on screen\n    }\n    return 0;\n}\n```"]