["```cpp\n#include <Adafruit_NeoPixel.h>\n#define LED_PIN    D3\n// How many NeoPixels are attached to the Arduino?\n#define LED_COUNT 16\n// Declare our NeoPixel strip object:\nAdafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);\nvoid setup() {\n  strip.begin();           // INITIALIZE NeoPixel strip object (REQUIRED)\n  strip.show();            // Turn OFF all pixels ASAP\n  strip.setBrightness(50); // Set BRIGHTNESS to about 1/5 (max = 255)\n}\n```", "```cpp\n// loop() function -- runs repeatedly as long as board is on ---------------\nvoid loop() {\n  for(int i=0; i<LED_COUNT+1; i++){\n    strip.setBrightness(50);\n    strip.setPixelColor(i, strip.Color(127+i, 127, 127)); //  Set pixel's color (in RAM)\n    strip.show();\n    delay(200);\n  }\n    for(int i=0; i<LED_COUNT+1; i++){\n    strip.setBrightness(0);\n    strip.setPixelColor(i, strip.Color(0, 0, 0)); //  Set pixel's color (in RAM)\n    strip.show();\n  }\n}\n```", "```cpp\n#define LED_PIN   5\n// How many NeoPixels are attached to the Arduino?\n#define LED_COUNT 16\n// Declare our NeoPixel strip object:\nAdafruit_NeoPixel strip(LED_COUNT, LED_PIN, NEO_GRB + NEO_KHZ800);\n//Sync Variables\nbool swi;\nfloat bright;\nfloat sat;\nfloat hue;\n```", "```cpp\nvoid onLightBrightnessChange()  {\n  // Add your code here to act upon LightBrightness change\n  swi=lightBrightness.getSwitch();\n  bright=lightBrightness.getBrightness();\n  //Sync the values to tableLight Cloud Variable\n  tableLight.setSwitch(swi);\n  tableLight.setBrightness(bright);\n  //Call the method for operations on WS2812\n  ControlTheWS2812();\n}\n```", "```cpp\nvoid onRGBLightColorChange()  {\n  // Add your code here to act upon RGBLightColor change\n  hue=rGBLightColor.getValue().hue;\n  sat=rGBLightColor.getValue().sat;\n  bright=rGBLightColor.getValue().bri;\n  //Sync the values with LightBrightness & tableLight widget\n  tableLight.setBrightness(bright);\n  tableLight.setHue(hue);\n  tableLight.setSaturation(sat);\n  lightBrightness.setBrightness(bright);\n  //Call the method for operations on WS2812\n  ControlTheWS2812();\n}\n```", "```cpp\nvoid onTableLightChange()  {\n  // Add your code here to act upon TableLight change\n  swi=tableLight.getSwitch();\n  bright=tableLight.getBrightness();\n  hue=tableLight.getHue();\n  sat=tableLight.getSaturation();\n  //Sync the values with LightBrightness & RGBLightColor widget\n  lightBrightness.setSwitch(swi);\n  lightBrightness.setBrightness(bright);\n  rGBLightColor= Color(hue,sat,bright);\n  //Call the method for operations on WS2812\n  ControlTheWS2812();\n}\n```", "```cpp\nvoid ControlTheWS2812(){\n  // declare a variable of the Color data type and define it using the HSB values of the color variable\n  Color currentColor=Color(hue,sat, bright);\n  byte RValue;\n  byte GValue;\n  byte BValue;\n  currentColor.getRGB(RValue, GValue, BValue);  // the variables will contain the RGB values after the function returns\n  if(swi==true){\n    strip.setBrightness(bright);\n    for(int i=0; i<LED_COUNT+1; i++){\n    strip.setPixelColor(i, strip.Color(RValue, GValue, BValue)); //  Set pixel's color (in RAM)\n    strip.show();\n  }\n  }else{\n    for(int i=0; i<LED_COUNT+1; i++){\n    strip.setBrightness(0);\n    strip.setPixelColor(i, strip.Color(0, 0, 0)); //  Set pixel's color (in RAM)\n    strip.show();\n    }\n  }\n}\n```", "```cpp\nHey Alexa Turn on the TableLight\nHey Alexa Turn off the TableLight\n```", "```cpp\nHey Alexa set the brightness of TableLight to 99\nHey Alexa set the brightness of TableLight to 50\nHey Alexa change the color of TableLight to red\nHey Alexa change the color of TableLight to blue\nHey Alexa change the color of TableLight to green\nHey Alexa change the color of TableLight to purple\n```", "```cpp\nHey Alexa turn on the table light after 30 minutes\nHey Alexa turn off the table light after 10 minutes\n```"]