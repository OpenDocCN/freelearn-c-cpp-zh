["```cpp\n#define REDPIN 11\n#define BLUEPIN 10\n#define GREENPIN 9\n```", "```cpp\n#define COMMON_ANODE\n```", "```cpp\nvoid setup() {\n  pinMode(REDPIN, OUTPUT);\n  pinMode(GREENPIN, OUTPUT);\n  pinMode(BLUEPIN, OUTPUT);\n}\n```", "```cpp\nvoid setColor(int red, int green, int blue) {\n  #ifdef COMMON_ANODE\n  red = 255 - red;\n  green = 255 - green;\n  blue = 255 - blue;\n  #endif\n  analogWrite(REDPIN, red);\n  analogWrite(GREENPIN, green);\n  analogWrite(BLUEPIN, blue);\n}\n```", "```cpp\nvoid loop() {\n  setColor(255, 0, 0); // Red\n  delay(1000);\n  setColor(0, 255, 0); // Green\n  delay(1000);\n  setColor(0, 0, 255); // Blue\n  delay(1000);\n  setColor(255, 255, 255); // White\n  delay(1000);\n  setColor(255, 0, 255); // Purple\n  delay(1000);\n}\n```", "```cpp\n#include <Adafruit_NeoPixel.h>\n```", "```cpp\n#define SHIELD_PIN 13\n#define MAX_PIXELS 40 \n```", "```cpp\nAdafruit_NeoPixel pixels = Adafruit_NeoPixel(MAX_PIXELS, SHIELD_PIN, NEO_GRB + NEO_KHZ800);\n```", "```cpp\nint num = 0;\nboolean color = 0;\n```", "```cpp\nvoid setup() {\n  pixels.begin();\n  pixels.show();\n  pixels.setBrightness(50);\n}\n```", "```cpp\nvoid loop() { \n  num++; \n  if (num > (MAX_PIXELS -1)) { \n    num = 0; \n    color = !color; \n  } \n  if (color) { \n    pixels.setPixelColor(num, 170, 255, 10); \n  } else { \n    pixels.setPixelColor(num, 10, 255, 170); \n  } \n  pixels.show(); \n  delay(500); \n}\n```", "```cpp\n setPixelColor(n, red, green, blue, white);\n```", "```cpp\nsetPixelColor(n, color);\n```", "```cpp\nuint32_t colorNum(int color) {\n  colorPos = 255 - colorPos;\n  if(colorPos < 85) {\n    return pixels.Color(255 - colorPos * 3, 0, colorPos * 3);\n  }\n  if(colorPos < 170) {\n    colorPos -= 85;\n    return pixels.Color(0, colorPos * 3, 255 - colorPos * 3);\n  }\n  colorPos -= 170;\n  return pixels.Color(colorPos * 3, 255 - colorPos * 3, 0);\n}\n```", "```cpp\nfor (int j=0; j<5; j++) {\n  int pixNum = (j*8) + i;\n  pixels.setPixelColor(pixNum, colorNum((tmpColorMode * 30) & 255));\n}\n```"]