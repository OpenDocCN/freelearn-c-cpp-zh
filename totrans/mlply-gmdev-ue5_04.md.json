["```cpp\n#include \"Engine/StaticMEshActor.h\"\n#include \"APickup.generated.h\"\nUCLASS(Blueprintable, BlueprintType)\nclass APickup : public AStaticMeshActor\n{\n  GENERATED_BODY()\npublic:\n  APickup();\n  UPROPERTY(BlueprintReadOnly, VisibleAnywhere, Category=\"Default\")\n  TObjectPtr<class USphereComponent> Trigger;\n  UPROPERTY(BlueprintReadWrite, EditAnywhere, Category=\"Default\")\n  int32 Points;\n  UFUNCTION(BlueprintCallable)\n  void Reactivate();\n};\n```", "```cpp\n// Fill out your copyright notice in the Description page of Project Settings.\n#pragma once\n#include \"CoreMinimal.h\"\n#include \"Engine/GameInstance.h\"\n#include \"US_GameInstance.generated.h\"\n/**\n *\n*/\nUCLASS()\nclass UNREALSHADOWS_LOTL_API UUSGameInstance : public UGameInstance\n{\n  GENERATED_BODY()\n};\n```", "```cpp\n// Fill out your copyright notice in the Description page of Project Settings.\n#include \"US_GameInstance.h\"\n```", "```cpp\n    public:\n    ```", "```cpp\n       AUS_GameMode();\n    ```", "```cpp\n    #include \"US_GameState.h\"\n    ```", "```cpp\n    AUS_GameMode::AUS_GameMode()\n    ```", "```cpp\n    {\n    ```", "```cpp\n       GameStateClass = AUS_GameState::StaticClass();\n    ```", "```cpp\n    }\n    ```", "```cpp\n#include \"US_PlayerController.h\"\n#include \"US_PlayerState.h\"\n#include \"US_Character.h\"\n#include \"UObject/ConstructorHelpers.h\"\n```", "```cpp\nPlayerStateClass = AUS_PlayerState::StaticClass();\nPlayerControllerClass = AUS_PlayerController::StaticClass();\nstatic ConstructorHelpers::FClassFinder<APawn> PlayerPawnBPClass(TEXT(\"/Game/Blueprints/BP_Character\"));\nif (PlayerPawnBPClass.Class != nullptr)\n{\n   DefaultPawnClass = PlayerPawnBPClass.Class;\n}\n```"]