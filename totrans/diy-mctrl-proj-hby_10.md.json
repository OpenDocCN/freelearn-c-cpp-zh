["```cpp\n    const int PB12 pin (labeled B12 on the Blue Pill). Also, we initialize the sensorValue variable to a value of 0.\n    ```", "```cpp\n    void setup() {\n      Serial.begin(9600);\n    }\n    ```", "```cpp\n    void setup() {\n      Serial.begin(9600);\n      pinMode(sensorPin, INPUT);\n    }\n    ```", "```cpp\n    void loop() {\n      sensorValue = digitalRead(sensorPin);\n      Serial.print(\"Sensor value: \");\n      Serial.println(sensorValue);\n      if (sensorValue == 1) {\n        Serial.println(\"Soil is too dry\");\n        delay(1000);\n      } else  {\n        Serial.println(\"Soil is moist enough\");\n        delay(1000);\n      }\n    }\n    ```", "```cpp\n    #include <ESP8266WiFi.h>\n    const char* ssid = \"Your_SSID\";\n    const char* password = \"Your_Password\";\n    const int fromStm32Pin = 4;\n    int sensorValue = 2;\n    ```", "```cpp\n    WiFiServer server(80);\n    ```", "```cpp\n    void setup() {\n      Serial.begin(115200);\n    }\n    ```", "```cpp\n    void setup() {\n      Serial.begin(115200);\n      pinMode(fromStm32Pin, INPUT);\n    }\n    ```", "```cpp\n    void setup() {\n      Serial.begin(115200);\n      pinMode(fromStm32Pin, INPUT);\n      Serial.print(\"Connecting to WiFi network: \");\n      Serial.println(ssid);\n      WiFi.begin(ssid, password);\n      while (WiFi.status() != WL_CONNECTED) {\n        delay(500);\n        Serial.print(\".\");\n      }\n      Serial.println(\"\");\n      Serial.println(\"WiFi connected.\");\n      Serial.println(\"IP address: \");\n      Serial.println(WiFi.localIP());\n      server.begin();}\n    ```", "```cpp\n    void loop() {\n      WiFiClient client = server.available();\n      if (client) {\n        // Code to serve the responsive webapp.\n      }\n    }\n    ```", "```cpp\n    void loop() {\n      WiFiClient client = server.available();\n      if (client) {\n        if (header.indexOf(\"GET /4/read\") >= 0) {\n          Serial.println(\"Reading the sensor\");\n          sensorValue = digitalRead(fromStm32Pin);\n        }\n      }\n    }\n    ```", "```cpp\n    const int sensorPin = PB12;\n    int sensorValue = 0;\n    PC13 pin (labeled C13 on the Blue Pill). \n    ```", "```cpp\n    void setup() {\n      Serial.begin(9600);\n      pinMode(sensorPin, INPUT);\n      pinMode(toInternetPin, OUTPUT);\n    }\n    ```", "```cpp\n    void loop() {\n      if (sensorValue == 1) {\n        1 (HIGH) or 0 (LOW) according to the humidity sensor. Now, we can upload Chapter10/moisture to the STM32 and close the sketch and continue working in Chapter10/webserver.\n    ```", "```cpp\n    <link rel=\"stylesheet\" href=\"styleFile.css\">\n    <style>Some styles</style>\n    ```", "```cpp\n    client.println(\"<html tags>\");\n    ```", "```cpp\n    if (sensorValue == 1) {\n      client.println(\"<p>Soil is too dry</p>\");\n      client.println(\"<p><img width=\\\"50\\\" height=\\\"60\\\"    src=\\\"https://raw.githubusercontent.com/      PacktPublishing/Creative-DIY-Microcontroller-        Projects/master/Chapter10/images/          dry_plant.png\\\"></p>\");\n    } else if (sensorValue == 0)  {\n      client.println(\"<p>Soil is moist enough</p>\");\n      client.println(\"<p><img width=\\\"50\\\" height=\\\"60\\\"    src=\\\"https://raw.githubusercontent.com/      PacktPublishing/Creative-DIY-Microcontroller-        Projects/master/Chapter10/images/          green_plant.png\\\"></p>\");\n    } else {\n      client.println(\"<p>Press the button to read the     sensor</p>\");\n    }\n    client.println(\"<p><a href=\\\"/4/read\\\">  <button class=\\\"sensorButton\\\"><i class=\\\"fas fa-    satellite-dish\\\"></i> Read sensor</button>      </a></p>\");\n    ```"]