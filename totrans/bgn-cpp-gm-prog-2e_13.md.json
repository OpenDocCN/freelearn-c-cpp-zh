["```cpp\n#include <sstream>\n#include <SFML/Graphics.hpp>\n#include \"ZombieArena.h\"\n#include \"Player.h\"\n#include \"TextureHolder.h\"\n#include \"Bullet.h\"\n#include \"Pickup.h\"\nusing namespace sf;\n```", "```cpp\nint score = 0;\nint hiScore = 0;\n// For the home/game over screen\nSprite spriteGameOver;\nTexture textureGameOver = TextureHolder::GetTexture(\"graphics/background.png\");\nspriteGameOver.setTexture(textureGameOver);\nspriteGameOver.setPosition(0, 0);\n// Create a view for the HUD\nView hudView(sf::FloatRect(0, 0, resolution.x, resolution.y));\n// Create a sprite for the ammo icon\nSprite spriteAmmoIcon;\nTexture textureAmmoIcon = TextureHolder::GetTexture(\n           \"graphics/ammo_icon.png\");\nspriteAmmoIcon.setTexture(textureAmmoIcon);\nspriteAmmoIcon.setPosition(20, 980);\n// Load the font\nFont font;\nfont.loadFromFile(\"fonts/zombiecontrol.ttf\");\n// Paused\nText pausedText;\npausedText.setFont(font);\npausedText.setCharacterSize(155);\npausedText.setFillColor(Color::White);\npausedText.setPosition(400, 400);\npausedText.setString(\"Press Enter \\nto continue\");\n// Game Over\nText gameOverText;\ngameOverText.setFont(font);\ngameOverText.setCharacterSize(125);\ngameOverText.setFillColor(Color::White);\ngameOverText.setPosition(250, 850);\ngameOverText.setString(\"Press Enter to play\");\n// LEVELING up\nText levelUpText;\nlevelUpText.setFont(font);\nlevelUpText.setCharacterSize(80);\nlevelUpText.setFillColor(Color::White);\nlevelUpText.setPosition(150, 250);\nstd::stringstream levelUpStream;\nlevelUpStream <<\n    \"1- Increased rate of fire\" <<\n    \"\\n2- Increased clip size(next reload)\" <<\n    \"\\n3- Increased max health\" <<\n    \"\\n4- Increased run speed\" <<\n    \"\\n5- More and better health pickups\" <<\n    \"\\n6- More and better ammo pickups\";\nlevelUpText.setString(levelUpStream.str());\n// Ammo\nText ammoText;\nammoText.setFont(font);\nammoText.setCharacterSize(55);\nammoText.setFillColor(Color::White);\nammoText.setPosition(200, 980);\n// Score\nText scoreText;\nscoreText.setFont(font);\nscoreText.setCharacterSize(55);\nscoreText.setFillColor(Color::White);\nscoreText.setPosition(20, 0);\n// Hi Score\nText hiScoreText;\nhiScoreText.setFont(font);\nhiScoreText.setCharacterSize(55);\nhiScoreText.setFillColor(Color::White);\nhiScoreText.setPosition(1400, 0);\nstd::stringstream s;\ns << \"Hi Score:\" << hiScore;\nhiScoreText.setString(s.str());\n// Zombies remaining\nText zombiesRemainingText;\nzombiesRemainingText.setFont(font);\nzombiesRemainingText.setCharacterSize(55);\nzombiesRemainingText.setFillColor(Color::White);\nzombiesRemainingText.setPosition(1500, 980);\nzombiesRemainingText.setString(\"Zombies: 100\");\n// Wave number\nint wave = 0;\nText waveNumberText;\nwaveNumberText.setFont(font);\nwaveNumberText.setCharacterSize(55);\nwaveNumberText.setFillColor(Color::White);\nwaveNumberText.setPosition(1250, 980);\nwaveNumberText.setString(\"Wave: 0\");\n// Health bar\nRectangleShape healthBar;\nhealthBar.setFillColor(Color::Red);\nhealthBar.setPosition(450, 980);\n// The main game loop\nwhile (window.isOpen())\n```", "```cpp\n// Debug HUD\nText debugText;\ndebugText.setFont(font);\ndebugText.setCharacterSize(25);\ndebugText.setFillColor(Color::White);\ndebugText.setPosition(20, 220);\nstd::ostringstream ss;\n// When did we last update the HUD?\nint framesSinceLastHUDUpdate = 0;\n// How often (in frames) should we update the HUD\nint fpsMeasurementFrameInterval = 1000;\n// The main game loop\nwhile (window.isOpen())\n```", "```cpp\n    // Has the player touched ammo pickup\n    if (player.getPosition().intersects\n        (ammoPickup.getPosition()) && ammoPickup.isSpawned())\n    {\n        bulletsSpare += ammoPickup.gotIt();\n\n    }\n    // size up the health bar\n    healthBar.setSize(Vector2f(player.getHealth() * 3, 50));\n    // Increment the number of frames since the previous update\n    framesSinceLastHUDUpdate++;\n    // re-calculate every fpsMeasurementFrameInterval frames\n    if (framesSinceLastHUDUpdate > fpsMeasurementFrameInterval)\n    {\n        // Update game HUD text\n        std::stringstream ssAmmo;\n        std::stringstream ssScore;\n        std::stringstream ssHiScore;\n        std::stringstream ssWave;\n        std::stringstream ssZombiesAlive;\n        // Update the ammo text\n        ssAmmo << bulletsInClip << \"/\" << bulletsSpare;\n        ammoText.setString(ssAmmo.str());\n        // Update the score text\n        ssScore << \"Score:\" << score;\n        scoreText.setString(ssScore.str());\n        // Update the high score text\n        ssHiScore << \"Hi Score:\" << hiScore;\n        hiScoreText.setString(ssHiScore.str());\n        // Update the wave\n        ssWave << \"Wave:\" << wave;\n        waveNumberText.setString(ssWave.str());\n        // Update the high score text\n        ssZombiesAlive << \"Zombies:\" << numZombiesAlive;\n        zombiesRemainingText.setString(ssZombiesAlive.str());\n        framesSinceLastHUDUpdate = 0;\n    }// End HUD update\n}// End updating the scene\n```", "```cpp\n    //Draw the crosshair\n    window.draw(spriteCrosshair);\n    // Switch to the HUD view\n    window.setView(hudView);\n    // Draw all the HUD elements\n    window.draw(spriteAmmoIcon);\n    window.draw(ammoText);\n    window.draw(scoreText);\n    window.draw(hiScoreText);\n    window.draw(healthBar);\n    window.draw(waveNumberText);\n    window.draw(zombiesRemainingText);\n}\nif (state == State::LEVELING_UP)\n{\n}\n```", "```cpp\nif (state == State::LEVELING_UP)\n{\n    window.draw(spriteGameOver);\n    window.draw(levelUpText);\n}\n```", "```cpp\nif (state == State::PAUSED)\n{\n    window.draw(pausedText);\n}\n```", "```cpp\nif (state == State::GAME_OVER)\n{\n    window.draw(spriteGameOver);\n    window.draw(gameOverText);\n    window.draw(scoreText);\n    window.draw(hiScoreText);\n}\n```"]