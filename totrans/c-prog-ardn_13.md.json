["```cpp\nvoid setup() {\n\n  for (int i = 2 ; i <= 7 ; i++)\n  {\n    pinMode(i, OUTPUT);\n  }\n}\n\nvoid loop(){\n\n  // switch on everything progressively\n  for (int i = 2 ; i <= 7 ; i++)\n  {\n    digitalWrite(i, HIGH);\n    delay(100);\n  }\n\n  delay(3000);\n\n  // switch off everything progressively\n  for (int i = 7 ; i >=2 ; i--)\n  {\n    digitalWrite(i, LOW);\n    delay(100);\n  }\n\n  delay(3000);\n\n  // switch on even LEDS\n  for (int i = 2 ; i <= 7 ; i++)\n  {\n    if ( i % 2 == 0 ) digitalWrite(i, HIGH);\n    else digitalWrite(i, LOW);\n  }\n\n  delay(3000);\n\n  // switch on odd LEDS\n  for (int i = 2 ; i <= 7 ; i++)\n  {\n    if ( i % 2 != 0 ) digitalWrite(i, HIGH);\n    else digitalWrite(i, LOW);\n  }\n\n  delay(3000);\n}\n```", "```cpp\n/*\n  LEDpatterns - Library for making cute LEDs Pattern.\n  Created by Julien Bayle, February 10, 2013.\n*/\n#ifndef LEDpatterns_h\n#define LEDpatterns_h\n\n#include \"Arduino.h\"\n\nclass LEDpatterns\n{\n  public:\n    LEDpatterns(int firstPin, int ledsNumber);\n    void switchOnAll();\n    void switchOffAll();\n    void switchEven();\n    void switchOdd();\n  private:\n    int _firstPin;\n    int _ledsNumber;\n};\n#endif\n```", "```cpp\n/*\n  LEDpatterns.cpp - Library for making cute LEDs Pattern.\n Created by Julien Bayle, February 10, 2013.\n */\n#include \"Arduino.h\"\n#include \"LEDpatterns.h\"\n\nLEDpatterns::LEDpatterns(int firstPin, int ledsNumber)\n{\n  for (int i = firstPin ; i < ledsNumber + firstPin ; i++)\n  {\n    pinMode(i, OUTPUT);\n  }\n\n  _ledsNumber = ledsNumber;\n  _firstPin = firstPin;\n}\n\nvoid LEDpatterns::switchOnAll()\n{\n  for (int i = _firstPin ; i < _ledsNumber + _firstPin ; i++)\n  {\n    digitalWrite(i, HIGH);\n    delay(100);\n  }\n}\n\nvoid LEDpatterns::switchOffAll()\n{\n  for (int i = _ledsNumber + _firstPin -1 ; i >= _firstPin   ; i--)\n  {\n    digitalWrite(i, LOW);\n    delay(100);\n  }\n}\n\nvoid LEDpatterns::switchEven()\n{\n  for (int i = _firstPin ; i < _ledsNumber + _firstPin ; i++)\n  {\n    if ( i % 2 == 0 ) digitalWrite(i, HIGH);\n    else digitalWrite(i, LOW);\n  }\n}\n\nvoid LEDpatterns::switchOdd()\n{\n  for (int i = _firstPin ; i < _ledsNumber + _firstPin ; i++)\n  {\n    if ( i % 2 != 0 ) digitalWrite(i, HIGH);\n    else digitalWrite(i, LOW);\n  }\n}\n```", "```cpp\n#######################################\n# Syntax Coloring Map For Messenger\n#######################################\n\n#######################################\n# Datatypes (KEYWORD1)\n#######################################\n\nLEDpatterns\tKEYWORD1\n\n#######################################\n# Methods and Functions (KEYWORD2)\n#######################################\nswitchOnAll\tKEYWORD2\nswitchOffAll\tKEYWORD2\nswitchEven\tKEYWORD2\nswitchOdd\tKEYWORD2\n\n#######################################\n# Instances (KEYWORD2)\n#######################################\n\n#######################################\n# Constants (LITERAL1)\n#######################################\n```", "```cpp\n#include <LEDpatterns.h>\nLEDpatterns ledpattern(2,6);\n\nvoid setup() {\n}\n\nvoid loop(){\n\n  ledpattern.switchOnAll();\n  delay(3000);\n\n  ledpattern.switchOffAll();\n  delay(3000);\n\n  ledpattern.switchEven();\n  delay(3000);\n\n  ledpattern.switchOdd();\n  delay(3000);\n}\n```", "```cpp\nchar text[] = \"I love Arduino because it rocks.\";\n```", "```cpp\nint a = 4;\nint b = a << 3;\n```", "```cpp\nint a = 12 ;\nint b = a >> 2;\n```", "```cpp\nconst prog_uint8_t BitMap[5][7] = {   \n// store in program memory to save RAM         \n{1,1,0,0,0,1,1},         \n{0,0,1,0,1,0,0},         \n{0,0,0,1,0,0,0},         \n{0,0,1,0,1,0,0},         \n{1,1,0,0,0,1,1}     }; \n```", "```cpp\nconst prog_uint8_t BitMap[5] = {   \n// store in program memory to save RAM         \nB1100011,         \nB0010100,         \nB0001000,         \nB0010100,         \nB1100011     }; \n```", "```cpp\nvoid setup()     {         \n  int pin;         \n\n  for (pin=8; pin <= 13; ++pin) {             \n    pinMode (pin, LOW);         \n  } \n}\n```", "```cpp\nvoid setup()     {         \n DDRB = B00111111Â ; // DDRB are pins from 8 to 15\n}\n```"]