- en: Remotely Controlling the Arduino
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 远程控制Arduino
- en: When I was a kid, my parents used to use both myself and my sister as the remote
    control for the television sets because back then, television sets did not come
    with remote controls. Fortunately, Eugene Polley, an engineer at *Zenith,* came
    up with the idea to control television with remote controls, saving millions of
    kids from having to change the channels for their parents. The remote control
    greatly enhanced how we interacted with the television set and can do the same
    for your Arduino project.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当我还是个孩子的时候，我的父母经常用我和我的妹妹作为电视机的遥控器，因为那时候，电视机并没有配备遥控器。幸运的是，Zenith的一名工程师Eugene
    Polley提出了用遥控器控制电视的想法，从而让数百万的孩子免于为父母换频道。遥控器极大地增强了我们与电视机的互动方式，也可以为你的Arduino项目做到同样的事情。
- en: 'In this chapter, you will learn:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习：
- en: How to connect a radio frequency remote control to an Arduino
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何将射频遥控器连接到Arduino
- en: How to determine what button is pressed on a radio frequency remote
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何确定射频遥控器上按下了哪个按钮
- en: How to connect an infrared remote control to an Arduino
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何将红外遥控器连接到Arduino
- en: How to determine what button is pressed on an infrared remote
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何确定红外遥控器上按下了哪个按钮
- en: Introduction
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: In this chapter, we will look at a couple of ways that we can control our Arduino
    project remotely. For the first project, we will use the Keyestudio IR (infrared)
    receiver, which uses the **HX1838 infrared control module**. The HX1838 infrared
    control module is used in numerous IR receivers that can be used by the Arduino.
    Therefore, you do not need to specifically get the Keyestudio one that we use
    here.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨几种我们可以远程控制Arduino项目的方法。对于第一个项目，我们将使用Keyestudio红外（红外）接收器，它使用**HX1838红外控制模块**。HX1838红外控制模块被用于许多Arduino可用的红外接收器。因此，你不需要特别购买我们这里使用的Keyestudio型号。
- en: An infrared transmitter has an LED that emits infrared radiation, which is picked
    up by the infrared receiver. When a button is pressed on the remote control, the
    LED on the transmitter will blink very quickly for a fraction of a second and
    the receiver will read the pattern of blinks and interpret it.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 红外发射器有一个LED，它发射红外辐射，被红外接收器接收。当在遥控器上按下按钮时，发射器上的LED会非常快速地闪烁一秒钟的几分之一，接收器将读取闪烁模式并对其进行解释。
- en: 'The Keyestudio IR receiver that we will be using in this chapter looks like
    the following photograph:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章中将使用的Keyestudio红外接收器看起来如下照片所示：
- en: '![](img/ec2f13b3-b1b8-4766-841a-5726474390ca.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ec2f13b3-b1b8-4766-841a-5726474390ca.png)'
- en: The pin marked with the **S** is the signal pin and should be connected to one
    of the digital pins on the Arduino. The pin marked with the **+** sign should
    be connected to 5V and the pin with the **-** sign should be connected to ground.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 标有**S**的引脚是信号引脚，应该连接到Arduino的一个数字引脚上。标有**+**号的引脚应该连接到5V，标有**-**号的引脚应该连接到地线。
- en: 'One of the really nice things about using an IR receiver as the remote control
    for your project is you can use pretty much any IR remote controller as the transmitter.
    For example, I can use this remote that came with one of my IR receivers:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 使用红外接收器作为项目遥控器的一个真正不错的地方是，你可以使用几乎任何红外遥控器作为发射器。例如，我可以使用与我其中一个红外接收器一起来的这个遥控器：
- en: '![](img/e25082b0-b686-4861-b5aa-30475d73eb5a.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](img/e25082b0-b686-4861-b5aa-30475d73eb5a.png)'
- en: 'Or I could use any of my spare TV remotes that use infrared such as the one
    shown in the following photograph:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，我可以用我多余的任何红外电视遥控器，如下面照片所示：
- en: '![](img/594144fe-8f46-45d1-adad-cfe298a65fb3.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](img/594144fe-8f46-45d1-adad-cfe298a65fb3.png)'
- en: Some remotes, however, do not use infrared technologies such as the Apple TV
    remote, which uses Bluetooth 4.0\. Therefore, they cannot be used with the infrared
    receiver.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，有些遥控器不使用红外技术，例如使用蓝牙4.0的Apple TV遥控器。因此，它们不能与红外接收器一起使用。
- en: Infrared remotes do have a couple drawbacks, the biggest being that they must
    have a line of sight to communicate with the receiver. What this means is the
    transmitter must be pointed directly at the receiver; otherwise, the receiver
    will not be able to read the transmission. Another drawback with infrared remotes
    is they are only really useful up to 30 feet (10 meters).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 红外遥控器确实有几个缺点，最大的缺点是它们必须与接收器有视线才能进行通信。这意味着发射器必须直接指向接收器；否则，接收器将无法读取传输。红外遥控器的另一个缺点是，它们只有在30英尺（10米）以内才真正有用。
- en: 'Rather than using an infrared transmitter/receiver we could use a **radio frequency**
    (**RF**) transmitter and receiver. In this chapter, we will look at how to use
    a basic four-button keyfob RF transmitter and a receiver like the ones shown in
    the following photograph:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 而不是使用红外发射器/接收器，我们可以使用**射频**（**RF**）发射器和接收器。在本章中，我们将探讨如何使用基本的四键遥控器RF发射器和接收器，如下面的照片所示：
- en: '![](img/6bb52204-6b5c-4759-b54f-60dd9094c3dd.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6bb52204-6b5c-4759-b54f-60dd9094c3dd.png)'
- en: The two biggest advantages of using an RF transmitter and receiver is that the
    RF signal can travel further, and they can go through normal walls, which means
    it does not need line of sight. Unlike the infrared receiver, which can work with
    almost any infrared transmitter, if the RF transmitter and receiver are not designed
    to work together, and are set to the same frequencies, they will not be able to
    communicate. RF transmitters such as the one shown in the preceding photograph,
    also have far fewer buttons than infrared remotes.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 使用RF发射器和接收器的两个最大优点是RF信号可以传播得更远，并且它们可以穿过普通墙壁，这意味着不需要视线对准。与几乎可以与任何红外发射器一起工作的红外接收器不同，如果RF发射器和接收器没有设计成一起工作，并且设置为相同的频率，它们将无法通信。如前照片所示，RF发射器也比红外遥控器有更少的按钮。
- en: Let's look at the parts we will need for these projects.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这些项目所需的部件。
- en: Components needed
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 需要的组件
- en: 'For these projects, you will need the following items:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这些项目，你需要以下物品：
- en: One Arduino Uno or compatible board
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Arduino Uno或兼容板
- en: One infrared receiver
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个红外接收器
- en: One or more infrared transmitter(s)
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个或多个红外发射器
- en: One RF transmitter and receiver pair
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一对RF发射器和接收器
- en: Jumper wires
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跳线
- en: Breadboard
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 面包板
- en: Circuit diagrams
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电路图
- en: 'The following diagram shows how we connect the infrared receiver to the Arduino:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图显示了我们将如何将红外接收器连接到Arduino：
- en: '![](img/0b08245c-4b46-46a2-a3d7-21401cbe397a.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0b08245c-4b46-46a2-a3d7-21401cbe397a.png)'
- en: 'The 5V in and the ground pins on the IR receiver are connected to the appropriate
    rails on the breadboard. The signal pin is connected to the digital 2 pin on the
    Arduino. Now let''s look at how we would connect the radio frequency receiver
    to the Arduino:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 红外接收器的5V输入和地线引脚连接到面包板上的适当轨道。信号引脚连接到Arduino的数字2引脚。现在让我们看看我们将如何将射频接收器连接到Arduino：
- en: '![](img/51ede3ee-b019-421a-aa23-02a6f7b7c01c.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](img/51ede3ee-b019-421a-aa23-02a6f7b7c01c.png)'
- en: The 5V in and the ground pins on the RF receiver are connected to the appropriate
    rails on the breadboard. The four output pins on the receiver are connected to
    the 8, 9, 10 and 11 digital pins on the Arduino. When a button is pressed on the
    transmitter, the corresponding output pin on the receiver goes to HIGH.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: RF接收器的5V输入和地线引脚连接到面包板上的适当轨道。接收器的四个输出引脚连接到Arduino的8、9、10和11数字引脚。当发射器上的按钮被按下时，接收器上的相应输出引脚会变为高电平。
- en: Now let's look at the code for our projects.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看我们项目的代码。
- en: Code
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码
- en: 'Before we can start writing the code that will read the input from the infrared
    receiver, we will need to load the **IRremote library** by shirriff. The following
    screenshot shows the library and version that we will use:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始编写读取红外接收器输入的代码之前，我们需要通过shirriff加载**IRremote库**。以下截图显示了我们将要使用的库和版本：
- en: '![](img/17076f8f-2192-4001-b420-e0fd5d161352.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/17076f8f-2192-4001-b420-e0fd5d161352.png)'
- en: 'Once the library is loaded, we will need to start by importing the header file
    for the IRremote library and creating the global variables and directives. The
    following code shows how to do that:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦加载了库，我们首先需要导入IRremote库的头文件，并创建全局变量和指令。以下代码显示了如何进行：
- en: '[PRE0]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the preceding code, we start off by including the `IRremote.h` header file
    into our project. We then define that the infrared receiver is connected to pin
    2 on the Arduino. Next, we create an instance of the `IRrecv` type, which is used
    to read the input from the IR receiver. Finally, we create an instance of the
    `decode_results` type, which is used to store the values from the IR receiver.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的代码中，我们首先将`IRremote.h`头文件包含到我们的项目中。然后我们定义红外接收器连接到Arduino的2号引脚。接下来，我们创建一个`IRrecv`类型的实例，用于读取IR接收器的输入。最后，我们创建一个`decode_results`类型的实例，用于存储IR接收器的值。
- en: 'Now we will need to add the initialization code to the `setup()` function.
    The following codes shows the `setup()` function for this example:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们需要在`setup()`函数中添加初始化代码。以下代码显示了此示例的`setup()`函数：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: In this example, we start off by initializing the serial monitor so we can print
    out the results. We then call the `enableIRIn()` function from the `IRrecv` type
    instance, which will prepare the Arduino to read the input from the IR receiver.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们首先初始化串行监视器，以便我们可以打印出结果。然后，我们从`IRrecv`类型的实例中调用`enableIRIn()`函数，这将使Arduino准备好读取红外接收器的输入。
- en: 'In the `loop()` function, we look for input from the IR receiver and print
    out the codes for the buttons pressed on the remote. The following code shows
    what the `loop()` function will look like:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在`loop()`函数中，我们寻找来自红外接收器的输入，并打印出遥控器上按下的按钮的代码。以下代码显示了`loop()`函数将看起来像什么：
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In the `loop()` function, we use the `decode()` function, passing in the instance
    of the `decode_results` type, to read the code of the button that was pressed.
    Once a code has been received, the `Serial.println()` function is used to print
    out the code to the serial console. We delay the execution of the application
    for 100 milliseconds to give the user a chance to release the button before a
    repeat code is sent. Finally, the `resume()` function is called to begin listening
    for results again.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在`loop()`函数中，我们使用`decode()`函数，传递`decode_results`类型的实例，来读取被按下的按钮的代码。一旦收到代码，就使用`Serial.println()`函数将代码打印到串行控制台。我们延迟应用程序的执行100毫秒，以便在发送重复代码之前给用户一个释放按钮的机会。最后，调用`resume()`函数以再次开始监听结果。
- en: 'The results of the code should look something like the following screenshot:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的结果应该看起来像以下截图：
- en: '![](img/da5fca3d-1494-43a2-ab59-57edb885a5a8.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](img/da5fca3d-1494-43a2-ab59-57edb885a5a8.png)'
- en: The Car mp3 remote, shown earlier in this chapter, was used to get the results
    shown in the preceding screenshot.  `FF30CF` is the code for button number 1,
    the `FF18E7` code is the number 2 button, and the `ff7A85` code is the number
    3 button. The `FFFFFFFF` results mean that the button is being held down; therefore,
    the last valid code should be used again.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章前面展示的汽车MP3遥控器被用来获取前面截图中的结果。"FF30CF"是1号按钮的代码，"FF18E7"代码是2号按钮，而"ff7A85"代码是3号按钮。`FFFFFFFF`的结果意味着按钮被按住；因此，应该再次使用最后一个有效的代码。
- en: You will probably want to save this project somewhere because it is very useful
    for getting valid codes for buttons on your remotes. Once you have the codes,
    you can then use the IRremote library in your other projects and perform whatever
    activities are needed depending on the codes returned from the receiver.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能想把这个项目保存到某个地方，因为它对于获取遥控器上按钮的有效代码非常有用。一旦你有了这些代码，你就可以在你的其他项目中使用IRremote库，并根据接收器返回的代码执行所需的任何活动。
- en: The RF receiver is a little easier to read because we do not need an external
    library to read it because there is one pin per button on the transmitter. When
    a user presses the button, the corresponding pin on the receiver will be pulled
    HIGH.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 由于发射器上的每个按钮都有一个引脚，因此RF接收器的读取稍微容易一些，我们不需要外部库来读取它。当用户按下按钮时，接收器上相应的引脚将被拉高。
- en: 'We will start the RF code by defining what pins on the Arduino are connected
    to the pins on the RF receiver. If you connected the RF receiver as shown in the
    Fritzing diagram, the buttons would be defined like this:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将开始定义Arduino上的哪些引脚连接到RF接收器的引脚上。如果你按照Fritzing图连接RF接收器，按钮的定义将如下所示：
- en: '[PRE3]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'We then need to set up these pins for input within the `setup()` function and
    also initialize the serial monitor. The following code shows the `setup()` function
    for this project:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们需要在`setup()`函数中设置这些引脚为输入，并初始化串行监视器。以下代码显示了此项目的`setup()`函数：
- en: '[PRE4]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'In the `loop()` function, we need to read each of the pins, check whether it
    is HIGH, and if so, perform what function is needed within your project. For this
    project, we simply print out that the pin was pressed. The following shows the
    `loop()` function for this project:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在`loop()`函数中，我们需要读取每个引脚，检查它是否为高电平，如果是，则在你的项目中执行所需的函数。对于这个项目，我们只是打印出该引脚被按下。以下显示了此项目的`loop()`函数：
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: When this code is run, you will be able to see which buttons were pressed within
    the serial monitor. Adding a remote control to your project may seem like simply
    a *nice to have;* however, it can really enhance the usability of your project
    and also save you from constantly getting up to interact with it. Now let's look
    at our challenge for this chapter.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 当运行此代码时，你将在串行监视器中看到哪些按钮被按下。给你的项目添加遥控器可能看起来只是“锦上添花；”然而，它实际上可以增强项目的可用性，并让你免于不断起身与之互动。现在让我们看看本章的挑战。
- en: Challenge
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挑战
- en: In this chapter, we saw two types of remote control devices. The first was the
    IR control, which needs a line of sight to the project and can have a lot of different
    buttons. The radio frequency remote is good when the remote needs to work over
    greater distances from the device or even in a different room.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到了两种类型的遥控设备。第一种是红外控制，它需要与投影设备有视线，并且可以有很多不同的按钮。射频遥控器在遥控器需要从设备更远距离工作或甚至在不同的房间工作时表现良好。
- en: There are numerous other ways to create remote controls using wireless signals, such
    as **Zigbee** radios or even Wi-Fi; however, for this challenge, we want you to
    think outside the box and to begin to expand your own horizons. The challenge
    for this chapter is to think of ways to remotely control your device without using
    a wireless signal.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 使用无线信号创建遥控器的方法有很多，例如**Zigbee**无线电或甚至Wi-Fi；然而，对于这个挑战，我们希望你能跳出思维定势，开始拓展自己的视野。本章的挑战是思考如何在不使用无线信号的情况下远程控制你的设备。
- en: You may be shaking your head right now wondering what we mean by remotely controlling
    a project without using a wireless signal. One example of this would be the clapper.
    The clapper is a sound-activated electrical switch. You clap once, and the switch
    will turn on, you clap again, and the switch will turn off. Another example is
    a motion sensor that controls your outside lights. If the motion sensor detects
    motion, it will turn on the light. Now try to think outside the box and come up
    with other ways that you can control your device without using a wireless signal.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在可能正在摇头，想知道我们所说的在不使用无线信号的情况下远程控制项目是什么意思。一个例子就是拍手器。拍手器是一种声音激活的电气开关。你拍一次手，开关就会打开，你再次拍手，开关就会关闭。另一个例子是控制你户外灯光的运动传感器。如果运动传感器检测到运动，它就会打开灯光。现在尝试跳出思维定势，想出其他不使用无线信号控制设备的方法。
- en: Summary
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, we saw how to use an IR remote and an RF remote with an Arduino.
    You were also challenged to think outside of the box and think of other ways that
    you could remotely control your project without using a wireless signal. The reason
    this challenge was in this last project chapter was to get you to start thinking
    outside of the box when designing your projects because thinking outside of the
    box and creating new and improved ways to do something is what gets people excited
    about these types of projects. It can also make you a lot of money if you are
    able to monopolize your project.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到了如何使用红外遥控器和射频遥控器与Arduino一起工作。你也被挑战跳出思维定势，思考其他不使用无线信号远程控制项目的方法。这个挑战之所以放在最后一个项目章节中，是为了让你在设计项目时开始跳出思维定势，因为跳出思维定势和创造新的、改进的方法去做某事是让人们对这些类型的项目感到兴奋的原因。如果你能够垄断你的项目，这也可能让你赚很多钱。
- en: In the next chapter, we will talk about how you can use the knowledge you gained
    from previous project chapters to create a simple robot. We will not be writing
    the code or designing the circuits for you. Instead we will show you how to put
    the pieces you have learned in the book together, so you can design your own robot
    or create other projects.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将讨论如何使用从前几章项目中学到的知识来创建一个简单的机器人。我们不会为你编写代码或设计电路。相反，我们将向你展示如何将书中学到的部件组合起来，这样你就可以设计自己的机器人或创建其他项目。
