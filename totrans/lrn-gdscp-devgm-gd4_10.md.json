["```cpp\n    func _on_play_button_pressed():\n       get_tree().change_scene_to_file(\"res://screens/game/main.tscn\")\n    ```", "```cpp\n    func _on_exit_button_pressed():\n       get_tree().quit()\n    ```", "```cpp\nclass_name Enemy extends CharacterBody2D\n@onready var _navigation_agent_2d: NavigationAgent2D = $NavigationAgent2D\n@export var max_speed: float = 400.0\n@export var acceleration: float = 1500.0\n@export var deceleration: float = 1500.0\nvar player: Player\nfunc _physics_process(delta: float):\n   _navigation_agent_2d.target_position = player.global_position\n   if _navigation_agent_2d.is_navigation_finished():\n      velocity = velocity.move_toward(Vector2.ZERO, deceleration * delta)\n   else:\n      var next_position: Vector2 = _navigation_agent_2d.get_next_path_position()\n      var direction_to_next_position: Vector2 = global_position.direction_to(next_position)\n      velocity = velocity.move_toward(direction_to_next_position * max_speed, acceleration * delta)\n   move_and_slide()\n```", "```cpp\n_navigation_agent_2d.target_position = target.global_position\n```", "```cpp\nif _navigation_agent_2d.is_navigation_finished():\n```", "```cpp\nvar next_position: Vector2 = _navigation_agent_2d.get_next_path_position()\n```", "```cpp\nfunc _ready():\n   var player_nodes: Array = get_tree().get_nodes_in_group(\"player\")\n   if not player_nodes.is_empty():\n      target = player_nodes[0]\n```", "```cpp\n    func hit():\n       health -= 1\n    ```", "```cpp\n    func _on_player_detection_area_body_entered(body: Node2D):\n       if not body.is_in_group(\"player\"):\n          return\n       body.get_hit()\n       queue_free()\n    ```", "```cpp\nbody.is_in_group(\"player\")\n```", "```cpp\nextends Node2D\n@export var entity_scene: PackedScene\n@onready var _positions: Node2D = $Positions\nfunc spawn_entity():\n   var random_position: Marker2D = _positions.get_children().pick_random()\n   var new_entity: Node2D = entity_scene.instantiate()\n   new_entity.position = random_position.position\n   add_child(new_entity)\n```", "```cpp\nvar new_entity: Node2D = entity_scene.instantiate()\n```", "```cpp\nadd_child(new_entity)\n```", "```cpp\nvar random_position: Marker2D = _positions.get_children().pick_random()\n```", "```cpp\n    func _on_spawn_timer_timeout():\n       spawn_entity()\n    ```", "```cpp\n    @onready var _spawn_timer: Timer = $SpawnTimer\n    @export var spawn_interval: float = 1.5\n    ```", "```cpp\n    func start_timer():\n       _spawn_timer.start(spawn_interval)\n    func stop_timer():\n       _spawn_timer.stop()\n    ```", "```cpp\n    func _ready():\n       start_timer()\n    ```", "```cpp\nextends CenterContainer\nfunc _on_retry_button_pressed() -> void:\n   get_tree().reload_current_scene()\nfunc _on_menu_button_pressed() -> void:\n   get_tree().change_scene_to_file(\"res://screens/ui/menu.tscn\")\n```", "```cpp\n    class_name Player extends CharacterBody2D\n    health setter when health equals 0:\n\n    ```", "```cpp\n\n    ```", "```cpp\n    extends Node2D\n    @onready var _game_over_menu: CenterContainer = $CanvasLayer/GameOverMenu\n    @onready var _enemy_spawner: Node2D = $EnemySpawner\n    @onready var _health_potion_spawner: Node2D = $HealthPotionSpawner\n    func _on_player_died() -> void:\n       _game_over_menu.show()\n       _enemy_spawner.stop()\n       _health_potion_spawner.stop()\n    ```", "```cpp\n    class_name Projectile\n    extends Node2D\n    @export var speed: float = 600.0\n    var target: Node2D\n    func _physics_process(delta: float):\n       global_position = global_position.move_toward(target.global_position, speed * delta)\n       look_at(target.global_position)\n    ```", "```cpp\n    func _on_enemy_detection_area_body_entered(body: Node2D):\n       body.get_hit()\n       queue_free()\n    ```", "```cpp\n    func get_hit():\n       queue_free()\n    ```", "```cpp\n    @export var projectile_scene: PackedScene = preload(\"res://parts/projectile/projectile.tscn\")\n    ```", "```cpp\n    @export var shoot_distance: float = 400.0\n    ```", "```cpp\n    func _on_shoot_timer_timeout():\n       var closest_enemy: Enemy\n       var smallest_distance: float = INF\n       var all_enemies: Array = get_tree().get_nodes_in_group(\"enemy\")\n       for enemy in all_enemies:\n          var distance_to_enemy: float = global_position.distance_to(enemy.global_position)\n          if distance_to_enemy < smallest_distance:\n             closest_enemy = enemy\n             smallest_distance = distance_to_enemy\n       if not closest_enemy:\n          return\n       if smallest_distance > shoot_distance:\n          return\n       var new_projectile: Projectile = ProjectileScene.instantiate()\n       new_projectile.target = closest_enemy\n       get_parent().add_child(new_projectile)\n       new_projectile.global_position = global_position\n    ```", "```cpp\n    @onready var _shoot_timer = $ShootTimer\n    @export_range(0, MAX_HEALTH) var health: int = 10:\n       set(new_value):\n          # Code to update the health\n          if health > 0 and new_health == 0:\n             # Code when player dies\n             shoot_timer.stop()\n    ```", "```cpp\n    extends Node\n    var highscore: int = 0\n    func set_new_highscore(value: int):\n       if value > highscore:\n          highscore = value\n    ```", "```cpp\n    @onready var _time_label: Label = $ CanvasLayer/TimerUI/TimeLabel\n    var _time: float = 0.0:\n       set(value):\n          _time = value\n          _time_label.text = str(floor(_time))\n    ```", "```cpp\n    func _process(delta: float):\n       _time += delta\n    ```", "```cpp\n    func _on_player_died() -> void:\n       _game_over_menu.show()\n       _enemy_spawner.stop()\n       _health_potion_spawner.stop()\n       set_process(false)\n       HighscoreManager.set_new_highscore(_time)\n    ```", "```cpp\n    @onready var highscore_label: Label = $CenterContainer/VBoxContainer/PanelContainer/MarginContainer/VBoxContainer/VBoxContainer/HighscoreLabel\n    func _ready():\n       highscore_label.text = \"Highscore: \" + str(HighscoreManager.highscore)\n    ```", "```cpp\n    signal shot\n    ```"]