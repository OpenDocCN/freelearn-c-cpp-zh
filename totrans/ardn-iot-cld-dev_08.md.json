["```cpp\nnpm install @arduino/arduino-iot-client\nnpm i request-promise\n```", "```cpp\nclient_id: '-----Paste ClientID Here-----',             client_secret: '-----Paste Client Secret Here-----',\n```", "```cpp\nvar id = \"Paste -----Thing ID-----\"; // {String} The id of the thing\nvar pid = \"-----Property ID-----\"; // {String} The id of the property\n```", "```cpp\nnode main.js\n```", "```cpp\nAPI called successfully. Last Value of Property=259\n```", "```cpp\nvar DeviceProperties = {\n        'name':'Sense Home XIAO Series',\n        'connection_type':'wifi',\n        'fqbn':'esp32:esp32:XIAO_ESP32C3',\n        'type':'login_and_secretkey_wifi'\n    };\n    var options = {\n    };\n    api.devicesV2Create(DeviceProperties, options).then(function(data) {\n      console.log('Device Created successfully. Returned data: ' + util.inspect(data));\n    }, function(error) {\n      console.error(error);\n    });\n```", "```cpp\nnode create-device.js\n```", "```cpp\nDevice Created successfully. Returned data: ArduinoDevicev2 {\n  href: '/iot/v2/devices/e88b84a7-7ad7-4c2b-b79c-ab426e47dc67',\n  id: 'e88b84a7-7ad7-4c2b-b79c-ab426e47dc67',\n  label: 'Login and secret key for wifi device',\n  name: 'Sense Home XIAO Series',\n  serial: '',\n  type: 'login_and_secretkey_wifi',\n  user_id: 'f067c1e9-3ff8-4b9f-a9b4-f8c5c1d0ceb4',\n  fqbn: 'esp32:esp32:XIAO_ESP32C3'\n}\n```", "```cpp\nvar api = new AiotApi.DevicesV2Api();\nvar DeviceID=\"e88b84a7-7ad7-4c2b-b79c-ab426e47dc67\";\nvar DeviceProperties = {\n        'name':'Sense Home WeMos D1 Mini Series',\n        'connection_type':'wifi',\n        'fqbn':'esp8266:esp8266:d1_mini',\n        'type':'login_and_secretkey_wifi'\n};\nvar options = {\n};\napi.devicesV2Update(DeviceID,DeviceProperties, options).then(function(data) {\n      console.log('Device Created successfully. Returned data: ' + util.inspect(data));\n    }, function(error) {\n      console.error(error);\n});\n```", "```cpp\nnode update-device.js\n```", "```cpp\nDevice Updated successfully. Returned data: ArduinoDevicev2 {\n  href: '/iot/v2/devices/e88b84a7-7ad7-4c2b-b79c-ab426e47dc67',\n  id: 'e88b84a7-7ad7-4c2b-b79c-ab426e47dc67',\n  label: 'Login and secret key for wifi device',\n  name: 'Sense Home WeMos D1 Mini Series',\n  serial: '',\n  type: 'login_and_secretkey_wifi',\n  user_id: 'f067c1e9-3ff8-4b9f-a9b4-f8c5c1d0ceb4',\n  created_at: 2023-04-17T00:47:40.700Z,\n  fqbn: 'esp8266:esp8266:d1_mini'\n}\n```", "```cpp\n    var api = new AiotApi.DevicesV2Api();\n    var DeviceID='e88b84a7-7ad7-4c2b-b79c-ab426e47dc67';\n    var options = {\n    };\n    api.devicesV2Delete(DeviceID, options).then(function(data) {\n      console.log('Device Deleted successfully. Returned data: ' + data);\n    }, function(error) {\n      console.error(error);\n    });\n```", "```cpp\nnode delete-device.js\n```", "```cpp\n   var api = new AiotApi.DevicesV2Api()\n   var opts = {\n        'acrossUserIds': true // {Boolean} If true, returns all the devices\n      };\n      api.devicesV2List(opts).then(function(data) {\n        for(var i=0;i<data.length;i++){\n            console.log(\"Device ID:\"+data[i].id+\" Device Name:\"+data[i].name);\n        }\n    }, function(error) {\n      console.error(error);\n    });\n```", "```cpp\nnode list-device.js\n```", "```cpp\nDevice ID:04d8025a-4270-4d7e-aa04-45db87a594f5\nDevice Name:SmartAgriESP32-Sargodha\nDevice ID:5aae7e1f-940b-4426-80ac-1c953839cdb2\nDevice Name:MKR-GSM-1400\nDevice ID:fae0951d-3169-4d6a-a8e5-739c347eafc1\nDevice Name:MKR1500\nDevice ID:ca711f68-6de9-497a-ac45-780219ad2bb8\nDevice Name:Wemos d1 Mini by API Update\nDevice ID:64990519-1833-4bba-b035-978fcaa33466\nDevice Name:MKR1010-Device\nDevice ID:62e8600b-2733-4f24-9654-1fac549af27f\nDevice Name:XIAO-ESP32C3-Pulse-Sensor\nDevice ID:e88b84a7-7ad7-4c2b-b79c-ab426e47dc67\nDevice Name:Sense Home WeMos D1 Mini Series\nDevice ID:b9f3ff20-ebf1-4260-ad16-f434466458ac\nDevice Name:ArduinoNanoRP2040\nDevice ID:047d8316-dcdb-4bf5-af30-4319bb5a5eb0\nDevice Name:Delly\n```", "```cpp\nvar api = new AiotApi.DevicesV2Api()\n    var id = '62e8600b-2733-4f24-9654-1fac549af27f'; // {String} The id of the device\n    var opts = {\n    };\n    api.devicesV2Show(id, opts).then(function(data) {\n      console.log('Device Created successfully. Returned data: ' + util.inspect(data));\n    }, function(error) {\n      console.error(error);\n    });\n```", "```cpp\nnode show-device.js\n```", "```cpp\nArduinoDevicev2 {\n  id: '62e8600b-2733-4f24-9654-1fac549af27f',\n  label: 'Login and secret key for wifi device',\n  name: 'XIAO-ESP32C3-Pulse-Sensor',\n    ……………………………………..\n  thing: ArduinoThing {\n    id: '6b6cd076-5859-4a6d-9b4e-18879893c6cb',\n    name: 'Tracking and notifying Your Heart Rate',\n    ……………………………………..\n    webhook_active: true,\n    webhook_uri: 'https://hooks.zapier.com/hooks/catch/14930971/324me7k/'\n  }\n}\n```", "```cpp\n    var api = new AiotApi.DevicesV2Api()\n    var id = '62e8600b-2733-4f24-9654-1fac549af27f'; // {String} The id of the device\n    var opts = {\n    };\n    api.devicesV2GetProperties(id, opts).then(function(data) {\n      console.log('Device Properties.' + util.inspect(data));\n    }, function(error) {\n      console.error(error);\n    });\n```", "```cpp\nnode properties-device.js\n```", "```cpp\n  Properties: [\n    ArduinoProperty {\n      href: '/iot/v1/things/6b6cd076-5859-4a6d-9b4e-18879893c6cb/properties/b357a513-ad2b-4e1f-a76b-6dac078e36d5',\n      id: 'b357a513-ad2b-4e1f-a76b-6dac078e36d5',\n      name: 'BPM',\n      permission: 'READ_ONLY',\n      thing_id: '6b6cd076-5859-4a6d-9b4e-18879893c6cb',\n      type: 'HEART_BEATS',\n      update_strategy: 'ON_CHANGE',\n      created_at: 2023-03-31T16:41:33.103Z,\n      persist: true,\n      tag: 1,\n      thing_name: 'Tracking and notifying Your Heart Rate',\n      update_parameter: 0,\n      updated_at: 2023-03-31T17:05:19.564Z,\n      variable_name: 'bPM'\n    }\n  ]\n```", "```cpp\n    var api = new AiotApi.ThingsV2Api()\n    var thingCreate = {'name':' Sense the Env Thing Via API'}; // {ThingCreate}\n    var opts = {\n      'force': true // {Boolean} If true, detach device from the other thing, and attach to this thing\n    };\n    api.thingsV2Create(thingCreate, opts).then(function(data) {\n      console.log('Thing Created successfully. Returned data: ' + util.inspect(data));\n    }, function(error) {\n      console.error(error);\n    });\n```", "```cpp\nnode create-thing.js\n```", "```cpp\nThing Created successfully. Returned data: ArduinoThing {\n  href: '/iot/v1/things/d99e244d-f245-4e27-9ead-717e52ac5a96',\n  id: 'd99e244d-f245-4e27-9ead-717e52ac5a96',\n  name: 'Sense the Env Thing Via API',\n  timezone: 'America/New_York',\n  user_id: 'f067c1e9-3ff8-4b9f-a9b4-f8c5c1d0ceb4',\n  created_at: 2023-04-18T16:46:35.767Z,\n  properties_count: 0,\n  updated_at: 2023-04-18T16:46:35.767Z,\n  webhook_active: false\n}\n```", "```cpp\n    var api = new AiotApi.ThingsV2Api()\n    var id = 'd99e244d-f245-4e27-9ead-717e52ac5a96'; // {String} The id of the thing\n    var thingUpdate = {\n        'name':'Sense the Env Thing Via API Update',\n        'timezone':'Asia/Karachi',\n        'device_id':'e88b84a7-7ad7-4c2b-b79c-ab426e47dc67'\n    };\n    var opts = {\n      'force': true // {Boolean} If true, detach device from the other thing, and attach to this thing\n    };\n    api.thingsV2Update(id,thingUpdate, opts).then(function(data) {\n      console.log('Thing Updated successfully. Returned data: ' + util.inspect(data));\n    }, function(error) {\n      console.error(error);\n    });\n```", "```cpp\nnode update-thing.js\n```", "```cpp\nThing Updated successfully. Returned data: ArduinoThing {\n  href: '/iot/v1/things/d99e244d-f245-4e27-9ead-717e52ac5a96',\n  id: 'd99e244d-f245-4e27-9ead-717e52ac5a96',\n  name: 'Sense the Env Thing Via API Update',\n  timezone: 'Asia/Karachi',\n  user_id: 'f067c1e9-3ff8-4b9f-a9b4-f8c5c1d0ceb4',\n  created_at: 2023-04-18T16:46:35.767Z,\n  device_id: 'e88b84a7-7ad7-4c2b-b79c-ab426e47dc67',\n  properties_count: 0,\n  updated_at: 2023-04-18T16:46:35.767Z,\n  webhook_active: false\n}\n```", "```cpp\n    var api = new AiotApi.ThingsV2Api()\n    var id = 'd99e244d-f245-4e27-9ead-717e52ac5a96'; // {String} The id of the thing\n    var thingSketch = {'sketch_version':'v1'}; // {ThingSketch}\n    var opts = {\n    };\n    api.thingsV2CreateSketch(id, thingSketch, opts).then(function(data) {\n      console.log('Thing Sketch Created successfully. Returned data: ' + util.inspect(data));\n    }, function(error) {\n      console.error(error);\n    });\n```", "```cpp\nnode create-sketch-thing.js\n```", "```cpp\nThing Sketch Created successfully. Returned data: ArduinoThing {\n  href: '/iot/v1/things/d99e244d-f245-4e27-9ead-717e52ac5a96',\n  id: 'd99e244d-f245-4e27-9ead-717e52ac5a96',\n  name: 'Sense the Env Thing Via API Update',\n  timezone: 'Asia/Karachi',\n  user_id: 'f067c1e9-3ff8-4b9f-a9b4-f8c5c1d0ceb4',\n  created_at: 2023-04-18T16:46:35.767Z,\n  device_id: 'e88b84a7-7ad7-4c2b-b79c-ab426e47dc67',\n  properties_count: 0,\n  sketch_id: '93297fc6-835d-46b3-89bc-1c6738a8ec7b',\n  updated_at: 2023-04-18T17:10:34.779Z,\n  webhook_active: false\n}\n```", "```cpp\n    var api = new AiotApi.ThingsV2Api()\n    var id = 'ac9fc5fd-a946-406e-983d-715dcc2571b6'; // {String} The id of the thing\n    var opts = {\n      'force': true // {Boolean} If true, detach device from the other thing, and attach to this thing\n    };\n    api.thingsV2Delete(id, opts).then(function(data) {\n      console.log('Thing Deleted successfully. Returned data: ' + data);\n    }, function(error) {\n      console.error(error);\n    });\n```", "```cpp\nnode delete-thing.js\n```", "```cpp\n    var api = new AiotApi.ThingsV2Api()\n    var opts = {\n        'acrossUserIds': false\n    };\n    api.thingsV2List(opts).then(function(data) {\n        for(var i=0;i<data.length;i++){\n            console.log(\"Thing ID:\"+data[i].id+\" Thing Name:\"+data[i].name);\n        }\n      }, function(error) {\n        console.error(error);\n      });\n```", "```cpp\nnode list-thing.js\n```", "```cpp\nThing ID:6b6cd076-5859-4a6d-9b4e-18879893c6cb Thing Name:Tracking and notifying Your Heart Rate\nThing ID:6e3d308c-dfb2-49ad-aa61-998227f214ab Thing Name:Thing Via API-Name-Update\nThing ID:85b04a9c-e335-4842-bf4b-c13f726e0522 Thing Name:AgriStack\nThing ID:8aee742e-4492-423d-9f19-79fec856b917 Thing Name:A portable thing tracker using MKR GSM1400\nThing ID:bf8e11ea-1a78-4f95-b6a0-c6d50b868402 Thing Name:MKR1010 Hello World\nThing ID:d99e244d-f245-4e27-9ead-717e52ac5a96 Thing Name:Sense the Env Thing Via API Update\n```", "```cpp\n    var api = new AiotApi.ThingsV2Api()\n    var thingid='6b6cd076-5859-4a6d-9b4e-18879893c6cb';\n    var opts = {\n    };\n    api.thingsV2Show(thingid, opts).then(function(data) {\n        console.log('API called successfully. Returned data: ' +util.inspect(data));\n      }, function(error) {\n        console.error(error);\n      });\n```", "```cpp\nnode show-thing.js\n```", "```cpp\nAPI called successfully. Returned data: ArduinoThing {\n  name: 'Tracking and notifying Your Heart Rate',\n  timezone: 'Asia/Karachi',\n    ……………………………………..\n  device_fqbn: 'esp32:esp32:XIAO_ESP32C3',\n  device_id: '62e8600b-2733-4f24-9654-1fac549af27f',\n  device_name: 'XIAO-ESP32C3-Pulse-Sensor',\n  device_type: 'login_and_secretkey_wifi',\n  properties: [\n    ArduinoProperty {\n      id: 'b357a513-ad2b-4e1f-a76b-6dac078e36d5',\n      name: 'BPM',\n      permission: 'READ_ONLY',\n      thing_id: '6b6cd076-5859-4a6d-9b4e-18879893c6cb',\n      type: 'HEART_BEATS',\n      update_strategy: 'ON_CHANGE',\n      created_at: 2023-03-31T16:41:33.103Z,\n      last_value: 50,\n    ……………………………………..\n      variable_name: 'bPM'\n    }\n  ],\n  properties_count: 1,\n  sketch_id: 'f490fec5-b62a-41f9-9ff7-2b5c3f2ed7d1',\n  updated_at: 2023-04-01T16:42:47.152Z,\n  webhook_active: true,\n  webhook_uri: 'https://hooks.zapier.com/hooks/catch/14930971/324me7k/'\n}\n```", "```cpp\n    var api = new AiotApi.PropertiesV2Api()\n    var thing_id=\"d99e244d-f245-4e27-9ead-717e52ac5a96\";\n    var property = {\n        'name':'Temperature',\n        'variable_name':'temperature',\n        'permission':\"READ_ONLY\",\n        'persist':true,\n        'type':'TEMPERATURE_C',\n        'update_strategy':'ON_CHANGE'\n    };\n    api.propertiesV2Create(thing_id, property).then(function(data) {\n        console.log('Property Created successfully. Returned data: ' +util.inspect(data));\n      }, function(error) {\n        console.error(error);\n      });\n```", "```cpp\nnode create-property.js\n```", "```cpp\nProperty Created successfully. Returned data: ArduinoProperty {\n  href: '/iot/v1/things/d99e244d-f245-4e27-9ead-717e52ac5a96/properties/c4dc8f92-b62f-44df-9455-74cdd08041bc',\n  id: 'c4dc8f92-b62f-44df-9455-74cdd08041bc',\n  name: 'Temperature',\n  permission: 'READ_ONLY',\n  thing_id: 'd99e244d-f245-4e27-9ead-717e52ac5a96',\n  type: 'TEMPERATURE_C',\n  update_strategy: 'ON_CHANGE',\n  created_at: 2023-04-18T23:49:46.610Z,\n  persist: true,\n  tag: 1,\n  updated_at: 2023-04-18T23:49:46.610Z,\n  variable_name: 'temperature'\n}\n```", "```cpp\n   var api = new AiotApi.PropertiesV2Api()\n    var thing_id=\"d99e244d-f245-4e27-9ead-717e52ac5a96\";\n    var property_id=\"c4dc8f92-b62f-44df-9455-74cdd08041bc\"\n    var property = {\n        'name':'OutdoorTemperature',\n        'variable_name':'outdoorTemperature',\n        'permission':\"READ_ONLY\",\n        'persist':true,\n        'type':'TEMPERATURE_F',\n        'update_strategy':'ON_CHANGE'\n    };\n    api.propertiesV2Update(thing_id,property_id, property).then(function(data) {\n        console.log('Property Updated successfully. Returned data: ' +util.inspect(data));\n      }, function(error) {\n        console.error(error);\n      });\n```", "```cpp\nnode update-property.js\n```", "```cpp\nProperty Updated successfully. Returned data: ArduinoProperty {\n  href: '/iot/v1/things/d99e244d-f245-4e27-9ead-717e52ac5a96/properties/c4dc8f92-b62f-44df-9455-74cdd08041bc',\n  id: 'c4dc8f92-b62f-44df-9455-74cdd08041bc',\n  name: 'OutdoorTemperature',\n  permission: 'READ_ONLY',\n  thing_id: 'd99e244d-f245-4e27-9ead-717e52ac5a96',\n  type: 'TEMPERATURE_F',\n  update_strategy: 'ON_CHANGE',\n  created_at: 2023-04-18T23:49:46.610Z,\n  persist: true,\n  updated_at: 2023-04-18T23:58:07.496Z,\n  variable_name: 'outdoorTemperature'\n}\n```", "```cpp\n    var api = new AiotApi.PropertiesV2Api()\n    var thing_id=\"d99e244d-f245-4e27-9ead-717e52ac5a96\";\n    var property_id=\"c4dc8f92-b62f-44df-9455-74cdd08041bc\";\n    var options = {\n        'force':true\n    };\n    api.propertiesV2Delete(thing_id,property_id, options).then(function(data) {\n        console.log('Property Deleted successfully. Returned data: ' +data);\n      }, function(error) {\n        console.error(error);\n      });\n```", "```cpp\nnode delete-property.js\n```", "```cpp\n    var api = new AiotApi.PropertiesV2Api()\n    var thing_id=\"6b6cd076-5859-4a6d-9b4e-18879893c6cb\";\n    var options = {\n        'showDeleted':true\n    };\n    api.propertiesV2List(thing_id, options).then(function(data) {\n        console.log('Property Updated successfully. Returned data: ' +util.inspect(data));\n      }, function(error) {\n        console.error(error);\n      });\n```", "```cpp\nnode list-property.js\n```", "```cpp\nReturned data: [\n  ArduinoProperty {\n    href: '/iot/v1/things/6b6cd076-5859-4a6d-9b4e-18879893c6cb/properties/b357a513-ad2b-4e1f-a76b-6dac078e36d5',\n    id: 'b357a513-ad2b-4e1f-a76b-6dac078e36d5',\n    name: 'BPM',\n    permission: 'READ_ONLY',\n    thing_id: '6b6cd076-5859-4a6d-9b4e-18879893c6cb',\n    type: 'HEART_BEATS',\n    update_strategy: 'ON_CHANGE',\n    created_at: 2023-03-31T16:41:33.103Z,\n    last_value: 50,\n    persist: true,\n    tag: 1,\n    thing_name: 'Tracking and notifying Your Heart Rate',\n    update_parameter: 0,\n    updated_at: 2023-03-31T17:05:19.564Z,\n    value_updated_at: 2023-04-01T16:43:12.293Z,\n    variable_name: 'bPM'\n  }\n]\n```", "```cpp\nvar api = new AiotApi.DashboardsV2Api();\n    var dashboardprop = {\n        'name':'Dashboard Created via API'\n    };\n    var opts = { };\n    api.dashboardsV2Create(dashboardprop,opts).then(function(data) {\n        console.log('Dashboard Created successfully. Returned data: ' + util.inspect(data));\n        }, function(error) {\n        console.error(error);\n    });\n```", "```cpp\nnode create-dashboard.js\n```", "```cpp\nDashboard Created successfully. Returned data: ArduinoDashboardv2 {\n  id: '5b872702-059c-4895-a677-808981f31588',\n  name: 'Dashboard Created via API',\n  updated_at: 2023-04-19T17:31:39.487Z,\n  created_by: ArduinoDashboardowner {\n    user_id: 'f067c1e9-3ff8-4b9f-a9b4-f8c5c1d0ceb4',\n    username: 'mafzalattari'\n  }\n}\n```", "```cpp\n  var api = new AiotApi.DashboardsV2Api()\n    var dashboard_id=\"5b872702-059c-4895-a677-808981f31588\";\n    var dashboardprop = {\n        'name':'Dashboard Created via API Update'\n    };\n    var opts = {\n    };\n    api.dashboardsV2Update(dashboard_id,dashboardprop, opts).then(function(data) {\n      console.log('Dashboard Updated successfully.'+ util.inspect(data));\n    }, function(error) {\n      console.error(error);\n    });\n```", "```cpp\nnode update-dashboard.js\n```", "```cpp\nDashboard Updated successfully.ArduinoDashboardv2 {\n  id: '5b872702-059c-4895-a677-808981f31588',\n  name: 'Dashboard Created via API Update',\n  updated_at: 2023-04-19T17:39:28.378Z,\n  created_by: ArduinoDashboardowner {\n    user_id: 'f067c1e9-3ff8-4b9f-a9b4-f8c5c1d0ceb4',\n    username: 'mafzalattari'\n  }\n}\n```", "```cpp\n    var api = new AiotApi.DashboardsV2Api()\n    var dashboard_id=\"3681cdbe-ecb2-4237-a834-e3423c6bd8e3\";\n    var opts = {\n    };\n    api.dashboardsV2Delete(dashboard_id, opts).then(function(data) {\n      console.log('Dashboard Deleted successfully.');\n    }, function(error) {\n      console.error(error);\n    });\n```", "```cpp\nnode delete-dashboard.js\n```", "```cpp\n    var api = new AiotApi.DashboardsV2Api()\n    var opts = { };\n    api.dashboardsV2List().then(function(data) {\n      console.log(util.inspect(data));\n    }, function(error) {\n      console.error(error);\n    });\n```", "```cpp\nnode list-dashboard.js\n```", "```cpp\n[\n  ArduinoDashboardv2 {\n    id: '36287c03-5034-4a64-b40a-102740c998c6',\n    name: 'SmartAgri-Sargodha',\n    updated_at: 2023-03-05T11:00:18.395Z,\n    created_by: ArduinoDashboardowner {\n      user_id: 'f067c1e9-3ff8-4b9f-a9b4-f8c5c1d0ceb4',\n      username: 'mafzalattari'\n    },\n    widgets: [\n    ]\n  },\n  ArduinoDashboardv2 {\n    id: '28ea7839-7a81-460e-a871-368d45d82cee',\n    name: 'Tracking and notifying Your Heart Rate Dashboard',\n    updated_at: 2023-04-19T16:41:36.604Z,\n    created_by: ArduinoDashboardowner {\n      user_id: 'f067c1e9-3ff8-4b9f-a9b4-f8c5c1d0ceb4',\n      username: 'mafzalattari'\n    },\n    widgets: [ [ArduinoWidgetv2], [ArduinoWidgetv2] ]\n  },\n]\n```", "```cpp\nvar api = new IotApi.PropertiesV2Api()\n    var thingid = \"8aee742e-4492-423d-9f19-79fec856b917\"; // {String} The id of the thing\n    var propertyid = \"182d7319-5c36-4988-a5b8-ace2df7bd08a\"; // {String} The id of the property\n    var opts = {\n    'showDeleted': false // {Boolean} If true, shows the soft deleted properties\n    };\n    api.propertiesV2Show(thingid, propertyid, opts).then(function(data) {\n    console.log('Last Value of Property=' + data.last_value);\n    }, function(error) {\n    console.error(error);\n    });\n```", "```cpp\nnode get-prop.js\n```", "```cpp\nvar api = new IotApi.PropertiesV2Api()\n    var thingid = \"8aee742e-4492-423d-9f19-79fec856b917\"; // {String} The id of the thing\n    var propertyid = \"182d7319-5c36-4988-a5b8-ace2df7bd08a\"; // {String} The id of the property\n    var propertyValue = {\n        'device_id':'5aae7e1f-940b-4426-80ac-1c953839cdb2',\n        'value':true\n    }; // {PropertyValue}\n    api.propertiesV2Publish(thingid, propertyid, propertyValue).then(function(data) {\n    console.log('Value Published to Property Successfully');\n    }, function(error) {\n    console.error(error);\n    });\n```", "```cpp\nnode set-prop.js\n```"]