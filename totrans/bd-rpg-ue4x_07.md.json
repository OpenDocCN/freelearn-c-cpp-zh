["```cpp\nUPROPERTY( BlueprintReadOnly, EditAnywhere, Category = \"EnemyInfo\" )\n  int32 Gold;\n```", "```cpp\nUPROPERTY(BlueprintReadWrite,EditAnywhere, Category = CharacterInfo)\n  int32 Gold;\n```", "```cpp\ncharacter->Gold = enemyInfo->Gold;\n```", "```cpp\nUGameCharacter* UGameCharacter::CreateGameCharacter(FEnemyInfo* enemyInfo, UObject* outer)\n{\n UGameCharacter* character = NewObject<UGameCharacter>(outer);\n\n character->CharacterName = enemyInfo->EnemyName;\n character->ClassInfo = nullptr;\n\n character->MHP = enemyInfo->MHP;\n character->MMP = 0;\n character->HP = enemyInfo->MHP;\n character->MP = 0;\n\n character->ATK = enemyInfo->ATK;\n character->DEF = enemyInfo->DEF;\n character->LUCK = enemyInfo->Luck;\n character->Gold = enemyInfo->Gold;\n\n character->decisionMaker = new TestDecisionMaker();\n character->isPlayer = false;\n return character;\n}\n```", "```cpp\nint32 GoldTotal;\n```", "```cpp\n#pragma once\n#include \"RPG.h\"\n#include \"GameCharacter.h\"\n\n/**\n * \n */\nenum class CombatPhase : uint8\n{\n CPHASE_Decision,\n CPHASE_Action,\n CPHASE_Victory,\n CPHASE_GameOver,\n};\n\nclass RPG_API CombatEngine\n{\npublic:\n TArray<UGameCharacter*> combatantOrder;\n\n TArray<UGameCharacter*> playerParty;\n TArray<UGameCharacter*> enemyParty;\n\n CombatPhase phase;\n int32 GoldTotal;\n\nprotected:\n UGameCharacter* currentTickTarget;\n int tickTargetIndex;\n bool waitingForCharacter;\n\npublic:\n CombatEngine(TArray<UGameCharacter*> playerParty,\n  TArray<UGameCharacter*> enemyParty);\n ~CombatEngine();\n\n bool Tick(float DeltaSeconds);\n\nprotected:\n void SetPhase(CombatPhase phase);\n void SelectNextCharacter();\n};\n```", "```cpp\nint32 Gold = 0;\n```", "```cpp\nGold += this->enemyParty[i]->Gold;\n```", "```cpp\nfor( int i = 0; i < this->enemyParty.Num(); i++ )\n{\n  if( this->enemyParty[i]->HP <= 0 ) deadCount++;\n  Gold += this->enemyParty[i]->Gold;\n}\n```", "```cpp\nGoldTotal = Gold;\n```", "```cpp\nif (deadCount == this->enemyParty.Num())\n {\n  this->SetPhase(CombatPhase::CPHASE_Victory);\n  GoldTotal = Gold;\n  return false;\n }\n```", "```cpp\nUPROPERTY(EditAnywhere, BlueprintReadWrite, Category = \"Game Data\")\n    int32 GameGold;\n```", "```cpp\nURPGGameInstance* gameInstance = Cast<URPGGameInstance>(GetGameInstance());\n```", "```cpp\ngameInstance->GameGold += this->currentCombatInstance->GoldTotal;\n```", "```cpp\nvoid ARPGGameMode::Tick( float DeltaTime )\n{\n  if( this->currentCombatInstance != nullptr )\n  {\n    bool combatOver = this->currentCombatInstance->Tick( DeltaTime );\n    if( combatOver )\n    {\n      if( this->currentCombatInstance->phase == CombatPhase::CPHASE_GameOver )\n      {\n        UE_LOG( LogTemp, Log, TEXT( \"Player loses combat, game over\" ) );\n\n        Cast<URPGGameInstance>( GetGameInstance() )->PrepareReset();\n\n        UUserWidget* GameOverUIInstance = CreateWidget<UUserWidget>( GetGameInstance(), this->GameOverUIClass );\n        GameOverUIInstance->AddToViewport();\n      }\n      else if( this->currentCombatInstance->phase == CombatPhase::CPHASE_Victory )\n      {\n        UE_LOG( LogTemp, Log, TEXT( \"Player wins combat\" ) );\n        //add gold to total gold\n        URPGGameInstance* gameInstance = Cast<URPGGameInstance>(GetGameInstance());\n        gameInstance->GameGold += this->currentCombatInstance->GoldTotal;\n\n        // enable player actor\n        UGameplayStatics::GetPlayerController( GetWorld(), 0 )->SetActorTickEnabled( true );\n      }\n\n      for( int i = 0; i < this->currentCombatInstance->playerParty.Num(); i++ )\n      {\n        this->currentCombatInstance->playerParty[i]->decisionMaker = nullptr;\n      }\n\n      this->CombatUIInstance->RemoveFromViewport();\n      this->CombatUIInstance = nullptr;\n\n      delete( this->currentCombatInstance );\n      this->currentCombatInstance = nullptr;\n      this->enemyParty.Empty();\n    }\n  }\n}\n```", "```cpp\n#include \"RPG.h\"\n#include \"ItemsData.h\"\n```", "```cpp\n#pragma once\n\n#include \"GameFramework/Actor.h\"\n#include \"ItemsData.generated.h\"\n\n/**\n *\n */\n\nUSTRUCT( BlueprintType )\nstruct FItemsData : public FTableRowBase\n{\n  GENERATED_USTRUCT_BODY()\n\n  UPROPERTY( BlueprintReadOnly, EditAnywhere, Category = \"ItemData\" )\n    int32 HP;\n\n  UPROPERTY( BlueprintReadOnly, EditAnywhere, Category = \"ItemData\" )\n    int32 MP;\n\n  UPROPERTY( BlueprintReadOnly, EditAnywhere, Category = \"ItemData\" )\n    int32 ATK;\n\n  UPROPERTY( BlueprintReadOnly, EditAnywhere, Category = \"ItemData\" )\n    int32 DEF;\n\n  UPROPERTY( BlueprintReadOnly, EditAnywhere, Category = \"ItemData\" )\n    int32 Luck;\n\n  UPROPERTY( BlueprintReadOnly, EditAnywhere, Category = \"ItemData\" )\n    int32 Gold;\n};\n```"]