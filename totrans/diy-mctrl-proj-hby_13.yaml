- en: '*Chapter 13*: COVID-19 Social-Distancing Alert'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第13章*：COVID-19 社交距离警报'
- en: 'When the world celebrated the arrival of the year 2020, a pandemic was arising
    due to a new disease: COVID-19\. With the emergence of this pandemic, all human
    activities were affected to a lesser or greater degree.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 当世界庆祝2020年的到来时，一场由于一种新疾病：COVID-19而引发的流行病正在兴起。随着这种大流行的出现，所有的人类活动都受到了不同程度的影响。
- en: The education sector has been one of the most affected in this sense. All schools
    worldwide temporarily suspended their activities, since the risk of contagion
    in these environments can be very high. After a few months of lockdowns, schools
    around the world gradually began to resume face-to-face activities, following
    rigorous standards of disinfection and protocols to ensure physical distancing
    between students and school staff (Global Education Cluster, 2020).
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个意义上，教育部门是最受影响的之一。全球所有学校都暂时停止了活动，因为这些环境中的感染风险可能非常高。经过几个月的封锁后，全球各地的学校逐渐开始恢复面对面活动，遵循严格的消毒标准和确保学生与学校工作人员之间保持物理距离的协议（Global
    Education Cluster, 2020）。
- en: The recommendation of the **World Health Organization** (**WHO**) for physical
    distancing is to remain at least 1 **meter** (**m**) (3 **feet** (**ft**)) apart
    between people, with 2 m (6 ft) being the most general recommendation to minimize
    the risk of contagion in children (KidsHealth, 2021). This measure is known as
    **social distancing**. Furthermore, technology sometimes acts as a great way to
    enforce these measures.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 世界卫生组织（**WHO**）推荐的物理距离是人与人之间至少保持1 **米**（**m**）（3 **英尺**（**ft**））的距离，2 m（6 ft）是最一般的推荐，以最大限度地减少儿童（KidsHealth,
    2021）感染的风险。这一措施被称为**社交距离**。此外，技术有时可以作为强制执行这些措施的一种很好的方式。
- en: 'In this chapter, you will learn how to create a device that uses microcontroller
    technology to enforce social distancing to help children get used to maintaining
    a safe physical distance. When they are not at a safe physical distance, they
    will receive a sound alert from the device. The device you will create can be
    used by children as a wearable device for daily use by putting it in a case and
    using it as a necklace, as shown in the following screenshot:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，你将学习如何创建一个使用微控制器技术来强制执行社交距离的设备，以帮助孩子们养成保持安全物理距离的习惯。当他们的距离不是安全的物理距离时，他们会从设备那里收到声音警报。你将创建的设备可以作为孩子们日常使用的可穿戴设备，将其放入一个盒子里，用作项链，如下面的截图所示：
- en: '![Figure 13.1 – Wearable social-distancing device for children](img/B16413_Figure_13.1.jpg)'
  id: totrans-5
  prefs: []
  type: TYPE_IMG
  zh: '![图13.1 – 儿童可穿戴社交距离设备](img/B16413_Figure_13.1.jpg)'
- en: Figure 13.1 – Wearable social-distancing device for children
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.1 – 儿童可穿戴社交距离设备
- en: 'In this chapter, we will cover the following main topics:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一章中，我们将涵盖以下主要主题：
- en: Programming a piezoelectric buzzer
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编程压电蜂鸣器
- en: Connecting an ultrasonic sensor to the microcontroller board
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将超声波传感器连接到微控制器板
- en: Writing a program for getting data from the ultrasonic sensor
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写一个从超声波传感器获取数据的程序
- en: Testing the distance meter
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试距离计
- en: By completing this chapter, you will know how to program an electronic measurement
    of distance ranges using an **STM32 Blue Pill board**. You will also learn how
    to play an alarm when the distance is measured as less than 2 m.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 通过完成这一章，你将了解如何使用**STM32 Blue Pill板**编程电子距离范围测量。你还将学习如何在距离测量为小于2 m时播放警报。
- en: Important note
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: This project is only for demonstration and learning purposes. Please do not
    use it as a primary social-distancing alarm for preventing the risk of COVID-19
    contagion.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目仅用于演示和学习目的。请勿将其用作预防COVID-19感染风险的初级社交距离警报。
- en: Technical requirements
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The hardware components that will be needed to develop the social-distancing
    alarm are listed here:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 开发社交距离警报所需的硬件组件列表如下：
- en: One solderless breadboard.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个无焊面包板。
- en: One Blue Pill microcontroller board.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Blue Pill微控制器板。
- en: One ST-LINK/V2 electronic interface is needed for uploading the compiled code
    to the Blue Pill board. Bear in mind that the ST-LINK/V2 interface requires four
    female-to-female jumper wires.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要1个ST-LINK/V2电子接口将编译后的代码上传到Blue Pill板。请注意，ST-LINK/V2接口需要四根母对母跳线。
- en: One HC-SR04 ultrasonic sensor.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个HC-SR04超声波传感器。
- en: One buzzer.
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个蜂鸣器。
- en: Male-to-male jumper wires.
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公对公跳线。
- en: Female-to-male jumper wires.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 母对公跳线。
- en: A power source.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个电源。
- en: Cardboard for the case.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于盒子的纸板。
- en: As usual, you will require the Arduino **integrated development environment**
    (**IDE**) and the GitHub repository for this chapter, which can be found at [https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter13](https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter13)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如往常一样，你需要 Arduino **集成开发环境**（**IDE**）和本章的 GitHub 仓库，该仓库可在[https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter13](https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter13)找到。
- en: 'The Code in Action video for this chapter can be found here: [https://bit.ly/3gS2FKJ](https://bit.ly/3gS2FKJ)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的“代码在行动”视频可在以下链接找到：[https://bit.ly/3gS2FKJ](https://bit.ly/3gS2FKJ)
- en: Let's begin!
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: Programming a piezoelectric buzzer
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编程压电 buzzer
- en: In this section, you will learn what a buzzer is, how to interface it with the
    **STM32 Blue Pill**, and how to write a program to build an alert sound.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将学习 buzzer 是什么，如何将其与 **STM32 Blue Pill** 接口，以及如何编写程序来构建警报声音。
- en: A **piezoelectric buzzer** is a device that generates tones and beeps. It uses
    a piezoelectric effect, which consists of piezoelectric materials converting mechanical
    stress into electricity and electricity into mechanical vibrations. Piezoelectric
    buzzers contain a crystal with these characteristics, which changes shape when
    voltage is applied to it.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**压电 buzzer** 是一种产生音调和蜂鸣声的设备。它使用压电效应，即压电材料将机械应力转换为电，并将电转换为机械振动。压电 buzzer 包含一个具有这些特性的晶体，当施加电压时，它会改变形状。'
- en: 'As has been common in these chapters, you can find a generic breakout module
    that is pretty straightforward to use, as shown in the following screenshot:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如本章其他章节常见，你可以找到一个通用的开发模块，使用起来相当简单，如下截图所示：
- en: '![Figure 13.2 – Piezoelectric buzzer breakout board](img/B16413_Figure_13.2.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.2 – 马达 buzzer 开发板](img/B16413_Figure_13.2.jpg)'
- en: Figure 13.2 – Piezoelectric buzzer breakout board
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.2 – 马达 buzzer 开发板
- en: 'This breakout board connects to the STM32 Blue Pill microcontroller board with
    three pins, outlined as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 此开发板通过三个引脚连接到 STM32 Blue Pill 微控制器板，如下所述：
- en: '**Input/Output** (**I/O**): This pin must be connected to a digital output
    of the microcontroller.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**输入/输出**（**I/O**）：此引脚必须连接到微控制器的数字输出。'
- en: '**Voltage Common Collector** (**VCC**): Pin to supply power to the sensor (**5
    volts**, or **5V**).'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**电压公共收集器**（**VCC**）：为传感器供电的引脚（**5 伏**，或 **5V**）。'
- en: '**Ground** (**GND**): Ground connection.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**地**（**GND**）：地连接。'
- en: Next, you will learn how to interface these pins with the Blue Pill microcontroller
    board.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，你将学习如何将这些引脚与 Blue Pill 微控制器板接口。
- en: Connecting the components
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连接组件
- en: 'You will need a solderless breadboard to connect the buzzer to the STM32 Blue
    Pill microcontroller and a wire to connect the components. Follow these steps:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要一个无焊点面包板来将 buzzer 连接到 STM32 Blue Pill 微控制器板，以及一根线来连接组件。按照以下步骤操作：
- en: You need to place the STM32 Blue Pill and the buzzer into the solderless breadboard
    and leave space in the solderless breadboard to connect the jumper wires.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你需要将 STM32 Blue Pill 和 buzzer 放入无焊点面包板，并在面包板上留出空间以连接跳线。
- en: Connect the GND pin of the sensor to a GND terminal of the SMT32 Blue Pill.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将传感器的 GND 引脚连接到 STM32 Blue Pill 的 GND 端口。
- en: Next, you need to connect the VCC pin to the 5V bus of the STM32 Blue Pill.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你需要将 VCC 引脚连接到 STM32 Blue Pill 的 5V 总线。
- en: 'Finally, connect the I/O pin of the buzzer to pin B12 of the Blue Pill. The
    following screenshot shows all the components connected to the solderless breadboard:'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，将 buzzer 的 I/O 引脚连接到 Blue Pill 的 B12 引脚。以下截图显示了所有连接到无焊点面包板的组件：
- en: '![Figure 13.3 – Piezoelectric buzzer interface to the Blue Pill](img/B16413_Figure_13.3.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.3 – 马达 buzzer 与 Blue Pill 的接口](img/B16413_Figure_13.3.jpg)'
- en: Figure 13.3 – Piezoelectric buzzer interface to the Blue Pill
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.3 – 马达 buzzer 与 Blue Pill 的接口
- en: 'The following screenshot represents all the wiring between the STM32 Blue Pill
    and the piezoelectric buzzer and compiles the steps we just went through:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了 STM32 Blue Pill 和马达 buzzer 之间的所有连线，并汇总了我们刚刚进行的步骤：
- en: '![Figure 13.4 – Circuit for piezoelectric buzzer connection](img/B16413_Figure_13.4.jpg)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![图 13.4 – 压电 buzzer 连接电路](img/B16413_Figure_13.4.jpg)'
- en: Figure 13.4 – Circuit for piezoelectric buzzer connection
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 图 13.4 – 压电 buzzer 连接电路
- en: Up to now, we have explored piezoelectric buzzers and their components and functionality.
    You have also learned how to connect them to an STM32 Blue Pill microcontroller
    board using a solderless breadboard.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经探讨了压电蜂鸣器和它们的组件及功能。你还学习了如何使用无焊面包板将它们连接到STM32 Blue Pill微控制器板。
- en: Now, you are ready to write a program in the C language to reproduce an audible
    alert in the buzzer. Don't forget to use the `STLink` to upload the script to
    the STM32 Blue Pill microcontroller board.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你准备好用C语言编写程序，在蜂鸣器中重现可听警报。不要忘记使用`STLink`将脚本上传到STM32 Blue Pill微控制器板。
- en: 'Let''s start developing a program to play an audible alert with the STM32 Blue
    Pill, as follows:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始开发一个程序，使用STM32 Blue Pill播放可听警报，如下所示：
- en: 'Let''s get started defining which pin of the STM32 Blue Pill card pins will
    be used to play a sound in the buzzer. Run the following code:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们开始定义STM32 Blue Pill卡引脚中哪个引脚将被用于在蜂鸣器中播放声音。运行以下代码：
- en: '[PRE0]'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Next, we will leave the `setup()` part empty. You will not need to initialize
    code for this script.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，我们将留空`setup()`部分。你不需要为此脚本初始化代码。
- en: 'The complete code is in the `loop()` part, as illustrated in the following
    code snippet:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完整的代码位于`loop()`部分，如下代码片段所示：
- en: '[PRE1]'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'We are using two new functions: `tone()` and `noTone()`. Let''s see what their
    functionality is.'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们正在使用两个新函数：`tone()`和`noTone()`。让我们看看它们的功能是什么。
- en: '`tone()` generates a square wave with a specific frequency from a pin. Its
    syntax is `tone(pin, frequency, duration)`, where the `pin` parameter is the pin
    of the Blue Pill to which the buzzer is connected. `frequency` is the frequency
    of the tone in `unsigned int`. The `duration` parameter is the tone''s duration
    in `unsigned long` type.'
  id: totrans-60
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`tone()`函数从一个引脚生成特定频率的方波。其语法是`tone(pin, frequency, duration)`，其中`pin`参数是连接蜂鸣器的Blue
    Pill引脚。`frequency`是音调的频率，以`unsigned int`类型表示。`duration`参数是音调的持续时间，以`unsigned long`类型表示。'
- en: '`noTone()` stops the generation of the square wave that was started with `tone()`.
    An error will not be generated if a tone has not been previously generated. Its
    syntax is `noTone(pin)`, where `pin` is the pin that is generating the tone.'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`noTone()`停止使用`tone()`启动的方波生成。如果没有先前生成音调，则不会生成错误。其语法是`noTone(pin)`，其中`pin`是生成音调的引脚。'
- en: So, the preceding code starts a 1,200 Hz tone and holds it for 250 ms with the
    `delay()` function. Later, it stops it and waits 500 ms to generate a new tone
    during 250 ms, now 800 Hz, and stops it again with the same 500-ms pause. These
    steps are repeated as long as the program is running to simulate an alert sound.
  id: totrans-62
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 因此，前面的代码使用`delay()`函数启动一个1,200 Hz的音调并保持250 ms。随后，它停止音调并等待500 ms，在250 ms内生成一个新的音调，现在为800
    Hz，并再次使用相同的500 ms暂停停止它。这些步骤在程序运行期间重复，以模拟警报声音。
- en: The code for this functionality is now complete. You can find the complete sketch
    in the `Chapter13/buzzer` folder in the GitHub repository.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能的代码现在已完成。你可以在GitHub仓库的`Chapter13/buzzer`文件夹中找到完整的草图。
- en: Let's view how we have advanced our learning. We discovered a component to play
    tones, learned how to connect it to the STM32 Blue Pill microcontroller, and wrote
    the code to play an audible alert.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们查看我们如何进步我们的学习。我们发现了一个播放音调的组件，学习了如何将其连接到STM32 Blue Pill微控制器，并编写了播放可听警报的代码。
- en: The skills you have acquired so far in this section will allow you to create
    other electronic systems that require play and audible alerts. Coming up next,
    we will learn about ultrasonic sensors.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中你获得的所有技能将使你能够创建其他需要播放和可听警报的电子系统。接下来，我们将学习超声波传感器。
- en: Connecting an ultrasonic sensor to the microcontroller board
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将超声波传感器连接到微控制器板
- en: Before moving ahead, we need to learn about the functionality of the HC-SR04
    ultrasonic sensor, how to interface it with the **STM32 Blue Pill**, and how to
    write a program to measure the distance between the sensor and another object.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续前进之前，我们需要了解HC-SR04超声波传感器的功能，如何将其与**STM32 Blue Pill**连接，以及如何编写程序来测量传感器与另一个物体之间的距离。
- en: This sensor emits an ultrasonic wave. When this wave collides with an object,
    the wave is reflected and received by the sensor. When the reflected signal is
    received, the sensor can calculate the time it took to be reflected, and thus
    the distance of the collision object can be measured.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 该传感器发出超声波。当这波与物体碰撞时，波被反射并被传感器接收。当接收到反射信号时，传感器可以计算反射所需的时间，从而测量碰撞物体的距离。
- en: 'The sensor can be seen in the following screenshot:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器可以在以下屏幕截图中看到：
- en: '![Figure 13.5 – Ultrasonic sensor](img/B16413_Figure_13.5.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图13.5 – 超声波传感器](img/B16413_Figure_13.5.jpg)'
- en: Figure 13.5 – Ultrasonic sensor
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.5 – 超声波传感器
- en: 'This sensor board connects to the STM32 Blue Pill microcontroller board with
    four pins, outlined as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 此传感器板通过四个引脚连接到STM32 Blue Pill微控制器板，如下所述：
- en: '**Trigger**: This pin enables the ultrasonic wave.'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**触发**：此引脚启用超声波。'
- en: '**Echo**: This pin receives the reflected wave.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**回声**：此引脚接收反射波。'
- en: '**VCC**: The pin to supply power to the sensor (5V).'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VCC**：为传感器供电的引脚（5V）。'
- en: '**GND**: Ground connection.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GND**：接地连接。'
- en: Next, it's time to interface these pins with the Blue Pill microcontroller.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，是时候将这些引脚与Blue Pill微控制器进行接口连接了。
- en: Connecting the components
  id: totrans-78
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连接组件
- en: 'A solderless breadboard will be required to connect the buzzer to the STM32
    Blue Pill microcontroller and wire to connect the components. Proceed as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 需要使用无焊点面包板将蜂鸣器连接到STM32 Blue Pill微控制器，并使用电线连接组件。按照以下步骤进行：
- en: You need to place the STM32 Blue Pill and the sensor into the solderless breadboard
    and leave space to connect the jumper wires.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您需要将STM32 Blue Pill和传感器放入无焊点面包板，并留出空间连接跳线。
- en: Connect the GND pin of the sensor to a GND terminal of the SMT32 Blue Pill.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将传感器的GND引脚连接到SMT32 Blue Pill的GND端子。
- en: Next, you need to connect the VCC pin to the 5V bus of the STM32 Blue Pill.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，您需要将VCC引脚连接到STM32 Blue Pill的5V总线。
- en: 'Finally, connect the trigger pin of the buzzer to pin C14 and the echo pin
    to the C13 pin of the Blue Pill. The following screenshot shows all the components
    connected to the solderless breadboard:'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，将蜂鸣器的触发引脚连接到C14引脚，将回声引脚连接到Blue Pill的C13引脚。以下截图显示了所有连接到无焊点面包板上的组件：
- en: '![Figure 13.6 – Piezoelectric buzzer interface to the Blue Pill](img/B16413_Figure_13.6.jpg)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![图13.6 – 钛锌电蜂鸣器与Blue Pill的接口](img/B16413_Figure_13.6.jpg)'
- en: Figure 13.6 – Piezoelectric buzzer interface to the Blue Pill
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.6 – 钛锌电蜂鸣器与Blue Pill的接口
- en: 'The following screenshot represents all the wiring between the STM32 Blue Pill
    and the ultrasonic sensor:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了STM32 Blue Pill和超声波传感器之间的所有连线：
- en: '![Figure 13.7 – Circuit for the ultrasonic sensor connection](img/B16413_Figure_13.7.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图13.7 – 超声波传感器连接电路](img/B16413_Figure_13.7.jpg)'
- en: Figure 13.7 – Circuit for the ultrasonic sensor connection
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.7 – 超声波传感器连接电路
- en: Up to now, you have learned how to connect a sensor to the STM32 Blue Pill microcontroller
    board using a solderless breadboard.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，您已经学习了如何使用无焊点面包板将传感器连接到STM32 Blue Pill微控制器板。
- en: Now, you will learn how to write a program in the C language to reproduce an
    audible alert in the buzzer. Don't forget to use the `STLink` to upload the script
    to the STM32 Blue Pill microcontroller board.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您将学习如何用C语言编写程序，在蜂鸣器中产生可听见的警报。别忘了使用`STLink`将脚本上传到STM32 Blue Pill微控制器板。
- en: Writing a program for getting data from the ultrasonic sensor
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写用于获取超声波传感器数据的程序
- en: 'In this section, you will learn how to write a program to gather data from
    the ultrasonic sensor. Let''s start, as follows:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，您将学习如何编写程序以从超声波传感器收集数据。让我们开始，如下所示：
- en: 'First, we will define which pins of the STM32 Blue Pill card will be used to
    read the sensor data. Also, we will declare two variables to save the duration
    of the sound-wave travel and another for calculating the distance traveled, as
    illustrated in the following code snippet:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将定义STM32 Blue Pill卡上哪些引脚将用于读取传感器数据。同时，我们将声明两个变量来保存声波传播的持续时间，另一个用于计算传播的距离，如下所示：
- en: '[PRE2]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The selected pins were the PC13 and PC14 pins (labeled C13 and C14 on the Blue
    Pill).
  id: totrans-95
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选择的引脚是PC13和PC14引脚（在Blue Pill上标记为C13和C14）。
- en: 'Next, in the `setup()` function, begin the serial communication. You will set
    the trigger pin as an output pin and the echo pin as an input pin. We need to
    initialize the trigger in the `LOW` value. The code is illustrated in the following
    snippet:'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在`setup()`函数中，开始串行通信。您需要将触发引脚设置为输出引脚，将回声引脚设置为输入引脚。我们需要将触发引脚初始化为`LOW`值。代码如下所示：
- en: '[PRE3]'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Now, we will code the `loop()` function. We need to start the ultrasonic wave,
    wait 10 **seconds** (**sec**), and turn off the wave. The code is illustrated
    in the following snippet:'
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，我们将编写`loop()`函数。我们需要启动超声波，等待10 **秒**（**sec**），然后关闭超声波。代码如下所示：
- en: '[PRE4]'
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The next step is to read the echo pin of the sensor to know the total travel
    time of the wave. We do this with the `pulseIn()` function and store it in the
    variable we declared at the beginning, for this purpose. To calculate the distance,
    we take the value of the return pulse and divide it by 59 to obtain the distance
    in **centimeters** (**cm**), as illustrated in the following code snippet:'
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下一步是读取传感器的回声引脚，以了解波的往返总时间。我们使用`pulseIn()`函数来完成此操作，并将其存储在最初声明的变量中，为此目的。为了计算距离，我们将返回脉冲的值除以59，以获得**厘米**（**cm**）距离，如下面的代码片段所示：
- en: '[PRE5]'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Finally, you will show the distance value between the sensor and any object
    in front of our device in the serial console, as follows:'
  id: totrans-102
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你将在串行控制台中显示传感器与设备前方任何物体之间的距离值，如下所示：
- en: '[PRE6]'
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: The code for this functionality is now complete. You can find the complete sketch
    in the `Chapter13/ultrasonic` folder in the GitHub repository.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 此功能的代码现在已完成。你可以在GitHub仓库的`Chapter13/ultrasonic`文件夹中找到完整的草图。
- en: At the end of this section, you have learned how to write a program in the C
    language to measure the distance between an object and an ultrasonic sensor connected
    to the STM32.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节结束时，你学习了如何用C语言编写程序来测量连接到STM32的超声波传感器与物体之间的距离。
- en: With these skills, you will be able to develop electronic projects that require
    distance measurement, such as car-reverse-impact prevention.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这些技能，你将能够开发需要距离测量的电子项目，例如汽车倒车防撞。
- en: Testing the distance meter
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试距离计
- en: 'Before testing the distance meter, we will need to wire together the buzzer
    and the ultrasonic sensor to the SMT32 Blue Pill in the solderless breadboard.
    The following screenshot illustrates a complete circuit diagram including the
    STM32, ultrasonic sensor, and buzzer together in the solderless breadboard:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在测试距离计之前，我们需要将蜂鸣器和超声波传感器连接到无焊点面包板上的SMT32 Blue Pill。以下截图展示了包括STM32、超声波传感器和蜂鸣器在内的完整电路图：
- en: '![Figure 13.8 – Full circuit diagram of our social-distancing device](img/B16413_Figure_13.8.jpg)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![图13.8 – 我们社交距离设备的完整电路图](img/B16413_Figure_13.8.jpg)'
- en: Figure 13.8 – Full circuit diagram of our social-distancing device
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.8 – 我们社交距离设备的完整电路图
- en: 'The following screenshot shows how everything should be connected in the actual
    system:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的截图显示了实际系统中所有组件的连接方式：
- en: '![Figure 13.9 – The buzzer and ultrasonic sensor connections](img/B16413_Figure_13.9.jpg)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![图13.9 – 蜂鸣器和超声波传感器的连接](img/B16413_Figure_13.9.jpg)'
- en: Figure 13.9 – The buzzer and ultrasonic sensor connections
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.9 – 蜂鸣器和超声波传感器的连接
- en: 'Now, to complete the connection of the complete social-distancing device, we
    will need to write a new script combining the `Chapter13/buzzer` and `Chapter13/ultrasonic`
    scripts. The new script will be named `Chapter13/distance_meter`. Follow these
    steps:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，为了完成完整社交距离设备的连接，我们需要编写一个新的脚本，该脚本结合了`Chapter13/buzzer`和`Chapter13/ultrasonic`脚本。新脚本将命名为`Chapter13/distance_meter`。按照以下步骤操作：
- en: 'We need to declare the constants and variables of both scripts and add a new
    script to define the safety distance between the sensor device and another object.
    The code to do this is illustrated in the following snippet:'
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们需要声明两个脚本的常量和变量，并添加一个新的脚本以定义传感器设备与另一个物体之间的安全距离。以下代码片段展示了如何实现此操作：
- en: '[PRE7]'
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: For COVID-19 social distancing, we will use 200 cm (2 m).
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于COVID-19社交距离，我们将使用200厘米（2米）。
- en: 'The `setup()` function remains the same as the ultrasonic script, as illustrated
    in the following code snippet:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`setup()`函数与超声波脚本相同，如下面的代码片段所示：'
- en: '[PRE8]'
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Finally, in the `loop()` function, we will include a conditional to verify
    if our social-distancing device is physically separated less than 2 m from another
    person (object). If this is the case, play the audible alert. Here is the code
    to do this:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，在`loop()`函数中，我们将包含一个条件来验证我们的社交距离设备是否与另一个人（物体）物理上分离少于2米。如果是这种情况，播放声音警报。以下是实现此功能的代码：
- en: '[PRE9]'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Now, you can measure social distancing, and it can be possible to use our device
    as a necklace in schools to maintain a safe physical distance, *only as a complement
    to the official safety instructions*.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以测量社交距离，并且我们的设备可以作为学校中的项链使用，以保持安全的物理距离，*仅作为官方安全指南的补充*。
- en: 'To achieve this, we can create a cardboard case and insert our device in it.
    Print the template shown in the following screenshot—you can download this from
    the `Chapter13/cardboard` GitHub folder:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '为了实现这一点，我们可以创建一个纸盒外壳，并将我们的设备插入其中。打印以下截图所示的模板——您可以从`Chapter13/cardboard` GitHub文件夹中下载此模板： '
- en: '![Figure 13.10 – A cardboard-case template for our device](img/B16413_Figure_13.10.jpg)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![图13.10 – 我们设备的纸盒模板](img/B16413_Figure_13.10.jpg)'
- en: Figure 13.10 – A cardboard-case template for our device
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.10 – 我们设备的纸盒模板
- en: 'To better fit our electronic device in the case, it is recommended to change
    the jumper wires used to build the prototype (male-to-male) to male-to-female
    jumper wires and power it with a 5V battery, as shown in the following screenshot:'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地将我们的电子设备放入外壳中，建议将用于构建原型的跳线（公对公）更换为公对母跳线，并使用5V电池供电，如下面的截图所示：
- en: '![Figure 13.11 – Adapted connections to fit into a cardboard-case template](img/B16413_Figure_13.11.jpg)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![图13.11 – 适应纸盒模板的连接](img/B16413_Figure_13.11.jpg)'
- en: Figure 13.11 – Adapted connections to fit into a cardboard-case template
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.11 – 适应纸盒模板的连接
- en: 'Finally, cut and glue the case and put the device we just created into the
    case to create a wearable device, as shown in the following screenshot:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，剪下并粘贴外壳，将我们刚刚创建的设备放入外壳中，以创建一个可穿戴设备，如下面的截图所示：
- en: '![Figure 13.12 – A cardboard-case template for our device](img/B16413_Figure_13.12.jpg)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![图13.12 – 我们设备的纸盒模板](img/B16413_Figure_13.12.jpg)'
- en: Figure 13.12 – A cardboard-case template for our device
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 图13.12 – 我们设备的纸盒模板
- en: Using this device, you will know whether you are at a safe distance to avoid
    possible COVID-19 infections by droplets.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个设备，您将知道您是否处于安全距离，以避免可能的通过飞沫传播的COVID-19感染。
- en: We have reached the end of [*Chapter 13*](B16413_13_Final_NM_ePub.xhtml#_idTextAnchor173).
    Congratulations!
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经到达了[*第13章*](B16413_13_Final_NM_ePub.xhtml#_idTextAnchor173)的结尾。恭喜！
- en: Summary
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: What did we learn in this project? Firstly, we learned how to connect a piezoelectric
    buzzer to our Blue Pill microcontroller board and code a program to play an audible
    alarm. Then, we wrote a program to measure the distance between our electronic
    device and another object.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中我们学到了什么？首先，我们学习了如何将压电蜂鸣器连接到我们的Blue Pill微控制器板，并编写程序以播放可听警报。然后，我们编写了一个程序来测量我们的电子设备与另一个物体之间的距离。
- en: We also learned how to combine the two projects to create a social-distancing
    device that can be used to maintain a safe physical distance in this COVID-19
    pandemic—for example, in schools, because children are more distracted and are
    more friendly and sociable.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还学习了如何将两个项目结合起来，创建一个可以用于在COVID-19大流行期间保持安全物理距离的社交距离设备——例如，在学校，因为孩子们更容易分心，而且更友好、更社交。
- en: It is important to remind you that this project is intended for learning purposes
    and should not be used as a primary alarm for preventing the risk of COVID-19
    contagion in any circumstances. This is mainly because, at this time, we know
    that the main risk is airborne.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 重要的是要提醒您，这个项目是为了学习目的，不应在任何情况下用作预防COVID-19传播风险的初级警报。这主要是因为，目前我们知道主要风险是空气传播的。
- en: In the next chapter, we will learn to build a 20-second hand-washing timer.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何构建一个20秒的手部清洗计时器。
- en: Further reading
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Global Education Cluster. *Safe back to school: a practitioner''s guide*. UNESCO.
    2020:'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 全球教育集群. *安全返校：实践者指南*. 联合国教科文组织. 2020：
- en: '[https://healtheducationresources.unesco.org/library/documents/safe-back-school-practitioners-guide](https://healtheducationresources.unesco.org/library/documents/safe-back-school-practitioners-guide)'
  id: totrans-141
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://healtheducationresources.unesco.org/library/documents/safe-back-school-practitioners-guide](https://healtheducationresources.unesco.org/library/documents/safe-back-school-practitioners-guide)'
- en: 'KidsHealth. *Coronavirus (COVID-19): Social Distancing With Children*. 2021:'
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: KidsHealth. *冠状病毒（COVID-19）：与儿童保持社交距离*. 2021：
- en: '[https://kidshealth.org/en/parents/coronavirus-social-distancing.html](https://kidshealth.org/en/parents/coronavirus-social-distancing.html)'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://kidshealth.org/en/parents/coronavirus-social-distancing.html](https://kidshealth.org/en/parents/coronavirus-social-distancing.html)'
