- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Imagine C++ as a mythical, ancient language, descended from the ones, forged
    in the fires of low-level magic, tempered with the precision of high-level incantations.
    Born out of the need to both control the machine and present an abstraction, it
    is a tool wielded by those who seek to bridge the chasm between raw machine and
    high-level constructs, while still accessing the luxury of modern tools.
  prefs: []
  type: TYPE_NORMAL
- en: Imagine this book as unlike any other you have encountered. The authors have
    embarked on a daring quest, navigating the labyrinthine depths of C++ to shed
    light on its true nature. With courage and precision, they aim to strip away the
    layers of myth and mystery that have long surrounded this fabled language, tackling
    both its triumphs and its perceived flaws.
  prefs: []
  type: TYPE_NORMAL
- en: Approach this book with an open mind, for it promises a journey unlike any other,
    a journey not suited to the faint of heart. The authors dive headfirst into the
    complex reputation of C++, confronting its infamous pointers and intricate memory
    management, and even descending into the depths of low-level C++, where assembly
    reigns and pointers are simply numbers. We look at the different C++s that exist
    out there, at the ecosystem around C++, at how to learn it today, and at the things
    you’d do better to forget about. Through each chapter, we peel back the layers,
    uncovering the underlying logic and elegance within these powerful constructs.
    With stories of C++ legends and a touch of humor (albeit sometimes questionable),
    we aim to keep you engaged while guiding you through both the sublime and the
    absurd. Expect to encounter some of the worst code you’ve ever seen, presented
    intentionally to teach you what not to do, all while illuminating the true potential
    of C++. This is a book designed not just to teach but also to reveal the soul
    of C++ through both its virtues and its pitfalls.
  prefs: []
  type: TYPE_NORMAL
- en: Who this book is for
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This book, with its myth-busting, semi-humorous approach, is perfect for programmers
    who already have a working knowledge of C++ but want to go deeper into its nuances
    and mysteries. It could also appeal to curious learners and computer science students
    who are intrigued by the language’s reputation for both power and complexity.
  prefs: []
  type: TYPE_NORMAL
- en: This audience includes those who appreciate the artistic and philosophical sides
    of programming – developers who don’t just want to use C++ but also understand
    why it works as it does, and the lore behind its most famous (and infamous) features.
    It’s for those who see programming not just as a skill but as a craft, one shaped
    by history, quirks, and even a bit of legend.
  prefs: []
  type: TYPE_NORMAL
- en: What this book covers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[*Chapter 1*](B22235_01.xhtml#_idTextAnchor013) , *C++ Is Very Difficult to
    Learn* , looks at why this is the case: is it the language or is it the teaching
    method? Should we start with low-level features such as pointers and memory management
    first, or would it perhaps be better to start with working examples or with the
    OOP features? Also, does every C++ programmer need to know the same C++? The chapter
    discusses different approaches to learning a language, with a focus on C++, and
    decides whether C++ is still difficult to learn today ... with the right method.
    **[Alex]**'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 2*](B22235_02.xhtml#_idTextAnchor026) , *Every C++ Program Is Standard-Compliant*
    , covers the question that the title suggests. In an ideal world, maybe they would
    be! In reality, every C++ program should be compliant. However, as we discover
    in this chapter, when they stray a little to the left or right, using an obscure
    compiler extension, dabbling in undefined behavior, or relying on a particular
    platform’s quirks, you instantly might find yourself in a tangle of errors only
    decipherable by ancient mystics. So, sure, every C++ program is “compliant” ...
    until it’s not! **[Ferenc]**'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 3*](B22235_03.xhtml#_idTextAnchor037) , *There’s a Single C++, and
    It Is Object-Oriented* , examines different paradigms of organizing code, including
    functional programming, meta programming, and the lesser-known extreme polymorphism.
    **[Alex]**'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 4*](B22235_04.xhtml#_idTextAnchor050) , *The Main() Function is the
    Entry Point to Your Application* , covers the topic mentioned in the title. In
    practice, as we will present in the chapter, the **main()** function is like the
    front door of your application: it’s where everything begins, but if you peek
    behind it, you’ll often find an intricate web of dependencies, libraries, and
    OS-dependent system calls that make reaching it feel more like navigating a maze
    than walking a straightforward path. **[Ferenc]**'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 5*](B22235_05.xhtml#_idTextAnchor061) , *In a C++ Class, Order Must
    There Be* , explores the fact that, sure enough, there must be order in a C++
    class, since problems arise without it! Methods, data members, constructors, a
    place each must find! Yes, flexibility is, but ignored structure cannot be. Respect
    not the ordered members’ order request and crumble the class will! Freedom too
    much, and behavior, undefined, comes, errors, bugs, crashes! Disorder, C++ does
    not tolerate. With sequence respect, harmony reigns! The most important rules,
    this chapter presents, where the specified order of C++ concepts matters. Or it
    might not be specified at all, but still matters. [ **Ferenc** ]'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 6*](B22235_06.xhtml#_idTextAnchor070) , *C++ Is Not Memory-Safe*
    , explores the challenges of memory management in C++, the promise of modern language
    constructs, and their failures, in the context of increased awareness of the general
    public on software reliability. **[Alex]**'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 7*](B22235_07.xhtml#_idTextAnchor079) , *There’s No Simple Way to
    Do Parallelism and Concurrency in C++,* looks at the need for parallelism and
    concurrency, how modern C++ proposes to deal with them, and how the actor model
    can help design parallelism in your products. **[Alex]**'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 8*](B22235_08.xhtml#_idTextAnchor088) , *The Fastest C++ Code Is
    Inline Assembly* , covers a fact we were taught three decades ago. While assembly
    does indeed offer low-level control, modern compilers are highly optimized and
    often generate more efficient code than hand-written assembly, as we will demonstrate
    in the chapter. Indeed, inline assembly can improve performance in some cases,
    but it sacrifices readability and portability, so use it sparingly and only when
    absolutely necessary. **[Ferenc]**'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 9*](B22235_09.xhtml#_idTextAnchor096) , *C++ Is Beautiful* , asserts
    that C++ is indeed beautiful because where else can you find a language so gracefully
    tangled in angle brackets, semicolons, curly braces, and periods? It’s a poetic
    dance of keywords, templates, ancient macros, and overloaded operators, all elegantly
    arranged to make even the most seasoned programmers question their life choices.
    Truly, as the chapter will showcase, C++ syntax is the epitome of beauty, if beauty
    means a riddle wrapped in an enigma, with just a hint of confusion after preprocessing
    again the unpreprocessable. **[Ferenc]**'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 10*](B22235_10.xhtml#_idTextAnchor104) , *There Are No Libraries
    For Modern Programming in C++* , evaluates the need and availability of libraries
    for C++, the challenges of package management, the difficulties in finding libraries
    for your target version and architecture, and the increasing problem of supply
    chain attacks. **[Alex]**'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 11*](B22235_11.xhtml#_idTextAnchor112) , *C++ Is Backward Compatible
    ... Even With C* , explores backward compatibility because, as we will present
    in the chapter, C++ inherits the family heirloom: a messy pile of global variables,
    pointy pointers, and undefined behavior. C++ dutifully keeps these relics alive,
    allowing the two languages to coexist in an awkward, yet somehow functional, embrace.
    Compatibility, indeed, because who doesn’t want the thrill of mixing decades-old
    C code with modern C++? Or with not-so-modern C++? We mean, hey, tradition is
    important, and we must clamber for a living! **[Ferenc]**'
  prefs: []
  type: TYPE_NORMAL
- en: '[*Chapter 12*](B22235_12.xhtml#_idTextAnchor120) , *Rust Will Replace C++*
    , looks at why we have so many programming languages, how Rust fits into the ecosystem
    and what it does well, C++’s answer, and the conditions under which Rust might
    replace C++. **[Alex]**'
  prefs: []
  type: TYPE_NORMAL
- en: To get the most out of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The ideal audience for this book would be intermediate to experienced C++ developers
    and scholastic learners who already have a solid understanding of programming
    fundamentals and are eager to dive deeper into the intricacies of C++.
  prefs: []
  type: TYPE_NORMAL
- en: Professionals working with C++ in real-world applications, those interested
    in optimizing performance through assembly language or advanced compiler techniques,
    and enthusiasts who appreciate the language’s quirks and complexity might find
    the book enjoyable.
  prefs: []
  type: TYPE_NORMAL
- en: Computer science students seeking a more thorough introduction to C++, academics
    in the pursuit of a showcase of the latest modern C++ techniques, or programmers
    who are in the process of learning the language, please consider that this book
    does not cover the beginnings of C++, nor does it include the topic of how to
    learn it. There are books that are definitely much better suited for this task,
    such as *Programming -- Principles and Practice Using C++ (3rd Edition)* by Bjarne
    Stroustrup, the creator of the language (or, well, any other book that works for
    you).
  prefs: []
  type: TYPE_NORMAL
- en: Seasoned C++ developers who want to have an overview of the latest C++ standard,
    language lawyers, or those of you without a sense of humor, or if you are reading
    this book to get an answer to a burning question ... well, there are chances that
    you might not find this book enjoyable at all, since it might not have answers
    to any of your questions. It might not have answers at all. Instead, you might
    discover that after reading it, you end up having even more questions than before.
    For you, I recommend reading through the C++ standard, all your questions have
    an answer there. You have been warned.
  prefs: []
  type: TYPE_NORMAL
- en: '| **Software/hardware covered in** **the book** | **Operating** **system requirements**
    |'
  prefs: []
  type: TYPE_TB
- en: '| Various C++ compilers, which are relevant or not in 2025 | Windows, macOS,
    Linux, or no operating system at all |'
  prefs: []
  type: TYPE_TB
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  prefs: []
  type: TYPE_NORMAL
- en: Download the example code files
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Debunking-CPP-Myths](https://github.com/PacktPublishing/Debunking-CPP-Myths)
    . If there’s an update to the code, it will be updated in the GitHub repository.
  prefs: []
  type: TYPE_NORMAL
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)
    . Check them out!
  prefs: []
  type: TYPE_NORMAL
- en: Conventions used
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are a number of text conventions used throughout this book.
  prefs: []
  type: TYPE_NORMAL
- en: '**Code in text** : Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “The **execve()** system call, after several iterations
    where it leaves the confines of userspace, will end up in the Linux kernel and
    create a **linux_binprm** structure.”'
  prefs: []
  type: TYPE_NORMAL
- en: 'A block of code is set as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Any command-line input or output is written as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Tips or important notes
  prefs: []
  type: TYPE_NORMAL
- en: Appear like this.
  prefs: []
  type: TYPE_NORMAL
- en: Get in touch
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Feedback from our readers is always welcome.
  prefs: []
  type: TYPE_NORMAL
- en: '**General feedback** : If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Errata** : Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Piracy** : If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  prefs: []
  type: TYPE_NORMAL
- en: '**If you are interested in becoming an author** : If there is a topic that
    you have expertise in and you are interested in either writing or contributing
    to a book, please visit [authors.packtpub.com](http://authors.packtpub.com) .'
  prefs: []
  type: TYPE_NORMAL
- en: Share Your Thoughts
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Once you’ve read *Debunking C++ Myths* , we’d love to hear your thoughts! Please
    [click here to go straight to the Amazon review page](https://packt.link/r/1835884792)
    for this book and share your feedback.
  prefs: []
  type: TYPE_NORMAL
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  prefs: []
  type: TYPE_NORMAL
- en: Download a free PDF copy of this book
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Thanks for purchasing this book!
  prefs: []
  type: TYPE_NORMAL
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  prefs: []
  type: TYPE_NORMAL
- en: Is your eBook purchase not compatible with the device of your choice?
  prefs: []
  type: TYPE_NORMAL
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  prefs: []
  type: TYPE_NORMAL
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  prefs: []
  type: TYPE_NORMAL
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  prefs: []
  type: TYPE_NORMAL
- en: 'Follow these simple steps to get the benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: Scan the QR code or visit the link below
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '[![img](img/B22235_QR_Free_PDF.jpg)](https://packt.link/free-ebook/9781835884782)'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://packt.link/free-ebook/9781835884782](https://packt.link/free-ebook/9781835884782)'
  prefs: []
  type: TYPE_NORMAL
- en: Submit your proof of purchase
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
