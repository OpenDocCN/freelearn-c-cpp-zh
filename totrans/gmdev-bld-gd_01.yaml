- en: '1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '1'
- en: Creating Low-Poly Models
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建低多边形模型
- en: Blender is a sophisticated program that has gone through a lot of iterations
    to get to the point where it is now. More and more professionals in different
    industries are investigating it as an alternative to other well-known 3D applications
    out there, such as Maya, 3ds Max, ZBrush, and Modo. Also, Blender happens to be
    a good starting point for hobbyists and people who can’t afford the licensing
    fees of the aforementioned software. Additionally, Blender has a helpful and large
    community that creates courses and tutorials. **Blender Conference** (**BCON**)
    is an annual event where you can meet professionals.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: Blender是一个经过多次迭代才达到现在水平的复杂程序。越来越多的不同行业的专业人士正在将其作为其他知名3D应用程序（如Maya、3ds Max、ZBrush和Modo）的替代品进行调研。此外，Blender对于业余爱好者和负担不起上述软件许可费用的人来说是一个很好的起点。此外，Blender拥有一个有帮助且庞大的社区，该社区创建课程和教程。**Blender
    Conference**（**BCON**）是一个年度活动，您可以在这里见到专业人士。
- en: An important decision you must make before you start creating 3D content with
    any type of software is where you are going to use your assets – this directly
    affects the style and workflow you will follow to accomplish the task. One type
    of workflow is called low-poly modeling, with which you create 3D assets that
    have a minimum number of details.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在您开始使用任何类型的软件创建3D内容之前，您必须做出的一个重要决定是您打算在哪里使用您的资产——这直接影响到您完成任务时将遵循的风格和工作流程。一种工作流程被称为低多边形建模，通过这种建模方式，您可以创建具有最少细节的3D资产。
- en: In this chapter, we’ll discuss why low-poly modeling might be beneficial compared
    to other workflows. Following the advantages, you’ll learn how to create low-poly
    assets using different techniques. We’ll conclude this chapter by introducing
    a few modifiers that might prove indispensable.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将讨论为什么与其它工作流程相比，低多边形建模可能是有益的。在了解优势之后，您将学习如何使用不同的技术创建低多边形资产。我们将通过介绍一些可能证明不可或缺的修改器来结束本章。
- en: 'In this chapter, we will cover the following main topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Understanding low-poly models
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解低多边形模型
- en: Advantages of low-poly models
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 低多边形模型的优势
- en: Creating a low-poly barrel
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 创建低多边形桶
- en: Automating with modifiers
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用修改器自动化
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: To follow the instructions in the chapters that involve Blender, you must install
    the necessary software on your computer. The Blender website – more specifically,
    their download page at [https://www.blender.org/download/](https://www.blender.org/download/)
    – contains instructions and links for your platform. In this book, we are using
    Blender 2.93\. Although version 3.0 will offer interesting and exciting options
    to new and existing Blender users, the current version is more than capable of
    creating game assets for your projects and the topics covered in this book.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 要遵循涉及Blender的章节中的说明，您必须在您的计算机上安装必要的软件。Blender网站——更具体地说，他们的下载页面[https://www.blender.org/download/](https://www.blender.org/download/)——包含了针对您平台的说明和链接。在这本书中，我们使用的是Blender
    2.93。尽管版本3.0将为新用户和现有用户提供有趣和令人兴奋的选项，但当前版本完全能够为您的项目创建游戏资产，并涵盖本书中的主题。
- en: This book uses GitHub to store the code that will be used in the Godot chapters.
    However, the same repository ([https://github.com/PacktPublishing/Game-Development-with-Blender-and-Godot](https://github.com/PacktPublishing/Game-Development-with-Blender-and-Godot))
    also hosts the Blender files used throughout the relevant chapters. Where it makes
    sense, the repository will be structured with `Start` and `Finish` folders inside
    each specific chapter for you to start over or compare your work as you make progress.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用GitHub存储将在Godot章节中使用的代码。然而，相同的仓库（[https://github.com/PacktPublishing/Game-Development-with-Blender-and-Godot](https://github.com/PacktPublishing/Game-Development-with-Blender-and-Godot)）也托管了相关章节中使用的Blender文件。在合理的地方，仓库将包含每个特定章节内的`Start`和`Finish`文件夹，以便您从头开始或比较您的工作进度。
- en: Understanding low-poly models
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解低多边形模型
- en: Simply put, a 3D model is considered to be low-poly when it uses the minimum
    number of polygons to make its most characteristic features, mainly its look and
    feel. However, let’s take a look at them in a little more detail.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，一个3D模型被认为是低多边形的，当它使用最少的面数来制作其最显著的特征，主要是其外观和感觉。然而，让我们更详细地看看它们。
- en: 'In real-time applications such as game engines, your computer’s **central processing
    unit** (**CPU**) and **graphics processing unit** (**GPU**) are responsible for
    processing the visual information you see on the screen. In the last two decades,
    the trend has been leaning heavily toward the GPU side since GPUs are dedicated
    to one main task: processing graphics.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在实时应用，如游戏引擎中，你的计算机的**中央处理器**（**CPU**）和**图形处理器**（**GPU**）负责处理你在屏幕上看到的视觉信息。在过去二十年里，趋势明显倾向于GPU一侧，因为GPU专门用于一项主要任务：处理图形。
- en: GPUs have an advantage over CPUs in that regard, and they don’t discriminate
    between 2D and 3D graphics. However, whereas 2D images contain pixel information,
    3D objects are represented by data that holds the necessary coordinate information
    that defines the object.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在这方面，GPU比CPU有优势，并且它们不会区分2D和3D图形。然而，虽然2D图像包含像素信息，3D对象是由包含定义对象所需坐标信息的数据表示的。
- en: 'Although a cube is still a bunch of pixels after it is rendered on your screen,
    the data that defines the cube is essentially eight points, which are called **vertices**.
    For demonstration purposes, in the following screenshot, Blender’s vertex size
    setting has been changed so that you can see where those vertices are more easily:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管立方体在你屏幕上渲染后仍然是一堆像素，但定义立方体的数据本质上是由八个点组成的，这些点被称为**顶点**。为了演示目的，在以下截图中，Blender的顶点大小设置已被更改，以便你可以更容易地看到这些顶点所在的位置：
- en: '![Figure 1.1 – The eight vertices of a cube ](img/Figure_1.1_B17473.jpg)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![图1.1 – 立方体的八个顶点](img/Figure_1.1_B17473.jpg)'
- en: Figure 1.1 – The eight vertices of a cube
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.1 – 立方体的八个顶点
- en: 'Both cubes are the same object, but it’s possible to render the same eight
    vertices and their relationship with each other in two different ways: one that
    looks like a solid object (on the left) and another that looks transparent (on
    the right). So, keep in mind that vertices are data points that define the shape
    of the object, not how it looks. Later in this chapter, you’ll learn how to make
    objects look different, similar to what’s shown in the preceding screenshot.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这两个立方体是同一个对象，但可以以两种不同的方式渲染相同的八个顶点及其相互关系：一种看起来像一个实体对象（在左侧），另一种看起来是透明的（在右侧）。所以，请记住，顶点是定义对象形状的数据点，而不是它的外观。在本章的后面部分，你将学习如何使对象看起来不同，类似于前面截图所示。
- en: 'Before we discuss what makes a model low-poly, we must understand a few other
    essential parts. You’ve already seen that the vertex is the most crucial component,
    but there are two more concepts you must be aware of:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们讨论是什么使模型成为低多边形之前，我们必须了解一些其他基本部分。你已经看到顶点是至关重要的组成部分，但还有两个概念你必须了解：
- en: Edge
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 边
- en: Face
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 面部
- en: Let’s see how these two relate to a vertex. By doing so, we’ll be on our way
    to understanding what makes a model low-poly.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这些如何与顶点相关联。通过这样做，我们将朝着理解是什么使模型成为低多边形迈进。
- en: Parts of a 3D model
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3D模型的组成部分
- en: An **edge** is what connects two vertices. It’s as simple as that. If you look
    at *Figure 1.1* again, you’ll see that not all the vertices are connected. However,
    when they are connected, it’s called an edge and depicted by Blender with a straight
    line going from one vertex to the other.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**边**是连接两个顶点的部分。就是这样简单。如果你再次查看*图1.1*，你会看到并不是所有的顶点都是连接的。然而，当它们连接时，就称为边，并且Blender通过从一顶点到另一顶点的直线来表示它。'
- en: A **face**, as you may have deduced, is a logical outcome when you arrange vertices
    – or edges – in a certain pattern. For example, a cube or a six-sided die has
    six faces. Although *Figure 1.1* makes it look like you need four edges to make
    a face, there is a simpler way – that is, three edges are enough to form a face.
    So, a triangle is the simplest face, also known as a **polygon**.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**面**，正如你可能已经推断出的，当你以某种模式排列顶点或边时，是一个逻辑结果。例如，一个立方体或六面骰子有六个面。尽管*图1.1*让你看起来需要四个边来形成一个面，但有一个更简单的方法——那就是三个边就足够形成一个面。所以，三角形是最简单的面，也称为**多边形**。'
- en: Low or hi, what’s the difference?
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 低或高，有什么区别？
- en: 'When you are designing a model, you are creating polygons. The density of the
    polygons in a model is what determines whether a model can be considered low-poly.
    The following figure displays one low-poly and one high-poly work sample, courtesy
    of Sketchfab users *MohammadRezae* and *DJS_05*:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 当你设计一个模型时，你正在创建多边形。模型中多边形的密度决定了模型是否可以被认为是低多边形。以下图显示了由Sketchfab用户*MohammadRezae*和*DJS_05*提供的低多边形和高多边形作品样本：
- en: '![Figure 1.2 – An example of a low-poly versus high-poly model ](img/Figure_1.2_B17473.jpg)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图1.2 – 低面片与高面片模型的示例](img/Figure_1.2_B17473.jpg)'
- en: Figure 1.2 – An example of a low-poly versus high-poly model
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.2 – 低面片与高面片模型的示例
- en: You can find a lot of examples of different polygon counts on websites such
    as Sketchfab.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在Sketchfab等网站上找到许多不同面片数量的示例。
- en: In the industry, if you are asking for a model to be designed for you, you may
    want to mention that you want it done in low-poly form. It’s often agreed that
    if you don’t mention this, people will assume it’s going to have as many polygons
    as possible since you would want your models to be as detailed as possible with
    plenty of polygons. So, the distinction is made when you are cutting those polygons
    out, not when you are keeping them in.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在行业中，如果你要求为你设计一个模型，你可能想要提到你希望以低面片形式完成。通常认为，如果你不提这一点，人们会假设它将尽可能多地使用面片，因为你希望你的模型尽可能详细，拥有足够的面片。所以，当你剪掉那些面片时，而不是当你保留它们时，这种区别才会被明确。
- en: Let’s focus on our default cube again. Is it low-poly or hi-poly? It might be
    both. Although we know that only eight vertices are needed to create a cube, we
    could have had many more vertices along the edges that connected the original
    corner vertices. However, it would not have made any difference in the rendered
    result. That being said, it would have taken the computer a lot longer to render
    the same visual result.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再次关注我们的默认立方体。它是低面片还是高面片？它可能两者都是。虽然我们知道只需要八个顶点来创建一个立方体，但我们可以在连接原始角顶点的边缘上有更多的顶点。然而，这并不会对渲染结果产生任何影响。也就是说，电脑将需要更长的时间来渲染相同的视觉效果。
- en: So, as mentioned previously, when your model has just enough polygons to make
    sense of the object you’d like to design, you’ll have a low-poly model.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如前所述，当你的模型只有足够多的面片来理解你想要设计的对象时，你将拥有一个低面片模型。
- en: Although GPUs are fast and they do a fantastic job these days of rendering millions
    of polygons and going low-poly may feel like you are cutting corners, there are
    good reasons why you may not want to have that many polygons in your project.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然GPU现在运行得很快，并且能够出色地渲染数百万个面片，但降低面片数可能感觉像是在走捷径，但有一些很好的理由说明为什么你可能不希望在项目中使用那么多面片。
- en: Advantages of low-poly models
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 低面片模型的优点
- en: 'Here is a quick list of the benefits of following a low-poly modeling practice:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是一个遵循低面片建模实践的益处的快速列表：
- en: Fewer polygons
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 面片更少
- en: Small file size
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 文件尺寸小
- en: A certain artistic style
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一种特定的艺术风格
- en: Easy to prototype
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 容易原型化
- en: No or minimal texturing
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无纹理或纹理最少
- en: Working with fewer polygons certainly means fewer things to change and worry
    about. Shortly, you’ll learn how to create a barrel, and by the end of that exercise,
    your model will have close to a thousand polygons. This number may seem high at
    first but imagine working with a hi-poly barrel model with more than 10,000 polygons.
    So, if you are new to 3D modeling, low-poly modeling is a great place to start.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 使用更少的面片当然意味着需要改变和担心的事情更少。简而言之，你将学习如何创建一个桶形模型，并在完成该练习后，你的模型将接近一千个面片。这个数字一开始可能看起来很高，但想象一下使用一个具有超过10,000个面片的hi-poly桶形模型。因此，如果你是3D建模的新手，低面片建模是一个很好的起点。
- en: Should you decide to alter your models, working with a higher number of polygons
    will force you to be more careful. So, in essence, having fewer polygons is comforting
    since you will feel like you have more control over your creation. Naturally,
    fewer polygons will result in a smaller file size too.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你决定修改你的模型，使用更多的面片数量将迫使你更加小心。所以，本质上，拥有更少的面片是令人安慰的，因为你将感觉你对你的创作有更多的控制。自然地，更少的面片也会导致文件尺寸更小。
- en: 'The artistic style advantage is a non-technical item in the advantages list.
    Nevertheless, it might be an important decision. Let’s focus on *Figure 1.3*,
    for example. You’ll see why lack of detail doesn’t always mean lack of imagination:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 艺术风格优势是优势列表中的一个非技术性项目。尽管如此，它可能是一个重要的决定。让我们专注于*图1.3*，例如。你会看到为什么缺乏细节并不总是意味着缺乏想象力：
- en: '![Figure 1.3 – Low-poly model landscape  ](img/Figure_1.3_B17473.jpg)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![图1.3 – 低面片模型景观](img/Figure_1.3_B17473.jpg)'
- en: Figure 1.3 – Low-poly model landscape
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.3 – 低面片模型景观
- en: Here, you can see just enough details to figure out that there is a church.
    Perhaps this church is looking onto a town square. The mountain tops have some
    snow. Is this a peaceful town that’s appealing to tourists for winter sports?
    Perhaps the townspeople are currently hiding in the church from a villain? Our
    imagination fills in the details. Whatever the case and the game genre is, the
    low-poly aspect of the 3D models doesn’t induce a penalty for creativity. In fact,
    in the last few years, we’ve seen more games with low-poly assets making headlines.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，你可以看到足够的细节，可以判断出这里有一座教堂。也许这座教堂正对着一个城镇广场。山顶有一些雪。这是一个对冬季运动有吸引力的和平小镇吗？也许镇民们目前正在教堂里躲避一个恶棍？我们的想象力填补了细节。无论情况如何，无论游戏类型如何，3D模型的低多边形方面并不会对创造力产生惩罚。事实上，在过去的几年里，我们看到越来越多的使用低多边形资产的游戏成为头条新闻。
- en: If you are working in a small game development team or if you are the only developer,
    you’ll sometimes want to focus on game mechanics first to see if the idea is fun.
    In situations like these, you’ll want to prototype objects quickly so that you
    can embed them into your code. When the model you are working on has a generic
    shape of the object you would like to design and has enough details, then you
    might be done. That’s why it’s a highly sought-after choice among indie developers
    since you can move forward quickly to the next model, then to programming your
    game. In essence, low-poly modeling is like prototyping but it’s a few steps more
    refined than placing a cone for a tree, a cylinder for a barrel, or a cube for
    a crate.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在一个小型游戏开发团队工作，或者你是唯一的开发者，你有时会想先专注于游戏机制，看看这个想法是否有趣。在这些情况下，你将希望快速原型化对象，以便将它们嵌入到你的代码中。当你正在工作的模型具有你想要设计的对象的通用形状并且有足够的细节时，你可能就完成了。这就是为什么它成为独立开发者中高度追捧的选择，因为你可以快速进入下一个模型，然后是编写你的游戏。本质上，低多边形建模就像原型设计，但它比放置一个圆锥体作为树、一个圆柱体作为桶或一个立方体作为箱子要精细几步。
- en: Last on the list is **texturing**. This is a process where you give a certain
    look and feel to your model. A sandy beach usually looks yellow. If it’s a rocky
    beach, then the rocks will most likely have different tones of gray. Thus, it’s
    about mainly applying color information to the surfaces of your model. Sometimes,
    this color information will be complemented by additional data such as reflectivity,
    metallicity, and roughness. We’ll discover all this in the next chapter.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 列表中最后一个是**纹理**。这是一个过程，你给你的模型赋予一定的外观和感觉。沙质海滩通常看起来是黄色的。如果是岩石海滩，那么岩石可能会有不同的灰色调。因此，这主要是将颜色信息应用到你的模型表面。有时，这种颜色信息将由额外的数据补充，例如反射率、金属质感和粗糙度。我们将在下一章中了解所有这些内容。
- en: It’s often said that most things in the computer world are a trade-off. Speed
    versus quality versus price is a common example where you can most likely have
    two out of three but not all three. Despite all the benefits a low-poly workflow
    provides, there are some limitations, but recognizing them will help you to find
    workarounds or plan ahead.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 人们常说，计算机世界中的大多数事物都是一种权衡。速度、质量和价格之间的权衡是一个常见的例子，你很可能只能得到其中的两个，而不是全部三个。尽管低多边形工作流程提供了许多好处，但也有一些局限性，但认识到这些局限性将帮助你找到解决方案或提前规划。
- en: Limitations of low-poly models
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 低多边形模型的局限性
- en: If your models need to show damage such as missing parts along an edge or some
    chunks blown out of a face, then you need to introduce more polygons in those
    areas. This still won’t make it a high-poly model, but you’ve got to consider
    additional polygons if you fancy some dynamic details.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的模型需要显示损坏，如边缘缺失的部分或从表面吹出的某些块，那么你需要在这些区域引入更多的多边形。这仍然不会使其成为高多边形模型，但如果你喜欢一些动态细节，你必须考虑额外的多边形。
- en: Also, if you decide to animate your low-poly models, you’ll need to introduce
    more geometry by adding more polygons in the areas where there will be bending
    and twisting (depending on the model you are animating).
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果你决定为你的低多边形模型动画，你需要在弯曲和扭曲（取决于你正在动画化的模型）的区域添加更多的多边形。
- en: Additionally, since there are fewer polygons, you may have to be creative with
    the lighting of your scene to give the illusion of detail. Although the color
    of the water in *Figure 1.3* is the same throughout the composition, the designer
    used a couple of clever methods to make the scene look more interesting. First,
    the water’s surface looks fractured. This gives the illusion that there is some
    slight movement in this water’s body. Perhaps there is a gentle breeze. Second,
    some of those fractures have a reflective material applied. This makes the surface
    reflect the objects further ahead on the horizon.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，由于多边形较少，你可能需要在场景的照明上发挥创意，以产生细节的错觉。尽管 *图 1.3* 中水的颜色在整个构图中都是相同的，但设计师使用了一些巧妙的方法来使场景看起来更有趣。首先，水的表面看起来是断裂的。这给人一种这种水体内有轻微运动的感觉。也许有一阵轻风。其次，一些断裂处应用了反射材料。这使得表面反射出地平线上更远处的物体。
- en: We’ll look at ways to overcome these limitations in the following chapters,
    but for now, let’s learn how to create a few low-poly models of our own.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在接下来的章节中探讨如何克服这些限制，但就目前而言，让我们学习如何创建一些我们自己的低多边形模型。
- en: Creating a low-poly barrel
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建低多边形桶
- en: Every discipline comes with a few conventions for beginners. If you are learning
    a new programming language, writing “Hello World” to the screen is a classic example.
    Learning how to use 3D modeling software is no different. For example, a barrel,
    a potion bottle, or a donut can be started with basic shapes you are familiar
    with, such as a cylinder, a cone, or a torus, respectively.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 每个学科都有一套适合初学者的惯例。如果你正在学习一门新的编程语言，将“Hello World”输出到屏幕上是一个经典的例子。学习如何使用 3D 建模软件也没有什么不同。例如，一个桶、一个药水瓶或一个甜甜圈都可以从你熟悉的基本形状开始，比如圆柱体、圆锥体或环面。
- en: 'In this section, you’ll learn how to design a barrel but, first, here are a
    few useful shortcuts that will help you navigate around and accomplish the tasks
    we’ll cover in this section:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将学习如何设计一个桶形，但首先，这里有一些有用的快捷键，它们将帮助你在这个章节中导航并完成我们将要介绍的任务：
- en: '**Rotate**: Middle mouse button + drag mouse'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**旋转**：中鼠标按钮 + 拖动鼠标'
- en: '**Zoom**: Scroll mouse wheel forward/backward'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缩放**：向前/向后滚动鼠标滚轮'
- en: '**Move**: *Shift* + *Drag Mouse*'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**移动**：*Shift* + *拖动鼠标*'
- en: Blender is rich with so many shortcuts and it’s possible to change them to your
    liking once you gain more experience. Speaking of shortcuts, this book only lists
    Windows shortcuts. However, when you see the *Ctrl* key mentioned, it’s the *Command*
    key in macOS.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Blender 中有很多快捷键，一旦你积累了更多经验，就可以根据自己的喜好更改它们。说到快捷键，这本书只列出了 Windows 快捷键。然而，当你看到
    *Ctrl* 键时，它指的是 macOS 中的 *Command* 键。
- en: 'When you launch Blender for the first time, you’ll be presented with some options.
    One important option is to decide which mouse button to use to select objects.
    Historically, the right mouse button was the default, but you may find this uncommon.
    If you dismissed that initial screen, and you are not happy with the mouse button
    assignment for the select operation, you can still change it by going to the **Edit**
    menu and selecting **Blender Preferences**. In the **Keymap** section, expand
    the **Preferences** section, as shown in the following screenshot; you’ll be able
    to change a bunch of settings, including **Select with Mouse Button**:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 当你第一次启动 Blender 时，你会看到一些选项。一个重要的选项是决定使用哪个鼠标按钮来选择对象。从历史上看，默认使用的是右鼠标按钮，但你可能会觉得这不太常见。如果你已经关闭了那个初始屏幕，并且对选择操作的鼠标按钮分配不满意，你仍然可以通过转到
    **编辑** 菜单并选择 **Blender 首选项** 来更改它。在 **快捷键** 部分，展开 **首选项** 部分，如图下所示；你将能够更改包括 **使用鼠标按钮选择**
    在内的许多设置：
- en: '![Figure 1.4 – The Preferences window of Blender ](img/Figure_1.4_B17473.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.4 – Blender 的首选项窗口](img/Figure_1.4_B17473.jpg)'
- en: Figure 1.4 – The Preferences window of Blender
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.4 – Blender 的首选项窗口
- en: Speaking of the select button, whichever side you choose, the other side will
    be reserved for moving the **3D cursor** to a new position. A 3D cursor is a visual
    marker you place in the world. When you add new elements to your scene at a particular
    location, or things need to align to a certain point, the 3D cursor will be that
    point. We’ll most likely keep the 3D cursor where it is for most exercises, but
    keep in mind that if the left click is for selection, then the right click is
    for the 3D cursor, and vice versa.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 说到选择按钮，无论你选择哪一侧，另一侧将保留用于将**3D游标**移动到新位置。3D游标是在世界中放置的一个视觉标记。当你需要在特定位置添加新元素，或者需要将某些东西对齐到某个点时，3D游标就是那个点。我们可能会在大多数练习中保持3D游标的位置不变，但请记住，如果左键用于选择，那么右键用于3D游标，反之亦然。
- en: Official manual
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 官方手册
- en: 'Since this book is about game development, we’ll focus on a small and relevant
    portion of Blender. However, sometimes, looking at the official manual might be
    a good idea, especially for shortcuts. The Blender website has a decent user manual:
    [https://docs.blender.org/manual/en/2.93/](https://docs.blender.org/manual/en/2.93/).'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这本书是关于游戏开发的，我们将专注于Blender的一个小而相关的部分。然而，有时候查看官方手册可能是个好主意，特别是对于快捷键。Blender网站有一个不错的用户手册：[https://docs.blender.org/manual/en/2.93/](https://docs.blender.org/manual/en/2.93/)。
- en: 'Modeling is a multi-step process. It involves starting with the basics and
    adding more details as you go. The following is what we’ll do to design a barrel:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 建模是一个多步骤的过程。它涉及从基础开始，并在过程中添加更多细节。以下是我们将如何设计一个桶：
- en: Start with a primitive
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从原始形状开始
- en: Edit the model
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编辑模型
- en: Shape the body
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 塑形身体
- en: Separate the lid
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分离盖子
- en: Finish the body
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完成身体
- en: Place metal rings
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 放置金属环
- en: Finalize the lid
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 完成盖子
- en: The list is merely an example workflow that highlights useful parts of Blender.
    When you gain more experience and find a different order to accomplish what you
    have in mind, you can work in whatever way works for you. However, you are likely
    to start with primitives.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 这个列表仅仅是一个示例工作流程，突出了Blender中的一些有用部分。当你获得更多经验并找到完成你心中想法的不同顺序时，你可以以任何对你有效的方式工作。然而，你很可能会从基本形状开始。
- en: Starting with a primitive
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从原始形状开始
- en: 'A new scene in Blender comes with a cube, a camera, and a light source. Since
    we are going to create a barrel that is more like a cylinder, we should get rid
    of that cube:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Blender中的新场景包含一个立方体、一个相机和一个光源。由于我们将要创建一个更像圆柱体的桶，我们应该去掉那个立方体：
- en: Select the cube and press *X* on your keyboard to delete it.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择立方体，然后在键盘上按*X*键删除它。
- en: Trigger the **Add** menu to the left of the **Object** menu.
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 触发位于**对象**菜单左侧的**添加**菜单。
- en: Select **Cylinder** under the **Mesh** group.
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**网格**组下选择**圆柱体**。
- en: 'The shortcut for adding new objects is *Shift* + *A*, which will bring up the
    same list of options. If you feel like deleting the other default objects, feel
    free to do so since you can always add them later using the **Add** menu. The
    following screenshot shows where you can find it:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 添加新对象的快捷键是*Shift* + *A*，这将显示相同的选项列表。如果你想要删除其他默认对象，请随意操作，因为你总是可以使用**添加**菜单稍后添加它们。以下截图显示了你可以找到它的位置：
- en: '![Figure 1.5 – You can add many types of primitives to your scene ](img/Figure_1.5.alternative.jpg)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图1.5 – 你可以向场景添加许多类型的原始形状](img/Figure_1.5.alternative.jpg)'
- en: Figure 1.5 – You can add many types of primitives to your scene
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.5 – 你可以向场景添加许多类型的原始形状
- en: Once you add the cylinder to your scene, you’ll see that the cylinder comes
    with a lot of side faces; 32 to be exact. For a low-poly barrel, that’s a lot
    of faces that could be cut down by half and you would still have a decent-looking
    barrel.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你将圆柱体添加到场景中，你会看到圆柱体带有许多侧面；确切地说有32个。对于一个低多边形桶，这有很多面可以被减半，而你仍然会得到一个看起来不错的桶。
- en: When you add a new object, a panel will appear at the bottom left of the screen.
    The title of this panel will reflect what you are currently trying to accomplish.
    In this case, it should display **Add Cylinder**. If it looks closed, click the
    title and it’ll expand to show the properties you can alter for your cylinder.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 当你添加一个新对象时，屏幕左下角会出现一个面板。这个面板的标题将反映你当前尝试完成的事情。在这种情况下，它应该显示**添加圆柱体**。如果它看起来是关闭的，点击标题，它将展开以显示你可以更改的圆柱体属性。
- en: 'The default options are all fine except for the number of vertices. However,
    this is also a good chance to play with the values and see the changes reflect
    instantly. While you are doing all this, that panel may disappear if you click
    away from your cylinder. To bring it back, click **Adjust Last Operation** under
    the **Edit** menu. When you feel like you’ve got the hang of editing a new object’s
    properties, you can set the relevant values, as shown in the following screenshot:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 默认选项都很好，除了顶点数量。然而，这也是一个尝试不同值并立即看到变化的好机会。当你做所有这些时，如果你点击离开你的圆柱体，该面板可能会消失。要将其恢复，请点击**编辑**菜单下的**调整最后操作**。当你觉得你已经掌握了编辑新对象属性的方法时，你可以设置相关值，如下面的截图所示：
- en: '![Figure 1.6 – 16 faces will be enough for creating our barrel ](img/Figure_1.6.alternative.jpg)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图1.6 – 16个面就足够创建我们的桶](img/Figure_1.6.alternative.jpg)'
- en: Figure 1.6 – 16 faces will be enough for creating our barrel
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.6 – 16个面就足够创建我们的桶
- en: Adding a primitive such as a cylinder has introduced a new object to your scene.
    You’ve changed its basic properties, such as the number of vertices. That number
    defines how many points are used to make up the top and bottom circles, as shown
    in the preceding screenshot. This was all done at the object level; hence, you’ve
    been working in **Object Mode**. Now, it’s time to dive deeper and edit the finer
    details of this cylinder.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 添加一个如圆柱体这样的原始形状会将一个新对象引入你的场景。你已经更改了它的基本属性，如顶点数量。这个数字定义了构成顶部和底部圆的点的数量，如前面的截图所示。所有这些都是在对象级别完成的；因此，你一直在**对象模式**下工作。现在，是时候深入挖掘并编辑这个圆柱体的更细微的细节了。
- en: Editing the model
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编辑模型
- en: It may seem like every time you change the value of something, you are editing
    the model. However, from Blender’s perspective, not all edits are the same. When
    you start with primitives, there are higher-level operations you can perform such
    as changing the number of vertices that define the general shape of the primitive.
    This is what you have seen and done so far – you’ve been editing objects.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 每次你更改某个值时，可能感觉就像是在编辑模型。然而，从Blender的角度来看，并非所有编辑都是相同的。当你从原始形状开始时，你可以执行更高级的操作，例如更改定义原始形状顶点数量的数量。这正是你所看到并做到的——你一直在编辑对象。
- en: When you want to have more control over the vertices, faces, and edges that
    make up the object, you should switch to another mode that allows you to work
    with these properties so that you can have much more refined control over the
    shape of the model.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 当你想对构成对象的顶点、面和边有更多控制时，你应该切换到另一个模式，这样你就可以使用这些属性，从而可以对模型的形状有更精细的控制。
- en: Mac shortcuts
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Mac快捷键
- en: 'You can always use menus, buttons, and other interface elements to do your
    work, but you’ll eventually depend on shortcuts. If the shortcuts that have been
    mentioned so far don’t work for you, then you may want to check out Blender’s
    manual to find the right combination for your platform: [https://docs.blender.org/manual/en/2.93/interface/keymap/introduction.xhtml](https://docs.blender.org/manual/en/2.93/interface/keymap/introduction.xhtml).'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用菜单、按钮和其他界面元素来完成工作，但最终你将依赖于快捷键。如果之前提到的快捷键对你不起作用，那么你可能需要查看Blender的手册，以找到适合你平台的正确组合：[https://docs.blender.org/manual/en/2.93/interface/keymap/introduction.xhtml](https://docs.blender.org/manual/en/2.93/interface/keymap/introduction.xhtml)。
- en: Select the barrel and press *Tab*. This will turn on **Edit Mode**. If you keep
    pressing the *Tab* key, you'll go back and forth between **Object Mode** and **Edit
    Mode**. You’ll also see that Blender’s UI is either hiding some of the buttons
    and menus or revealing some new ones, depending on which mode is active. This
    means some options are only available in a certain mode. If you are wondering
    where that thing you just saw disappeared, make sure you are in the right mode.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 选择桶并按*Tab*键。这将打开**编辑模式**。如果你继续按*Tab*键，你将在**对象模式**和**编辑模式**之间来回切换。你还会看到，Blender的UI会根据当前激活的模式隐藏一些按钮和菜单或显示一些新的按钮，这意味着某些选项仅在特定模式下可用。这意味着一些选项仅在特定模式下可用。如果你想知道你刚才看到的那东西去哪了，请确保你处于正确的模式。
- en: Then, in **Edit Mode**, press *Ctrl* + *R* to trigger **Loop Cut and Slide**.
    This is a context-sensitive operation, so if you see nothing happening, it’s because
    the mouse is not over a face for this tool to operate. Hover your mouse over different
    parts of the cylinder. You’ll see a yellow line going all the way around; the
    direction of the line depends on where your cursor is on that face. While still
    over one of the side faces, trigger your mouse wheel up twice to increase the
    number of cuts to 3\. This is a preview of the loop cuts, but they are not part
    of the cylinder yet.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，在**编辑模式**下，按*Ctrl* + *R*触发**循环切割和滑动**。这是一个上下文相关的操作，所以如果你没有看到任何动作，那是因为鼠标没有位于该工具可以操作的面。将鼠标悬停在圆柱的不同部分上。你会看到一个黄色的线贯穿整个圆柱；线的方向取决于你的光标在那个面上的位置。当鼠标仍然悬停在侧面面上时，通过将鼠标滚轮向上滚动两次来增加切割数量到
    3。这是循环切割的预览，但它们还不是圆柱的一部分。
- en: 'A loop cut will require two mouse clicks, regardless of how many loops you
    would like to have. With the *first click*, you are telling Blender that you want
    to introduce some cuts; in this case, 3\. The *second click* will finalize the
    position of these cuts, but you can change it by moving your mouse up and down
    along the side of the barrel. So, in between the first and the second click, you
    have some freedom to position the cuts. The following screenshot shows what we
    are after:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 一个循环切割需要两次鼠标点击，无论你想要多少个循环。通过**第一次点击**，你告诉 Blender 你想要引入一些切割；在这种情况下，3。**第二次点击**将最终确定这些切割的位置，但你可以通过在桶的侧面上下移动鼠标来更改它。因此，在第一次和第二次点击之间，你有一些自由度来定位切割。下面的截图显示了我们要达到的效果：
- en: '![Figure 1.7 – Adding more edges with precise values ](img/Figure_1.7.alternative.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.7 – 使用精确值添加更多边](img/Figure_1.7.alternative.jpg)'
- en: Figure 1.7 – Adding more edges with precise values
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.7 – 使用精确值添加更多边
- en: If you accidentally moved your cursor in between two clicks, which would have
    moved the baseline of the cuts, do not worry. Once the edges have been added,
    the operation’s details will be displayed so that you can fine-tune where the
    cuts appear in your model. The important part is to set **Factor** to **0** so
    that you have the perfect cut in the middle. If you made a last moment change
    before you made the cuts, you can also adjust the number of cuts.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你意外地在两次点击之间移动了光标，这可能会移动切割的基线，请不要担心。一旦添加了边缘，操作细节将会显示出来，这样你就可以微调切割在模型中的位置。重要的是将**因子**设置为**0**，以便在中间获得完美的切割。如果你在切割之前最后一刻做了更改，你也可以调整切割的数量。
- en: The main reason why you switched to **Edit Mode** is to have more control over
    the shape of your objects. While still in **Edit Mode**, you’ll now learn how
    to use those loop cuts to give your object the shape of a barrel.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 你切换到**编辑模式**的主要原因是为了更好地控制你对象的形状。在仍然处于**编辑模式**的情况下，你现在将学习如何使用这些循环切割给你的对象一个桶的形状。
- en: Shaping the body
  id: totrans-106
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 成形桶身
- en: A barrel is such a generic concept. However, we have not discussed what kind
    of barrel we will be working on. Technically, we are not too far off from an oil
    barrel since they usually look cylindrical and have two rounded-off ridges. Then,
    there are plastic barrels that you see in gardens for collecting rain. These tend
    to have a plain side with the top and bottom slightly tapered in or with the middle
    section slightly bulging out, depending on which way you look at it.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 桶是一个如此通用的概念。然而，我们还没有讨论我们将要工作的桶的类型。从技术上讲，我们离油桶并不太远，因为它们通常看起来是圆柱形的，并且有两个圆滑的棱。然后，还有你在花园里看到的用于收集雨水的塑料桶。这些桶通常有一个平面的侧面，顶部和底部略微收缩，或者中间部分略微膨胀，具体取决于你从哪个角度看它。
- en: 'We’ll go for a more classic one: a wooden barrel. Since we have the basic shape,
    we can now start adding more details to our barrel. Two things come to mind easily.
    Most barrels have a few metal rings – in the middle, near the bottom, and at the
    top – for enduring the stress of what they are holding. Also, the lid is rarely
    flush with the side but more likely inset, so maybe we should treat that top part
    separately. Let’s start tackling all these one at a time.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将选择一个更经典的桶：木桶。因为我们已经有了基本形状，现在我们可以开始给我们的桶添加更多细节了。两个想法很容易浮现在脑海中。大多数桶都有几个金属环——在中间、靠近底部和顶部——以承受它们所承受的压力。此外，盖子很少与侧面齐平，更可能是内凹的，所以也许我们应该单独处理这部分。让我们一次解决这些问题。
- en: Are your 3D objects looking flat?
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 你的 3D 对象看起来扁平吗？
- en: It’d be nice to have some life in all that gray! If the default look for 3D
    objects feels too flat and you’d rather see the edges emphasized like you see
    them in pictures, here is a trick. There is a button with a down-looking icon
    at the top-right corner of the **3D Viewport**. If you click that button and expand
    the **Viewport Shading** panel, you can switch **Lighting** to **MatCap**, and
    turn on both the **Shadow** and **Cavity** options in the panel. Selecting **Both**
    for the **Cavity** type may also be a good option. Investigate different values
    as you see fit so that you have an easier time working with your models.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果所有这些灰色看起来没有生机！如果你觉得3D对象的默认外观太平，而你更愿意看到边缘像图片中那样被强调，这里有一个技巧。在**3D视图**的右上角有一个向下看的图标按钮。如果你点击该按钮并展开**视图着色**面板，你可以将**照明**切换到**材质球**，并在面板中打开**阴影**和**凹槽**选项。将**凹槽**类型选择为**两者**也可能是一个好选项。根据你的需要调查不同的值，这样你就可以更容易地处理你的模型。
- en: Our barrel needs a belly. We need to make those loops we have just introduced
    wider to create a classic shape for the barrel. With those three edges still selected,
    hit *S*, type `1.1`, and press *Enter* to scale it up by 10%. As usual, the last
    operation’s fine-tuning settings will be shown if you would like to adjust your
    values after finishing the action. Now, we only need to make the middle ring slightly
    larger.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的桶需要一个腹部。我们需要将我们刚刚引入的这些环变宽，以创建桶的经典形状。在仍然选择这三个边缘的情况下，按*S*，输入`1.1`，然后按*Enter*以将其放大10%。像往常一样，如果你在完成操作后想调整值，最后操作的高级调整设置将会显示。现在，我们只需要使中间环稍微大一点。
- en: Although we have been in **Edit Mode** so far, we have not investigated what
    you can edit. In the top-left corner of **3D Viewport** next to the **Edit Mode**
    dropdown, you’ll see *Vertex*, *Edge*, and *Face* icons from left to right. These
    buttons have *1*, *2*, and *3* as shortcuts, respectively.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然我们到目前为止一直在**编辑模式**中，但我们还没有研究你可以编辑的内容。在**3D视图**的左上角，**编辑模式**下拉菜单旁边，从左到右你会看到*顶点*、*边缘*和*面*图标。这些按钮分别有*1*、*2*和*3*作为快捷键。
- en: Switch to **Edge edit mode** by pressing the middle icon or *2*. To create the
    belly for the barrel, you need to select and scale up all the edges that make
    up the middle ring, but you probably don’t want to do that for each edge one by
    one. Thus, we need to look at how to select an **edge loop**.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 通过按下中间图标或*2*切换到**边缘编辑模式**。为了创建桶的腹部，你需要选择并放大组成中间环的所有边缘，但你可能不想逐个对每个边缘进行操作。因此，我们需要看看如何选择**边缘环**。
- en: 'There are two ways to select an edge loop. The first method uses a keyboard
    shortcut:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 选择边缘环有两种方法。第一种方法使用键盘快捷键：
- en: Hold the *Alt* key.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按住*Alt*键。
- en: Click one of the edges.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击一个边缘。
- en: 'This should select all the edges that are connected to the one you’ve just
    clicked, as shown in the following screenshot:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会选择与您刚刚点击的边缘相连的所有边缘，如下面的截图所示：
- en: '![Figure 1.8 – Selecting all the edges that make a loop is easy ](img/Figure_1.8.alternative.jpg)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![图1.8 – 选择构成环的所有边缘很容易](img/Figure_1.8.alternative.jpg)'
- en: Figure 1.8 – Selecting all the edges that make a loop is easy
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.8 – 选择构成环的所有边缘很容易
- en: 'The second way is as follows:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 第二种方法如下：
- en: Select one edge.
  id: totrans-121
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择一个边缘。
- en: Go to the **Select** menu.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 前往**选择**菜单。
- en: Expand **Select Loops** and choose **Edge Loops**.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 展开**选择环**并选择**边缘环**。
- en: 'Whichever way you do this, after you select the middle edge loop, you must
    do the following:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你选择哪种方式，在选择了中间边缘环之后，你必须执行以下操作：
- en: Scale it by pressing *S*.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过按*S*来缩放它。
- en: Type `1.05`.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入`1.05`。
- en: Hit *Enter*.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下*Enter*。
- en: This should result in a classic barrel shape.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会得到一个经典的桶形状。
- en: However, the top face still belongs to the cylinder. Although conceptually,
    a lid might be considered an essential part of a barrel, from an editing perspective,
    it must be treated as a separate object. Let’s learn how to separate parts to
    edit them individually.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，顶部面仍然属于圆柱体。虽然从概念上讲，盖子可能被认为是桶的一个基本部分，但从编辑的角度来看，它必须被视为一个单独的对象。让我们学习如何分离部分以单独编辑它们。
- en: Separating the lid
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分离盖子
- en: 'To create the lid, first, make sure you are still in **Edit Mode**. Switch
    to face select mode by clicking the third icon next to the **Edit Mode** dropdown
    or by pressing *3*. Then, do the following:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建盖子，首先，确保你仍然处于**编辑模式**。通过点击**编辑模式**下拉菜单旁边的第三个图标或按*3*切换到面选择模式。然后，执行以下操作：
- en: Select the top face.
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择顶部面。
- en: Press *P*.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下*P*。
- en: Choose **Selection**.
  id: totrans-134
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**选择**。
- en: This will separate the top face and make it a separate object.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 这将分离顶部面并使其成为一个单独的对象。
- en: 'Alternatively, you can expand the **Separate** group under the **Mesh** menu.
    The following screenshot shows where you can find this option if you are doing
    the separation with the menus:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以在**网格**菜单下的**分离**组中展开。以下截图显示了如果你使用菜单进行分离，你可以找到此选项的位置：
- en: '![Figure 1.9 – Separating things is sometimes necessary and, in fact, helpful
    ](img/Figure_1.9.alternative.jpg)'
  id: totrans-137
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.9 – 分隔事物有时是必要的，实际上也是有益的](img/Figure_1.9.alternative.jpg)'
- en: Figure 1.9 – Separating things is sometimes necessary and, in fact, helpful
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.9 – 分隔事物有时是必要的，实际上也是有益的
- en: Shortcuts
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 快捷键
- en: At this point, you must have noticed that Blender uses a lot of shortcuts. It
    might be difficult to learn and remember all these at the beginning. If you have
    a rough idea about what you’d like to do with the meshes, vertices, edges, and
    such, you should check out the appropriate menus near the top to see what operations
    are available. Pressing a shortcut key will show you just the relevant part of
    those menus, but investigating those menus and looking at the shortcut might be
    a good exercise.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你可能已经注意到 Blender 使用了很多快捷键。一开始可能很难学习和记住所有这些快捷键。如果你对想要对网格、顶点、边等操作有一个大致的想法，你应该查看顶部附近的相关菜单，看看有哪些操作可用。按下一个快捷键将只显示那些菜单的相关部分，但调查这些菜单并查看快捷键可能是一个很好的练习。
- en: For example, the *P* key is used to separate things, but there are three types
    of separation, so you’ll still have to make a final decision on the type. However,
    using the shortcut still takes a shorter time than expanding the menus.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，*P* 键用于分隔事物，但存在三种分隔类型，所以你仍然需要最终决定类型。然而，使用快捷键仍然比展开菜单要快。
- en: 'Now might be a good time to introduce you to **Outliner** in the top-right
    corner. The following screenshot shows all the objects that exist in your scene
    right now:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可能是介绍你认识**大纲**（位于右上角）的好时机。以下截图显示了你现在场景中存在的所有对象：
- en: '![Figure 1.10 – The lid and the body should be two separate objects ](img/Figure_1.10.alternative.jpg)'
  id: totrans-143
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.10 – 盖子和主体应该是两个独立的对象](img/Figure_1.10.alternative.jpg)'
- en: Figure 1.10 – The lid and the body should be two separate objects
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.10 – 盖子和主体应该是两个独立的对象
- en: You can ignore the **Camera** and **Light** objects if you kept them in your
    scene since we’ll discover what those two do later in this book. Over time, when
    you create more objects, you’ll want to label your objects so that you can easily
    find them in **Outliner**.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你保留了场景中的**相机**和**光源**对象，你可以忽略它们，因为我们将在本书的后面部分发现这两个对象的作用。随着时间的推移，当你创建更多对象时，你将想要给你的对象命名，这样你就可以在**大纲**中轻松找到它们。
- en: Let’s try it now. Double-click the label for `Body`. Do the same thing for **Cylinder.001**
    and mark it as *Lid*. You’ll also notice that clicking labels in **Outliner**
    will select the objects in **3D Viewport** and vice versa. Finally, hit that eye
    icon to hide the lid for now. We’ll finalize the lid once we deal with the body.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来试试。双击`主体`的标签。对**Cylinder.001**也做同样的事情，将其标记为**盖子**。你还会注意到，在**大纲**中单击标签将选择**3D
    视口**中的对象，反之亦然。最后，点击那个眼睛图标暂时隐藏盖子。一旦我们处理完主体，我们将最终确定盖子。
- en: Finishing the body
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 完成主体
- en: What would you say is wrong or missing from the body? It looks paper-thin, doesn’t
    it? If only there was a way to stretch each face out or in, and fill in the gaps
    so it looks solid! So far, you’ve been selecting edges and faces. You can follow
    a similar workflow to select some faces, duplicate them, and move them around
    to give thickness to the body. This is tempting, but let’s find an easy way to
    solidify the body.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 你认为桶体有什么问题或缺失的地方？它看起来很薄，不是吗？如果有一种方法可以拉伸每个面，并填充间隙，使其看起来更坚固，那会怎么样！到目前为止，你一直在选择边和面。你可以遵循类似的流程选择一些面，复制它们，并将它们移动到周围以给主体增加厚度。这很有吸引力，但让我们找到一种简单的方法来使主体变得坚固。
- en: For this, you need to enable the **Modifiers** panel. A modifier is a tool that
    offers a non-destructive way to change your objects. You’ll get to read about
    a few of them in the *Automating with modifiers* section.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '对于这个，你需要启用**修改器**面板。修改器是一种提供非破坏性更改对象的方法。你将在*使用修改器自动化*部分了解到其中的一些。 '
- en: 'There is a wrench icon on the right-hand side near **3D Viewport** that is
    going to let you add modifiers. Here are the steps you must take to give substance
    to the barrel’s body:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在**3D 视口**右侧有一个扳手图标，它将允许你添加修改器。以下是你必须采取的步骤，以赋予桶体实质内容：
- en: Switch to **Object Mode**.
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到**对象模式**。
- en: Select the **Body** object.
  id: totrans-152
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**主体**对象。
- en: Open the **Modifiers** panel.
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开**修改器**面板。
- en: Choose **Solidify** from the **Add Modifier** dropdown.
  id: totrans-154
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从**添加修饰符**下拉菜单中选择**实体化**。
- en: 'Modifiers change objects, so even if you are in **Edit Mode**, working with
    a modifier will look as if you are in **Object Mode** for the object you are editing.
    You’ll discover some of the modifiers in that dropdown list later in this chapter.
    For now, the following screenshot shows what the **Solidify** modifier is doing.
    Most things in Blender come with a lot of values to tweak, but you only need to
    change the **Thickness** value in the **Solidify** options for the time being:'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 修饰符会改变对象，所以即使你在**编辑模式**下工作，使用修饰符时也会看起来像你正在**对象模式**下编辑该对象。你将在本章后面部分发现一些修饰符。现在，下面的截图显示了**实体化**修饰符正在做什么。Blender中的大多数东西都附带了很多可以调整的值，但你现在只需要更改**实体化**选项中的**厚度**值：
- en: '![Figure 1.11 – Our barrel is starting to look more solid ](img/Figure_1.11.alternative.jpg)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.11 – 我们的大炮开始看起来更坚固](img/Figure_1.11.alternative.jpg)'
- en: Figure 1.11 – Our barrel is starting to look more solid
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.11 – 我们的大炮开始看起来更坚固
- en: How much `0.03 m` or `0.04 m` might be a good value. You could pick an industry-standard
    thickness or choose a value that looks visually appealing. Depending on the type
    of game you are working on or whether you are creating assets for a client, you
    can pick what works best for the asset.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '`0.03 m`或`0.04 m`的值可能多大才合适。你可以选择行业标准厚度，或者选择一个看起来视觉上吸引人的值。根据你正在制作的游戏类型，或者你是否在为客户创建资产，你可以选择最适合资产的方法。'
- en: A discussion about units
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 关于单位的讨论
- en: Most of the world is using the metric system these days. However, if either
    because it’s the default option or a matter of preference, you may have **Imperial**
    units set up in your Blender copy. Throughout this book, the **Metric** system
    will be utilized. You can find **Units** as a panel inside the fifth tab from
    the top on the right-hand side. This tab contains an icon with a cone, a sphere,
    and what looks like a dot.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，世界上大多数地方都在使用公制系统。然而，如果你是因为默认选项或者个人偏好，你可能在你的Blender副本中设置了**英制**单位。在这本书中，我们将使用**公制**系统。你可以在右侧第五个标签页内找到**单位**面板。这个标签页包含一个圆锥形、一个球体以及看起来像点的图标。
- en: Modifiers are very helpful, but you need to get your hands dirty sometimes.
    This means that there is a limit to what modifiers can do for you. For example,
    we now need to put metal rings around the body. There is no modifier to do this
    for you. Nevertheless, we can still take advantage of modifiers as we go. But,
    first, let’s create some metal rings.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 修饰符非常有帮助，但有时你需要亲自动手。这意味着修饰符能为你做的事情有限。例如，我们现在需要在身体周围放置金属环。没有修饰符能为你做这件事。不过，我们仍然可以利用修饰符。但首先，让我们创建一些金属环。
- en: Placing metal rings
  id: totrans-162
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 放置金属环
- en: 'The barrel now has some substance, but it’s missing metal rings. Creating another
    cylinder and sizing it up so that it looks like a ring is too much work and requires
    precision. There is a simpler method that takes advantage of the barrel’s geometry.
    You’ll be using familiar methods you’ve already seen: loop cuts, loop selection,
    and separation.'
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 现在的大炮有一些实体感，但缺少金属环。创建另一个圆柱体并调整其大小以看起来像环需要太多工作，并且需要精确度。有一个更简单的方法可以利用大炮的几何形状。你将使用你已经看到的一些熟悉的方法：环切、环选择和分离。
- en: While in **Edit Mode**, create a loop cut between the bottom and the first edge
    loop of the body. For the other loop cut, you’ll be creating the cut in between
    the top edges and the loop right below it. In the end, you’ll be creating two
    loop cuts, as shown in the following screenshot
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 在**编辑模式**下，在身体底部和第一个边缘环之间创建一个环切。对于另一个环切，你将在顶部边缘和下面的环之间创建切割。最终，你将创建两个环切，如下面的截图所示
- en: '![Figure 1.12 – Two separate cuts from both ends approaching the middle section
    ](img/Figure_1.12.alternative.jpg)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.12 – 从两端分别切下的两个部分，接近中间部分](img/Figure_1.12.alternative.jpg)'
- en: Figure 1.12 – Two separate cuts from both ends approaching the middle section
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.12 – 从两端分别切下的两个部分，接近中间部分
- en: 'You’ve already seen how to select an edge loop: it involved holding the *Alt*
    key and clicking an edge. You’ll do something very similar except it’ll be for
    selecting a face loop. For this, make sure the face icon is clicked in **Edit
    Mode**. Alternatively, while in **Edit Mode**, you can press *3*.'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经看到了如何选择边缘环：这涉及到按住*Alt*键并点击一个边缘。你将做类似的事情，但这次是为了选择面环。为此，确保在**编辑模式**下点击了面图标。或者，在**编辑模式**下，你可以按*3*。
- en: When you hold the *Alt* key and click an edge, you’ll be selecting the faces
    that are adjacent to that edge you’ve just clicked. It’ll also keep selecting
    the other faces that are in a similar direction to complete a loop. Try it a few
    times with horizontal and vertical edges to see how the loops’ direction changes
    accordingly.
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 当您按住 *Alt* 键并点击一个边缘时，您将选择与您刚才点击的边缘相邻的面。它还会选择其他方向相似的面以完成一个循环。尝试用水平和垂直边缘进行几次操作，看看循环的方向如何相应地改变。
- en: 'What you must do is select all the faces that make up the two rings that are
    close to the top and bottom of the barrel. The following screenshot shows which
    faces should be selected so that you can separate them to form the metal rings:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 您必须做的是选择组成靠近桶体顶部和底部的两个环的所有面。以下截图显示了应该选择哪些面，以便您可以将其分离形成金属环：
- en: '![Figure 1.13 – You’ve got to have something selected so that you can separate
    it ](img/Figure_1.13_B17473.jpg)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.13 – 您必须选择某些内容，以便您可以将其分离](img/Figure_1.13_B17473.jpg)'
- en: Figure 1.13 – You’ve got to have something selected so that you can separate
    it
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.13 – 您必须选择某些内容，以便您可以将其分离
- en: Once you select the first loop, you can hold down *Shift* and repeat the previous
    operation to keep adding more loops to your selection.
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您选择了第一个环，您可以按住 *Shift* 并重复之前的操作，以继续向您的选择中添加更多环。
- en: Now, you are ready to separate those faces. Hit *P* to bring up the **Separate**
    options and choose **Selection**. Now, you can rename the newly created **Ring**
    object. If you go back to **Object Mode**, you’ll see that you can select each
    object individually. Select the ring; you’ll see that the **Solidify** modifier
    still exists for this new object too. Isn’t that handy?
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您已经准备好分离那些面了。按 *P* 键调出 **Separate** 选项并选择 **Selection**。现在，您可以重命名新创建的 **Ring**
    对象。如果您回到 **Object Mode**，您会看到您可以单独选择每个对象。选择环；您会看到这个新对象也存在 **Solidify** 修改器。这不是很方便吗？
- en: The thickness value in the modifier is the same, but what would happen if we
    changed the sign of that value? If you click the `-0.04 m`. As you can see, it’s
    still the same thickness, but in the other direction – it looks like we have those
    metal rings around the body of our barrel finally!
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 修改器中的厚度值是相同的，但如果我们改变该值的符号会发生什么？如果您点击 `-0.04 m`。如您所见，它仍然是相同的厚度，但在相反的方向上——看起来我们终于在我们的桶体周围有了那些金属环！
- en: Now, let’s learn how to add another ring for the middle section. You can follow
    similar steps to create two more loops, one above and one below the center loop.
    However, you can do better.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们学习如何为中间部分添加另一个环。您可以遵循类似的步骤创建两个额外的环，一个在中心环上方，一个在下方。然而，您可以做得更好。
- en: Select the middle edges by conducting an edge loop operation and then triggering
    the **Offset Edge Slide** option under the **Edge** menu or pressing *Shift* +
    *Ctrl* + *R*. This is very similar to **Loop Cut and Slide** but it has two major
    differences. First, this operation will consider an edge as its baseline and move
    the new edges off in opposite directions. Second, you need to click just once
    when you are happy with where the new edges will sit. Choosing **0.1** for the
    **Factor** value in the operation’s properties might be a good number if you’re
    having sensitivity issues with your mouse.
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 通过执行边缘环操作并触发 **Edge** 菜单下的 **Offset Edge Slide** 选项或按 *Shift* + *Ctrl* + *R*
    来选择中间边缘。这与 **Loop Cut and Slide** 非常相似，但它有两个主要区别。首先，此操作将考虑一个边缘为其基线，并将新边缘向相反方向移动。其次，当您对新的边缘位置满意时，您只需点击一次。如果您在使用鼠标时遇到灵敏度问题，将操作属性中的
    **Factor** 值设置为 **0.1** 可能是一个不错的选择。
- en: 'We’ll follow a similar procedure: select and separate. In face edit mode, you
    will use a combination of *Alt* + *Shift* by clicking one of the vertical edges
    sandwiched between your new loops. After you separate the middle faces, you’ll
    be left with an important decision: should you rename your new object and invert
    the direction of thickness in its modifier just like you did for the upper and
    lower rings? In essence, you want your new object to join its fellows. That’s
    exactly what you’ll do next but with a clever trick without repeating yourself.'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将遵循类似的程序：选择和分离。在面编辑模式下，您将通过点击位于您新环之间的一侧垂直边缘，使用 *Alt* + *Shift* 的组合。在您分离中间面之后，您将面临一个重要的决定：您是否应该重命名您的新对象，并在其修改器中反转厚度的方向，就像您为上环和下环所做的那样？本质上，您希望您的新对象与它的同伴结合。这正是您接下来将要做的，但会使用一个巧妙的技巧，而不会重复自己。
- en: Which mode?
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 哪种模式？
- en: During the modeling process, there are times when you’ll need to edit parts
    of your model. In this case, being in **Edit Mode** will be necessary. However,
    when you separate chunks from your models, you’ll most likely want to go back
    to **Object Mode** to do something with this new object. So, going back and forth
    between these two modes will be necessary and feel natural after a while.
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 在建模过程中，有时你需要编辑模型的一部分。在这种情况下，处于 **Edit Mode** 将是必要的。然而，当你从模型中分离出块时，你很可能想回到 **Object
    Mode** 来处理这个新对象。所以，在这些模式之间来回切换将是必要的，并且一段时间后感觉会很自然。
- en: In **Object Mode**, first, you must select the middle ring you have just created.
    You don’t need to rename it; you’ll see why shortly. You must add one more object
    to your selection by holding *Shift* and clicking the ring in **3D Viewport**.
    Make sure your last click is on the ring object you created a while ago. The order
    of clicks matters at this point. The last object you interact with will be considered
    as the active object by Blender. It will be marked with a yellow outline compared
    to orange outlined objects, which are part of the selection but not considered
    active objects.
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 在 **Object Mode** 中，首先，你必须选择你刚刚创建的中间环形。你不需要重命名它；你很快就会明白原因。你必须通过按住 *Shift* 并在
    **3D Viewport** 中点击环形来添加一个额外的对象到你的选择中。确保你的最后一次点击是在你之前创建的环形对象上。在这个时候，点击的顺序很重要。你最后与之交互的对象将被
    Blender 视为活动对象。它将用黄色轮廓标记，与橙色轮廓的对象相比，这些对象是选择的一部分，但不是活动对象。
- en: 'Once you have your rings selected in the correct order, you must join them
    by pressing *Ctrl* + *J*. Did you notice what just happened? Let’s break it down:'
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你以正确的顺序选择了环形，你必须通过按下 *Ctrl* + *J* 来将它们连接起来。你注意到刚才发生了什么吗？让我们来分析一下：
- en: You can no longer see **Body.001** in the **Outliner**
  id: totrans-182
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你在 **Outliner** 中再也看不到 **Body.001** 了
- en: The **Ring** object has accepted **Body.001** into the fellowship
  id: totrans-183
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ring** 对象已将 **Body.001** 接纳为同伴'
- en: The **Ring** object’s **Solidify** modifier has been applied to **Body.001**
  id: totrans-184
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**Ring** 对象的 **Solidify** 修改器已应用于 **Body.001**'
- en: 'There are no longer separate pieces since all those separate parts are now
    considered as one object, as shown in the following screenshot:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 由于所有这些单独的部分现在被视为一个整体，因此不再有单独的部件，如下面的截图所示：
- en: '![Figure 1.14 – One ring to join them all ](img/Figure_1.14_B17473.jpg)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![图 1.14 – 一枚戒指将它们全部连接在一起](img/Figure_1.14_B17473.jpg)'
- en: Figure 1.14 – One ring to join them all
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 图 1.14 – 一枚戒指将它们全部连接在一起
- en: As you get more confident in Blender, you’ll find that you can follow different
    methods to achieve the same result. There is no right or wrong way, but rather
    time-saving habits, and you’ll develop your own since every designer has their
    preferred way of doing things. Sometimes, there are other concerns, technical
    or artistic, that will limit your workflow. However, as a beginner, you should
    observe how other artists are creating similar objects. Luckily, there are plenty
    of examples out there, so learn, experiment, and divert as you go.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 随着你对 Blender 的信心增强，你会发现你可以遵循不同的方法来实现相同的结果。没有正确或错误的方法，而是节省时间的习惯，你将发展出自己的习惯，因为每个设计师都有他们做事的偏好方式。有时，其他技术或艺术上的考虑会限制你的工作流程。然而，作为一个初学者，你应该观察其他艺术家是如何创建类似对象的。幸运的是，有很多例子可以参考，所以学习、实验，并在过程中进行创新。
- en: Earlier, you had to separate the lid. After that, you made changes to the body
    and even added rings. Now, it’s time to put a lid on your barrel.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 之前，你需要分开盖子。之后，你对主体进行了修改，甚至添加了环形。现在，是时候给你的桶盖上盖子了。
- en: Finalizing the lid
  id: totrans-190
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 完成盖子的制作
- en: 'If you hid the lid once you separated it, you can click the eye icon in **Outliner**
    to turn it on. You need to do a basic scale operation to put the lid in its place.
    To achieve this, first, select the lid, and then do the following:'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你分开盖子后将其隐藏，你可以点击 **Outliner** 中的眼睛图标来打开它。你需要进行基本的缩放操作来将盖子放置到正确的位置。为了实现这一点，首先，选择盖子，然后执行以下操作：
- en: Press *S*.
  id: totrans-192
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下 *S* 键。
- en: Type in `0.96`.
  id: totrans-193
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入 `0.96`。
- en: Press *Enter*.
  id: totrans-194
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下 *Enter*。
- en: Why such a precise value? Because we’ve been using `0.04 m` in the **Solidify**
    modifier. So, we should reduce the scale of the lid by 4%. This will save us from
    the trouble of lining up all the edges of the lid so that they are flush with
    the inner side of the barrel. If you have been using a different value in your
    modifier, you’ve got to compensate your scale value in this step so that both
    add up to 1 in the end.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么是这样一个精确的值？因为我们一直在使用 **Solidify** 修改器中的 `0.04 m`。所以，我们应该将盖子的比例减少 4%。这将使我们免于对齐盖子的所有边缘，使它们与桶的内侧齐平。如果你在你的修改器中使用了不同的值，你必须在这个步骤中补偿你的比例值，以便最终两者相加等于
    1。
- en: 'You’ve done it! With the lid in the right place and looking just below the
    rim level, the barrel is complete. Check out the following screenshot and compare
    it to your creation:'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 你做到了！当盖子放在正确的位置，看起来正好在边缘水平以下时，桶就完成了。查看以下截图，并将其与你的作品进行比较：
- en: '![Figure 1.15 – A wooden – rather gray – barrel in its glory ](img/Figure_1.15_B17473.jpg)'
  id: totrans-197
  prefs: []
  type: TYPE_IMG
  zh: '![图1.15 – 一只木制的——相当灰的——桶，光彩照人](img/Figure_1.15_B17473.jpg)'
- en: Figure 1.15 – A wooden – rather gray – barrel in its glory
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.15 – 一只木制的——相当灰的——桶，光彩照人
- en: If you decide to create this barrel from scratch again, perhaps you can place
    the upper ring close to the lid, and the lower ring at the bottom. Placing five
    rings is also a possibility, but you may want to adjust the height of each ring
    in case the composition looks busy.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你决定再次从头开始创建这个桶，也许你可以将上环放在盖子附近，下环放在底部。放置五个环也是可能的，但你可能需要调整每个环的高度，以防组合看起来过于杂乱。
- en: So far, you have used one modifier, and it has served you well. Let’s dive into
    more modifiers and see how powerful they can be.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，你已经使用了一个修饰符，并且它已经很好地为你服务了。让我们深入了解更多的修饰符，看看它们可以有多么强大。
- en: Automating with modifiers
  id: totrans-201
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用修饰符自动化
- en: A modifier is a non-destructive way of applying an operation to change an object’s
    geometry. This is often preferred when you don’t want to take repetitive steps
    or the operation is complex enough that you don’t want to directly alter the object’s
    geometry.
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: 修饰符是一种非破坏性的方法，可以将操作应用于对象以改变其几何形状。当你不想重复执行步骤或操作足够复杂以至于不想直接改变对象的几何形状时，这通常是一个更好的选择。
- en: When you applied the **Solidify** modifier, you must have seen that there are
    so many other modifiers. Could you imagine what you can do with each one? How
    about you use a few modifiers in a row? Yes, you read that right. You can stack
    up many modifiers and create complex shapes with little effort.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 当你应用了**实体化**修饰符时，你可能已经看到还有很多其他的修饰符。你能想象每个修饰符能做什么吗？你打算连续使用几个修饰符吗？是的，你没有看错。你可以堆叠很多修饰符，并且几乎不费吹灰之力地创建出复杂的形状。
- en: 'However, there is an important detail you must pay attention to – their order
    matters! New modifiers are always added at the bottom, and they work in conjunction
    with the previous modifiers in the stack. Thus, the effect is compounding. If
    you logically stack your modifiers, you could create something as complex as what’s
    shown in the following screenshot with only a few primitive objects in no time:'
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，有一个重要的细节你必须注意——它们的顺序很重要！新的修饰符总是添加到堆栈的底部，并且它们与堆栈中之前的修饰符一起工作。因此，效果是累积的。如果你逻辑地堆叠你的修饰符，你可以在很短的时间内仅使用几个原始对象就创建出像以下截图中显示的如此复杂的形状：
- en: '![Figure 1.16 – Modifiers help you create something this complex easily ](img/Figure_1.16_B17473.jpg)'
  id: totrans-205
  prefs: []
  type: TYPE_IMG
  zh: '![图1.16 – 修饰符帮助你轻松创建出如此复杂的形状](img/Figure_1.16_B17473.jpg)'
- en: Figure 1.16 – Modifiers help you create something this complex easily
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 图1.16 – 修饰符帮助你轻松创建出如此复杂的形状
- en: 'This object is using primitives such as cylinders and cubes, but the result
    looks interesting. This is thanks to a hefty list of modifiers and the order that
    they’ve been used. Some of the modifiers have been applied multiple times with
    different values, but here is a list:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 这个对象使用了诸如圆柱体和立方体这样的原始形状，但结果看起来很有趣。这要归功于一个长长的修饰符列表以及它们的使用顺序。一些修饰符已经以不同的值应用了多次，但这里有一个列表：
- en: '**Subdivision**'
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**细分**'
- en: '**Decimate**'
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**减少**'
- en: '**Boolean**'
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**布尔运算**'
- en: '**Bevel**'
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**斜面**'
- en: '**Mirror**'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**镜像**'
- en: '**Weighted Normal**'
  id: totrans-213
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加权法线**'
- en: 'At the time of writing, Blender has over 50 modifiers. Describing each would
    fill a book. Most likely, you’ll stick with the modifiers that are in the **Generate**
    category. Here is a set of modifiers you’ll use most of the time:'
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，Blender 有超过 50 个修饰符。描述每一个可能会填满一本书。你很可能会坚持使用**生成**类别中的修饰符。以下是一组你将经常使用的修饰符：
- en: '**Boolean**: This is one of those modifiers that is used a lot and it comes
    in three sub-modes:'
  id: totrans-215
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**布尔运算**：这是那些经常使用且包含三种子模式的修饰符之一：'
- en: '**Difference**: Subtracts the value of one object from another'
  id: totrans-216
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**差异**：从一个对象的值中减去另一个对象的值'
- en: '**Union**: Will combine both objects'
  id: totrans-217
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**并集**：将两个对象合并'
- en: '**Intersect**: Will only keep what’s common in both meshes'
  id: totrans-218
  prefs:
  - PREF_IND
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**交集**：只保留两个网格共有的部分'
- en: '**Bevel**: Sometimes, you want to have more detail, especially along sharp
    edges so that they don’t look too harsh – the more surface there is for the light
    sources to reflect on, the more realistic it’ll look to the eye. This modifier
    will also work on vertices if you want to soften those sharp corners.'
  id: totrans-219
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**斜面**: 有时候，你可能想要更多的细节，尤其是在尖锐的边缘，这样它们看起来不会太生硬——光源可以反射的表面越多，眼睛看起来就越真实。如果你想要软化那些尖锐的角落，这个修改器也可以应用于顶点。'
- en: '**Array**: This makes copies of the object it’s assigned to in different axes,
    with or without some offset if you wish. You could have a fixed number of copies
    or fill a particular length with as many copies as you can fit in that distance.'
  id: totrans-220
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**阵列**: 这会在不同的轴上复制分配给它的对象，如果你愿意，可以带有一些偏移。你可以有固定数量的副本，或者用尽可能多的副本填充特定的长度。'
- en: '**Mirror**: This is like the **Array** modifier except it creates one copy
    along the axis you select. You can pick multiple axes. Thus, it’s possible to
    start with only a quarter of the object and mirror it on the *X* and *Y* axis
    so that you have one whole object. This allows you to keep your changes to a minimum
    in the original quarter so that you can mirror your changes to the rest of the
    mesh.'
  id: totrans-221
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**镜像**: 这就像**阵列**修改器一样，但它沿着你选择的轴创建一个副本。你可以选择多个轴。因此，你可以从一个对象的四分之一开始，并在X轴和Y轴上镜像它，这样你就有了一个完整的对象。这允许你将更改保持在原始四分之一的最小范围内，以便你可以将更改镜像到网格的其余部分。'
- en: When you add your modifiers, it’s sometimes not obvious which order you should
    stack them in. Luckily, it’s possible to change their order or temporarily disable
    them by using the buttons that are part of the modifier’s header.
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 当你添加修改器时，有时并不明显应该按什么顺序堆叠它们。幸运的是，你可以通过使用修改器标题部分中的按钮来改变它们的顺序或暂时禁用它们。
- en: 'While creating rings for the barrel, you could have used a different technique
    to achieve the same result: **extrusion**. This would require you to select what
    needs to be extruded – in this case, all the faces that make up the ring – and
    extrude along each face’s outward-facing direction. Extrusion, in essence, is
    a technical term for moving vertices, faces, or edges.'
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建桶的环时，你可以使用不同的技术来达到相同的结果：**挤出**。这需要你选择需要挤出的内容——在这种情况下，构成环的所有面——并沿着每个面的外向方向挤出。本质上，挤出是一个术语，用于移动顶点、面或边。
- en: Modifiers have a big advantage compared to classic methods such as pushing and
    pulling vertices and faces around. Wouldn’t it be convenient to come back later
    and fine-tune your changes further? If you happen to select the lid now and come
    back to the **Body** object, the modifier will still be there. You won’t have
    this kind of flexibility with permanent mesh modifying techniques such as extrusion.
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: 与经典方法（如推拉顶点和面）相比，修改器有一个很大的优势。如果你稍后回来进一步微调你的更改，这不是很方便吗？如果你现在选择了盖子，然后回到**主体**对象，修改器仍然会在那里。你不会在永久网格修改技术（如挤出）中有这种灵活性。
- en: Summary
  id: totrans-225
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, you learned about the benefits of low-poly modeling. Then,
    you created a wooden barrel from a primitive cylinder and incorporated modifiers.
    Although textures may give a more realistic look to your models, you also know
    you can do without them.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你了解了低多边形建模的好处。然后，你从一个原始圆柱体创建了一个木桶，并加入了修改器。尽管纹理可以使你的模型看起来更真实，但你也知道你可以不使用它们。
- en: As an exercise, feel free to create a potion bottle. You can start with a cylinder,
    just like you did for the barrel. The loop cuts and the scaling down values will
    be different to give it a conical shape. This is your chance to practice modifiers.
    A finished potion bottle is waiting for you in this book’s GitHub repository if
    you want to see a finished example and compare yours.
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: 作为练习，你可以自由地创建一个药水瓶。你可以从一个圆柱体开始，就像你为桶做的那样。通过切割环和调整缩放值，你可以给它一个锥形形状。这是你练习修改器的机会。如果你想看看完成的例子并比较你的作品，这本书的GitHub仓库中有一个完成的药水瓶等你查看。
- en: 'Several shortcuts are commonly used by many professionals during the modeling
    process. Here is a list you’ve used so far:'
  id: totrans-228
  prefs: []
  type: TYPE_NORMAL
  zh: 在建模过程中，许多专业人士经常使用一些快捷键。以下是你已经使用过的列表：
- en: '*Shift* + *A*: Add an object'
  id: totrans-229
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Shift* + *A*: 添加一个对象'
- en: '*Tab*: Switch between **Edit Mode** and **Object Mode**'
  id: totrans-230
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Tab*: 在**编辑模式**和**对象模式**之间切换'
- en: '*Ctrl* + *R*: Introduce loop cuts'
  id: totrans-231
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Ctrl* + *R*: 引入环切'
- en: '*Ctrl* + *J*: Join'
  id: totrans-232
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*Ctrl* + *J*: 连接'
- en: '*S*: Scale'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*S*: 缩放'
- en: '*P*: Separate'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*P*: 分离'
- en: In the next chapter, you’ll learn how to apply materials to your models so that
    parts of your model can still have a different look and feel without textures.
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将学习如何将材质应用到你的模型上，这样你的模型的部分仍然可以有不同的外观和感觉，即使没有纹理。
- en: Further reading
  id: totrans-236
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'The section’s title suggests reading sources, but sometimes seeing is even
    better. Just as a picture is worth a thousand words, a video might be worth a
    thousand pictures. So, here is a list of URLs for video content that might be
    useful for all levels of Blender practitioners:'
  id: totrans-237
  prefs: []
  type: TYPE_NORMAL
  zh: 该章节的标题建议阅读资料，但有时亲眼所见甚至更佳。正如一张图片胜过千言万语，一段视频可能胜过千张图片。因此，这里有一份可能对所有级别Blender实践者有用的视频内容URL列表：
- en: '[https://www.youtube.com/c/JoshGambrell](https://www.youtube.com/c/JoshGambrell)'
  id: totrans-238
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[JoshGambrell的YouTube频道](https://www.youtube.com/c/JoshGambrell)'
- en: '[https://www.youtube.com/c/CurtisHolt](https://www.youtube.com/c/CurtisHolt)'
  id: totrans-239
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[CurtisHolt的YouTube频道](https://www.youtube.com/c/CurtisHolt)'
- en: '[https://www.youtube.com/c/GrantAbbitt](https://www.youtube.com/c/GrantAbbitt)'
  id: totrans-240
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[GrantAbbitt的YouTube频道](https://www.youtube.com/c/GrantAbbitt)'
- en: '[https://www.youtube.com/c/SouthernShotty](https://www.youtube.com/c/SouthernShotty)'
  id: totrans-241
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[SouthernShotty的YouTube频道](https://www.youtube.com/c/SouthernShotty)'
