["```cpp\ncmake -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=../install -DLLVM_TARGETS_TO_BUILD=\"X86\" -DLLVM_ENABLE_PROJECTS=\"clang;clang-tools-extra\" ../llvm\n```", "```cpp\n$ ninja install-clangd -j $(nproc)\n```", "```cpp\n1 #!/bin/sh \n\n2 $HOME/clangbook/llvm-project/install/bin/clangd -log verbose -pretty 2> /tmp/clangd.log\n```", "```cpp\n$ cat /tmp/clangd.log\n```", "```cpp\nV[16:24:39.336] <<< {\n  \"id\": 13,\n  \"jsonrpc\": \"2.0\",\n  \"method\": \"textDocument/definition\",\n  \"params\": {\n    \"position\": {\n      \"character\": 26,\n      \"line\": 7\n    },\n```", "```cpp\n    \"textDocument\": {\n      \"uri\": \"file:///home/ivanmurashko/clangbook/helper.hpp\"\n    }\n  }\n}\n```", "```cpp\nI[16:24:39.336] <-- textDocument/definition(13)\nV[16:24:39.336] ASTWorker running Definitions on version 1 of /home/.../\nhelper.hpp\n```", "```cpp\nI[16:24:39.336] --> reply:textDocument/definition(13) 0 ms\nV[16:24:39.336] >>> {\n  \"id\": 13,\n  \"jsonrpc\": \"2.0\",\n  \"result\": [\n    {\n      \"range\": {\n        \"end\": {\n          \"character\": 20,\n          \"line\": 10\n        },\n```", "```cpp\n        \"start\": {\n          \"character\": 7,\n          \"line\": 10\n        }\n      },\n      \"uri\": \"file:///home/ivanmurashko/clangbook/helper.hpp\"\n    }\n  ]\n}\n```", "```cpp\n1{ \n\n2   \"id\": 0, \n\n3   \"jsonrpc\": \"2.0\", \n\n4   \"method\": \"initialize\", \n\n5   \"params\": { \n\n6     \"capabilities\": { \n\n7       ... \n\n8       \"textDocument\": { \n\n9         ... \n\n10         \"definition\": { \n\n11           \"dynamicRegistration\": true, \n\n12           \"linkSupport\": true \n\n13         }, \n\n14         ... \n\n15     }, \n\n16     \"clientInfo\": { \n\n17       \"name\": \"Visual Studio Code\", \n\n18       \"version\": \"1.85.1\" \n\n19     }, \n\n20     ... \n\n21   } \n\n22 }\n```", "```cpp\n1{ \n\n2   \"id\": 0, \n\n3   \"jsonrpc\": \"2.0\", \n\n4   \"result\": { \n\n5     \"capabilities\": { \n\n6       ... \n\n7       \"definitionProvider\": true, \n\n8       ... \n\n9     }, \n\n10     \"serverInfo\": { \n\n11       \"name\": \"clangd\", \n\n12       \"version\": \"clangd version 16.0.6 (https://github.com/llvm/llvm-project.git 7cbf1a2591520c2491aa35339f227775f4d3adf6) linux x86_64-unknown-linux-gnu\" \n\n13     } \n\n14   } \n\n15 }\n```", "```cpp\n1{ \n\n2   \"jsonrpc\": \"2.0\", \n\n3   \"method\": \"initialized\" \n\n4 }\n```", "```cpp\n{ \n\n  \"jsonrpc\": \"2.0\", \n\n  \"method\": \"textDocument/didOpen\", \n\n  \"params\": { \n\n   \"textDocument\": { \n\n     \"languageId\": \"cpp\", \n\n     \"text\": \"#pragma once\\n\\nnamespace clangbook {\\nclass Helper {\\npublic:\\n  Helper(){};\\n\\n  void doWork() { doPrivateWork(); }\\n\\nprivate:\\n  void doPrivateWork() {}\\n};\\n}; // namespace clangbook\\n\", \n\n     \"uri\": \"file:///home/ivanmurashko/clangbook/helper.hpp\",\n```", "```cpp\n     \"version\": 1 \n\n   } \n\n  } \n\n}\n```", "```cpp\n1 class TestClass { \n\n2 public: \n\n3   int foo(){return 0}; \n\n4 }; \n\n5  \n\n6 int main() { \n\n7   TestClass test; \n\n8   int foo = test.foo(); \n\n9   return foo; \n\n10 }\n```", "```cpp\n1{ \n\n2   \"jsonrpc\": \"2.0\", \n\n3   \"method\": \"textDocument/publishDiagnostics\", \n\n4   \"params\": { \n\n5    \"diagnostics\": [], \n\n6    \"uri\": \"file:///home/ivanmurashko/clangbook/helper.hpp\", \n\n7    \"version\": 1 \n\n8   } \n\n9 }\n```", "```cpp\n1{ \n\n2   \"jsonrpc\": \"2.0\", \n\n3   \"method\": \"textDocument/publishDiagnostics\", \n\n4   \"params\": { \n\n5    \"diagnostics\": [ \n\n6      { \n\n7        \"code\": \"expected_semi_after_expr\", \n\n8        \"message\": \"Expected ’;’ after expression (fix available)\", \n\n9        \"range\": { \n\n10          \"end\": { \n\n11            \"character\": 35, \n\n12            \"line\": 7 \n\n13          }, \n\n14          \"start\": { \n\n15            \"character\": 34, \n\n16            \"line\": 7 \n\n17          } \n\n18        }, \n\n19        \"relatedInformation\": [], \n\n20        \"severity\": 1, \n\n21        \"source\": \"clang\" \n\n22      } \n\n23    ], \n\n24    \"uri\": \"file:///home/ivanmurashko/clangbook/helper.hpp\", \n\n25    \"version\": 5 \n\n26   } \n\n27 }\n```", "```cpp\n1{ \n\n2   \"id\": 13, \n\n3   \"jsonrpc\": \"2.0\", \n\n4   \"method\": \"textDocument/definition\", \n\n5   \"params\": { \n\n6    \"position\": { \n\n7      \"character\": 26, \n\n8      \"line\": 7 \n\n9    }, \n\n10    \"textDocument\": { \n\n11      \"uri\": \"file:///home/ivanmurashko/clangbook/helper.hpp\" \n\n12    } \n\n13   } \n\n14 }\n```", "```cpp\n1{ \n\n2   \"id\": 13, \n\n3   \"jsonrpc\": \"2.0\", \n\n4   \"result\": [ \n\n5    { \n\n6      \"range\": { \n\n7        \"end\": { \n\n8          \"character\": 20, \n\n9          \"line\": 10 \n\n10        }, \n\n11        \"start\": { \n\n12          \"character\": 7, \n\n13          \"line\": 10 \n\n14        } \n\n15      }, \n\n16      \"uri\": \"file:///home/ivanmurashko/clangbook/helper.hpp\" \n\n17    } \n\n18   ] \n\n19 }\n```", "```cpp\n1{ \n\n2   \"jsonrpc\": \"2.0\", \n\n3   \"method\": \"textDocument/didChange\", \n\n4   \"params\": { \n\n5     \"contentChanges\": [ \n\n6       { \n\n7         \"range\": { \n\n8           \"end\": { \n\n9             \"character\": 13, \n\n10             \"line\": 5 \n\n11           }, \n\n12           \"start\": { \n\n13             \"character\": 13, \n\n14             \"line\": 5 \n\n15           } \n\n16         }, \n\n17         \"rangeLength\": 0, \n\n18         \"text\": \"// Constructor\" \n\n19       } \n\n20     ], \n\n21     \"textDocument\": { \n\n22       \"uri\": \"file:///home/ivanmurashko/clangbook/helper.hpp\", \n\n23       \"version\": 2 \n\n24     } \n\n25   } \n\n26 }\n```", "```cpp\n1{ \n\n2   \"jsonrpc\": \"2.0\", \n\n3   \"method\": \"textDocument/publishDiagnostics\", \n\n4   \"params\": { \n\n5     \"diagnostics\": [], \n\n6     \"uri\": \"file:///home/ivanmurashko/clangbook/helper.hpp\", \n\n7     \"version\": 2 \n\n8 }\n```", "```cpp\n1{ \n\n2   \"jsonrpc\": \"2.0\", \n\n3   \"method\": \"textDocument/didClose\", \n\n4   \"params\": { \n\n5    \"textDocument\": { \n\n6      \"uri\": \"file:///home/ivanmurashko/clangbook/helper.hpp\" \n\n7    } \n\n8   } \n\n9 }\n```", "```cpp\n1{ \n\n2   \"jsonrpc\": \"2.0\", \n\n3   \"method\": \"textDocument/publishDiagnostics\", \n\n4   \"params\": { \n\n5    \"diagnostics\": [], \n\n6    \"uri\": \"file:///home/ivanmurashko/clangbook/helper.hpp\" \n\n7   } \n\n8 }\n```", "```cpp\n1{ \n\n2   \"id\": 9, \n\n3   \"jsonrpc\": \"2.0\", \n\n4   \"method\": \"textDocument/formatting\", \n\n5   \"params\": { \n\n6    \"options\": { \n\n7      \"insertSpaces\": true, \n\n8      \"tabSize\": 4 \n\n9    }, \n\n10    \"textDocument\": { \n\n11      \"uri\": \"file:///home/ivanmurashko/clangbook/helper.hpp\" \n\n12    } \n\n13   } \n\n14 }\n```", "```cpp\n1{ \n\n2   \"id\": 9, \n\n3   \"jsonrpc\": \"2.0\", \n\n4   \"result\": [ \n\n5    { \n\n6      \"newText\": \"\\n  \", \n\n7      \"range\": { \n\n8        \"end\": { \n\n9          \"character\": 0, \n\n10          \"line\": 5 \n\n11        }, \n\n12        \"start\": { \n\n13          \"character\": 7, \n\n14          \"line\": 4 \n\n15        } \n\n16      } \n\n17    } \n\n18   ] \n\n19 }\n```", "```cpp\n1{ \n\n2   \"id\": 89, \n\n3   \"jsonrpc\": \"2.0\", \n\n4   \"method\": \"textDocument/rangeFormatting\", \n\n5   \"params\": { \n\n6    \"options\": { \n\n7      \"insertSpaces\": true, \n\n8      \"tabSize\": 4 \n\n9    }, \n\n10    \"range\": { \n\n11      \"end\": { \n\n12        \"character\": 2, \n\n13        \"line\": 10 \n\n14      }, \n\n15      \"start\": { \n\n16        \"character\": 0, \n\n17        \"line\": 3 \n\n18      } \n\n19    }, \n\n20    \"textDocument\": { \n\n21      \"uri\": \"file:///home/ivanmurashko/clangbook/helper.hpp\" \n\n22    } \n\n23   } \n\n24 }\n```", "```cpp\n1 Checks: ’-*,misc-methodrename’\n```", "```cpp\n1{ \n\n2   \"jsonrpc\": \"2.0\", \n\n3   \"method\": \"textDocument/publishDiagnostics\", \n\n4   \"params\": { \n\n5    \"diagnostics\": [ \n\n6      { \n\n7        \"code\": \"misc-methodrename\", \n\n8        \"codeDescription\": { \n\n9          \"href\": \"https://clang.llvm.org/extra/clang-tidy/checks/misc/ \n\n10                    methodrename.html\" \n\n11        }, \n\n12        \"message\": \"Method ’testdoWork’ does not have ’test_’ prefix (fix available)\", \n\n13        \"range\": { \n\n14          \"end\": { \n\n15            \"character\": 17, \n\n16            \"line\": 6 \n\n17          }, \n\n18          \"start\": { \n\n19            \"character\": 7, \n\n20            \"line\": 6 \n\n21          } \n\n22        }, \n\n23        \"relatedInformation\": [], \n\n24        \"severity\": 2, \n\n25        \"source\": \"clang-tidy\" \n\n26      } \n\n27    ], \n\n28    \"uri\": \"file:///home/ivanmurashko/clangbook/helper.hpp\", \n\n29    \"version\": 11 \n\n30   }\n```", "```cpp\n1{ \n\n2   \"id\": 98, \n\n3   \"jsonrpc\": \"2.0\", \n\n4   \"method\": \"textDocument/codeAction\", \n\n5   \"params\": { \n\n6     \"context\": { \n\n7       \"diagnostics\": [ \n\n8         { \n\n9           \"code\": \"misc-methodrename\", \n\n10           ... \n\n11           \"range\": ..., \n\n12       ... \n\n13     }, \n\n14     ... \n\n15   } \n\n16 }\n```", "```cpp\n1{ \n\n2   \"id\": 98, \n\n3   \"jsonrpc\": \"2.0\", \n\n4   \"result\": [ \n\n5    { \n\n6      \"diagnostics\": [ \n\n7        ... \n\n8      ], \n\n9      \"edit\": { \n\n10        \"changes\": { \n\n11          \"file:///home/ivanmurashko/clangbook/helper.hpp\": [ \n\n12            { \n\n13              \"newText\": \"test_\", \n\n14              \"range\": { \n\n15                \"end\": { \n\n16                  \"character\": 7, \n\n17                  \"line\": 6 \n\n18                }, \n\n19                \"start\": { \n\n20                  \"character\": 7, \n\n21                  \"line\": 6 \n\n22                } \n\n23              } \n\n24            } \n\n25      ... \n\n26    } \n\n27   ] \n\n28 }\n```", "```cpp\n1 #include <iostream> \n\n2  \n\n3 int main() { \n\n4   std::cout << \"Hello world!\" << std::endl; \n\n5   return 0; \n\n6 }\n```", "```cpp\n$ <...>/llvm-project/install/bin/clang -E helloworld.cpp | wc -l\n36215 \n```", "```cpp\n/// FrontendOptions - Options for controlling the behavior of the frontend. \n\nclass FrontendOptions { \n\n  ... \n\n  /// Skip over function bodies to speed up parsing in cases where you do not need \n\n  /// them (e.g., with code completion). \n\n  unsigned SkipFunctionBodies : 1;\n```", "```cpp\n  ... \n\n};\n```", "```cpp\n1std::shared_ptr<const PreambleData> \n\n2 buildPreamble(PathRef FileName, CompilerInvocation CI, \n\n3               const ParseInputs &Inputs, bool StoreInMemory, \n\n4               PreambleParsedCallback PreambleCallback, \n\n5               PreambleBuildStats *Stats) { \n\n6   ... \n\n7   // Skip function bodies when building the preamble to speed up building \n\n8   // the preamble and make it smaller. \n\n9   assert(!CI.getFrontendOpts().SkipFunctionBodies); \n\n10   CI.getFrontendOpts().SkipFunctionBodies = true; \n\n11   ... \n\n12   auto BuiltPreamble = PrecompiledPreamble::Build(...); \n\n13   ... \n\n14   // When building the AST for the main file, we do want the function \n\n15   // bodies. \n\n16   CI.getFrontendOpts().SkipFunctionBodies = false; \n\n17   ... \n\n18 };\n```"]