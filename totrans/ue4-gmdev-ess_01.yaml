- en: Chapter 1. Introduction to Unreal Engine 4
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第 1 章。Unreal Engine 4 简介
- en: Welcome to *Unreal Engine 4 Game Development Essentials*. In this chapter, you
    will learn how to download Unreal Engine's source version and launcher version.
    After that, we will get familiar with the Unreal Engine 4 UI and Content Browser.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎来到 *Unreal Engine 4 游戏开发基础*。在本章中，您将学习如何下载 Unreal Engine 的源代码版本和启动器版本。之后，我们将熟悉
    Unreal Engine 4 用户界面和内容浏览器。
- en: Unreal Engine 4 download
  id: totrans-2
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Unreal Engine 4 下载
- en: Unreal Engine 4 is completely free (including all future updates!) to download
    and use. You get all the Unreal Engine tools, free sample contents, complete C++
    source code which includes code for the entire editor, and all of its tools; you
    also get access to official documentation that includes tutorials and support
    resources, plus you get access to UE4 marketplace, which offers tons of free and
    commercial content.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: Unreal Engine 4 完全免费（包括所有未来的更新！）下载和使用。您将获得所有 Unreal Engine 工具、免费样本内容、完整的 C++
    源代码，包括整个编辑器的代码及其所有工具；您还将获得访问官方文档的权限，包括教程和支持资源，以及访问 UE4 市场place，它提供大量免费和商业内容。
- en: 'Unreal Engine 4 can be downloaded in two different versions. One is a binary
    version (launcher) and the other is the source version (GitHub). The differences
    between the GitHub and launcher version are as follows:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: Unreal Engine 4 可以下载两种不同的版本。一个是二进制版本（启动器），另一个是源代码版本（GitHub）。GitHub 版本和启动器版本之间的区别如下：
- en: '**Launcher (binary) version**: These are compiled by Epic and are available
    through launcher. You will also get all source files (`*.cpp`) with the launcher
    version, but you cannot make any modifications to Unreal Engine since launcher
    versions do not generate a solution file.'
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启动器（二进制）版本**：这些由 Epic 编译并通过启动器提供。您还将获得启动器版本的所有源文件（`*.cpp`），但您不能对 Unreal Engine
    进行任何修改，因为启动器版本不会生成解决方案文件。'
- en: '**GitHub version**: These do not have any binary files so you have to compile
    the Engine yourself. You get the entire source and you can modify virtually anything
    in Unreal Engine. You can add new Engine features, modify existing features or
    remove them (which no one does), and create a pull request on GitHub so if Epic
    likes it, they will integrate it officially into Unreal Engine.'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GitHub 版本**：这些版本没有二进制文件，因此您必须自己编译引擎。您将获得整个源代码，并且可以在 Unreal Engine 中修改几乎任何内容。您可以添加新的引擎功能，修改现有功能或删除它们（没有人这样做），并在
    GitHub 上创建拉取请求，如果 Epic 喜欢它，他们将会将其官方集成到 Unreal Engine 中。'
- en: In this guide, I'll show you how to get both versions.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本指南中，我将向您展示如何获取这两个版本。
- en: Downloading the launcher version
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载启动器版本
- en: 'To download the launcher version of Unreal Engine, you obviously need the launcher.
    To download the launcher, follow these steps:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载 Unreal Engine 的启动器版本，显然您需要启动器。要下载启动器，请按照以下步骤操作：
- en: First go to [https://www.unrealengine.com/](https://www.unrealengine.com/) and
    log in using your credentials.
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先前往 [https://www.unrealengine.com/](https://www.unrealengine.com/) 并使用您的凭证登录。
- en: Once you log in, you can download the launcher by clicking on the big orange
    **Download** button under **Get Unreal Engine**.![Downloading the launcher version](img/B03950_01_01.jpg)
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 登录后，您可以通过点击 **获取 Unreal Engine** 下的大橙色 **下载** 按钮来下载启动器。![下载启动器版本](img/B03950_01_01.jpg)
- en: When you open the launcher for the first time after installation, it should
    automatically download the latest version of Unreal Engine 4\. If it doesn't,
    then go to the **Library** tab and click on **Add Engine**. A new Engine slot
    will now appear and here, you can select your Unreal Engine version and install
    it.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 安装后首次打开启动器，它应自动下载 Unreal Engine 4 的最新版本。如果它没有这样做，请转到 **库** 选项卡并点击 **添加引擎**。现在将出现一个新的引擎槽，在这里您可以选择您的
    Unreal Engine 版本并安装它。
- en: '![Downloading the launcher version](img/B03950_01_02.jpg)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![下载启动器版本](img/B03950_01_02.jpg)'
- en: Downloading the GitHub version
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载 GitHub 版本
- en: To download the source of Unreal Engine 4, follow these steps
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要下载 Unreal Engine 4 的源代码，请按照以下步骤操作
- en: First create a GitHub account (it's free!).
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先创建一个 GitHub 账户（免费！）。
- en: After that, you need to go to [https://www.unrealengine.com/dashboard/settings](https://www.unrealengine.com/dashboard/settings)
    and update your GitHub account name and click on **Save**:![Downloading the GitHub
    version](img/B03950_01_03.jpg)
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，您需要前往 [https://www.unrealengine.com/dashboard/settings](https://www.unrealengine.com/dashboard/settings)
    并更新您的 GitHub 账户名称，然后点击 **保存**：![下载 GitHub 版本](img/B03950_01_03.jpg)
- en: Forking Unreal Engine repository
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分支 Unreal Engine 仓库
- en: After you have successfully linked your GitHub account with your Unreal Engine
    account, you need to log in to GitHub and navigate to the Unreal Engine repository.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在你成功将 GitHub 账户与虚幻引擎账户链接后，你需要登录到 GitHub 并导航到虚幻引擎仓库。
- en: Note
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: Make sure you have linked your GitHub account to your Unreal Engine account.
    Otherwise, you will not be able to see the Unreal Engine repository.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 确保你已经将你的 GitHub 账户链接到你的虚幻引擎账户。否则，你将看不到虚幻引擎仓库。
- en: 'When you are at the repository page:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 当你在仓库页面时：
- en: Click on **Fork** at the top right of the page.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击页面右上角的 **Fork**。
- en: Select your username to fork it to your GitHub repository.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择你的用户名以将其分叉到你的 GitHub 仓库。
- en: Then, you need to download GitHub for Windows (if you are on Windows) or GitHub
    for Mac (if you are on Mac) and install it.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，你需要下载 GitHub for Windows（如果你使用 Windows）或 GitHub for Mac（如果你使用 Mac）并安装它。
- en: You need this Git client to clone (download) your forked repository, make your
    own changes to Unreal Engine, and submit the changes as a pull request to Epic
    to integrate them into the editor.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要这个 Git 客户端来克隆（下载）你分叉的仓库，对虚幻引擎进行自己的修改，并将更改作为拉取请求提交给 Epic 以集成到编辑器中。
- en: 'To clone your forked repository follow these steps:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 要克隆你的分叉仓库，请按照以下步骤操作：
- en: Start GitHub and log in using your credentials.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动 GitHub 并使用你的凭证登录。
- en: Click on the plus (**+**) sign on the top left corner of the Git client.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 Git 客户端左上角的加号（**+**）。
- en: Then, click on the **Clone** tab and select your **username** (you should now
    see Unreal Engine).
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，点击 **克隆** 选项卡并选择你的 **用户名**（你现在应该能看到虚幻引擎）。
- en: Now, click on **Clone** Unreal Engine and choose a folder where you want to
    save your Unreal Engine repository.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，点击 **克隆虚幻引擎** 并选择你想要保存虚幻引擎仓库的文件夹。
- en: Click on **OK**.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击 **确定**。
- en: You should now see GitHub cloning Unreal Engine to your hard disk.![Forking
    Unreal Engine repository](img/B03950_01_04.jpg)
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你现在应该看到 GitHub 正在将虚幻引擎克隆到你的硬盘上。![Forking Unreal Engine repository](img/B03950_01_04.jpg)
- en: Once cloning is complete, navigate to that directory and run the `Setup.bat`
    file.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦克隆完成，导航到那个目录并运行 `Setup.bat` 文件。
- en: This will download all the necessary files that are needed to compile the engine
    and will also install all the required prerequisites for the Engine.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这将下载编译引擎所需的所有必要文件，并安装所有必需的先决条件。
- en: This might take some time depending on your Internet speed because it has to
    download more than 2 GB of files.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 这可能需要一些时间，具体取决于你的网速，因为它需要下载超过 2 GB 的文件。
- en: Compiling Unreal Engine
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编译虚幻引擎
- en: Once `Setup.bat` has finished, run `GenerateProjectFiles.bat`, which will generate
    the Visual Studio Solution file. Open the `UE4.sln` file and now, you are all
    set to compile your own copy of Unreal Engine 4☺. Now, right-click on UE4 in the
    **Solution Explorer** and click on **Build**.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 `Setup.bat` 完成，运行 `GenerateProjectFiles.bat`，这将生成 Visual Studio 解决方案文件。打开
    `UE4.sln` 文件，现在，你就可以编译你自己的虚幻引擎 4 版本了。现在，在 **解决方案资源管理器** 中右键点击 UE4 并点击 **构建**。
- en: '![Compiling Unreal Engine](img/B03950_01_05.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![Compiling Unreal Engine](img/B03950_01_05.jpg)'
- en: This will take from 15 minutes to 1 hour depending on your system hardware.
    So sit back, grab a cup of coffee, and wait till Engine finishes compiling.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这将根据你的系统硬件从 15 分钟到 1 小时不等。所以请坐下来，拿一杯咖啡，等待引擎编译完成。
- en: Getting familiar with Unreal Engine
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 熟悉虚幻引擎
- en: 'Once your Engine finishes compiling (or downloading, if you are using launcher)
    it''s time to start it:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你的引擎编译完成（或如果你使用启动器下载，则下载完成）是时候启动它了：
- en: '**Starting your custom build**: You can either press *F5* in Visual Studio
    to start debugging the Engine or navigate to the directory where you downloaded
    it and go to `Engine\Binaries\Win64` folder and double-click on `UE4Editor.exe`.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启动你的自定义构建**：你可以按 Visual Studio 中的 *F5* 键以启动调试引擎，或者导航到下载它的目录，进入 `Engine\Binaries\Win64`
    文件夹并双击 `UE4Editor.exe`。'
- en: '**Starting launcher build**: Simply click on that big **Launch** button and
    you''re good to go.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**启动启动器构建**：只需点击那个大 **启动** 按钮即可。'
- en: Note
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 注意
- en: You might experience long loading time when you start the Engine for the first
    time after compiling. This is because Unreal Engine will optimize the contents
    for your platform to derive data cache. This is a one-time process.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 当你第一次编译后启动引擎时，可能会遇到长时间加载的情况。这是因为虚幻引擎将优化你的平台内容以生成数据缓存。这是一个一次性过程。
- en: 'After the splash screen, you should now see the Unreal project browser. Perform
    the following steps:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在启动画面之后，你现在应该能看到虚幻项目浏览器。执行以下步骤：
- en: Select the **New Project** tab, and this is where you create your new projects.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**新建项目**选项卡，这就是你创建新项目的地方。
- en: For this book, we will stick with a **Blank Blueprint Project**. So, in the
    **Blueprint** tab, select **Blank** project.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于这本书，我们将坚持使用**空白蓝图项目**。因此，在**蓝图**选项卡中，选择**空白**项目。
- en: 'You can choose which platform you want for your project. There are two platforms
    available: **Desktop/Console** and **Mobile/Tablet**. Feel free to change this
    setting for your project. The second setting determines the graphics settings
    for your platform. If you choose **Desktop/Console**, it''s better to stick with
    **Maximum Quality** and if your project is targeting **Mobile/Tablets**, you should
    choose scalable 3D or 2D, which is aimed at low-end GPUs. The third and final
    setting lets you add some **Starter Content** from Epic, which contains some basic
    meshes, materials, and textures. You can choose not to include **Starter Content**
    so the project will only contain essential elements for the selected project.'
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你可以选择你想要的项目平台。有两个平台可供选择：**桌面/控制台**和**移动/平板**。请随意更改你项目的此设置。第二个设置确定你平台的图形设置。如果你选择**桌面/控制台**，最好坚持使用**最高质量**；如果你的项目针对**移动/平板**，你应该选择可伸缩的3D或2D，这是针对低端GPU的。第三个也是最后一个设置让你可以从Epic添加一些**入门内容**，其中包含一些基本的网格、材质和纹理。你可以选择不包含**入门内容**，这样项目将只包含所选项目的必需元素。
- en: Note that it is not recommended to include **Starter Content** when creating
    a project for the **Mobile/Tablet** platform. This can significantly increase
    the package size of your project.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 注意，在为**移动/平板**平台创建项目时，不建议包含**入门内容**。这可能会显著增加你项目的包大小。
- en: Choose a name for your project and the location where you want to save it.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为你的项目选择一个名称以及你想要保存它的位置。
- en: Finally, click on **Create Project** to start Unreal Engine 4 with your project:![Getting
    familiar with Unreal Engine](img/B03950_01_06.jpg)
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，点击**创建项目**以使用你的项目启动Unreal Engine 4：![熟悉Unreal Engine](img/B03950_01_06.jpg)
- en: 'This is how the Unreal Engine user interface looks:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是Unreal Engine用户界面的样子：
- en: '![Getting familiar with Unreal Engine](img/B03950_01_07.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![熟悉Unreal Engine](img/B03950_01_07.jpg)'
- en: Once Unreal Engine starts up, you should see a scene similar to the preceding
    screenshot. This is the scene that will be displayed by default, if you choose
    to include **Starter Content**. If you skip **Starter Content**, then the startup
    scene will be different.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦Unreal Engine启动，你应该会看到一个类似于前面的截图的场景。这是如果你选择包含**入门内容**时将默认显示的场景。如果你跳过**入门内容**，则启动场景将不同。
- en: The viewport toolbar
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 视口工具栏
- en: 'The viewport toolbar contains various tools that you will use throughout your
    level design process. Let''s take a quick look at them:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 视口工具栏包含你在整个关卡设计过程中将使用的各种工具。让我们快速浏览一下：
- en: '![The viewport toolbar](img/B03950_01_08.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![视口工具栏](img/B03950_01_08.jpg)'
- en: '**Transform Tools**: These three tools are the move tool, the rotate tool,
    and the scale tool.'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**变换工具**：这三个工具是移动工具、旋转工具和缩放工具。'
- en: '**Coordinate System**: This allows you to move, rotate, or scale your Actor
    either on world axes (world space) or on its own local axes (local space). By
    default, Unreal editor starts in world axes but you can toggle by clicking on
    the icon. The globe icon means world space and the cube icon means local space.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**坐标系**：这允许你将你的Actor在世界轴（世界空间）或其自身的本地轴（本地空间）上移动、旋转或缩放。默认情况下，Unreal编辑器以世界轴开始，但你可以通过点击图标来切换。地球图标表示世界空间，立方体图标表示本地空间。'
- en: '**Snapping and Move Grid**: Snapping allows you to snap one Actor to another
    Actor''s surface, and move grid allows you to snap to a three-dimensional implicit
    grid within the scene.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**吸附和移动网格**：吸附允许你将一个Actor吸附到另一个Actor的表面上，移动网格允许你在场景内吸附到三维隐式网格上。'
- en: '**Rotation Grid**: This provides incremental rotation snaps.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**旋转网格**：这提供了增量旋转吸附。'
- en: '**Scale Grid**: This snaps to additive increments.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**缩放网格**：这会自动调整到增量值。'
- en: Tip
  id: totrans-65
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: Snapping preferences for move, rotate, and scale can be adjusted in **Editor
    Preferences**. Go to **Edit** | **Editor Preferences** | **Viewports** and then
    scroll to **Grid Snapping Category**.
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 移动、旋转和缩放的吸附首选项可以在**编辑器首选项**中调整。转到**编辑** | **编辑器首选项** | **视口**，然后滚动到**网格吸附类别**。
- en: '**Camera Speed**: This lets you control how fast the camera moves in viewport.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**相机速度**：这让你可以控制相机在视口中的移动速度。'
- en: Tip
  id: totrans-68
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 提示
- en: You can fine-tune the camera speed by holding down the right mouse button (while
    using *WASD* controls) and scrolling the mouse wheel up or down to speed up or
    slow down the camera's movement.
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以通过按住鼠标右键（同时使用 *WASD* 控制键）并上下滚动鼠标滚轮来调整相机速度，从而加快或减慢相机的移动。
- en: '**Maximize Viewport**: This toggles between a single viewport and a 4-view
    split style.'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**最大化视口**：此选项在单个视口和 4 视口分割样式之间切换。'
- en: Tip
  id: totrans-71
  prefs:
  - PREF_IND
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'You can adjust the layout of **Viewport** by changing the **Layout** option,
    as shown in the following screenshot:'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 您可以通过更改 **布局** 选项来调整 **视口** 的布局，如下面的截图所示：
- en: '![The viewport toolbar](img/B03950_01_09.jpg)'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![视口工具栏](img/B03950_01_09.jpg)'
- en: Later in this chapter, you will learn how to use **Binary Space Partitioning
    (BSP)** and change some project settings such as **Splash** screen, game **Icon**,
    and so on.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的后面部分，您将学习如何使用 **二叉空间划分（BSP**）以及更改一些项目设置，如 **启动** 屏幕和游戏 **图标** 等。
- en: Modes
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模式
- en: 'The **Modes** tab contains all five modes of the editor. They are as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**模式** 选项卡包含编辑器的所有五种模式。具体如下：'
- en: '**Place** mode (shortcut key is *Shift* + *1*): **Place** mode allows you to
    quickly place your recently placed objects and also Engine primitives such as
    lights, geometries, triggers, volumes, and so on.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**放置** 模式（快捷键是 *Shift* + *1*）：**放置** 模式允许您快速放置最近放置的对象，以及引擎原语，如灯光、几何形状、触发器、体积等。'
- en: '**Paint** mode (shortcut key is *Shift* + *2*): **Paint** mode (also known
    as **Mesh Paint**) allows you to interactively paint vertex colors on **Static
    Mesh** in **Level Viewport**.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**绘制** 模式（快捷键是 *Shift* + *2*）：**绘制** 模式（也称为 **网格绘制**）允许您在 **视口** 中的 **静态网格**
    上交互式地绘制顶点颜色。'
- en: '**Landscape** mode (shortcut key is *Shift* + *3*): **Landscape** mode lets
    you create a new landscape entirely in Unreal Editor or import a height map from
    an external program, such as **World Machine**, **TerreSculptor**, and so on,
    and make modifications to it.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**景观** 模式（快捷键是 *Shift* + *3*）：**景观** 模式允许您在 Unreal 编辑器中完全创建新的景观，或从外部程序（如 **World
    Machine**、**TerreSculptor** 等）导入高度图，并对它进行修改。'
- en: '**Foliage** mode (shortcut key is *Shift* + *4*): **Foliage** mode allows you
    to paint or erase multiple static meshes on **Landscapes**, other static meshes,
    and so on. An example workflow is to paint grass, trees, and so on on a large
    area.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**植被** 模式（快捷键是 *Shift* + *4*）：**植被** 模式允许您在 **景观**、其他静态网格等上绘制或擦除多个静态网格。一个示例工作流程是在大区域上绘制草地、树木等。'
- en: '**Geometry Editing** mode (shortcut key is *Shift* + *5*): **Geometry** mode
    allows you to edit BSP brushes.'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**几何编辑** 模式（快捷键是 *Shift* + *5*）：**几何** 模式允许您编辑 BSP 刷子。'
- en: '![Modes](img/B03950_01_10.jpg)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![模式](img/B03950_01_10.jpg)'
- en: Content Browser
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内容浏览器
- en: '**Content Browser** is what you call the heart of your project. This is where
    you create, import, view, edit, organize, and modify all the assets for your game.
    It also lets you rename, delete, copy, and move assets across other folders just
    like you do in Windows Explorer. Additionally, Content Browser also lets you search
    for specific assets based on keywords or asset type and you can exclude assets
    from your search by adding ''-'' (hyphen) as the prefix.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**内容浏览器** 是您项目的核心所在。在这里，您可以创建、导入、查看、编辑、组织和修改游戏中的所有资产。它还允许您像在 Windows 资源管理器中一样重命名、删除、复制和移动资产到其他文件夹。此外，内容浏览器还允许您根据关键词或资产类型搜索特定资产，并且您可以通过添加
    ''-''（连字符）作为前缀来排除资产。'
- en: You can also create **Collections** to arrange your commonly used assets for
    quick access.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以创建 **集合** 来整理您常用的资产，以便快速访问。
- en: Tip
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: Collections are just references to assets and are not moved into collections.
    That means a single asset can exist in multiple collections and you can create
    an unlimited number of collections.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 集合只是资产的引用，并不会移动到集合中。这意味着单个资产可以存在于多个集合中，并且您可以创建无限数量的集合。
- en: 'There are three types of collections:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 有三种类型的集合：
- en: '**Shared collection**: These are visible to you and to other users. This option
    is active only if you have **Source** **Control** (for example: Perforce, Subversion
    and so on.) enabled.'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**共享集合**：这些对您和其他用户可见。此选项仅在您已启用 **源** **控制**（例如：Perforce、Subversion 等）时才激活。'
- en: '**Private collection**: These are visible only to those who are invited to
    view the collection. This option is active only if you have **Source Control**
    (for example: Perforce, Subversion and so on.) enabled.'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**私有集合**：这些只对被邀请查看集合的人可见。此选项仅在您已启用 **源控制**（例如：Perforce、Subversion 等）时才激活。'
- en: '**Local collection**: These are only for you. That means they only exist on
    your local machine.'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**本地集合**：这些仅为你所有。这意味着它们只存在于你的本地机器上。'
- en: If you want to transfer an asset from one project to another, you can right-click
    on the asset and choose **Migrate…**, which will copy that asset and all its dependencies
    to your new project.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要将资产从一个项目转移到另一个项目，你可以右键单击该资产并选择**迁移…**，这将复制该资产及其所有依赖项到你的新项目。
- en: '**Content Browser** can be accessed by pressing *Ctrl*+*Shift*+*F* or from
    the **Windows** menu on the menu bar. You can also have four instances of **Content
    Browser** at the same time.'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**内容浏览器**可以通过按*Ctrl*+*Shift*+*F*或从菜单栏上的**Windows**菜单访问。你还可以同时打开四个**内容浏览器**实例。'
- en: This can be really useful when you want to move assets to different folders
    or to preview various assets in different folders.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 这在你想要将资产移动到不同的文件夹或预览不同文件夹中的各种资产时非常有用。
- en: '![Content Browser](img/B03950_01_11.jpg)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![内容浏览器](img/B03950_01_11.jpg)'
- en: Content Browser view options
  id: totrans-96
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 内容浏览器视图选项
- en: 'View options lets you do the following:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 视图选项让你可以执行以下操作：
- en: Change the thumbnail size
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改缩略图大小
- en: Change the view style
  id: totrans-99
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更改视图样式
- en: Modify the 3D thumbnail, and more
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 修改3D缩略图，等等
- en: '**View Options** can be accessed from the bottom-right corner of **Content
    Browser**.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '**视图选项**可以从**内容浏览器**的右下角访问。'
- en: '![Content Browser view options](img/B03950_01_12.jpg)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![内容浏览器视图选项](img/B03950_01_12.jpg)'
- en: World outliner
  id: totrans-103
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 世界大纲
- en: '**World Outliner** shows all the Actors within the level in a tree view. Actors
    can be selected and modified from world outliner. Right-clicking on an Actor in
    **World Outliner** will show the same context menu used in **Viewport** so you
    can modify it without having to navigate to them in **Viewport**. You can drag
    an Actor to another Actor and attach them together.'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: '**世界大纲**以树形视图显示了级别内的所有角色。可以从世界大纲中选择和修改角色。在**世界大纲**中右键单击角色将显示与**视口**中相同的上下文菜单，这样你就可以在不进入**视口**的情况下修改它。你可以将一个角色拖动到另一个角色上并将它们连接在一起。'
- en: World outliner allows you to search for a specific Actor. You can exclude a
    specific Actor by adding **-** (hyphen) before the search term and you can force
    a term to match exactly by adding **+** before the search term.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 世界大纲允许你搜索特定的角色。你可以在搜索词前添加**-**（连字符）来排除特定的角色，你可以在搜索词前添加**+**来强制匹配确切术语。
- en: '![World outliner](img/B03950_01_13.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![世界大纲](img/B03950_01_13.jpg)'
- en: Details panel
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 细节面板
- en: The **Details** panel shows all the information, utilities, and functions specific
    to the selection in the viewport. It displays all the editable properties for
    the selected Actor and provides additional functionality based on the selected
    Actor. For example, if you select a **Blueprint**, the **Details** panel will
    show everything related to that Blueprint, that is exposed variables, Blutility
    events, and so on. If you select a **Static Mesh** actor, the **Details** panel
    will show which material was applied, the collision settings, the physics settings,
    the rendering settings, and more. The **Details** panel can be locked to the selected
    Actor so it does not change based on Actor selection. Just like **Content Browser**,
    you can have four instances of **Details** panel open at the same time.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**细节**面板显示了视口中选择的全部信息、实用工具和功能。它显示了所选角色的所有可编辑属性，并根据所选角色提供额外的功能。例如，如果你选择了一个**蓝图**，**细节**面板将显示与该蓝图相关的所有内容，包括暴露的变量、Blutility事件等。如果你选择了一个**静态网格**角色，**细节**面板将显示应用了哪种材质、碰撞设置、物理设置、渲染设置等。**细节**面板可以锁定到所选角色，这样它就不会根据角色选择而改变。就像**内容浏览器**一样，你可以同时打开四个**细节**面板实例。'
- en: Navigating the Viewport
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 导航视口
- en: 'You can navigate the viewport easily using the mouse and keyboard. A high-level
    explanation of navigating the viewport can be found here: [https://docs.unrealengine.com/latest/INT/Engine/UI/LevelEditor/Viewports/ViewportControls/index.html](https://docs.unrealengine.com/latest/INT/Engine/UI/LevelEditor/Viewports/ViewportControls/index.html)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用鼠标和键盘轻松地导航视口。关于导航视口的高级说明可以在这里找到：[https://docs.unrealengine.com/latest/INT/Engine/UI/LevelEditor/Viewports/ViewportControls/index.html](https://docs.unrealengine.com/latest/INT/Engine/UI/LevelEditor/Viewports/ViewportControls/index.html)
- en: Tip
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: At the bottom-left corner of the viewport, there is a small question mark button.
    If you click on that, you will see some commonly used viewport shortcut keys.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在视口的左下角有一个小问号按钮。如果你点击它，你将看到一些常用的视口快捷键。
- en: '![Navigating the Viewport](img/B03950_01_14_edited.jpg)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![导航视口](img/B03950_01_14_edited.jpg)'
- en: BSP
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: BSP
- en: Now that we have some solid understanding of Engine UI, let's use BSP to create
    a simple level. BSP is a geometry tool (also known as **Geometry Brush** or simply
    **Brush**) used for quickly prototyping levels (also known as blocking out levels).
    Some developers prefer to call this **Constructive Solid Geometry** (**CSG**),
    which is the more accurate term since geometry in Unreal editor is created by
    adding and subtracting brushes. BSP has been there since the first release of
    Unreal. It was used for level designing long ago but later, this role has been
    passed to static meshes because BSP is more expensive in performance.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们对引擎用户界面有了些基本的了解，让我们使用BSP来创建一个简单的级别。BSP是一个几何工具（也称为**几何笔刷**或简称**笔刷**），用于快速原型化级别（也称为级别布局）。一些开发者更喜欢称之为**构造实体几何**（**CSG**），这是一个更准确的术语，因为Unreal编辑器中的几何形状是通过添加和减去笔刷来创建的。BSP自Unreal的第一个版本以来就存在了。它曾用于很久以前的级别设计，但后来，这个角色被静态网格所取代，因为BSP在性能上更昂贵。
- en: So basically, BSP should only be used to prototype a level. Once you have the
    basic idea of how a level should look, you should start replacing it with static
    meshes.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 所以基本上，BSP应该只用于原型化一个级别。一旦你对一个级别应该看起来怎样有了基本的概念，你应该开始用静态网格替换它。
- en: Tip
  id: totrans-117
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: CSG and BSP are used interchangeably to refer the geometry in Unreal. Both are
    the same.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: CSG和BSP可以互换用来指代Unreal中的几何形状。两者是相同的。
- en: Creating BSP
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建BSP
- en: 'Unreal Engine 4 comes with seven Brushes and all of them can be customized
    in **Details** panel. They are as follows:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: Unreal Engine 4附带七个笔刷，并且它们都可以在**细节**面板中进行自定义。它们如下：
- en: '**Box**: You can adjust the *X*, *Y*, and *Z* axes and set it to **Hollow**,
    which is a fast way to make a room, and adjust **Wall Thickness**, which defines
    the thickness of the inside walls.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**盒子**: 你可以调整*X*、*Y*和*Z*轴，并将其设置为**空心**，这是一个快速制作房间的快捷方式，并调整**墙厚**，它定义了内部墙壁的厚度。'
- en: '**Cone**: You can customize the number of sides, height, and both outer and
    inner radius in **Details** panel. You can also set this to **Hollow** and adjust
    **Wall Thickness** to define the thickness of the inside walls.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**圆锥**: 你可以在**细节**面板中自定义边数、高度以及外半径和内半径。你还可以将其设置为**空心**，并调整**墙厚**来定义内部墙壁的厚度。'
- en: '**Cylinder**: You can customize the number of sides, height, and both outer
    and inner radius in **Details** panel. You can also set this to **Hollow** and
    adjust **Wall Thickness** to define the thickness of the inside walls.'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**圆柱**: 你可以在**细节**面板中自定义边数、高度以及外半径和内半径。你还可以将其设置为**空心**，并调整**墙厚**来定义内部墙壁的厚度。'
- en: '**Curved Stair**: This creates a staircase shape that bends around an angle
    but cannot wrap over itself.'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**曲线楼梯**: 这将创建一个在角度周围弯曲的楼梯形状，但不能缠绕自身。'
- en: '**Linear Stair**: This creates a straight staircase that does not bend.'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**直线楼梯**: 这将创建一个不弯曲的直楼梯。'
- en: '**Spiral Stair**: This creates a spiral staircase that can repeatedly wrap
    over itself.'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**螺旋楼梯**: 这将创建一个可以反复缠绕自身的螺旋楼梯。'
- en: '**Sphere**: This creates a sphere shape. The radius can be customized in **Details**
    panel.'
  id: totrans-127
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**球体**: 这将创建一个球形。半径可以在**细节**面板中自定义。'
- en: Just like any other actor, you can use **Transform Tools** to move, rotate,
    and scale as you see fit.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 就像任何其他演员一样，您可以使用**变换工具**来移动、旋转和缩放，以适合您的需求。
- en: 'There are two types of **Brushes**. They are as follows:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种类型的**笔刷**。它们如下：
- en: '**Additive**: These brushes are solid. This will *add* geometry to the level.
    For example, you will use the **Additive** type to create walls, floors, ceilings,
    and so on.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**加法**: 这些笔刷是实心的。这将*添加*几何形状到级别中。例如，您将使用**加法**类型来创建墙壁、地板、天花板等。'
- en: '**Subtractive**: These brushes are hollow. This will *subtract* solid space
    from a previously created **Additive** brush. For example, you will use the **Subtractive**
    type to create windows or doors on walls.'
  id: totrans-131
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**减法**: 这些笔刷是空心的。这将*减去*之前创建的**加法**笔刷中的实体空间。例如，您将使用**减法**类型在墙上创建窗户或门。'
- en: You can also convert BSP geometry to **Static Mesh** and save them in **Content
    Browser**, but remember, they will have no UVs or additional Material elements.
    It is also worth mentioning that this is not a good or recommended workflow. You
    should only use BSP to block out your level and later, you should import your
    assets created from a DCC application.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 你还可以将BSP几何形状转换为**静态网格**，并将它们保存在**内容浏览器**中，但请记住，它们将没有UV或额外的材质元素。这也值得提一下，这不是一个好的或推荐的流程。你应该只使用BSP来布局你的级别，然后，你应该导入从DCC应用程序创建的资产。
- en: Tip
  id: totrans-133
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: You can go to **Geometry Editing** mode (*Shift*+*F5*) to edit vertices and
    create a custom shape.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以进入**几何编辑**模式（*Shift*+*F5*）来编辑顶点并创建自定义形状。
- en: Default starting level, splash screen, and game icon
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 默认起始关卡、启动画面和游戏图标
- en: You can change the default starting level for both the game and editor. For
    example, for the game you may want the **Main Menu** map as the default and for
    editor you want another level as the default startup level.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以更改游戏和编辑器的默认起始关卡。例如，对于游戏，您可能希望将**主菜单**地图作为默认，而对于编辑器，您可能希望另一个关卡作为默认启动级别。
- en: 'It''s easy to set them in Unreal editor:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在虚幻编辑器中设置它们很容易：
- en: Click on **Edit** in the menu bar.
  id: totrans-138
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在菜单栏中点击**编辑**。
- en: Click on **Project Settings**.
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**项目设置**。
- en: Go to **Maps &** **Modes**.
  id: totrans-140
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**地图与模式**。
- en: Here, you can change the game and editor default map.![Default starting level,
    splash screen, and game icon](img/B03950_01_15_edited.jpg)
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在这里，您可以更改游戏和编辑器的默认地图。![默认起始关卡、启动画面和游戏图标](img/B03950_01_15_edited.jpg)
- en: 'You can adjust **Splash** screen through **Project Settings**:'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以通过**项目设置**调整**启动画面**：
- en: Go to **Windows** sections.
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 转到**窗口**部分。
- en: Change the **Splash** screen and the game **Icon** from here.
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从这里更改**启动画面**和游戏的**图标**。
- en: Tip
  id: totrans-145
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 小贴士
- en: The default dimensions for **Splash** screens are **600 x 200** and requires
    a **.bmp** image. The game **Icon** requires a **256 x 256** `.ICO` file.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: '**启动画面**的默认尺寸为**600 x 200**，需要**.bmp**图像。游戏**图标**需要**256 x 256**的`.ICO`文件。'
- en: '![Default starting level, splash screen, and game icon](img/B03950_01_16.jpg)'
  id: totrans-147
  prefs: []
  type: TYPE_IMG
  zh: '![默认起始关卡、启动画面和游戏图标](img/B03950_01_16.jpg)'
- en: Summary
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: Now that you understand the basics of Unreal Engine, it's time to import some
    assets from a DCC application such as 3ds Max, Maya, or Blender. In the next chapter,
    we will create a simple mesh in 3ds Max and import it into Unreal Engine and go
    through various options, such as setting up materials, collisions, and LODs.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经了解了虚幻引擎的基础知识，是时候从3ds Max、Maya或Blender等DCC应用程序中导入一些资源了。在下一章中，我们将创建一个简单的网格在3ds
    Max中，并将其导入到虚幻引擎中，并介绍各种选项，例如设置材质、碰撞和LOD。
