["```cpp\nstd::vector<int> numbers = {7, 1471414, 3, 18, 9, 518955};\nauto it = std::partition(numbers.begin(), numbers.end(), [](int n) { return n % 2 == 0; });\n```", "```cpp\nstd::vector<int> data = {1, 2, 3};\n do {\n  for (int num : data) { std::cout << num << \" \"; }\n  std::cout << \"\\n\";\n} while (std::next_permutation(data.begin(), data.end()));\n```", "```cpp\nstd::vector<int> nums = {1, 2, 3, 4, 5};\nstd::rotate(nums.begin(), nums.begin() + 2, nums.end());\n// nums now holds {3, 4, 5, 1, 2}\n```", "```cpp\nstd::vector<int> v = {3, 7, 2, 5, 1, 7, 4, 9};\nstd::make_heap(v.begin(), v.end());\n```", "```cpp\nv.push_back(8);  // Add element to vector\nstd::push_heap(v.begin(), v.end());  // Re-adjust the heap\n```", "```cpp\nstd::pop_heap(v.begin(), v.end());\nv.pop_back();  // Remove the former top element\n```", "```cpp\nstd::sort_heap(v.begin(), v.end());\n```", "```cpp\nbool isHeap = std::is_heap(v.begin(), v.end());\n```"]