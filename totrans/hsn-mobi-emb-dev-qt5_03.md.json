["```cpp\nimport QtQuick 2.12\n```", "```cpp\nText {\n// this is a component\n}\n```", "```cpp\nText {\n   id: textLabel\n}\n```", "```cpp\nMouseArea {\n    onClicked: console.log(\"mouse area clicked!\")\n}\n```", "```cpp\nConnections {\n    target: mouseArea\n    onClicked: console.log(\"mouse area clicked!\")\n}\n```", "```cpp\nListModel {\n    id: myListModel\n    ListElement { carModel: \"Tesla\" }\n    ListElement { carModel: \"Ford Sync 3\" }\n}\n\nComponent {\n    id: theDelegate\n    Text {\n        text: carModel\n    }\n}\n```", "```cpp\n     PathView {\n         id: pathView\n         anchors.fill: parent\n         anchors.margins: 30\n         model: myListModel\n         delegate:  Rectangle {\n             id: theDelegate\n             Text {                 \n                 text: carModel\n             }\n              Image {\n                source: \"/icons8-sedan-64.png\"\n             }\n         }\n         path: Path {\n             startX: 0; startY: 40\n             PathArc { x: 0; y: 400; radiusX:5; radiusY: 5 }\n         }\n     }\n```", "```cpp\nimport QtQuick 2.12\nimport QtQuick.Window 2.12\nWindow {\n    visible: true\n    width: 640\n    height: 480\n    color: \"black\"\n    title: \"You can touch this!\"\n\n    MultiPointTouchArea {        \n        anchors.fill: parent\n        touchPoints: [\n            TouchPoint { id: touch1 },\n            TouchPoint { id: touch2 },\n            TouchPoint { id: touch3 }\n        ]\n        Rectangle {\n            width: 45; height: 45\n            color: \"#80c342\"\n            x: touch1.x\n            y: touch1.y\n            radius: 50\n            Behavior on x  {\n                 PropertyAnimation {easing.type: Easing.OutBounce; duration: 500 }\n             }\n            Behavior on y  {\n                 PropertyAnimation {easing.type: Easing.OutBounce; duration: 500 }\n             }\n     }\n     Rectangle {\n         width: 45; height: 45\n         color: \"#b40000\"\n         x: touch2.x\n         y: touch2.y\n         radius: 50\n            Behavior on x  {\n                 PropertyAnimation {easing.type: Easing.OutBounce; duration: 500 }\n             }\n            Behavior on y  {\n                 PropertyAnimation {easing.type: Easing.OutBounce; duration: 500 }\n             }\n     }\n     Rectangle {\n         width: 45; height: 45\n         color: \"#6b11d8\"\n         x: touch2.x\n         y: touch2.y\n         radius: 50\n            Behavior on x  {\n                 PropertyAnimation {easing.type: Easing.OutBounce; duration: 500 }\n             }\n            Behavior on y  {\n                 PropertyAnimation {easing.type: Easing.OutBounce; duration: 500 }\n             }\n         }\n       }\n}\n```", "```cpp\nimport QtQuick 2.12\nimport QtQuick.Window 2.12\n\nWindow {\n    visible: true\n    width: 640\n    height: 480\n    title: qsTr(\"Hello World\")\n    Rectangle {\n        width: 35\n        height: 35\n        gradient: Gradient {\n            GradientStop { position: 0.0; color: \"green\"; }\n            GradientStop { position: 0.25; color: \"purple\"; }\n            GradientStop { position: 0.5; color: \"yellow\"; }\n            GradientStop { position: 1.0; color: \"black\"; }\n        }\n    }\n    Text {\n        text: \"Hands-On\"\n        color: \"purple\"\n        font.pointSize: 20\n    }\n    Text {\n        text: \"Mobile\"\n        color: \"red\"\n        font.pointSize: 20\n    }\n    Text {\n        text: \"and Embedded\"\n        color: \"blue\"\n        font.pointSize: 20\n    }\n}\n```", "```cpp\n\nRectangle {\n width: 500\n height: 500\n     Column {\n         Rectangle {\n             width: 35\n             height: 35\n             gradient: Gradient {\n                 GradientStop { position: 0.0; color: \"green\"; }\n                 GradientStop { position: 0.25; color: \"purple\"; }\n                 GradientStop { position: 0.5; color: \"yellow\"; }\n                 GradientStop { position: 1.0; color: \"black\"; }\n             }\n         }\n\n         Text {\n             text: \"Hands-On\"\n             color: \"purple\"\n             font.pointSize: 20\n         }\n\n         Text {\n             text: \"Mobile\"\n             color: \"red\"\n             font.pointSize: 20\n         }\n\n         Text {\n             text: \"and Embedded\"\n             color: \"blue\"\n             font.pointSize: 20\n         }\n    }\n}\n```", "```cpp\n    Flow {\n        anchors.fill: parent\n        anchors.margins: 4\n        spacing: 10\n```", "```cpp\n    GridLayout {\n        rows: 3\n        columns: 2\n        Text {\n            text: \"Hands-On\"\n            color: \"purple\"\n            font.pointSize: 20\n        }\n        Text {\n            text: \"Mobile\"\n            color: \"red\"\n            font.pointSize: 20\n        }\n         Text {\n            text: \"and Embedded\"\n            color: \"blue\"\n            font.pointSize: 20\n            Layout.fillHeight: true\n         }\n    }\n```", "```cpp\nImage{ id: image1; source: \"image1.png\"; }\nImage{ id: image2; source: \"image2.png; anchors.left: image1.right; }\n```", "```cpp\nimport QtQuick 2.12\nimport QtQuick.Window 2.12\n\nWindow {\n   visible: true\n   width: 500\n   height: 500\n\n   Rectangle {\n     anchors.fill: parent\n\n       Text {\n           id: textLabel\n           text: \"Hands-On Mobile and Embedded\"\n           color: \"purple\"\n           font.pointSize: 20\n           anchors.top: parent.top\n           anchors.horizontalCenter: parent.horizontalCenter\n       }\n   }\n}\n```", "```cpp\ngradient: Gradient {\n    GradientStop { position: 0.0; color: \"green\"; }\n    GradientStop { position: 0.25; color: \"purple\"; }\n    GradientStop { position: 0.75; color: \"yellow\"; }\n    GradientStop { position: 1.0; color: \"black\"; }\n}\n```", "```cpp\nimport QtQuick 2.12\nimport QtQuick.Controls 2.3\nimport QtQuick.Dialogs 1.1\n\nApplicationWindow {\n   visible: true\n   title: \"Mobile and Embedded\"\n   menuBar: MenuBar {\n      Menu { title: \"File\"\n          MenuItem { text: \"Open \"\n              onTriggered: helloDialog.open()\n          }\n      }\n   }\n   header: TextField {\n       placeholderText: \"Remember the Qt 4 Dance video?\"\n   }\n   MessageDialog {\n       id: helloDialog\n       title: \"Hello Mobile!\"\n       text: \"Qt for Embedded devices to rule the world!\"\n   }\n}\n```", "```cpp\n    SwipeView {\n        id: swipeView\n        anchors.fill: parent\n\n        Page {\n            id: page1\n            anchors.fill: parent.fill\n            header: Label {\n                text: \"Working\"\n                font.pixelSize: Qt.application.font.pixelSize * 2\n                padding: 10\n            }\n            BusyIndicator {\n                id: busyId\n                anchors.centerIn: parent\n                running: true;\n            }\n            Label {\n                text: \"Busy Working\"\n                anchors.top: busyId.bottom\n                anchors.horizontalCenter: parent.horizontalCenter\n            }\n        }\n\n        Page {\n            id: page2\n            anchors.fill: parent.fill\n            header: Label {\n                text: \"Go Back\"\n                font.pixelSize: Qt.application.font.pixelSize * 2\n                padding: 10\n            }\n            Label {\n                text: \"Nothing here to see. Move along, move along.\"\n                anchors.centerIn: parent\n            }\n        }\n }\n\n PageIndicator {\n     id: indicator\n     count: swipeView.count\n     currentIndex: swipeView.currentIndex\n     anchors.bottom: swipeView.bottom\n     anchors.horizontalCenter: parent.horizontalCenter\n }\n```", "```cpp\n                Button {\n                    text: \"Click to go back\"\n                    background: Rectangle {\n                        color: \"#673AB7\"\n                        radius: 50\n                        border.color: \"#4CAF50\"\n                        border.width: 2\n                    }\n                    onClicked: swipeView.currentIndex = 0\n                }\n```", "```cpp\nimport QtCharts 2.0\nChartView {     \n    title: \"Australian Rain\"     \n    anchors.fill: parent     \n    legend.alignment: Qt.AlignBottom     \n    antialiasing: true     \n\n    BarSeries {         \n        id: mySeries         \n        axisX: BarCategoryAxis { \n            categories: [\"2015\", \"2016\", \"2017\" ] \n        }         \n        BarSet { label: \"Adelaide\"; values: [536, 821, 395] }         \n        BarSet { label: \"Brisbane\"; values: [1076, 759, 1263] }         \n        BarSet { label: \"Darwin\"; values: [2201, 1363, 1744] }\n        BarSet { label: \"Melbourne\"; values: [526, 601, 401] }\n        BarSet { label: \"Perth\"; values: [729, 674, 578] }\n        BarSet { label: \"Sydney\"; values: [1076, 1386, 1338] }\n   } \n}\n```", "```cpp\nimport QtQuick 2.12\nimport QtQuick.Window 2.12\nimport QtDataVisualization 1.2\nWindow {\n    visible: true\n    width: 640\n    height: 480\n    title: qsTr(\"Australian Rain\")\n    Bars3D {\n        width: parent.width\n        height: parent.height\n        theme: Theme3D {\n            type: Theme3D.ThemeQt\n            labelBorderEnabled: true\n            font.pointSize: 75\n            labelBackgroundEnabled: true\n        }\n        Bar3DSeries {\n            itemLabelFormat: \"@colLabel, @rowLabel: @valueLabel\"\n            ItemModelBarDataProxy {\n                itemModel: dataModel\n                rowRole: \"year\"\n                columnRole: \"city\"\n                valueRole: \"total\"\n            }\n        }\n    }\n    ListModel {\n        id: dataModel\n        ListElement{ year: \"2017\"; city: \"Adelaide\"; total: \"536\"; }\n        ListElement{ year: \"2016\"; city: \"Adelaide\"; total: \"821\"; }\n        ListElement{ year: \"2015\"; city: \"Adelaide\"; total: \"395\"; }\n        ListElement{ year: \"2017\"; city: \"Brisbane\"; total: \"1076\"; }\n        ListElement{ year: \"2016\"; city: \"Brisbane\"; total: \"759\"; }\n        ListElement{ year: \"2015\"; city: \"Brisbane\"; total: \"1263\"; }\n        ListElement{ year: \"2017\"; city: \"Darwin\"; total: \"2201\"; }\n        ListElement{ year: \"2016\"; city: \"Darwin\"; total: \"1363\"; }\n        ListElement{ year: \"2015\"; city: \"Darwin\"; total: \"1744\"; }\n        ListElement{ year: \"2017\"; city: \"Melbourne\"; total: \"526\"; }\n        ListElement{ year: \"2016\"; city: \"Melbourne\"; total: \"601\"; }\n        ListElement{ year: \"2015\"; city: \"Melbourne\"; total: \"401\"; }\n        ListElement{ year: \"2017\"; city: \"Perth\"; total: \"729\"; }\n        ListElement{ year: \"2016\"; city: \"Perth\"; total: \"674\"; }\n        ListElement{ year: \"2015\"; city: \"Perth\"; total: \"578\"; }\n        ListElement{ year: \"2017\"; city: \"Sydney\"; total: \"1076\"; }\n        ListElement{ year: \"2016\"; city: \"Sydney\"; total: \"1386\"; }\n        ListElement{ year: \"2015\"; city: \"Sydney\"; total: \"1338\"; }\n    }\n}\n\n```", "```cpp\nstates : [\n    State {\n        name: \"phase1\"\n        PropertyChanges { target: someTarget; someproperty: \"some value\";}\n    },\n    State {\n        name: \"phase2\"\n        PropertyChanges { target: someTarget; someproperty: \"some other value\";}\n    }\n]\n```", "```cpp\nfunction phase3Script() {\n    console.log(\"demonstrate a state running a script\");\n}\n\nState {\n    name: \"phase3\"\n    StateChangeScript {\n        name: \"phase3Action\"\n        script: phase3Script()\n    }\n}\n```", "```cpp\nBehavior on activeFocus { PropertyAnimation { target: myItem; property: color; to: \"green\"; } }\n```", "```cpp\nNumberAnimation { target: myOtherItem; property: \"y\"; to: 65; duration: 250 }\n```", "```cpp\nSequentialAnimation {\n    NumberAnimation { target: myOtherItem; property: \"x\"; to: 35; duration: 1500 }\n    NumberAnimation { target: myOtherItem; property: \"y\"; to: 65; duration: 1500 }\n}\n```", "```cpp\nParallelAnimation {\n    NumberAnimation { target: myOtherItem; property: \"x\"; to: 35; duration: 1500 }\n    NumberAnimation { target: myOtherItem; property: \"y\"; to: 65; duration: 1500 }\n}\n```", "```cpp\nimport QtQuick 2.12\nimport QtQuick.Window 2.12\nWindow {\n    visible: true\n    width: 640\n    height: 480\n    color: \"black\"\n    title: qsTr(\"Red Bouncy Box\")\n    Rectangle {\n        id: redBox\n        width: 50; height: 50\n        color: \"black\"\n        border.width: 4\n        border.color: \"red\"\n        Behavior on x { SpringAnimation { spring: 10; damping: 10; } }\n        Behavior on y { SpringAnimation { spring: 10; damping: .1;  mass: 10 } }\n    }    \n    MouseArea {\n        anchors.fill: parent\n        hoverEnabled: true\n        onClicked: animation.start()\n        onPositionChanged: {\n            redBox.x = mouse.x - redBox.width/2\n            redBox.y = mouse.y - redBox.height/2\n        }\n    }\n    ParallelAnimation {\n        id: animation\n        NumberAnimation { target: redBox; property: \"x\"; to: 35; duration: 1500 }\n        NumberAnimation { target: redBox; property: \"y\"; to: 65; duration: 1500 }\n    }\n}\n```"]