["```cpp\n/** Base turn rate, in deg/sec. Other scaling may affect final turn rate. */\nUPROPERTY(VisibleAnywhere, BlueprintReadOnly, Category=Camera)\nfloat BaseTurnRate;\n```", "```cpp\npublic:\n        /** Modifier to our turn and pitch rate when in stealth mode */\n        UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Gameplay)\n        float StealthPitchYawScale = 0.5f;\n```", "```cpp\npublic:\n        virtual void SetupPlayerInputComponent(UInputComponent* PlayerInputComponent) override;\n\n        virtual void AddControllerPitchInput(float Val) override;\n        virtual void AddControllerYawInput(float Val) override;\n\n        void Stealth();\n        void UnStealth();\n\nprotected:\n        bool bIsStealthed = false;\n```", "```cpp\nvoid AStealthCharacter::SetupPlayerInputComponent(UInputComponent* PlayerInputComponent)\n{\n        // Bind jump events\n        PlayerInputComponent->BindAction(\"Stealth\", IE_Pressed, this, &AStealthCharacter::Stealth);\n        PlayerInputComponent->BindAction(\"Stealth\", IE_Released, this, &AStealthCharacter::UnStealth);\n\n        Super::SetupPlayerInputComponent(PlayerInputComponent);\n}\n\nvoid AStealthCharacter::AddControllerPitchInput(float Val)\n{\n        const float fScale = bIsStealthed ? StealthPitchYawScale : 1.0f;\n\n        Super::AddControllerPitchInput(Val * fScale);\n}\n\nvoid AStealthCharacter::AddControllerYawInput(float Val)\n{\n        const float fScale = bIsStealthed ? StealthPitchYawScale : 1.0f;\n\n        Super::AddControllerYawInput(Val * fScale);\n}\n\nvoid AStealthCharacter::Stealth()\n{\n        bIsStealthed = true;\n        Super::Crouch();\n}\n\nvoid AStealthCharacter::UnStealth()\n{\n        bIsStealthed = false;\n        Super::UnCrouch();\n}\n```"]