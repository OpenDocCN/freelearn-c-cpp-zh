["```cpp\n    //  22: Set PA5(LED_PIN) high\n    GPIOA_OD_R |= LED_PIN;\n    ```", "```cpp\n    //  22: Toggle PA5(LED_PIN)\n    GPIOA_OD_R ^= LED_PIN;\n    for(int i = 0; i < 100000; i++){} // Delay loop for visible blinking\n    ```", "```cpp\n    main.c file. However, before pasting this command into the command prompt, remove the -fcyclomatic-complexity flag, as it is not supported by some versions of the GNU Toolchain for Arm. Paste the command into a text editor, delete the flag, and then copy the modified command into the command prompt. The command for line number 3 should look like this:\n\n    ```", "```cpp\n\n    ```", "```cpp\n    arm-none-eabi-size command to display the size of our output .elf file. This will give us insights into the sizes of various sections, such as text, data, and bss. We will discuss these sections in detail later in the book, particularly when we delve into writing linker scripts.\n    ```", "```cpp\nC:\\Users\\Ninsaw\\Documents\\tempWorkspace\\2_RegisterManipulation\\Debug>arm-none-eabi-size   2_RegisterManipulation.elf\n```", "```cpp\narm-none-eabi-objcopy -O binary 2_RegisterManipulation.elf 2_RegisterManipulation.bin\n```", "```cpp\n    st_nucleo_f4.cfg, contains all the necessary settings for OpenOCD to communicate with the development board.\n    ```", "```cpp\narm-none-eabi-gdb\n```", "```cpp\ntarget remote localhost:3333\n```", "```cpp\nmonitor reset init\n```", "```cpp\nmonitor flash write_image erase 2_RegisterManipulation.elf\n```", "```cpp\nmonitor reset init\n```", "```cpp\nmonitor resume\n```"]