["```cpp\nint max(int a, int b) {\n  return a > b ? a : b;\n}\nint max_3(int a, int b, int c) {\n  int temp = max(a, b);\n  return c > temp ? c : temp;\n}\n```", "```cpp\nint max(int, int);\nint max_3(int, int, int);\nint a = 5;\nint b = 10;\nint main(int argc, char** argv) {\n  int m1 = max(a, b);\n  int m2 = max_3(5, 8, -1);\n  return 0;\n}\n```", "```cpp\n$ gcc -c ExtremeC_examples_chapter3_1_funcs.c  -o funcs.o\n$ gcc -c ExtremeC_examples_chapter3_1.c -o main.o\n$\n```", "```cpp\n$ readelf -hSl funcs.o\n[7/7]\nELF Header:\n  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00\n  Class:                             ELF64\n  Data:                              2's complement, little endian\n  Version:                           1 (current)\n  OS/ABI:                            UNIX - System V\n  ABI Version:                       0\n  Type:                              REL (Relocatable file)\n  Machine:                           Advanced Micro Devices X86-64\n...\n  Number of section headers:         12\n  Section header string table index: 11\nSection Headers:\n  [Nr] Name              Type             Address           Offset\n       Size              EntSize          Flags  Link  Info  Align\n  [ 0]                   NULL             0000000000000000  00000000\n       0000000000000000  0000000000000000           0     0     0\n  [ 1] .text             PROGBITS         0000000000000000  00000040\n       0000000000000045  0000000000000000  AX       0     0     1\n...\n  [ 3] .data             PROGBITS         0000000000000000  00000085\n       0000000000000000  0000000000000000  WA       0     0     1\n  [ 4] .bss              NOBITS           0000000000000000  00000085\n       0000000000000000  0000000000000000  WA       0     0     1\n...\n  [ 9] .symtab           SYMTAB           0000000000000000  00000110\n       00000000000000f0  0000000000000018          10     8     8\n  [10] .strtab           STRTAB           0000000000000000  00000200\n       0000000000000030  0000000000000000           0     0     1\n  [11] .shstrtab         STRTAB           0000000000000000  00000278\n       0000000000000059  0000000000000000           0     0     1\n...\n$\n```", "```cpp\n$ readelf -s funcs.o\nSymbol table '.symtab' contains 10 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND\n...\n     6: 0000000000000000     0 SECTION LOCAL  DEFAULT    7\n     7: 0000000000000000     0 SECTION LOCAL  DEFAULT    5\n     8: 0000000000000000    22 FUNC    GLOBAL DEFAULT    1 max\n     9: 0000000000000016    47 FUNC    GLOBAL DEFAULT    1 max_3\n$\n```", "```cpp\n$ readelf -s main.o\nSymbol table '.symtab' contains 14 entries:\n   Num:    Value          Size Type    Bind   Vis      Ndx Name\n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND\n...\n     8: 0000000000000000     4 OBJECT  GLOBAL DEFAULT    3 a\n     9: 0000000000000004     4 OBJECT  GLOBAL DEFAULT    3 b\n    10: 0000000000000000    69 FUNC    GLOBAL DEFAULT    1 main\n    11: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND _GLOBAL_OFFSET_TABLE_\n    12: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND max\n    13: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT  UND max_3\n$\n```", "```cpp\n$ gcc funcs.o main.o -o ex3_1.out\n$ \n```", "```cpp\n$ readelf -hSl ex3_1.out\nELF Header:\n  Magic:   7f 45 4c 46 02 01 01 00 00 00 00 00 00 00 00 00\n  Class:                             ELF64\n  Data:                              2's complement, little endian\n  Version:                           1 (current)\n  OS/ABI:                            UNIX - System V\n  ABI Version:                       0\n  Type:                              DYN (Shared object file) \n  Machine:                           Advanced Micro Devices X86-64 \n  Version:                           0x1\n  Entry point address:               0x4f0\n  Start of program headers:          64 (bytes into file)\n  Start of section headers:          6576 (bytes into file)\n  Flags:                             0x0\n  Size of this header:               64 (bytes)\n  Size of program headers:           56 (bytes)\n  Number of program headers:         9\n  Size of section headers:           64 (bytes)\n  Number of section headers:         28\n  Section header string table index: 27\nSection Headers: \n  [Nr] Name              Type             Address           Offset \n       Size              EntSize          Flags  Link  Info  Align \n  [ 0]                   NULL             0000000000000000  00000000 \n      0000000000000000  0000000000000000           0     0     0 \n  [ 1] .interp           PROGBITS         0000000000000238  00000238 \n       000000000000001c  0000000000000000   A       0     0     1 \n  [ 2] .note.ABI-tag     NOTE             0000000000000254  00000254 \n       0000000000000020  0000000000000000   A       0     0     4 \n  [ 3] .note.gnu.build-i NOTE             0000000000000274  00000274 \n       0000000000000024  0000000000000000   A       0     0     4 \n... \n  [26] .strtab           STRTAB           0000000000000000  00001678 \n       0000000000000239  0000000000000000           0     0     1 \n  [27] .shstrtab         STRTAB           0000000000000000  000018b1 \n       00000000000000f9  0000000000000000           0     0     1 \nKey to Flags: \n  W (write), A (alloc), X (execute), M (merge), S (strings), I (info), \n  L (link order), O (extra OS processing required), G (group), T (TLS), \n  C (compressed), x (unknown), o (OS specific), E (exclude), \n  l (large), p (processor specific) \nProgram Headers: \n  Type           Offset             VirtAddr           PhysAddr \n                 FileSiz            MemSiz              Flags  Align \n  PHDR           0x0000000000000040 0x0000000000000040 0x0000000000000040 \n                 0x00000000000001f8 0x00000000000001f8  R      0x8 \n  INTERP         0x0000000000000238 0x0000000000000238 0x0000000000000238 \n                 0x000000000000001c 0x000000000000001c  R      0x1 \n      [Requesting program interpreter: /lib64/ld-linux-x86-64.so.2] \n... \n  GNU_EH_FRAME   0x0000000000000714 0x0000000000000714 0x0000000000000714 \n                 0x000000000000004c 0x000000000000004c  R      0x4 \n  GNU_STACK      0x0000000000000000 0x0000000000000000 0x0000000000000000 \n                 0x0000000000000000 0x0000000000000000  RW     0x10 \n  GNU_RELRO      0x0000000000000df0 0x0000000000200df0 0x0000000000200df0 \n                 0x0000000000000210 0x0000000000000210  R      0x1 \nSection to Segment mapping: \n  Segment Sections... \n   00 \n   01     .interp \n   02     .interp .note.ABI-tag .note.gnu.build-id .gnu.hash .dynsym .dynstr .gnu.version .gnu.version_r .rela.dyn .init .plt .plt.got .text .fini .rodata .eh_frame_hdr .eh_frame \n   03     .init_array .fini_array .dynamic .got .data .bss \n   04     .dynamic \n   05     .note.ABI-tag .note.gnu.build-id \n   06     .eh_frame_hdr \n   07 \n   08     .init_array .fini_array .dynamic .got \n$\n```", "```cpp\n$ readelf -s ex3_1.out\nSymbol table '.dynsym' contains 6 entries: \n   Num:    Value          Size Type    Bind   Vis      Ndx Name \n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n... \n     5: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@GLIBC_2.2.5 (2) \nSymbol table '.symtab' contains 66 entries: \n   Num:    Value          Size Type    Bind   Vis      Ndx Name \n     0: 0000000000000000     0 NOTYPE  LOCAL  DEFAULT  UND \n... \n    45: 0000000000201000     0 NOTYPE  WEAK   DEFAULT   22 data_start \n    46: 0000000000000610    47 FUNC    GLOBAL DEFAULT   13 max_3 \n    47: 0000000000201014     4 OBJECT  GLOBAL DEFAULT   22 b \n    48: 0000000000201018     0 NOTYPE  GLOBAL DEFAULT   22 _edata \n    49: 0000000000000704     0 FUNC    GLOBAL DEFAULT   14 _fini \n    50: 00000000000005fa    22 FUNC    GLOBAL DEFAULT   13 max \n    51: 0000000000000000     0 FUNC    GLOBAL DEFAULT  UND __libc_start_main@@GLIBC_ \n... \n    64: 0000000000000000     0 FUNC    WEAK   DEFAULT  UND __cxa_finalize@@GLIBC_2.2 \n    65: 00000000000004b8     0 FUNC    GLOBAL DEFAULT   10 _init \n$\n```", "```cpp\n$ gcc -c aa.c -o aa.o\n$ gcc -c bb.c -o bb.o\n.\n.\n.\n$ gcc -c zz.c -o zz.o\n$\n```", "```cpp\n$ ar crs libexample.a aa.o bb.o ... zz.o\n$\n```", "```cpp\n#ifndef EXTREME_C_EXAMPLES_CHAPTER_3_2_H\n#define EXTREME_C_EXAMPLES_CHAPTER_3_2_H\n#define PI 3.14159265359\ntypedef struct {\n  double x;\n  double y;\n} cartesian_pos_2d_t;\ntypedef struct {\n  double length;\n  // in degrees\n  double theta;\n} polar_pos_2d_t;\ntypedef struct {\n  double x;\n  double y;\n  double z;\n} cartesian_pos_3d_t;\ntypedef struct {\n  double length;\n  // in degrees\n  double theta;\n  // in degrees\n  double phi;\n} polar_pos_3d_t;\ndouble to_radian(double deg);\ndouble to_degree(double rad);\ndouble cos_deg(double deg);\ndouble acos_deg(double deg);\ndouble sin_deg(double deg);\ndouble asin_deg(double deg);\ncartesian_pos_2d_t convert_to_2d_cartesian_pos(\n        const polar_pos_2d_t* polar_pos);\npolar_pos_2d_t convert_to_2d_polar_pos(\n        const cartesian_pos_2d_t* cartesian_pos);\ncartesian_pos_3d_t convert_to_3d_cartesian_pos(\n        const polar_pos_3d_t* polar_pos);\npolar_pos_3d_t convert_to_3d_polar_pos(\n        const cartesian_pos_3d_t* cartesian_pos);\n#endif\n```", "```cpp\n#include <math.h>\n// We need to include the header file since\n// we want to use the macro PI\n#include \"ExtremeC_examples_chapter3_2_geometry.h\"\ndouble to_radian(double deg) {\n  return (PI * deg) / 180;\n}\ndouble to_degree(double rad) {\n  return (180 * rad) / PI;\n}\ndouble cos_deg(double deg) {\n  return cos(to_radian(deg));\n}\ndouble acos_deg(double deg) {\n  return acos(to_radian(deg));\n}\ndouble sin_deg(double deg) {\n  return sin(to_radian(deg));\n}\ndouble asin_deg(double deg) {\n  return asin(to_radian(deg));\n}\n```", "```cpp\n#include <math.h>\n// We need to include the header file since we want\n// to use the types polar_pos_2d_t, cartesian_pos_2d_t,\n// etc and the trigonometry functions implemented in\n// another source file.\n#include \"ExtremeC_examples_chapter3_2_geometry.h\"\ncartesian_pos_2d_t convert_to_2d_cartesian_pos(\n        const polar_pos_2d_t* polar_pos) {\n  cartesian_pos_2d_t result;\n  result.x = polar_pos->length * cos_deg(polar_pos->theta);\n  result.y = polar_pos->length * sin_deg(polar_pos->theta);\n  return result;\n}\npolar_pos_2d_t convert_to_2d_polar_pos(\n        const cartesian_pos_2d_t* cartesian_pos) {\n  polar_pos_2d_t result;\n  result.length = sqrt(cartesian_pos->x * cartesian_pos->x +\n    cartesian_pos->y * cartesian_pos->y);\n  result.theta =\n      to_degree(atan(cartesian_pos->y / cartesian_pos->x));\n  return result;\n}\n```", "```cpp\n#include <math.h>\n// We need to include the header file since we want to\n// use the types polar_pos_3d_t, cartesian_pos_3d_t,\n// etc and the trigonometry functions implemented in\n// another source file.\n#include \"ExtremeC_examples_chapter3_2_geometry.h\"\ncartesian_pos_3d_t convert_to_3d_cartesian_pos(\n        const polar_pos_3d_t* polar_pos) {\n  cartesian_pos_3d_t result;\n  result.x = polar_pos->length *\n      sin_deg(polar_pos->theta) * cos_deg(polar_pos->phi);\n  result.y = polar_pos->length *\n      sin_deg(polar_pos->theta) * sin_deg(polar_pos->phi);\n  result.z = polar_pos->length * cos_deg(polar_pos->theta);\n  return result;\n}\npolar_pos_3d_t convert_to_3d_polar_pos(\n        const cartesian_pos_3d_t* cartesian_pos) {\n  polar_pos_3d_t result;\n  result.length = sqrt(cartesian_pos->x * cartesian_pos->x +\n    cartesian_pos->y * cartesian_pos->y +\n    cartesian_pos->z * cartesian_pos->z);\n  result.theta =\n      to_degree(acos(cartesian_pos->z / result.length));\n  result.phi =\n      to_degree(atan(cartesian_pos->y / cartesian_pos->x));\n  return result;\n}\n```", "```cpp\n$ gcc -c ExtremeC_examples_chapter3_2_trigon.c -o trigon.o\n$ gcc -c ExtremeC_examples_chapter3_2_2d.c -o 2d.o\n$ gcc -c ExtremeC_examples_chapter3_2_3d.c -o 3d.o\n$\n```", "```cpp\n$ ar crs libgeometry.a trigon.o 2d.o 3d.o\n$ mkdir -p /opt/geometry\n$ mv libgeometry.a /opt/geometry\n$\n```", "```cpp\n$ ar t /opt/geometry/libgeometry.a\ntrigon.o\n2d.o\n3d.o\n$\n```", "```cpp\n#include <stdio.h>\n#include \"ExtremeC_examples_chapter3_2_geometry.h\"\nint main(int argc, char** argv) {\n  cartesian_pos_2d_t cartesian_pos;\n  cartesian_pos.x = 100;\n  cartesian_pos.y = 200;\n  polar_pos_2d_t polar_pos =\n      convert_to_2d_polar_pos(&cartesian_pos);\n  printf(\"Polar Position: Length: %f, Theta: %f (deg)\\n\",\n    polar_pos.length, polar_pos.theta);\n  return 0;\n}\n```", "```cpp\n$ gcc -c ExtremeC_examples_chapter3_3.c -o main.o\n$\n```", "```cpp\n$ gcc main.o -L/opt/geometry -lgeometry -lm -o ex3_3.out\n$\n```", "```cpp\n$ gcc -c ExtremeC_examples_chapter3_2_2d.c -fPIC -o 2d.o\n$ gcc -c ExtremeC_examples_chapter3_2_3d.c -fPIC -o 3d.o\n$ gcc -c ExtremeC_examples_chapter3_2_trigon.c -fPIC -o trigon.o\n$\n```", "```cpp\n$ gcc -shared 2d.o 3d.o trigon.o -o libgeometry.so\n$ mkdir -p /opt/geometry\n$ mv libgeometry.so /opt/geometry\n$\n```", "```cpp\n$ rm -fv /opt/geometry/libgeometry.a\n$ gcc -c ExtremeC_examples_chapter3_3.c -o main.o\n$ gcc main.o -L/opt/geometry-lgeometry -lm -o ex3_3.out\n$\n```", "```cpp\n$ ./ex3_3.out\n./ex3_3.out: error while loading shared libraries: libgeometry.so: cannot open shared object file: No such file or directory\n$\n```", "```cpp\n$ export LD_LIBRARY_PATH=/opt/geometry \n$ ./ex3_3.out\nPolar Position: Length: 223.606798, Theta: 63.434949 (deg)\n$\n```", "```cpp\n$ LD_LIBRARY_PATH=/opt/geometry ./ex3_3.out\nPolar Position: Length: 223.606798, Theta: 63.434949 (deg)\n$\n```", "```cpp\n$ gcc -shared 2d.o 3d.o trigon.o -lm -o libgeometry.so\n$\n```", "```cpp\n#include <stdio.h>\n#include <stdlib.h>\n#include <dlfcn.h>\n#include \"ExtremeC_examples_chapter3_2_geometry.h\"\npolar_pos_2d_t (*func_ptr)(cartesian_pos_2d_t*);\nint main(int argc, char** argv) {\n  void* handle = dlopen (\"/opt/geometry/libgeometry.so\", RTLD_LAZY);\n  if (!handle) {\n    fprintf(stderr, \"%s\\n\", dlerror());\n    exit(1);\n  }\n  func_ptr = dlsym(handle, \"convert_to_2d_polar_pos\");\n  if (!func_ptr)  {\n    fprintf(stderr, \"%s\\n\", dlerror());\n    exit(1);\n  }\n  cartesian_pos_2d_t cartesian_pos;\n  cartesian_pos.x = 100;\n  cartesian_pos.y = 200;\n  polar_pos_2d_t polar_pos = func_ptr(&cartesian_pos);\n  printf(\"Polar Position: Length: %f, Theta: %f (deg)\\n\",\n    polar_pos.length, polar_pos.theta);\n  return 0;\n}\n```", "```cpp\n$ gcc ExtremeC_examples_chapter3_4.c -ldl -o ex3_4.out\n$ ./ex3_4.out\nPolar Position: Length: 223.606798, Theta: 63.434949 (deg)\n$\n```"]