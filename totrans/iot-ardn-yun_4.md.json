["```cpp\nint speed_motor1 = 6;  \nint speed_motor2 = 5;\nint direction_motor1 = 7;\nint direction_motor2 = 4;\n```", "```cpp\nint distance_sensor = A0;\n```", "```cpp\nint robot_speed;\n```", "```cpp\nfor(int i=4;i<=7;i++)\n{  \n  pinMode(i, OUTPUT);\n}\n```", "```cpp\nsend_motor_command(speed_motor1,direction_motor1,robot_speed,1);\n```", "```cpp\nanalogWrite(speed_pin,pwm);\n```", "```cpp\ndigitalWrite(direction_pin,dir);\n```", "```cpp\nSerial.println(measure_distance(A0));\n```", "```cpp\nunsigned long DistanceMeasured=pulseIn(pin,LOW);\n```", "```cpp\nDistance=DistanceMeasured/50;\n```", "```cpp\nreturn Distance;\n```", "```cpp\nrobot_speed++;\nif (robot_speed > 255) {robot_speed = 75;}\n```", "```cpp\n#include <Wire.h>\n```", "```cpp\nWire.begin(4);\nWire.onReceive(receiveEvent);\n```", "```cpp\nspeed_motor_1,direction_motor_1,speed_motor_2,direction_motor_2\n```", "```cpp\nint pwm1 = Wire.read();\nSerial.print(pwm1);\nchar c = Wire.read();\nSerial.print(c);\n```", "```cpp\nsend_motor_command(speed_motor1,direction_motor1,pwm1,dir1); send_motor_command(speed_motor2,direction_motor2,pwm2,dir2);\n```", "```cpp\nmyarduinoyun.local/arduino/robot/stop\n```", "```cpp\n#include <Wire.h>\n#include <Bridge.h>\n#include <YunServer.h>\n#include <YunClient.h>\n```", "```cpp\nYunServer server;\n```", "```cpp\nWire.begin();\n```", "```cpp\nBridge.begin();\n```", "```cpp\nserver.listenOnLocalhost();\nserver.begin();\n```", "```cpp\nYunClient client = server.accept();\n```", "```cpp\nif (client) {\n  // Process request\n  process(client);\n\n  // Close connection and free resources.\n  client.stop();\n  }\n```", "```cpp\nString command = client.readStringUntil('/');\n\nif (command == \"robot\") {   \n  robotCommand(client);\n}\n```", "```cpp\n255,0,255,0\n```", "```cpp\nif (command == \"fullfw\") {\n  Wire.beginTransmission(4);\n  Wire.write(255);\n  Wire.write(\",\");\n  Wire.write(0);\n  Wire.write(\",\");\n  Wire.write(255);\n  Wire.write(\",\");\n  Wire.write(0);\n  Wire.endTransmission();\n}\n```", "```cpp\nmyarduinoyun.local/arduino/robot/turnright\n```", "```cpp\nmyarduinoyun.local/arduino/robot/stop\n```", "```cpp\nmyarduinoyun.local/arduino/robot/getdistance\n```", "```cpp\n<input type=\"button\" id=\"stop\" class=\"commandButton\" value=\"Stop\" onClick=\"stopRobot()\"/>\n```", "```cpp\n<div id=\"distanceDisplay\"></div>\n```", "```cpp\n<script type=\"text/javascript\">\n  setInterval(function() {\n    $(\"#distanceDisplay\").load('get_distance.php');\n  }, 1000);\n</script>\n```", "```cpp\n$service_url = 'http://myarduinoyun.local/arduino/robot/getdistance';\n```", "```cpp\n$curl = curl_init($service_url);\n```", "```cpp\n$curl_response = curl_exec($curl);\n```", "```cpp\necho $curl_response;\n```", "```cpp\nfunction stopRobot(){\n     $.get( \"update_state.php\", {command: \"stop\"} );\n}\n```", "```cpp\nfunction turnRight(){\n\n  $.get( \"update_state.php\", { command: \"turnright\"} );\n  sleep(350);\n  $.get( \"update_state.php\", { command: \"stop\"} );\n}\n```", "```cpp\nfunction sleep(milliseconds) {\n  var start = new Date().getTime();\n  for (var i = 0; i < 1e7; i++) {\n    if ((new Date().getTime() - start) > milliseconds){\n      break;\n    }\n  }\n}\n```"]