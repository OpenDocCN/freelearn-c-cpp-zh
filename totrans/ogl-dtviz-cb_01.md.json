["```cpp\n     xcode-select --install\n\n    ```", "```cpp\n    sudo port install cmake +gui\n\n    ```", "```cpp\n    sudo apt-get update\n\n    ```", "```cpp\n    sudo apt-get install build-essential cmake-gui xorg-dev libglu1-mesa-dev mesa-utils\n\n    ```", "```cpp\n    gcc --version\n\n    ```", "```cpp\nsudo port install glfw\n\n```", "```cpp\n    mkdir ~/opengl_dev\n    cd ~/opengl_dev\n\n    ```", "```cpp\n    tar xzvf glfw-3.0.4.tar.gz\n\n    ```", "```cpp\n    cd glfw-3.0.4\n    mkdir build\n    cd build\n    cmake ../\n    make && sudo make install\n\n    ```", "```cpp\n    #include <GLFW/glfw3.h>\n    #include <stdlib.h>\n    #include <stdio.h>\n    ```", "```cpp\n    int main(void)\n    {\n      GLFWwindow* window;\n      if (!glfwInit())\n        exit(EXIT_FAILURE);\n      window = glfwCreateWindow(640, 480, \"Chapter 1: Simple GLFW Example\", NULL, NULL);\n      if (!window)\n      {\n        glfwTerminate();\n        exit(EXIT_FAILURE);\n      }\n      glfwMakeContextCurrent(window);\n    ```", "```cpp\n      while (!glfwWindowShouldClose(window))\n      {\n    ```", "```cpp\n        float ratio;\n        int width, height;\n\n        glfwGetFramebufferSize(window, &width, &height);\n        ratio = (float) width / (float) height;\n\n        glViewport(0, 0, width, height);\n        glClear(GL_COLOR_BUFFER_BIT);\n    ```", "```cpp\n        glMatrixMode(GL_PROJECTION);\n        glLoadIdentity();\n        glOrtho(-ratio, ratio, -1.f, 1.f, 1.f, -1.f);\n        glMatrixMode(GL_MODELVIEW);\n        glLoadIdentity();\n    ```", "```cpp\n        glRotatef((float)glfwGetTime() * 50.f, 0.f, 0.f, 1.f);\n        glBegin(GL_TRIANGLES);\n        glColor3f(1.f, 0.f, 0.f);\n        glVertex3f(-0.6f, -0.4f, 0.f);\n        glColor3f(0.f, 1.f, 0.f);\n        glVertex3f(0.6f, -0.4f, 0.f);\n        glColor3f(0.f, 0.f, 1.f);\n        glVertex3f(0.f, 0.6f, 0.f);\n        glEnd();\n    ```", "```cpp\n        glfwSwapBuffers(window);\n        glfwPollEvents();\n      }\n    ```", "```cpp\n      glfwDestroyWindow(window);\n      glfwTerminate();\n      exit(EXIT_SUCCESS);\n    }\n    ```", "```cpp\n    cd ~/code\n\n    ```", "```cpp\n    gcc -Wall `pkg-config --cflags glfw3` -o main Tutorial1/main.cpp `pkg-config --static --libs glfw3`\n\n    ```", "```cpp\n    ./main\n\n    ```", "```cpp\nchmod  +x compile.sh\n./compile.sh\n\n```"]