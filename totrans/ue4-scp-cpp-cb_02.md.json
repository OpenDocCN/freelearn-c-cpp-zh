["```cpp\n#pragma once\n\n#include \"CoreMinimal.h\"\n#include \"UObject/NoExportTypes.h\"\n#include \"UserProfile.generated.h\"\n\n/**\n * \n */\nUCLASS()\nclass CHAPTER_02_API UUserProfile : public UObject\n{\n  GENERATED_BODY()\n\n};\n\n```", "```cpp\n#pragma once\n\n#include \"CoreMinimal.h\"\n#include \"UObject/NoExportTypes.h\"\n\n#include <list> // Newly added include\n\n// CORRECT: generated file is the last file included\n#include \"UserProfile.generated.h\"\n```", "```cpp\n#pragma once\n\n#include \"CoreMinimal.h\"\n#include \"UObject/NoExportTypes.h\"\n#include \"UserProfile.generated.h\"\n\n// WRONG: NO INCLUDES AFTER .generated.h FILE\n#include <list> // Newly added include\n```", "```cpp\n>> #include found after .generated.h file - the .generated.h file \n should always be the last #include in a header\n```", "```cpp\nUCLASS( Blueprintable ) \nclass CHAPTER2_API UUserProfile : public UObject \n```", "```cpp\n/**\n * UCLASS macro options sets this C++ class to be\n * Blueprintable within the UE4 Editor\n */\nUCLASS( Blueprintable )\nclass CHAPTER_02_API UUserProfile : public UObject\n{\n  GENERATED_BODY()\n\npublic:\n UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Stats)\n float Armor;\n\n UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Stats)\n float HpMax;\n};\n```", "```cpp\n/**\n * UCLASS macro options sets this C++ class to be\n * Blueprintable within the UE4 Editor\n */\nUCLASS(Blueprintable, BlueprintType)\nclass CHAPTER_02_API UUserProfile : public UObject\n{\n  GENERATED_BODY()\n\npublic:\n  UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Stats)\n  float Armor;\n\n  UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Stats)\n  float HpMax;\n\n  UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Stats)\n FString Name;\n};\n```", "```cpp\nUCLASS(Blueprintable, BlueprintType)\nclass CHAPTER_02_API UUserProfile : public UObject\n{\n  GENERATED_BODY()\n\npublic:\n  UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Stats)\n  float Armor;\n\n  UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Stats)\n  float HpMax;\n\n  UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Stats)\n  FString Name;\n\n // Displays any UClasses deriving from UObject in a dropdown \n // menu in Blueprints\n UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Unit)\n TSubclassOf<UObject> UClassOfPlayer; \n\n // Displays string names of UCLASSes that derive from\n // the GameMode C++ base class\n UPROPERTY( EditAnywhere, meta=(MetaClass=\"GameMode\"), \n Category = Unit )\n FStringClassReference UClassGameMode;\n};\n```", "```cpp\n#pragma once\n\n#include \"CoreMinimal.h\"\n#include \"GameFramework/GameModeBase.h\"\n#include \"UserProfile.h\"\n#include \"Chapter_02GameModeBase.generated.h\"\n\n/**\n * \n */\nUCLASS()\nclass CHAPTER_02_API AChapter_02GameModeBase : public AGameModeBase\n{\n  GENERATED_BODY()\n\npublic:\n UPROPERTY( EditAnywhere, BlueprintReadWrite, Category = UClassNames ) \n TSubclassOf<UUserProfile> UPBlueprintClassName; \n};\n```", "```cpp\nObjectType* object = ConstructObject< ObjectType >( \n UClassReference );\n```", "```cpp\n// Get the GameMode object, which has a reference to  \n// the UClass name that we should instantiate: \nAChapter2GameMode *gm = Cast<AChapter2GameMode>( \n                                        GetWorld()->GetAuthGameMode()); \nif( gm )\n{\n  UUserProfile* newobject = NewObject<UUserProfile>(                                         \n                                      (UObject*)GetTransientPackage(), \n                                       UUserProfile::StaticClass() );\n}\n```", "```cpp\n// Destroy object\nif(newobject)\n{\n  newobject->ConditionalBeginDestroy();\n  newobject = nullptr;\n}\n```", "```cpp\ngc.TimeBetweenPurgingPendingKillObjects=61.1\n```", "```cpp\n#pragma once \n\n#include \"ObjectMacros.h\"\n#include \"ColoredTexture.generated.h\"\n\nUSTRUCT(Blueprintable) \nstruct CHAPTER_02_API FColoredTexture \n{\n  GENERATED_USTRUCT_BODY()\n\npublic: \n  UPROPERTY( EditAnywhere, BlueprintReadWrite, Category = HUD ) \n  UTexture* Texture; \n\n  UPROPERTY( EditAnywhere, BlueprintReadWrite, Category = HUD ) \n  FLinearColor Color; \n}; \n```", "```cpp\n#include \"CoreMinimal.h\"\n#include \"UObject/NoExportTypes.h\"\n#include \"ColoredTexture.h\"\n#include \"UserProfile.generated.h\"\n\n/**\n * UCLASS macro options sets this C++ class to be\n * Blueprintable within the UE4 Editor\n */\nUCLASS(Blueprintable, BlueprintType)\nclass CHAPTER_02_API UUserProfile : public UObject\n{\n  GENERATED_BODY()\n\npublic:\n  UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Stats)\n  float Armor;\n\n  UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Stats)\n  float HpMax;\n\n  UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Stats)\n  FString Name;\n\n  // Displays any UClasses deriving from UObject in a dropdown \n  // menu in Blueprints\n  UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = Unit)\n  TSubclassOf<UObject> UClassOfPlayer; \n\n  // Displays string names of UCLASSes that derive from\n  // the GameMode C++ base class\n  UPROPERTY(EditAnywhere, meta=(MetaClass=\"GameMode\"), Category = Unit )\n  FStringClassReference UClassGameMode;\n\n // Custom struct example\n UPROPERTY(EditAnywhere, BlueprintReadWrite, Category = HUD) \n FColoredTexture Texture; \n};\n```", "```cpp\nUENUM() \nenum Status \n{ \n  Stopped     UMETA(DisplayName = \"Stopped\"), \n  Moving      UMETA(DisplayName = \"Moving\"), \n  Attacking   UMETA(DisplayName = \"Attacking\"), \n}; \n```", "```cpp\nUPROPERTY(EditAnywhere, BlueprintReadWrite, Category = \n Status) \nTEnumAsByte<Status> status; \n```"]