["```cpp\nint potPin = 0;     // pin number where the potentiometer is connected\nint ledPin = 13 ;   // pin number of the on-board LED\nint potValue = 0 ;  // variable storing the voltage value measured at potPin pin\n\nvoid setup() {\n  pinMode(ledPin, OUTPUT);  // define ledPin pin as an output\n}\n\nvoid loop(){\n  potValue = analogRead(potPin); // read and store the read value at potPin pin \n\n  digitalWrite(ledPin, HIGH);    // turn on the LED\n  delay(potValue);               // pause the program during potValue millisecond\n  digitalWrite(ledPin, LOW);     // turn off the LED\n  delay(potValue);               // pause the program during potValue millisecond\n}\n```", "```cpp\nint potPin = 0;     // pin number where the potentiometer is connected\nint ledPin = 13 ;   // pin number of the on-board LED\nint potValue = 0 ;  // variable storing the voltage value measured at potPin pin\nfloat voltageValue = 0.; // variable storing the voltage calculated\n\nvoid setup() {\n  Serial.begin(9600);\n  pinMode(ledPin, OUTPUT);  // define ledPin pin as an output\n}\n\nvoid loop(){\n  potValue = analogRead(potPin); // read and store the read value at potPin pin\n\n  digitalWrite(ledPin, HIGH);    // turn on the LED\n  delay(potValue);               // pause the program during potValue millisecond\n  digitalWrite(ledPin, LOW);     // turn off the LED\n  delay(potValue);               // pause the program during potValue millisecond\n\n  voltageValue = 5\\. * (potValue / 1023.) ;  // calculate the voltage\n\n  Serial.println(voltageValue); // write the voltage value an a carriage return\n}\n```", "```cpp\nint potPin = 0;     // pin number where the potentiometer is connected\nint potValue = 0 ;  // variable storing the voltage value measured at potPin pin\n\nvoid setup() {\n  Serial.begin(9600);\n}\n\nvoid loop(){\n  potValue = analogRead(potPin); // read and store the read value at potPin pin\n  Serial.println(potValue); // write the voltage value an a carriage return\n\n  delay(2);    // this small break waits for the ADC to stabilize is often used\n}\n```", "```cpp\n350<CR><LF>\n```", "```cpp\nint sensorPin = 0; // pin number where the SHARP GP2Y0A02YK is connected\nint sensorValue = 0\nint distanceCalculated = 0;   // variable storing the distance calculated\nint v = 0;          // variable storing the calculated voltage\n\n// our formula's constants\nconst int a = 0.008271;\nconst int b = 939.65;\nconst int c = -3.398;\nconst int d = 17.339;\n\nvoid setup() {\n  Serial.begin(9600);\n}\n\nvoid loop(){\n  sensorValue = analogRead(sensorPin); \n  v = 5\\. * (sensorValue / 1023.) ;  // calculate the voltage \n  distanceCalculated = ((a + b * v) / (1\\. + c * v + d * v * v) );\n\n  Serial.println(distanceCalculated); \n\n  delay(2);\n}\n```", "```cpp\nint muxOutputPin = 0 ;  // pin connected to the common output of the CD4051B\nint devicesNumber = 8 ; // number of device // BE CAREFUL, plug them from 0\n\nint controlPinA = 2 ;   // pin connected to the select pin A of the CD4051B \nint controlPinB = 3 ;   // pin connected to the select pin B of the CD4051B \nint controlPinC = 4 ;   // pin connected to the select pin C of the CD4051B \n\nint currentInput = 0 ;  // hold the current analog input commuted o the common output of the CD4051B\n\nvoid setup() {\n  Serial.begin(9600);\n\n  // setting up all 3 digital pins related to selectors A, B and C as outputs\n  pinMode(controlPinA, OUTPUT);\n  pinMode(controlPinB, OUTPUT);\n  pinMode(controlPinC, OUTPUT);\n}\n\nvoid loop(){\n  for (currentInput = 0 ; currentInput < devicesNumber - 1 ; currentInput++)\n  {\n    // selecting the inputs that is commuted to the common output of the CD4051B\n    digitalWrite(controlPinA, bitRead(currentInput,0));\n    digitalWrite(controlPinB, bitRead(currentInput,1));\n    digitalWrite(controlPinC, bitRead(currentInput,2));\n\n    // reading and storing the value of the currentInput\n    Serial.println(analogRead(muxOutputPin)) ;\n  }\n}\n```"]