["```cpp\nBigDataStructure* pData = new pData();\ncall1(pData);\ncall2(pData);\ncall3(pData);\n```", "```cpp\nBigDataStructure data{};\ncall1(data);\ncall2(data);\ncall3(data);\n...\nvoid call1(BigDataStructure& data){\n    ...\n}\n```", "```cpp\nBigDataStructure data{};\nprocess(data);\n...\nvoid process(BigDataStructure&& data){\n}\n```", "```cpp\n#define DOCTEST_CONFIG_IMPLEMENT_WITH_MAIN\n#include \"doctest.h\" \n#include \"prod.h\"\nTEST_CASE(\"Test Example\"){\n    auto anAnswer = answer();\n    CHECK(anAnswer);\n}\n```", "```cpp\nbool answer(){\n    return true;\n}\n```", "```cpp\ncheck-leaks: test \n    valgrind -q --leak-check=full ./out/tests\ntest: test.cpp\n    ./out/tests\ntest.cpp: .FORCE\n    mkdir -p out/\n    g++ -std=c++20 -I\"src/\" \"test.cpp\"  -o out/tests\n.FORCE:\n```", "```cpp\nbool answer(){\nint* a = new int(4);\nreturn true;\n}\n```", "```cpp\n==========================================================[doctest] test cases: 1 | 1 passed | 0 failed | 0 skipped\n[doctest] assertions: 1 | 1 passed | 0 failed |\n[doctest] Status: SUCCESS!\nvalgrind -q --leak-check=full ./out/tests\n[doctest] doctest version is \"2.4.11\"\n[doctest] run with \"--help\" for options\n==========================================================[doctest] test cases: 1 | 1 passed | 0 failed | 0 skipped\n[doctest] assertions: 1 | 1 passed | 0 failed |\n[doctest] Status: SUCCESS!\n==48400== 4 bytes in 1 blocks are definitely lost in loss record 1 of 1\n==48400==    at 0x4849013: operator new(unsigned long) ==48400==    by 0x124DC9: answer()\n```"]