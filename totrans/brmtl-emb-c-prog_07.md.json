["```cpp\n#include \"gpio.h\"\n#define GPIOAEN            (1U<<0)\n#define LED_BS5            (1U<<5)  /*Bit Set Pin 5*/\n#define LED_BR5            (1U<<21) /*Bit Reset Pin 5*/\nvoid led_init(void)\n{\n    /*Enable clock access to GPIOA*/\n    RCC->AHB1ENR |= GPIOAEN;\n    /*Set PA5 mode to output mode*/\n    GPIOA->MODER |=(1U<<10);\n    GPIOA->MODER &=~(1U<<11);\n}\nvoid led_on(void)\n{\n    /*Set PA5 high*/\n    GPIOA->BSRR |=LED_BS5;\n}\nvoid led_off(void)\n{\n    /*Set PA5 high*/\n    GPIOA->BSRR |=LED_BR5;\n}\n```", "```cpp\n#include \"gpio.h\"\n```", "```cpp\n#define GPIOAEN         (1U<<0)\n#define LED_BS5         (1U<<5)  /* Bit Set Pin 5 */\n#define LED_BR5         (1U<<21) /* Bit Reset Pin 5 */\n```", "```cpp\nvoid led_on(void)\n{\n    /* Set PA5 high */\n    GPIOA->BSRR |= LED_BS5;\n}\n```", "```cpp\nvoid led_off(void)\n{\n    /* Set PA5 low */\n    GPIOA->BSRR |= LED_BR5;\n}\n```", "```cpp\n#ifndef GPIO_H_\n#define GPIO_H_\n#include \"stm32f4xx.h\"\nvoid led_init(void);\nvoid led_on(void);\nvoid led_off(void);\n#endif /* GPIO_H_ */\n```", "```cpp\n#ifndef GPIO_H_\n#define GPIO_H_\n...\n#endif /* GPIO_H_ */\n```", "```cpp\n#include \"stm32f4xx.h\"\n```", "```cpp\nvoid led_init(void);\nvoid led_on(void);\nvoid led_off(void);\n```", "```cpp\n#include \"gpio.h\"\nint main(void)\n{\n    /*Initialize LED*/\n    led_init();\n    while(1)\n    {\n            led_on();\n            for(int i = 0; i < 100000; i++){}\n            led_off();\n            for(int i = 0; i < 100000; i++){}\n    }\n}\n```", "```cpp\n#define GPIOAEN            (1U<<0)\n#define GPIOCEN             (1U<<2)\n#define BTN_PIN             (1U<<13)\nvoid button_init(void)\n{\n    /*Enable clock access to PORTC*/\n    RCC->AHB1ENR |=GPIOCEN;\n    /*Set PC13 as an input pin*/\n    GPIOC->MODER &=~(1U<<26);\n    GPIOC->MODER &=~(1U<<27);\n}\n```", "```cpp\nbool get_btn_state(void)\n{\n    /*Note : BTN is active low*/\n    /*Check if button is pressed*/\n    if(GPIOC->IDR & BTN_PIN)\n    {\n        return false;\n    }\n    else\n    {\n        return true;\n    }\n}\n```", "```cpp\n#include <stdbool.h>\nvoid button_init(void);\nbool get_btn_state(void);\n```", "```cpp\n#include \"gpio.h\"\nbool btn_state;\nint main(void)\n{\n    /*Initialize LED*/\n    led_init();\n    /*Initialize Pushbutton*/\n    button_init();\n    while(1)\n    {\n        /*Get Pushbutton State*/\n        btn_state = get_btn_state();\n        if(btn_state)\n        {\n            led_on();\n        }\n        else\n        {\n            led_off();\n        }\n    }\n}\n```"]