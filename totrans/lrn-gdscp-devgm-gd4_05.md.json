["```cpp\nfunc get_inventory_item(index: int):\n   return inventory[index]\nfunc  get_inventory_item (index: int):\n   if index < 0 or index >= inventory.size():\n      return\n   return inventory[index]\n```", "```cpp\nvar total_damage:float=100+get_damage()*0.5\nvar total_damage: float = 100 + get_damage() * 0.5\n```", "```cpp\ninventory = [\"Boots\",\"Sword\",\"Potion\"]\ninventory = [\"Boots\", \"Sword\", \"Potion\"]\n```", "```cpp\ndictionary [\"key\"] = 100\ndictionary[\"key\"] = 100\n```", "```cpp\nprint (\"Hello\")\nprint(\"Hello\")\n```", "```cpp\nobject . function()\nobject.function()\n```", "```cpp\nfunc deal_damage(amount: float) -> void:\n   player_health -= amount\nfunc heal(amount: float) -> void:\n   player_health += amount\n```", "```cpp\nvar weapon_damage: float = 10\nvar damage_type: String = \"Fire\"\nvar total_damage: float = weapon_damage\nif damage_type == \"Electricity\":\n   total_damage *= 2\nfor enemy in enemies:\n   enemy.deal_damage(total_damage)\n```", "```cpp\nif player_health > 0 and player_health < 100 and inventory.has(\"Potion\"):\n   # Take potion\n```", "```cpp\nvar can_heal: bool = player_health > 0 and player_health < 100\nvar has_potion: bool = inventory.has(\"Potion\")\nif can_heal and has_potion:\n   # Take potion\n```"]