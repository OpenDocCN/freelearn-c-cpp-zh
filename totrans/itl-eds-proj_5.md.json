["```cpp\ninttrigPin=2; \nintechoPin=3; \nvoid setup()  \n  { \n    pinMode(trigPin,OUTPUT); \n    pinMode(echoPin, INPUT); \n    Serial.begin(9600); \n  } \nvoid loop()  \n  { \n    long duration, distance; \n    //Send pulses \n    digitalWrite(trigPin, LOW); \n    delayMicroseconds(2); \n    digitalWrite(trigPin, HIGH); \n    delayMicroseconds(10); \n    digitalWrite(trigPin, LOW); \n\n    //Receive pulses \n    pinMode(echoPin, INPUT); \n    duration = pulseIn(echoPin, HIGH); \n\n    //Calculation \n    distance = microsecondsToCentimeters(duration); \n    Serial.println(distance); \n    delay(200); \n  } \n\nlongmicrosecondsToCentimeters(long microseconds) \n  { \n    return microseconds / 29 / 2; \n  } \n\n```", "```cpp\nvoid setup()  \n  { \n    Serial.begin(9600); \n  } \nvoid loop()  \n  { \n    int a= analogRead(A0); \n    int b= analogRead(A1); \n    Serial.print(a); \n    Serial.print(\"       \"); \n    Serial.println(b); \n    delay(200); \n  } \n\n```", "```cpp\n#define M11 2 \n#define M12 3 \n#define M21 4 \n#define M22 5 \nvoid setup()  \n  { \n    pinMode(M11,OUTPUT); \n    pinMode(M12,OUTPUT); \n    pinMode(M21,OUTPUT); \n    pinMode(M22,OUTPUT); \n  } \nvoid loop()  \n  { \n    forward(); \n    delay(10000); \n    backward(); \n    delay(10000); \n    left(); \n    delay(10000); \n    right(); \n    delay(10000); \n    stop(); \n    delay(10000); \n  } \nvoid forward() \n  { \n    digitalWrite(M11,HIGH); \n    digitalWrite(M12,LOW); \n    digitalWrite(M21,HIGH); \n    digitalWrite(M22,LOW); \n  } \nvoid backward() \n  { \n    digitalWrite(M11,LOW); \n    digitalWrite(M12,HIGH); \n    digitalWrite(M21,LOW); \n    digitalWrite(M22,HIGH); \n  } \nvoid right() \n  { \n    digitalWrite(M11,HIGH); \n    digitalWrite(M12,LOW); \n    digitalWrite(M21,LOW); \n    digitalWrite(M22,HIGH); \n  } \nvoid left() \n  { \n    digitalWrite(M11,LOW); \n    digitalWrite(M12,HIGH); \n    digitalWrite(M21,HIGH); \n    digitalWrite(M22,LOW); \n  } \nvoid stop() \n  { \n    digitalWrite(M11,LOW); \n    digitalWrite(M12,LOW); \n    digitalWrite(M21,LOW); \n    digitalWrite(M22,LOW); \n  } \n\n```", "```cpp\n#define M11 2 \n#define M12 3 \n#define M21 4 \n#define M22 5 \n#define PWM 6 \nvoid setup()  \n  { \n    pinMode(M11,OUTPUT); \n    pinMode(M12,OUTPUT); \n    pinMode(M21,OUTPUT); \n    pinMode(M22,OUTPUT); \n  } \nvoid loop()  \n  { \n    forward(); \n  } \nvoid forward() \n  { \n    digitalWrite(M11,HIGH); \n    digitalWrite(M12,LOW); \n    digitalWrite(M21,HIGH); \n    digitalWrite(M22,LOW); \n    analogWrite(PWM, 122); \n  } \n\n```", "```cpp\n#define M11 2 \n#define M12 3 \n#define M21 4 \n#define M22 5 \n#define S1 7 \n#define S2 8 \ninta,b; \nvoid setup()  \n  { \n    pinMode(M11,OUTPUT); \n    pinMode(M12,OUTPUT); \n    pinMode(M21,OUTPUT); \n    pinMode(M22,OUTPUT); \n    pinMode(S1,INPUT); \n    pinMode(S2,INPUT); \n  } \nvoid loop()  \n  { \n    a=digitalRead(S1); \n    b=digitalRead(S2); \n    //Left turn condition \n    if(a==1&&b==0) \n      { \n        left(); \n      } \n    //Right turn condition \n    else if(a==0&&b==1) \n      { \n        right(); \n      } \n    //Stop condition \n    else if(a==1&&b==1) \n      { \n        stop(); \n      } \n    //By default forward \n    else \n      { \n        forward(); \n      } \n  } \nvoid forward() \n  { \n    digitalWrite(M11,HIGH); \n    digitalWrite(M12,LOW); \n    digitalWrite(M21,HIGH); \n    digitalWrite(M22,LOW); \n  } \nvoid backward() \n  { \n    digitalWrite(M11,LOW); \n    digitalWrite(M12,HIGH); \n    digitalWrite(M21,LOW); \n    digitalWrite(M22,HIGH); \n  } \nvoid right() \n  { \n    digitalWrite(M11,HIGH); \n    digitalWrite(M12,LOW); \n    digitalWrite(M21,LOW); \n    digitalWrite(M22,HIGH); \n  } \nvoid left() \n  { \n    digitalWrite(M11,LOW); \n    digitalWrite(M12,HIGH); \n    digitalWrite(M21,HIGH); \n    digitalWrite(M22,LOW); \n  } \nvoid stop() \n  { \n    digitalWrite(M11,LOW); \n    digitalWrite(M12,LOW); \n    digitalWrite(M21,LOW); \n    digitalWrite(M22,LOW); \n  } \n\n```", "```cpp\nvoid loop()  \n{ \nint a,b; \n  a=digitalRead(S1); \n  b=digitalRead(S2); \n  //Left turn condition \nif(a==0&&b==1) \n  { \nleft(); \n  } \n  //Right turn condition \nelse if(a==1&&b==0) \n  { \nright(); \n  } \n  //Stop condition \nelse if(a==0&&b==0) \n  { \nstop(); \n  } \n  //By default forward \nelse \n  { \nforward(); \n  } \n} \n\n```", "```cpp\nvoid loop()  \n{ \nint a,b,c; \n  a=digitalRead(S1); \n  b=digitalRead(S2); \n  c=digitalRead(S3); \n  //Left turn condition \nif(a==1&&b==1&&c==0) \n  { \nleft(); \n  } \n  //Right turn condition \nelse if(a==0&&b==1&&c==1) \n  { \nright(); \n  } \n  //Stop condition \nelse if(a==0&&b==0&&c==0) \n  { \nstop(); \n  } \n  //By default forward \nelse \n  { \nforward(); \n  } \n} \n\n```"]