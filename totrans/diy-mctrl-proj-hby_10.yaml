- en: '*Chapter 10*: IoT Plant Pot Moisture Sensor'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第10章*：物联网花盆湿度传感器'
- en: With the advent of the **Internet of Things** (**IoT**), we are immersed in
    the new industrial revolution—the so-called **Industry 4.0**. One of the industries
    that have benefited the most from these technologies is agriculture (Chalimov,
    2020). Agricultural IoT applications range from autonomous harvesting to sensors
    to recognize pests and diseases or to measure humidity. We can take advantage
    of these advances in our homes—for instance, monitoring our ornamental plants
    to have more efficient care.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 随着物联网（**IoT**）的出现，我们沉浸在新的工业革命中——所谓的**工业4.0**。从这些技术中受益最多的行业之一是农业（Chalimov，2020）。农业物联网应用范围从自主收割到识别害虫和疾病或测量湿度的传感器。我们可以利用这些进步在家中——例如，监测我们的观赏植物以获得更有效的护理。
- en: In this chapter, you will put into practice information learned in [*Chapter
    9*](B16413_09_Final_NM_ePub.xhtml#_idTextAnchor122), *IoT Temperature-Logging
    System*, about how to connect and program an internet connection, but this time
    we will introduce a **NodeMCU microcontroller** to facilitate the ESP8266 programming.
    You will learn how to create a digital device to monitor a plant pot, reading
    data from a soil moisture sensor and determining whether it needs water, and then
    sending an alert to notify that it is too dry.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将应用在[*第9章*](B16413_09_Final_NM_ePub.xhtml#_idTextAnchor122)“物联网温度记录系统”中学到的信息，关于如何连接和编程互联网连接，但这次我们将介绍一个**NodeMCU微控制器**来简化ESP8266编程。你将学习如何创建一个数字设备来监测花盆，从土壤湿度传感器读取数据并确定是否需要浇水，然后发送警报通知它太干了。
- en: 'In this chapter, we will cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主要内容：
- en: Connecting a soil moisture sensor to the Blue Pill board
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将土壤湿度传感器连接到Blue Pill板
- en: Reading data from the soil moisture sensor module
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从土壤湿度传感器模块读取数据
- en: Coding a program to send the sensed data to the internet
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写程序将感应数据发送到互联网
- en: Showing sensor data results over the internet
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在互联网上显示传感器数据结果
- en: By completing this chapter, you will discover how to read the soil's moisture
    amount through a sensor connected to the STM32 Blue Pill board. You will also
    learn how to send this information to the internet through the NodeMCU development
    board and visualize the sensor values from a responsive web page.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 通过完成本章，你将发现如何通过连接到STM32 Blue Pill板的传感器读取土壤的湿度量。你还将学习如何通过NodeMCU开发板将此信息发送到互联网，并通过响应式网页可视化传感器值。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The hardware components that will be needed to develop the plant pot moisture
    system are listed as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 开发花盆湿度系统所需的硬件组件如下所示：
- en: One solderless breadboard.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个无焊面包板。
- en: One Blue Pill microcontroller board.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Blue Pill微控制器板。
- en: One NodeMCU microcontroller.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个NodeMCU微控制器。
- en: One ST-Link/V2 electronic interface, needed for uploading the compiled code
    to the Blue Pill board. Bear in mind that the ST-Link/V2 interface requires four
    female-to-female jumper wires.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个ST-Link/V2电子接口，用于将编译后的代码上传到Blue Pill板。请注意，ST-Link/V2接口需要四根公对公跳线。
- en: One soil moisture sensor.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个土壤湿度传感器。
- en: One ESP8266 Wi-Fi module.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个ESP8266 Wi-Fi模块。
- en: Male-to-male jumper wires.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公对公跳线。
- en: Power source.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电源。
- en: These components can be easily obtained from your favorite supplier. Additionally,
    you will require the Arduino **integrated development environment** (**IDE**)
    and the GitHub repository for this chapter, which can be found at [https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter10](https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter10)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这些组件可以从你喜欢的供应商那里轻松获得。此外，你还需要本章的Arduino**集成开发环境**（**IDE**）和GitHub仓库，可以在[https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter10](https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter10)找到。
- en: 'The Code in Action video for this chapter can be found here: [https://bit.ly/3d9CmNM](https://bit.ly/3d9CmNM)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的“代码在行动”视频可以在这里找到：[https://bit.ly/3d9CmNM](https://bit.ly/3d9CmNM)
- en: The next section presents an introduction to a soil moisture sensor and how
    to use it with the STM32 Blue Pill microcontroller board.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节将介绍土壤湿度传感器及其如何与STM32 Blue Pill微控制器板一起使用。
- en: Connecting a soil moisture sensor to the Blue Pill board
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将土壤湿度传感器连接到Blue Pill板
- en: We will start this section by learning how to use a sensor to measure soil humidity
    in a plant pot, and you will later learn how to connect it to the **STM32 Blue
    Pill** board to build a plant pot moisture-monitoring system.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从这个部分开始学习如何使用传感器测量花盆中的土壤湿度，你将后来学习如何将其连接到**STM32 Blue Pill**板以构建花盆湿度监控系统。
- en: Introducing soil moisture sensors
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍土壤湿度传感器
- en: A **soil moisture sensor** consists of two pads that measure the amount of water
    in the soil. The sensed value is acquired by allowing the the electric current
    running through the soil to pass through, and according to resistance, this shows
    the level of humidity in the plant pot.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**土壤湿度传感器**由两个测量土壤中水分量的焊盘组成。通过允许电流通过土壤流动来获取感应值，根据电阻，这显示了花盆中的湿度水平。'
- en: 'You can find a generic breakout module that is pretty straightforward to use.
    This is shown in the following photo:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以找到一个通用的扩展模块，它非常容易使用。以下照片展示了这一点：
- en: '![Figure 10.1 – Soil moisture sensor breakout board](img/Figure_10.1_B16413.jpg)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![图10.1 – 土壤湿度传感器扩展板](img/Figure_10.1_B16413.jpg)'
- en: Figure 10.1 – Soil moisture sensor breakout board
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.1 – 土壤湿度传感器扩展板
- en: 'The pads are connected to the breakout board with the included female-to-female
    jumper wires. The breakout board connects to the STM32 Blue Pill board with four
    pins, outlined as follows:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这些焊盘通过包含的公对公跳线连接到扩展板。扩展板通过四个引脚连接到STM32 Blue Pill板，如下所述：
- en: '**Analog output** (**AO**): This pin generates an analog signal and must be
    connected to an analog input of the microcontroller.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模拟输出**（**AO**）：此引脚生成模拟信号，必须连接到微控制器的模拟输入。'
- en: '**Digital output** (**DO**): This pin generates a digital signal and must be
    connected to a digital input of the microcontroller.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**数字输出**（**DO**）：此引脚生成数字信号，必须连接到微控制器的数字输入。'
- en: '**VCC**: Pin to supply power to the sensor (3.3 **volts** (**V**)-5 V).'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VCC**：为传感器供电的引脚（3.3 **伏特**（**V**）-5 V）。'
- en: '**Ground** (**GND**): Ground connection.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**地**（**GND**）：地连接。'
- en: To simplify the development of our project, we will use a DO pin to build our
    system because it only generates binary data depending on the humidity.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化我们项目的开发，我们将使用DO引脚来构建我们的系统，因为它只根据湿度生成二进制数据。
- en: Connecting the components
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连接组件
- en: 'We will use a solderless breadboard to connect the sensor and the STM32 Blue
    Pill microcontroller, and finally wire to connect the components. Follow these
    steps:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用无焊点面包板连接传感器和STM32 Blue Pill微控制器，最后用线连接组件。按照以下步骤操作：
- en: Place the soil moisture sensor and the STM32 Blue Pill board on the solderless
    breadboard with enough space to add the wiring layer.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将土壤湿度传感器和STM32 Blue Pill板放置在无焊点面包板上，留出足够的空间以添加布线层。
- en: Connect the ground (GND) pin of the sensor to a GND terminal of the SMT32 Blue
    Pill board.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将传感器的地（GND）引脚连接到SMT32 Blue Pill板的地（GND）端子。
- en: Next, you need to connect the voltage (VCC) pin to the 3V3 bus of the STM32
    Blue Pill board. The sensor DO must be connected to a digital input on the STM32
    Blue Pill board, so connect the DO pin of the sensor to pin B12 of the Blue Pill,
    as shown in the following photo:![Figure 10.2 – Soil moisture sensor connection
    to the Blue Pill](img/Figure_10.2_B16413.jpg)
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你需要将电压（VCC）引脚连接到STM32 Blue Pill板的3V3总线上。传感器的DO必须连接到STM32 Blue Pill板上的数字输入，因此将传感器的DO引脚连接到Blue
    Pill的B12引脚，如下照片所示：![图10.2 – 土壤湿度传感器连接到Blue Pill](img/Figure_10.2_B16413.jpg)
- en: Figure 10.2 – Soil moisture sensor connection to the Blue Pill
  id: totrans-40
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.2 – 土壤湿度传感器连接到Blue Pill
- en: 'Finally, you will need a power source to power up the board. Use the ST-LINK
    to upload the scripts to the STM32 Blue Pill microcontroller board. The following
    screenshot summarizes all the hardware connections:'
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你需要一个电源来为板供电。使用ST-LINK将脚本上传到STM32 Blue Pill微控制器板。以下截图总结了所有硬件连接：
- en: '![Figure 10.3 – Circuit for soil moisture sensor connection](img/Figure_10.3_B16413.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图10.3 – 土壤湿度传感器连接电路](img/Figure_10.3_B16413.jpg)'
- en: Figure 10.3 – Circuit for soil moisture sensor connection
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.3 – 土壤湿度传感器连接电路
- en: 'The following screenshot presents a schematic diagram for this project:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了本项目的原理图：
- en: '![Figure 10.4 – Schematic diagram for soil moisture sensor connection](img/Figure_10.4_B16413.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图10.4 – 土壤湿度传感器连接原理图](img/Figure_10.4_B16413.jpg)'
- en: Figure 10.4 – Schematic diagram for soil moisture sensor connection
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.4 – 土壤湿度传感器连接原理图
- en: '*Figure 10.4* shows an electric diagram for this part of the project. The ground
    pin of the sensor was connected to the GND pin of the Blue Pill, while the VCC
    pin was connected to the Blue Pill''s 3V3 bus. Finally, the DO of the sensor was
    plugged into the B12 pin of the STM32 microcontroller. The following photo shows
    the plant pot moisture system:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*图10.4*显示了该项目的这部分电路图。传感器的地线引脚连接到Blue Pill的GND引脚，而VCC引脚连接到Blue Pill的3V3总线。最后，传感器的DO插头插入到STM32微控制器的B12引脚。以下照片显示了植物花盆湿度系统：'
- en: '![Figure 10.5 – Plant pot moisture system](img/Figure_10.5_B16413.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图10.5 – 植物花盆湿度系统](img/Figure_10.5_B16413.jpg)'
- en: Figure 10.5 – Plant pot moisture system
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.5 – 植物花盆湿度系统
- en: In the previous photo, we can see how the humidity monitoring system's deployment
    is carried out. As we can see, we built a compact electronic circuit to monitor
    the moisture of the soil in a plant pot.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一张照片中，我们可以看到湿度监控系统部署的过程。正如我们所见，我们构建了一个紧凑的电子电路来监测植物花盆中土壤的湿度。
- en: In this section, we understood the concept of a humidity sensor and its components.
    Furthermore, we learned how to connect the sensor to a microcontroller through
    a breadboard, and finally learned how to connect the complete system to a plant
    pot.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们了解了湿度传感器的概念及其组件。此外，我们学习了如何通过面包板将传感器连接到微控制器，并最终学习了如何将整个系统连接到植物花盆上。
- en: It's time to move on to the next section, which will show you how to write C
    code to complete the IoT humidity monitoring system's first functionality.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是进入下一部分的时候了，这部分将向您展示如何编写C代码来完成物联网湿度监控系统的基础功能。
- en: Reading data from the soil moisture sensor module
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从土壤湿度传感器模块读取数据
- en: You will now learn how to code a program that reads the information from the
    moisture sensor and shows on the serial monitor if the plant pot needs watering
    or is moist enough.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您现在将学习如何编写一个程序，该程序读取湿度传感器的信息，并在串行监视器上显示植物花盆是否需要浇水或已经足够湿润。
- en: 'Let''s start developing the program to collect the sensor data from the STM32
    Blue Pill, as follows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始开发从STM32 Blue Pill收集传感器数据的程序，如下所示：
- en: 'Let''s get started writing the code. This time, we won''t need any additional
    libraries. Define which of the STM32 Blue Pill card pins will be used as input
    for reading the sensor data. Also, declare a variable to save the reading data
    from the sensor, as follows:'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 让我们开始编写代码。这次，我们不需要任何额外的库。定义STM32 Blue Pill卡上哪些引脚将被用作读取传感器数据的输入。同时，声明一个变量来保存从传感器读取的数据，如下所示：
- en: '[PRE0]'
  id: totrans-57
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, in the `setup()` part, we need to start the serial data transmission
    and assign the speed of the transfer (as usual, we will use 9,600 **bits per second**
    (**bps**) as the standard value). Here is the code to do this:'
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在`setup()`部分，我们需要启动串行数据传输并分配传输速度（像往常一样，我们将使用9,600 **比特/秒**（**bps**）作为标准值）。以下是执行此操作的代码：
- en: '[PRE1]'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Indicate to the microcontroller the type of pin assigned to `PB12` by running
    the following code:'
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过运行以下代码向微控制器指示分配给`PB12`的引脚类型：
- en: '[PRE2]'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The rest of the sketch is in the `loop()` part. The first lines read the input
    pin''s data sensor and display its value in the serial console. The code is shown
    in the following snippet:'
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 剩余的代码在`loop()`部分。前几行读取输入引脚的数据传感器，并在串行控制台中显示其值。代码如下所示：
- en: '[PRE3]'
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The value read from the sensor could be `1` or `0`; remember, we are reading
    a digital value. If the value is `1`, then the plant pot needs water; otherwise,
    it is moist enough.
  id: totrans-64
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从传感器读取的值可能是`1`或`0`；记住，我们正在读取一个数字值。如果值是`1`，那么植物花盆需要浇水；否则，它已经足够湿润。
- en: The code is now complete. You can find the complete sketch in the `Chapter10/moisture`
    folder in the GitHub repository.
  id: totrans-65
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 代码现在已完成。您可以在GitHub仓库的`Chapter10/moisture`文件夹中找到完整的草图。
- en: Now that the sketch is complete, you can upload it to the Blue Pill board and
    insert the sensor pads into a plant pot. Now, you can see in the **serial monitor**
    that the soil is too dry, as shown in the following screenshot:![Figure 10.6 –
    Serial monitor readings with dry soil](img/Figure_10.6_B16413.jpg)
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在草图已完成，您可以将其上传到Blue Pill板，并将传感器垫插入植物花盆中。现在，您可以在**串行监视器**中看到土壤太干燥，如下面的截图所示：![图10.6
    – 干土壤的串行监视器读取](img/Figure_10.6_B16413.jpg)
- en: Figure 10.6 – Serial monitor readings with dry soil
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.6 – 干土壤的串行监视器读取
- en: 'Now, add water to the plant pot, taking care not to get any electronic components
    wet. The serial monitor''s information will change as soon as the soil gets wet,
    as illustrated in the following screenshot:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，向花盆中加水，注意不要让任何电子组件受潮。一旦土壤变湿，串行监视器的信息就会立即改变，如下面的截图所示：
- en: '![Figure 10.7 – Serial monitor readings upon moistening the soil](img/Figure_10.7_B16413.jpg)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.7 – 浇水后串行监视器的读数](img/Figure_10.7_B16413.jpg)'
- en: Figure 10.7 – Serial monitor readings upon moistening the soil
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.7 – 浇水后串行监视器的读数
- en: Important note
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: In recent macOS versions, the **Universal Serial Bus** (**USB**) port may not
    appear in the Arduino IDE, and it therefore may not be possible to see the serial
    monitor. To solve this, it is necessary to install the USB-UART drivers (where
    **UART** stands for **Universal Asynchronous Receiver/Transmitter**) from [https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers](https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers).
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在最近的 macOS 版本中，Arduino IDE 中可能不会显示 **通用串行总线** (**USB**) 端口，因此可能无法看到串行监视器。为了解决这个问题，需要从
    [https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers](https://www.silabs.com/developers/usb-to-uart-bridge-vcp-drivers)
    安装 USB-UART 驱动程序（其中 **UART** 代表 **通用异步收发传输器**）。
- en: Let's recap what we have learned so far. We learned about a sensor to measure
    soil humidity. We learned how to connect it to our STM32 Blue Pill microcontroller
    in the *Connecting a soil moisture sensor to the Blue Pill board* section. In
    this section, we wrote the code to obtain its data and display it on the serial
    monitor.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下到目前为止我们已经学到的内容。我们学习了用于测量土壤湿度的传感器。我们在 *将土壤湿度传感器连接到 Blue Pill 板* 部分学习了如何将其连接到我们的
    STM32 Blue Pill 微控制器。在本节中，我们编写了获取其数据并在串行监视器上显示的代码。
- en: The skills you have acquired so far in this chapter will allow you to create
    other electronic systems that require digital reading of data generated in sensors,
    enabling you to use this sensor in additional projects where it is required to
    measure soil moisture.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 你在本章中已经掌握的技能将允许你创建其他需要从传感器中读取数据的数字电子系统，使你能够在需要测量土壤湿度的额外项目中使用这个传感器。
- en: Coming up next, we will learn about the NodeMCU microcontroller, which will
    facilitate connection to the internet with its integrated ESP8266 module.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将学习 NodeMCU 微控制器，它将借助其集成的 ESP8266 模块方便地连接到互联网。
- en: Coding a program to send the sensed data to the internet
  id: totrans-76
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写程序将感应数据发送到互联网
- en: 'If you remember, in [*Chapter 9*](B16413_09_Final_NM_ePub.xhtml#_idTextAnchor122),
    *IoT Temperature-Logging System*, we found that an ESP-01 module was used because
    it integrates Wi-Fi communication through ESP8266\. This module was programmed
    using **AT commands** through the STM32 Blue Pill microcontroller (where **AT**
    stands for **Attention**). As mentioned at the beginning of the chapter, we will
    use the **NodeMCU development board**, which is depicted in the following photo:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你记得，在 [*第 9 章*](B16413_09_Final_NM_ePub.xhtml#_idTextAnchor122) 的 *物联网温度记录系统*
    中，我们发现使用了 ESP-01 模块，因为它通过 ESP8266 集成了 Wi-Fi 通信。该模块通过 STM32 Blue Pill 微控制器（其中 **AT**
    代表 **Attention**）使用 **AT 命令**进行编程。如本章开头所述，我们将使用 **NodeMCU 开发板**，如下面的照片所示：
- en: '![Figure 10.8 – NodeMCU development board](img/Figure_10.8_B16413.jpg)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图 10.8 – NodeMCU 开发板](img/Figure_10.8_B16413.jpg)'
- en: Figure 10.8 – NodeMCU development board
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图 10.8 – NodeMCU 开发板
- en: This board is also based on the ESP8266 microcontroller. However, unlike the
    SP-01 module, this can be programmed directly from its micro USB port using different
    development IDEs and various programming languages such as Lua and C. It also
    includes **general-purpose input/output** (**GPIO**) pins to be programmed according
    to the developer's needs. These characteristics make the NodeMCU microcontroller
    one of the most popular IoT platforms today.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 该板也基于 ESP8266 微控制器。然而，与 SP-01 模块不同，它可以直接通过其微型 USB 端口使用不同的开发 IDE 和各种编程语言（如 Lua
    和 C）进行编程。它还包括 **通用输入/输出** (**GPIO**) 引脚，可以根据开发者的需求进行编程。这些特性使得 NodeMCU 微控制器成为当今最受欢迎的物联网平台之一。
- en: 'The NodeMCU associates with both firmware and development boards, and in conjunction
    offers the most popular open source IoT platform. The development board is based
    on the ESP-12 module that, as with the ESP-01 module, gives us the Wi-Fi connection
    functionality and adds the functionality of the development board, with the following
    features:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: NodeMCU与固件和开发板兼容，联合提供最流行的开源物联网平台。开发板基于ESP-12模块，与ESP-01模块一样，为我们提供了Wi-Fi连接功能，并增加了开发板的功能，具有以下特点：
- en: Micro USB port and serial-USB converter
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 微型USB端口和串行-USB转换器
- en: Simple programming via micro USB
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过微型USB进行简单编程
- en: Power via USB terminals (pins) for easy connection
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过USB端子（引脚）供电，便于连接
- en: Integrated reset button and **light-emitting diode** (**LED**)
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 集成复位按钮和**发光二极管**（**LED**）
- en: Using its pins, we can easily place it on a solderless breadboard to connect
    the electronic components required by the projects we will carry out. The NodeMCU
    enables Wi-Fi communication using the **Transmission Control Protocol/Internet
    Protocol** (**TCP/IP**) stack.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 使用其引脚，我们可以轻松地将它放置在无焊面包板上，连接我们将在项目中需要的电子元件。NodeMCU通过**传输控制协议/互联网协议**（**TCP/IP**）堆栈启用Wi-Fi通信。
- en: Important note
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: To program the NodeMCU, the steps to add this type of board indicated in the
    *Showing sensor data results over the internet* section of [*Chapter 9*](B16413_09_Final_NM_ePub.xhtml#_idTextAnchor122),
    *IoT Temperature-Logging System*, must already have been carried out.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 要编程NodeMCU，必须已经执行了在[*第9章*](B16413_09_Final_NM_ePub.xhtml#_idTextAnchor122)“通过互联网显示传感器数据结果”部分中指示的添加此类板子的步骤，即*IoT温度记录系统*。
- en: 'Let''s create a program to connect the NodeMCU to the internet. Follow these
    steps:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建一个程序将NodeMCU连接到互联网。按照以下步骤操作：
- en: 'First, include the Wi-Fi library for the ESP8266\. You will need two string-type
    variables for the Wi-Fi network''s `0`: Moist'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '首先，包含ESP8266的Wi-Fi库。您需要两个字符串类型的变量用于Wi-Fi网络的 `0`: 潮湿'
- en: '`1`: Dry'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`1`: 干燥'
- en: '`2`: Without reading. Hardcoded here, not from the sensor'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`2`: 未读取。这里硬编码，不是来自传感器'
- en: 'The code is illustrated in the following snippet:'
  id: totrans-93
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 代码如下所示：
- en: '[PRE4]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'We will create a web server to receive the sensor data. The server will be
    listening on port `80`. Here is the code to do this:'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将创建一个网络服务器来接收传感器数据。服务器将监听端口 `80`。以下是实现此功能的代码：
- en: '[PRE5]'
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'In the `setup()` part, we need to start the serial data transmission and assign
    the speed of the transfer (this time, we will use 115,200 bps). The code is shown
    in the following snippet:'
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `setup()` 部分中，我们需要启动串行数据传输并分配传输速度（这次我们将使用115,200 bps）。代码如下所示：
- en: '[PRE6]'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Indicate to the NodeMCU board the type of pin for reading the STM32, as follows:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向NodeMCU板指示读取STM32的引脚类型，如下所示：
- en: '[PRE7]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The rest of the `setup()` part will configure the Wi-Fi network, and upon a
    successful connection will send the IP address to the serial monitor. The code
    can be seen here:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`setup()` 部分的其余部分将配置Wi-Fi网络，在成功连接后，将IP地址发送到串行监视器。代码如下所示：'
- en: '[PRE8]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The `loop()` part was built into three functionalities. First, start the web
    server. Then, read the sensor data from the STM32\. Finally, display a responsive
    web app to visualize the sensor monitoring.
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '`loop()` 部分被构建为三个功能。首先，启动网络服务器。然后，从STM32读取传感器数据。最后，显示一个响应式Web应用程序来可视化传感器监控。'
- en: For the complete sketch, refer to the `Chapter10/webserver` folder in the GitHub
    repository.
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于完整的草图，请参阅GitHub仓库中的 `Chapter10/webserver` 文件夹。
- en: 'The web server will be listening for incoming connections from clients. After
    a client connects, we catch it on the `if` condition, as illustrated in the following
    code snippet:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 网络服务器将监听来自客户端的连接请求。客户端连接后，我们通过 `if` 条件捕获它，如下面的代码片段所示：
- en: '[PRE9]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'After a client connects, the code verifies that is receiving a `GET` request
    with a command to read the sensor data, as illustrated in the following code snippet:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户端连接后，代码将验证是否接收到了带有读取传感器数据命令的 `GET` 请求，如下面的代码片段所示：
- en: '[PRE10]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: If the request received by the client asks the sensor value, the NodeMCU will
    take from the STM32 Blue Pill a reading of the sensor.
  id: totrans-109
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果客户端收到的请求要求读取传感器值，NodeMCU将从STM32 Blue Pill读取传感器的读数。
- en: 'To make this bridge between the NodeMCU and the STM32, it will be necessary
    to add the additional connections shown in the following screenshot:'
  id: totrans-110
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了在NodeMCU和STM32之间建立这座桥梁，需要添加以下截图所示的额外连接：
- en: '![Figure 10.9 – Circuit for microcontrollers'' interconnection](img/Figure_10.9_B16413.jpg)'
  id: totrans-111
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图10.9 – 微控制器互连电路](img/Figure_10.9_B16413.jpg)'
- en: Figure 10.9 – Circuit for microcontrollers' interconnection
  id: totrans-112
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.9 – 微控制器的互联电路
- en: 'Here is a schematic diagram of the microcontrollers'' interconnection:'
  id: totrans-113
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 下面是微控制器互联的示意图：
- en: '![Figure 10.10 – Schematic diagram of microcontrollers'' interconnection](img/Figure_10.10_B16413.jpg)'
  id: totrans-114
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图10.10 – 微控制器互联的原理图](img/Figure_10.10_B16413.jpg)'
- en: Figure 10.10 – Schematic diagram of microcontrollers' interconnection
  id: totrans-115
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.10 – 微控制器互联的原理图
- en: Connect a male-to-male jumper wire from NodeMCU GPIO 4 (D2) to the GPIO PC13
    pin of the STM32.
  id: totrans-116
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从NodeMCU的GPIO 4（D2）连接一根公对公跳线到STM32的GPIO PC13引脚。
- en: 'The following photo shows how everything was connected in the actual system:'
  id: totrans-117
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 以下照片显示了实际系统中所有组件的连接方式：
- en: '![Figure 10.11 – STM32 and NodeMCU connection](img/Figure_10.11_B16413.jpg)'
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图10.11 – STM32和NodeMCU连接](img/Figure_10.11_B16413.jpg)'
- en: Figure 10.11 – STM32 and NodeMCU connection
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.11 – STM32和NodeMCU连接
- en: Now, to complete the connection between the NodeMCU and the STM32, it's necessary
    to add a few new lines of code to the `Chapter10/moisture` sketch.
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，为了完成NodeMCU和STM32之间的连接，需要在`Chapter10/moisture`草图中添加几行新代码。
- en: 'Add a new constant to store the output pin used to send the data to the NodeMCU,
    as follows:'
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 添加一个新的常量来存储用于将数据发送到NodeMCU的输出引脚，如下所示：
- en: '[PRE11]'
  id: totrans-122
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'In the `setup()` part, indicate the pin type for `PC13`, as follows:'
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`setup()`部分，指示`PC13`的引脚类型，如下所示：
- en: '[PRE12]'
  id: totrans-124
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Modify the `if` condition in the `loop()` part, as follows:'
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 修改`loop()`部分的`if`条件，如下所示：
- en: '[PRE13]'
  id: totrans-126
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The final step to complete our web server is to serve a responsive web app after
    a client request. In this way, any device connected to the same Wi-Fi network
    and a web browser will be able to access the sensor reading remotely.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成我们的Web服务器的最后一步是在客户端请求后提供响应式Web应用。这样，任何连接到同一Wi-Fi网络和Web浏览器的设备都将能够远程访问传感器读数。
- en: But first, we will learn a few concepts of `<meta>` tag with the `name` property
    that has a `viewport` value. This tag will be responsible for adjusting our app's
    layout according to the device with which we are browsing, so we can do it from
    a desktop PC to a mobile device.
  id: totrans-128
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 但首先，我们将学习一些具有`viewport`值的`<meta>`标签的`name`属性的概念。这个标签将负责根据我们浏览的设备调整我们的应用布局，因此我们可以从桌面PC到移动设备进行操作。
- en: 'To give it the desired visual style, we can do it in two ways: importing a
    `<style></style>` tags, both within the `<head>` tag, as illustrated in the following
    code snippet:'
  id: totrans-129
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了给它一个期望的视觉风格，我们可以有两种方式：在`<head>`标签内导入`<style></style>`标签，如下面的代码片段所示：
- en: '[PRE14]'
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE14]'
- en: For our web app, we are going to need a button. If we do not know much about
    giving CSS visual style, we can use tools freely available on the internet, such
    as [https://www.bestcssbuttongenerator.com/](https://www.bestcssbuttongenerator.com/),
    which will visually generate the style CSS of our buttons.
  id: totrans-131
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于我们的Web应用，我们需要一个按钮。如果我们对提供CSS视觉风格不太了解，我们可以使用互联网上免费提供的工具，例如[https://www.bestcssbuttongenerator.com/](https://www.bestcssbuttongenerator.com/)，它将视觉生成我们按钮的CSS样式。
- en: 'To include HTML code in our sketch, we will use the following sentence:'
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 要在我们的草图中包含HTML代码，我们将使用以下句子：
- en: '[PRE15]'
  id: totrans-133
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'The code for visualizing the sensor value on our web app prints a paragraph
    indicating to the user whether the soil is dry or not, and a graphical indicator
    to better understand our plant pot state, as illustrated in the following code
    snippet:'
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 在我们的Web应用上可视化传感器值的代码打印了一个段落，指示用户土壤是否干燥，以及一个图形指示器以更好地理解我们的花盆状态，如下面的代码片段所示：
- en: '[PRE16]'
  id: totrans-135
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE16]'
- en: To allow the user to gather the sensor reading, we included a button to press
    each time they need to know their plant's status. Remember—the complete code for
    this part of the project is available in the `Chapter10/webserver` GitHub folder.
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 为了允许用户收集传感器读数，我们包含了一个按钮，每次需要知道他们的植物状态时都需要按下。记住——这个项目部分的完整代码可在`Chapter10/webserver`
    GitHub文件夹中找到。
- en: Important note
  id: totrans-137
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 重要提示
- en: 'If you need to use free images and icons, you can find them on the internet
    repositories such as the following:'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 如果你需要使用免费图片和图标，你可以在以下互联网存储库中找到它们：
- en: '[https://pixabay.com/](https://pixabay.com/)'
  id: totrans-139
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://pixabay.com/](https://pixabay.com/)'
- en: '[https://fontawesome.com/icons](https://fontawesome.com/icons)'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://fontawesome.com/icons](https://fontawesome.com/icons)'
- en: 'The sketch is now complete, so upload it to the NodeMCU board and reset it
    after completing the upload. Now, you can see in the **serial monitor** the IP
    address to connect our client, as shown in the following screenshot:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 现在草图已经完成，所以将其上传到NodeMCU板，并在上传完成后重置它。现在，你可以在**串行监视器**中看到连接我们的客户端的IP地址，如下面的截图所示：
- en: '![Figure 10.12 – IP address on the serial monitor](img/Figure_10.12_B16413.jpg)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![图10.12 – 串行监视器上的IP地址](img/Figure_10.12_B16413.jpg)'
- en: Figure 10.12 – IP address on the serial monitor
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.12 – 串行监视器上的IP地址
- en: It's now time to move on to the next section, which will show you how to visualize
    the data over the internet.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候进入下一节了，该节将向您展示如何在网上可视化数据。
- en: Showing sensor data results over the internet
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在互联网上显示传感器数据结果
- en: Having objects connected to the internet will allow you to access their data
    from anywhere that has a connection to that network.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 将物体连接到互联网将允许您从任何连接到该网络的地点访问它们的数据。
- en: This is why we gave our project the ability to become a web server and thus
    be able to access the state of the plant pot from any web browser.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么我们给我们的项目赋予了成为Web服务器的功能，从而能够从任何Web浏览器访问花盆的状态。
- en: 'For this project, access can only be from our Wi-Fi network. To test its operation,
    we are going to access the developed web app from any mobile or desktop web browser.
    Proceed as follows:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，访问只能从我们的Wi-Fi网络进行。为了测试其操作，我们将从任何移动或桌面Web浏览器访问开发的Web应用。按照以下步骤操作：
- en: Open a web browser and go to the IP address of our server (see *Figure 10.12*).
    You should see our landing page to monitor our plant pot, as shown in the following
    screenshot:![Figure 10.13 – Web app landing page](img/Figure_10.13_B16413.jpg)
  id: totrans-149
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开Web浏览器，访问我们的服务器IP地址（见*图10.12*）。您应该看到我们的着陆页，用于监控我们的花盆，如下面的截图所示：![图10.13 – Web应用着陆页](img/Figure_10.13_B16413.jpg)
- en: Figure 10.13 – Web app landing page
  id: totrans-150
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.13 – Web应用着陆页
- en: On the landing page, you can simply press the button every time you want to
    measure the humidity of the plant pot. If the soil is dry, we will see a representative
    image and a legend stating **Soil is too dry**, as illustrated in the following
    screenshot:![Figure 10.14 – Web app screen for dry soil](img/Figure_10.14_B16413.jpg)
  id: totrans-151
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在着陆页面上，每次您想要测量花盆的湿度时，都可以简单地按下按钮。如果土壤干燥，我们会看到一个代表性的图像和说明为**土壤过于干燥**的图例，如下面的截图所示：![图10.14
    – 干土壤的Web应用屏幕](img/Figure_10.14_B16413.jpg)
- en: Figure 10.14 – Web app screen for dry soil
  id: totrans-152
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图10.14 – 干土壤的Web应用屏幕
- en: 'Otherwise, if the soil has good humidity, we get a legend stating **Soil is
    moist enough** along with a representative image, as illustrated in the following
    screenshot:'
  id: totrans-153
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 否则，如果土壤湿度适中，我们会看到一个说明为**土壤湿度足够**的图例以及一个代表性的图像，如下面的截图所示：
- en: '![Figure 10.15 – Web app screen for moist soil](img/Figure_10.15_B16413.jpg)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![图10.15 – 湿土壤的Web应用屏幕](img/Figure_10.15_B16413.jpg)'
- en: Figure 10.15 – Web app screen for moist soil
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 图10.15 – 湿土壤的Web应用屏幕
- en: You can monitor your plant pots with this IoT device and application from anywhere
    in your home, as long as you are connected to your local Wi-Fi network.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 只要您连接到您的本地Wi-Fi网络，您就可以从家中任何地方使用这个物联网设备和应用来监控您的花盆。
- en: We have reached the end of this chapter. Well done! Let's see what we learned
    in this project.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经到达了本章的结尾。做得好！让我们看看在这个项目中我们学到了什么。
- en: Summary
  id: totrans-158
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: At the beginning of the project, you saw how to interface a soil moisture sensor
    to your STM32 board. Then, we created a simple sketch to collect the sensor readings
    and tested it to ensure it worked properly.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 在项目开始时，您看到了如何将土壤湿度传感器连接到您的STM32板。然后，我们创建了一个简单的草图来收集传感器读数，并测试它以确保其正常工作。
- en: We also learned how to connect a NodeMCU card to the internet and read the sensor
    data from the STM32\. Finally, in the last part of the project, we built a web
    app to control the IoT device from any web browser, either mobile or desktop.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还学习了如何将NodeMCU卡连接到互联网并从STM32读取传感器数据。最后，在项目的最后一部分，我们构建了一个Web应用，可以从任何Web浏览器（无论是移动还是桌面）控制物联网设备。
- en: The IoT area is growing quickly, so talented people with the right skills in
    this technology can easily access jobs in this exciting area. With this in mind,
    after completing this chapter, we now have a stronger foundation for creating
    IoT devices and applications.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 物联网领域正在快速发展，因此在这个技术领域拥有正确技能的人才可以轻松进入这个令人兴奋的领域的职位。考虑到这一点，完成本章后，我们现在为创建物联网设备和应用有了更坚实的基础。
- en: In the next chapter, we will learn how to connect our electronic devices to
    the internet and make them available outside our local Wi-Fi network.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将学习如何将我们的电子设备连接到互联网，并使它们在我们的本地Wi-Fi网络之外可用。
- en: Further reading
  id: totrans-163
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Chalimov, A, *IoT in agriculture: 8 technology use cases for smart farming
    (and challenges to consider)*. Eastern Peak, 2020: [https://easternpeak.com/blog/iot-in-agriculture-technology-use-cases-for-smart-farming-and-challenges-to-consider/](https://easternpeak.com/blog/iot-in-agriculture-technology-use-cases-for-smart-farming-and-challenges-to-consider/)'
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 'Chalimov, A, *农业中的物联网：智能农业的8个技术应用案例（以及需要考虑的挑战）*. Eastern Peak, 2020: [https://easternpeak.com/blog/iot-in-agriculture-technology-use-cases-for-smart-farming-and-challenges-to-consider/](https://easternpeak.com/blog/iot-in-agriculture-technology-use-cases-for-smart-farming-and-challenges-to-consider/)'
