- en: '*Chapter 12*'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第12章*'
- en: Business
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 商业
- en: Introduction
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: This chapter is a bit like the Roman god, Janus. Janus was the gatekeeper of
    heaven and had two faces. One of Janus' faces looked forward and the other backward;
    his name survives in the month January – looking forward to the new year and backward
    to the year that has passed.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这一章有点像罗马神祇雅努斯。雅努斯是天堂的门卫，拥有两张面孔。雅努斯其中一张面孔朝前看，另一张朝后看；他的名字幸存于一月——展望新的一年，回顾过去的一年。
- en: 'This chapter similarly has two faces: one looks outward, from the perspective
    of a developer to the business that this person finds themselves interacting with;
    the other looks inward, from the perspective of the business to the developer.
    To keep things exciting, the narrative changes between these positions more than
    once.'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这一章同样有两面：一面朝外看，从开发者视角看他们与之互动的商业；另一面朝内看，从商业视角看开发者。为了保持故事的吸引力，叙述在这些立场之间多次变换。
- en: '"But I''m self-employed," I hear some of you saying. You still engage in business
    activities. You might have to justify your work to your client rather than your
    manager, but the concepts remain the same.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: “但我是自雇的，”我听到一些人说。你仍然在进行商业活动。你可能需要向客户而不是经理证明你的工作，但概念是相同的。
- en: 'Even if you''re a junior developer with plenty of levels of management above
    you, it still pays to understand the business you''re in and how your work fits
    into the company''s goals. Reasons for this begin with the cynical: you''ll probably
    be expected to take a "bigger picture" or strategic view of your work to progress
    up the pay scale. But it''s also going to be helpful; if you know what the business
    pressures are, you can understand why management is coming up with the suggestions
    and rules that they are.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 即使你是级别很高的初级开发者，了解你所从事的商业以及你的工作如何融入公司的目标仍然是有益的。这种做法的原因始于悲观：你可能会被期望从“更大的图景”或战略视角看待你的工作以晋升薪酬等级。但这也将是有所帮助的；如果你知道业务压力是什么，你就能理解为什么管理层会提出他们提出的建议和规则。
- en: If you *are* a junior programmer, this is likely to be the biggest change that
    helps your career progression (and, unfortunately, was one I learned the hard
    way). If all you see is the code, then all you see in management decisions is
    people getting in the way of writing code. They actually have different pressures,
    different inputs, and different experiences, so it's unsurprising that those people
    have come up with different priorities. Understanding that is the first step towards
    empathizing with their position and becoming a more valuable member of the team.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你确实是一名初级程序员，这可能是帮助你职业发展的最大变化（而且，不幸的是，这是我通过艰难的方式学到的）。如果你只看到代码，那么你在管理决策中看到的只是阻碍你编写代码的人。他们实际上面临不同的压力、不同的输入和不同的经验，因此这些人提出不同的优先级并不令人惊讶。理解这一点是同情他们的立场并成为更有价值的团队成员的第一步。
- en: Evaluate Risks Dispassionately
  id: totrans-8
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 冷静评估风险
- en: On any project, there are things that could go wrong. Are you being realistic
    about them? What are the things that *have* gone wrong on projects you've worked
    on before? Did you consider the risk of those going wrong this time around? Did
    you think about how you might control the things that led to them going wrong?
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何项目中，都可能会有出错的事情。你对这些事情的现实感如何？在你之前参与的项目中，哪些事情已经出了错？你考虑过这次这些事情出错的风险吗？你思考过如何控制导致它们出错的因素吗？
- en: 'According to some researchers in the field of disaster response, there are
    *five considerations in risk estimation*, leading to five different ways to get
    risk management wrong:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 根据一些灾害响应领域的学者，在风险估计中有*五个考虑因素*，导致五种不同的风险管理错误方式：
- en: Incorrect evaluation of probability (usually presented as optimism bias – the
    false belief that nothing can go wrong)
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 评估概率不正确（通常表现为乐观偏差——错误地认为没有什么会出错）
- en: Incorrect evaluation of impact (again, usually assuming, optimistically, that
    the damage won't be too great)
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 影响评估不正确（再次，通常乐观地假设损害不会太大）
- en: Statistical neglect (ignoring existing real data in forecasting future outcomes,
    usually in favor of folklore or other questionable heuristics)
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 统计忽视（在预测未来结果时忽略现有真实数据，通常是为了民间传说或其他可疑的启发式方法）
- en: Solution neglect (not considering all options for risk reduction, thus failing
    to identify the optimal solution)
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 解决方案忽视（没有考虑所有风险降低的选项，因此未能识别出最佳解决方案）
- en: External risk neglect, in which you fail to consider factors outside the direct
    scope of the project that could nonetheless have an impact
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 外部风险忽视，即未能考虑可能对项目产生影响的直接范围之外的因素
- en: Project Risks
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 项目风险
- en: Reminiscence of my experience making—and then failing to meet—estimates leads
    me to believe that ignoring risks leads to unmet schedule expectations more often
    than underestimating the time required to do the work. In other words, "oh I thought
    this would take 3 days but it took me 5" does happen, but less frequently than
    "oh I thought this would take 3 days and it did but I was taken off the project
    for 2 days by this other thing."
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 回忆起我制定并最终未能实现估计的经验，使我相信忽视风险比低估完成工作所需的时间更频繁地导致未能满足的进度预期。换句话说，“我以为这需要3天，但实际上花了5天”这种情况确实会发生，但发生的频率低于“我以为这需要3天，结果真的只用了3天，但我因为其他事情被从项目中移除了2天。”
- en: Techniques such as **the velocity factor**—[https://resources.collab.net/agile-101/agile-scrum-velocity](https://resources.collab.net/agile-101/agile-scrum-velocity)
    and **evidence-based scheduling**—[http://www.joelonsoftware.com/items/2007/10/26.html](http://www.joelonsoftware.com/items/2007/10/26.html))
    try to account for both of these impacts by comparing estimated completion time
    with actuals and providing a "fudge factor" by which to multiply subsequent estimates.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，**速度因子**[https://resources.collab.net/agile-101/agile-scrum-velocity](https://resources.collab.net/agile-101/agile-scrum-velocity)和**基于证据的排程**[http://www.joelonsoftware.com/items/2007/10/26.html](http://www.joelonsoftware.com/items/2007/10/26.html)等技术试图通过比较估计完成时间和实际完成时间，并提供一个“调整因子”来乘以后续估计，来考虑这两种影响。
- en: Assuming that both scheduling failures and external interruptions follow a Poisson
    distribution, that fudge factor should be roughly correct (given infinite prior
    data as input, which might be tricky to arrange). But then if that assumption's
    valid, you could just build a Poisson model (such as, as Spolsky suggests in the
    above link, a Monte Carlo simulation) to guess how the project will go.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 假设进度失败和外部中断都遵循泊松分布，那么这个调整因子应该是大致正确的（假设有无限的历史数据作为输入，这可能有些棘手）。但如果这个假设是有效的，那么你就可以构建一个泊松模型（例如，如Spolsky在上面的链接中所建议的，蒙特卡洛模拟）来预测项目将如何进行。
- en: Business Risks
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 商业风险
- en: At time of writing, the world of the Twitter client author has just been changed
    by updates to **Twitter's Developer Rules of the Road**—[https://developer.twitter.com/en/developer-terms/agreement-and-policy.html](https://developer.twitter.com/en/developer-terms/agreement-and-policy.html).
    The company is limiting the number of client tokens any app can have before discussing
    their case with Twitter. They're also strongly discouraging (as they have done
    before) the standard "Twitter client" product category, suggesting that developers
    avoid developing that sort of product.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在撰写本文时，Twitter客户端作者的领域刚刚因为Twitter的《开发者道路规则》更新而发生了变化——[https://developer.twitter.com/en/developer-terms/agreement-and-policy.html](https://developer.twitter.com/en/developer-terms/agreement-and-policy.html)。公司正在限制任何应用程序在向Twitter讨论他们的案例之前可以拥有的客户端令牌数量。他们还强烈反对（就像他们之前所做的那样）标准的“Twitter客户端”产品类别，建议开发者避免开发那种产品。
- en: It's clear that, for a Twitter client app, Twitter is a single point of failure.
    Indeed, at a technical level, the service still occasionally suffers from short
    outages. But it's also a single point of failure at the *business* level—if they
    don't want to support what you want to do, there's little chance of it happening
    on their platform. It's not like you can point to how much you've paid them and
    would continue to pay them; the platform is free to developers and users alike.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 很明显，对于一个Twitter客户端应用来说，Twitter是一个单点故障。实际上，在技术层面上，该服务偶尔还会出现短暂的故障。但在业务层面上，它也是一个单点故障——如果他们不想支持你想要做的事情，那么在他们的平台上实现的可能性很小。你无法指出你为他们支付了多少钱，并且会继续支付；该平台对开发者和用户都是免费的。
- en: Are there any companies or platforms that could similarly pull the rug out from
    under your business? What's the likelihood of that happening, and what will you
    do either to avoid or to react to it? What competitors do you have, and how does
    their behavior affect your plans? What patents might your work infringe on? And,
    in these days of cloud computing, how important is the San Andreas Fault or an
    Atlantic hurricane to your business?
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 是否有公司或平台可能会像从你业务下撤走地毯一样？这种情况发生的可能性有多大，你将如何避免或应对这种情况？你的竞争对手有哪些，他们的行为如何影响你的计划？你的工作可能会侵犯哪些专利？而且，在云计算的今天，圣安德烈亚斯断层或大西洋飓风对你的业务有多重要？
- en: Operational Risks
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 运营风险
- en: 'Operational risks are defined as risks arising from the potential for an organization''s
    internal processes to fail. Perhaps your data recovery plan isn''t resilient to
    losing your main office: that might be an operational risk. A salesperson failing
    to store a customer''s information in the CRM, leading to a missed follow-up call
    and therefore a lost sales opportunity, is also an operational risk.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 运营风险被定义为由于组织内部流程可能失败而产生的风险。也许您的数据恢复计划无法应对失去主要办公室的情况：这可能是运营风险。销售人员未能将客户信息存储在CRM中，导致错失跟进电话，从而失去销售机会，这也是一种运营风险。
- en: Of course, some level of operational risk is acceptable. Internal processes
    do not generate any profit, so gold-plating them means sinking a lot of cost in
    return for smaller losses rather than greater income. This is, in my experience,
    the ultimate end for utility and commodity companies, where getting something
    wrong is a bigger danger than any external factors. Internal processes will ossify
    as operational risks are removed, pushing costs up as reduced prices squeeze the
    margins from the other side.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，一定程度的运营风险是可以接受的。内部流程不会产生任何利润，因此过度美化它们意味着在较小的损失而不是更大的收入上投入大量成本。根据我的经验，这是公用事业和商品公司的最终目标，在这些公司中，犯错比任何外部因素都危险。随着运营风险的消除，内部流程将趋于僵化，随着价格的降低，这将从另一侧挤压利润空间。
- en: Bad management decisions can also be classed as operational risks, as they represent
    internal processes of a sort.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 管理决策不当也可以归类为运营风险，因为它们代表了某种内部流程。
- en: Other External Risks
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 其他外部风险
- en: Are there regulatory risks to your business? Many software companies, particularly
    those in social networks and mobile apps, are starting to find that **California's
    Online Privacy Protection Act**—[http://www.pcworld.com/article/2018966/california-sues-delta-airlines-over-app-privacy-policy.html](http://www.pcworld.com/article/2018966/california-sues-delta-airlines-over-app-privacy-policy.html)
    is relevant to their work, even though they aren't necessarily based in California
    (Apple and Google, their exclusive distributors, *are* based in California).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您的业务是否存在监管风险？许多软件公司，尤其是那些在社交网络和移动应用中的公司，开始发现**加州在线隐私保护法案**——[http://www.pcworld.com/article/2018966/california-sues-delta-airlines-over-app-privacy-policy.html](http://www.pcworld.com/article/2018966/california-sues-delta-airlines-over-app-privacy-policy.html)与他们的工作相关，即使他们不一定在加州（苹果和谷歌，他们的独家分销商，*确实*在加州）。
- en: Which rules or laws could change that would affect what your company does? Are
    those changes likely to happen? How would you have to modify what you do to take
    the new regulations into account, and are you prepared for that?
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 哪些规则或法律可能会改变，从而影响贵公司所做的事情？这些变化是否可能发生？您将如何修改您所做的事情以考虑新的法规，并且您是否为此做好了准备？
- en: 'Is your pricing correct? If you reduced your price, you would increase unit
    sales; if you increased your price, you would increase revenue per sale. Which
    is the best route to take? Is your current price optimal? Michael Jurewitz, then
    of Black Pixel, wrote **a series of detailed posts** on this topic, using one
    particular model of software pricing:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 您的定价是否正确？如果您降低价格，您将增加单位销量；如果您提高价格，您将增加每笔销售的收益。哪条路线是最好的？您当前的价格是否最优？当时的Black Pixel公司（现在的Black
    Pixel）的Michael Jurewitz写了一系列关于这个主题的详细文章，使用了一个特定的软件定价模型：
- en: '[http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-1](http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-1)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-1](http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-1)'
- en: '[http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-2](http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-2)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-2](http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-2)'
- en: '[http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-3](http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-3)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-3](http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-3)'
- en: '[http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-4](http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-4)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-4](http://jury.me/blog/2013/3/31/understanding-app-store-pricing-part-4)'
- en: '[http://jury.me/blog/2013/4/1/understanding-app-store-pricing-part-5-pricing-kaleidoscope](http://jury.me/blog/2013/4/1/understanding-app-store-pricing-part-5-pricing-kaleidoscope)'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[http://jury.me/blog/2013/4/1/understanding-app-store-pricing-part-5-pricing-kaleidoscope](http://jury.me/blog/2013/4/1/understanding-app-store-pricing-part-5-pricing-kaleidoscope)'
- en: Career Risks
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 职业风险
- en: That thing you're doing now. Yes, that thing. Eww, no, not *that* thing; the
    other thing. Will you still be doing it in 10 years?
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在正在做的事情。是的，那件事。哎呀，不是*那件事*；另一件事。你会在10年后仍然做那件事吗？
- en: 'Here''s a hint: the answer''s probably "no." Not *definitely* no, but probably
    no. Here''s what I was doing in 2002:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个提示：答案可能“不是”。不是“肯定”不是，但可能是不是。以下是我2002年所做的事情：
- en: Learning condensed matter physics and particle physics
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习凝聚态物理和粒子物理
- en: Waiting for the success of desktop Linux
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 等待桌面Linux的成功
- en: Teaching myself Objective-C programming
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自学Objective-C编程
- en: Coding in Perl and Pascal
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用Perl和Pascal编程
- en: Of those, it's only really Objective-C that's at all relevant to what I do now;
    maybe I pull Perl out once a year or less. (Of course, many people *are* still
    waiting for desktop Linux, so maybe I just quit too easily.) So, of the things
    you're doing now, which will still be around in 10 years? Which will be recognizably
    the same as they currently are?
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这些中，只有Objective-C与我目前所做的事情真正相关；也许我一年只使用Perl一次或更少。（当然，许多人仍然在等待桌面Linux，所以也许我只是太容易放弃了。）那么，你现在正在做的事情中，哪些在10年后仍然存在？哪些会与目前一样明显相同？
- en: 'And what are you doing about that? Of course, education is part of the solution;
    there''s *Chapter 10, Learning*, in this book. But this section''s about dispassionately
    evaluating risks, and that''s important too: put aside what you *want* to be doing
    in 10 years'' time. Sure, you *could* focus on writing iOS apps in Objective-C
    in 2022, just as you *could* be focused on writing Mac Carbon software or Palm
    Treo apps in 2012.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你对此有什么打算？当然，教育是解决方案的一部分；这本书中有一个“第10章，学习”章节。但这一节是关于冷静地评估风险，这也同样重要：把你在10年后想做的事情放在一边。当然，你*可以*在2022年专注于用Objective-C编写iOS应用，就像你*可以*在2012年专注于编写Mac
    Carbon软件或Palm Treo应用一样。
- en: 'Will what you''re doing now still be important then? Will it have been replaced
    by something else? If so, will it be from the same vendor? Even if it still exists,
    will there still be enough money in it for you to support yourself? And if the
    answers are no: what will you do before it happens?'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 你现在正在做的事情在那时仍然重要吗？它会被其他东西取代吗？如果是这样，它会是来自同一个供应商的吗？即使它仍然存在，其中是否还有足够的钱让你自给自足？如果答案是否定的：在它发生之前你会做什么？
- en: Dealing with Risks
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 处理风险
- en: 'It''s possible to get paralyzed by indecision: should we proceed before we
    have understood and controlled *all* the risks that could be faced by the company?
    That mentality won''t be very profitable; essentially, profit can be seen as a
    return on taking risks.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 可能会因为犹豫不决而变得瘫痪：在我们理解和控制公司可能面临的所有风险之前，我们应该继续前进吗？这种心态不会非常有利可图；本质上，利润可以看作是承担风险的回报。
- en: You can decide what risks are important by evaluating their likely costs. Some
    people do this in a currency unit (that is, dollars it'll cost to recover from
    this happening times the probability of it happening in a given time period);
    others do it in abstract units such as high/medium/low likelihood and impact.
    Either way, the outcome is a list of risks ranked by importance, and it's easy
    to choose a low watermark, below which you just accept any risks.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过评估它们的预期成本来决定哪些风险是重要的。有些人用货币单位来做这件事（即，发生这种情况需要多少美元来恢复，乘以在给定时间段内发生的概率）；其他人则用抽象单位，如高/中/低可能性和影响来做这件事。无论如何，结果都是按重要性排序的风险列表，并且很容易选择一个低点，低于这个点，你只需接受任何风险。
- en: 'Acceptance (or "sucking it up") is a very cheap way to deal with a risk. Other
    ways include:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 接受（或称为“忍受”）是一种处理风险的非常便宜的方式。其他方式包括：
- en: '**Withdrawal**: Remove any likelihood and impact of a risky event occurring
    by refusing to participate in the risky activity. Withdrawing from the activity
    certainly mitigates any risk very reliably, but it also means no possibility of
    gaining the reward associated with participation.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**退出**：通过拒绝参与风险活动来消除风险事件发生的可能性和影响。退出活动当然可以非常可靠地减轻任何风险，但也意味着没有获得与参与相关的奖励的可能性。'
- en: '**Transference**: You can opt to transfer the risk to another party, usually
    for a fee: this basically means taking out insurance. This doesn''t affect the
    probability that our risky event will come to pass but means that someone else
    is liable for the damages.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**转移**：你可以选择将风险转移给另一方，通常需要付费：这基本上意味着购买保险。这不会影响我们风险事件发生的概率，但意味着有人对损害负责。'
- en: '**Countermeasures**: Finding some technical or process approach to reduce the
    risk. This means, of course, one or more of limiting its likelihood or the expected
    damage. But think about deploying these countermeasures: you''ve now made your
    business or your application a bit more complex. Have you introduced new risks?
    Have you increased the potential damage from some risks by reducing others? And,
    of course, is your countermeasure cost-effective? You don''t want to spend $1,000
    to save $100.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Personal Experience
  id: totrans-54
  prefs:
  - PREF_IND
  - PREF_H4
  type: TYPE_NORMAL
- en: 'Being mainly experienced in writing iOS apps, Apple is of course a single point
    of failure in my work. If they change the platform in ways I can''t adapt to,
    I''ll be out of luck: but I don''t think that''s very likely. They''ve shown (and
    said at their developer conferences) that they plan to iterate on their current
    platform for the foreseeable future.'
  id: totrans-55
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'On the other hand, they can and *do* reject applications that are inconsistent
    with their submission guidelines. My approach here has been twofold: firstly,
    to use the process countermeasure of planning apps that aren''t obviously inconsistent
    with the guidelines. Secondly, transference: I don''t sell any of the software
    I make myself, but sell development services (whether as an employee, consultant,
    or contractor) to people who themselves take on the risks associated with getting
    the products to market.'
  id: totrans-56
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Find Out What You Need to Know, And How You Can Know It
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'True story: I thought about opening this segment with the Donald Rumsfeld "there
    are the known knowns" quote. It didn''t take long to find that he wasn''t the
    first person to say that: here''s Ibn Yamin, taken from the *Wikipedia entry for
    the Rumsfeld speech*—[http://en.wikipedia.org/wiki/There_are_known_knowns](http://en.wikipedia.org/wiki/There_are_known_knowns):'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: '*One who knows and knows that he knows... His horse of wisdom will reach the
    skies.*'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
- en: '*One who knows, but doesn''t know that he knows... He is fast asleep, so you
    should wake him up!*'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
- en: '*One who doesn''t know, but knows that he doesn''t know... His limping mule
    will eventually get him home.*'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
- en: '*One who doesn''t know and doesn''t know that he doesn''t know... He will be
    eternally lost in his hopeless oblivion!*'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
- en: The thing is that, had I not looked this up, I could've confidently attributed
    that idea to Rumsfeld. "Aha," thinks I, "I've shown an example of thinking I know
    what I'm doing when I really don't. This is classic **Dunning-Kruger Effect**—[http://rationalwiki.org/wiki/Dunning-Kruger_effect](http://rationalwiki.org/wiki/Dunning-Kruger_effect)."
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
- en: 'Then, of course, ready to find and cite their Ig Nobel-winning paper, I spied
    the Darwin quote at the linked rationalwiki page:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
- en: '*Ignorance more frequently begets confidence than does knowledge*'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
- en: 'In each of these cases, armed with an idea of what I wanted to say, it only
    took one web search to find:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
- en: A claim (that I could verify) that the idea was earlier than I imagined; which
    also served as…
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: …a reminder that I don't know everything about what I'm writing.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: …这是一个提醒，我并不了解我所写的一切。
- en: It's really *that* easy to go from "thinking you know what you're talking about"
    to "realizing you don't know very much." That means it's probably best to assume
    that you don't know very much; particularly, if you're facing a new challenge
    you haven't dealt with before.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 真的是**那么**容易从“认为自己知道自己在说什么”转变为“意识到自己知道的并不多。”这意味着最好假设你知道的并不多；尤其是，如果你面对的是一个你以前从未处理过的新挑战。
- en: The way I like to help along this realization when I'm planning is to spend
    about 5 minutes with an outline tool such as **OmniOutliner** or **iThoughts**
    HD, just writing down questions that are relevant to the problem at hand. Even
    that small amount of work gives me a plan for later research, and the humility
    needed to follow it up.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 当我在规划时，我喜欢用像**OmniOutliner**或**iThoughts** HD这样的大纲工具花大约5分钟，只写下与当前问题相关的问题。即使这样一点点的努力也给了我后续研究的计划，以及遵循它的谦卑。
- en: What You Discover May Not Be to Your Liking
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你发现的东西可能并不符合你的喜好
- en: Sometimes, you'll look at the results of the research you've done and realize
    that things don't look promising.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，当你查看你所做的研究结果时，你会意识到事情并不乐观。
- en: Perhaps there aren't as many customers for your product as you first assumed,
    development is going to be harder, or you've found a competing product you didn't
    know about before. Perhaps the task you estimated would take 2 days is going to
    take longer than a week.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 可能你的产品客户没有你最初假设的那么多，开发可能会更困难，或者你发现了一个你以前不知道的竞争产品。也许你估计的任务需要2天，实际上需要超过一周的时间。
- en: 'You need to decide what you''re going to do about that. The *worst* way to
    do this is by ignoring the problem: you''re relying on luck or on faith to get
    you through. You''re cleverer than that; you can think of a plan to overcome the
    problem.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 你需要决定如何处理这个问题。处理这个问题的最糟糕的方式是忽视问题：你是在依赖运气或信念来度过难关。你比这聪明；你可以想出一个克服问题的计划。
- en: Personal Experience
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 个人经验
- en: One of the first software projects I worked on had a team of three developers,
    none of whom had much experience with the technology we were using, and two of
    whom (myself included) didn't really have much experience of anything.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我参与过的第一个软件项目有一个由三名开发者组成的团队，他们中没有人有太多使用我们所使用技术的经验，其中两人（包括我自己）实际上对任何事情都没有太多经验。
- en: As we progressed with the project, we found that it was taking us longer than
    we planned to deliver each build and that the builds were very buggy. We convinced
    ourselves that we could make up for it in the *next* build each time, even though
    this would mean coming in *under* schedule (something we hadn't demonstrated we
    could do), *and* at sufficient quality (ditto), *and* finding time to fix all
    the existing bugs.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们项目的进展，我们发现每个构建的交付时间比我们计划的时间要长，而且构建中有很多错误。我们说服自己，我们可以在下一个构建中弥补这些不足，即使这意味着我们会落后于进度（这是我们尚未证明能够做到的），*并且*达到足够的质量（同样如此），*并且*找到时间修复所有现有的错误。
- en: Eventually, our manager had to stop us and point out that for every day of new
    work we were doing, we were adding *3* days of bugfix work. In other words, the
    project would never be finished if we didn't change what we were doing.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，我们的经理不得不阻止我们，指出我们每做一天的新工作，就会增加*3*天的错误修复工作。换句话说，如果我们不改变我们所做的事情，项目永远不会完成。
- en: Contrast that with a project I worked on very recently. Looking at the plan,
    it was clear that some parts of the software would put significant computational
    load on the target hardware, and there was a real risk that the full functionality
    couldn't be delivered because it wouldn't run at an acceptable speed.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 与我最近参与的一个项目相比，看看计划，很明显，软件的一些部分会对目标硬件造成重大的计算负担，而且确实存在这样的风险，即无法提供完整的功能，因为它无法以可接受的速度运行。
- en: I therefore wrote these parts of the application *first*, leaving the standard
    data-handling parts until later. Sure enough, within 3 weeks, we'd found that
    there were observable performance problems and we couldn't continue until we'd
    found a way to address them.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我首先写了这些应用程序的部分，将标准数据处理部分留到后来。不出所料，在3周内，我们就发现了一些可观察的性能问题，我们无法继续下去，直到我们找到了解决问题的方法。
- en: It worked out that this pushed the schedule out by over a week – in other words,
    the project was delayed. But because we'd been open about this being a potential
    problem, had identified it, and addressed it as early as possible, this impact
    could be handled and didn't cause any great friction.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 结果是，这导致进度推迟了一周多——换句话说，项目被延误了。但由于我们一开始就公开了这可能是潜在的问题，并尽早识别和解决，这种影响得到了处理，并没有造成太大的摩擦。
- en: Other books have covered this ground; a good place to go for an alternative
    discussion is the *pivot or persevere* section in *Chapter 8*, *The Lean Startup
    by Eric Ries*—[http://theleanstartup.com/book](http://theleanstartup.com/book).
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 其他书籍已经涵盖了这一领域；寻找替代讨论的好地方是埃里克·莱斯（Eric Ries）的《精益创业》（The Lean Startup）第8章中的**转向或坚持**部分——[http://theleanstartup.com/book](http://theleanstartup.com/book)。
- en: How to Interview A Programmer?
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何面试程序员？
- en: 'I''ve been on both sides of job interviews for technical positions. I''ve seen
    both success and failure (on both sides: my own success rate is currently at around
    2/3, where I count a job that I left after 2 months as a failure). This isn''t
    the definitive guide to running an interview, or to being interviewed, but it''s
    a good guide to what interviewers should be looking for. As a result, it''s also
    a good guide to what interviewees can assume interviewers are looking for. How
    meta!'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我曾经作为技术职位的求职者和面试官，都经历过成功和失败（两方面：我自己的成功率目前大约是2/3，其中我把离职后不到2个月的工作算作失败）。这并不是一个关于如何进行面试或被面试的终极指南，但它是一个很好的指南，告诉面试官他们应该寻找什么。因此，它也是一个很好的指南，告诉求职者可以假设面试官在寻找什么。多么元啊！
- en: Bear the Goal in Mind
  id: totrans-85
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 心中牢记目标
- en: The goal of an interview is to find out—often in only an hour or so—whether
    you could work with the person you're talking to daily without one of the two
    of you going insane. Some people phrase this as whether you could spend 8 hours
    trapped in an airport with just the interviewee to talk to. Imagine that, but
    5 days a week for the next 2 years.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 面试的目的是找出——通常只需要一个小时左右——你是否可以每天与谈话的人一起工作，而不会让其中任何一个人发疯。有些人把这句话表述为是否可以和面试者一起被困在机场8小时。想象一下，但这是接下来两年每周5天的情况。
- en: Find out enough about their technical skills to decide whether they were lying
    on their CV. You don't need to probe them on the depth of their skills beyond
    that; if you didn't think their CV expressed enough relevant experience for them
    to be good at the role, you wouldn't have invited them in for an interview.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 了解他们的技术技能足够多，以判断他们是否在简历上撒谎。你不需要深入探究他们的技能深度；如果你认为他们的简历没有表达出足够的相关经验，使他们能够胜任这个角色，你就不会邀请他们来面试。
- en: This focus on the interpersonal side is especially true of interviews for interns,
    graduates, and other positions where you don't expect applicants to bring much
    experience to the table. In these cases, you *can't* rely on technical questions
    to carry the interview—almost by definition, the best candidate will probably
    be unable to provide many answers. Rather than making candidates uncomfortable
    by showing how much more you know than them, make them comfortable and find out
    whether they'll be good people to work with.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这种对人际交往的关注在实习生、毕业生和其他你不会期望申请者带来太多经验的职位面试中尤其明显。在这些情况下，你不能仅仅依靠技术问题来支撑面试——几乎可以说，最佳候选人可能无法提供很多答案。与其通过展示你比他们知道得多来让候选人感到不舒服，不如让他们感到舒适，并找出他们是否是值得一起工作的好人。
- en: The Interview's There for Both of You
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 面试是为了双方而设
- en: When I was a fresh graduate, I assumed that the purpose of a job interview was
    to put on my best suit (My *only* suit, at the time) and convince other people
    to let me work for them. I now know this not to be true, though I still encounter
    people who behave in this way. I feel that either the real purpose of an interview
    is being kept secret or careers services don't think people need to be told about
    it.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 当我还是一名应届毕业生时，我假设求职面试的目的是穿上我最合身的西装（当时我**唯一**的西装）并说服其他人让我为他们工作。我现在知道这并不正确，尽管我仍然遇到这种行为的人。我觉得面试的真正目的可能还在保密中，或者职业服务部门认为人们不需要被告知这一点。
- en: '*The real purpose of an interview is to find out whether you want to work for
    that company.* Is the interviewer—who will most likely be your colleague or supervisor—someone
    you''d want to work with? Is the job actually what was advertised? Does it still
    seem interesting? Do they mention all sorts of extra responsibilities that weren''t
    in the advert? Are the people you''re talking to enthusiastic about the company?
    Where is the business going over the time you envisage being there, and beyond?
    Do you like that direction? Will you get the freedom and/or supervision that you
    need?'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '*面试的真正目的是了解你是否想为那家公司工作。* 面试官——很可能是你的同事或上司——是你愿意与之共事的人吗？这份工作实际上是你所宣传的吗？它仍然看起来有趣吗？他们提到了广告中没有提到的各种额外责任吗？你正在交谈的人对这家公司有热情吗？在你预想的待在那里的时间里，以及之后，业务会走向何方？你喜欢那个方向吗？你会得到你所需要的自由和/或监督吗？'
- en: If you treat the interview as an advert for your ability to fit in with the
    hirer's needs, then they'll end up with someone who doesn't actually work as they
    claimed in the interview, and you'll end up with a job you don't know much about.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你把面试当作你适应招聘者需求的广告，那么他们最终会得到一个实际上并没有在面试中声称那样工作的人，而你最终会得到一份你不太了解的工作。
- en: What If You Could Avoid Hypothetical Questions?
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 如果你能避免假设性问题会怎样？
- en: Whichever side of the interview you're on, avoid questions that investigate
    what would happen if some conjectural situation came to pass. The answer is always
    the same.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你在面试的哪一方，避免询问如果某些假设情况发生会发生什么的问题。答案总是相同的。
- en: '*Q: What would you do if you had a tight deadline?*'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '*Q: 如果你有一个紧迫的截止日期，你会怎么做？*'
- en: '*A: Whatever the perfect employee would do.*'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '*A: 任何完美的员工会做的事情。*'
- en: '*Q: What would you do if a colleague came to you needing help?*'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '*Q: 如果同事来找你寻求帮助，你会怎么做？*'
- en: '*A: Whatever the perfect employee would do.*'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '*A: 任何完美的员工会做的事情。*'
- en: 'Or, from the other position:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，从另一个角度：
- en: '*Q: What would you do if Google moved into this business?*'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '*Q: 如果谷歌进入这个业务，你会怎么做？*'
- en: '*A: Whatever the perfect company would do.*'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '*A: 任何完美的公司会做的事情。*'
- en: '*Q: What would you do if your main competitor suddenly introduced a huge killer
    feature?*'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '*Q: 如果你的主要竞争对手突然推出一个巨大的杀手级功能，你会怎么做？*'
- en: '*A: Whatever the perfect company would do.*'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '*A: 任何完美的公司会做的事情。*'
- en: You will not find out anything useful by asking these questions. You'll discover
    how the person opposite you pictures the land of milk and honey; this may be interesting
    if you're into armchair psychology but is ultimately not going to tell you what
    would *actually* happen in such situations.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 通过提出这些问题，你不会发现任何有用的信息。你会发现对方如何想象牛奶和蜂蜜之地；如果你对沙发心理学感兴趣，这可能很有趣，但最终并不能告诉你在这种情况下会发生什么。
- en: Instead, try to discover what *did* happen when those situations occurred.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 而是尝试发现当这些情况发生时，*实际上*发生了什么。
- en: '*Q: What did you do the last time you had a tight deadline?*'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '*Q: 你上次在紧迫的截止日期前做了什么？*'
- en: '*A: I shouted at my colleagues, told my manager everything was fine, and quit
    work the day before the build was due.*'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '*A: 我对同事大喊大叫，告诉我的经理一切都很顺利，并在构建截止日期前一天辞职了。*'
- en: '*Q: How did the company react when Google brought out a similar product?*'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '*Q: 当谷歌推出类似的产品时，公司是如何反应的？*'
- en: '*A: The executive team cashed in their stock options. Then they closed R&D
    to focus on our core business.*'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: '*A: 执行团队行使了他们的股票期权。然后他们关闭了研发部门，专注于我们的核心业务。*'
- en: Admittedly, these answers are not as pleasant as the first ones. But they're
    more specific, more indicative of real behavior, and therefore of what would likely
    happen should these situations ever arise again. Ultimately, these are better
    things to discover.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 承认，这些答案并不像第一个那样令人愉快。但它们更具体，更能表明真实的行为，因此也更能表明如果这些情况再次出现，可能会发生什么。最终，这些是更好的发现。
- en: Don't Try to Prove the Other Person Is Stupid
  id: totrans-111
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 不要试图证明对方是愚蠢的
- en: 'If you''ve ever been in the Q&A period at the end of a conference talk, you
    know that it attracts a certain type of person. There''ll always be a question
    that goes—though this wording is changed to make it sound like a question—"I know
    more about this than you." This is poisonous to the atmosphere of the gathering:
    the asker looks rude, the answerer is wrong-footed, and the audience learns nothing
    from the interaction – apart from maybe to avoid working with the person who asked
    the question.'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你曾在会议演讲结束后的问答环节中经历过，你就会知道这吸引了一种特定类型的人。总会有一个问题——尽管措辞被改变以使其听起来像是一个问题——“我对这个比你知道得多。”这对会议的氛围是有害的：提问者看起来很无礼，回答者感到困惑，观众从互动中学不到任何东西——也许除了避免与提问者合作之外。
- en: Now consider what happens if you're in an interview and manage to teach the
    other people in the room not to work with you. You'll potentially miss out on
    either a good job or a good candidate, depending on which side of the desk you're
    sitting.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在考虑一下，如果你在面试中设法让房间里的人都不想和你一起工作会发生什么。你可能会错过一份好工作或一个好候选人，这取决于你坐在桌子的哪一边。
- en: It's fine—nay, **required**—that different people on a team think and know different
    things. If you have two people on a team who both bring exactly the same knowledge
    and opinions, one of them is redundant. This was told to me by a former manager
    of mine. Needless to say, I disagreed in order to remain employable.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 团队中不同的人思考和知道不同的事情是完全可以接受的——甚至可以说是必要的。如果你团队里有两个人带来的知识和观点完全相同，那么其中一个人就是多余的。这是我的前经理告诉我的。不用说，我不同意这一点，以便保持就业能力。
- en: You may know something the other person in the interview doesn't, but you shouldn't
    crow about it. Instead, you should discover what the other person does when faced
    with a lack of information. There will be more on this topic in the section on
    *working with business partners*.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能知道面试中的另一个人不知道的事情，但你不应该炫耀。相反，你应该发现当面对信息不足时，另一个人会做什么。关于与商业伙伴合作的这一主题将有更多内容。
- en: Personal Experience
  id: totrans-116
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 个人经历
- en: '*My first job out of university included, among other things, managing a heterogeneous
    Unix network. When I started in that job, I asked my manager, John, for feedback
    about the interview (you should always do this, whether or not you were offered
    the job).*'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: '*我大学毕业后第一份工作包括管理一个异构Unix网络。当我开始那份工作时，我向我的经理约翰询问关于面试的反馈（无论是否被提供工作，你都应该这样做）。*'
- en: '*The interview was a setup that''s turned out to be quite common in my experience:
    I sit on one side of a desk with a few people (the hiring manager, an HR person,
    and a technical expert) across the way. A "novel" feature was a UNIX workstation
    sat between us, which had two monitors and two keyboards.*'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '*在我的经历中，面试是一种相当常见的设置：我坐在桌子的一边，对面有几个人（招聘经理、人力资源人员和技术专家）。一个“新颖”的特点是我们之间有一个UNIX工作站，它有两个显示器和两个键盘。*'
- en: '*Apparently, the one feature of my interview that stuck in the panel''s mind
    was when I was asked a question that I didn''t know the answer to. None of the
    other candidates knew either; I don''t remember the exact question, but it had
    something to do with getting a list ordered by time of all of the hard links to
    a particular file on a filesystem.*'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '*显然，我面试中让评审团印象深刻的一个特点是我被问到一个我不知道答案的问题。其他候选人也不知道；我不记得确切的问题，但它与按时间顺序获取文件系统上特定文件的硬链接列表有关。*'
- en: '*When I said I didn''t know how to do it, the technical guy could''ve easily
    rushed to demonstrate how much better at UNIX he was than me, but he didn''t.
    He, like the other interviewers, did nothing. While I mumbled something I was
    thinking about and sweated into my shirt collar, I pulled the stunt that made
    my interview memorable and helped me to get the job.*'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '*当我说我不知道如何做的时候，技术专家本可以轻易地展示他比我更擅长UNIX，但他没有。他和其他面试官一样，什么都没做。在我咕哝着思考的事情，汗水浸湿了衬衫领口的时候，我摆出了让我的面试难忘并帮助我得到这份工作的那一招。*'
- en: '*I typed* `man ls` *into the Terminal. The interviewers could see that I typed*
    `man ls` *into the terminal, because they had a monitor on the workstation too.
    They could see that I didn''t know what I was doing. They could also see that
    I wanted to know what I was doing, and I knew how to attack this problem.*'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '*我输入了* `man ls` *到终端。面试官可以看到我把* `man ls` *输入到终端，因为他们也有工作站上的显示器。他们可以看到我不知道我在做什么。他们也可以看到我想知道我在做什么，我知道如何解决这个问题。*'
- en: '*The interview moved on before I solved the problem, but the interviewers discovered
    what they wanted because they didn''t stop to point out how clever they were.*'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: '*在解决完问题之前，面试就结束了，但面试官发现了他们想要的东西，因为他们没有停下来指出他们有多聪明。*'
- en: Be Transparent and Honest with Your Business Partners
  id: totrans-123
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与你的商业伙伴保持透明和诚实
- en: 'I don''t just mean "business partners" as people with whom you entered into
    business, or even other companies with whom you have a partnership arrangement.
    I mean everybody you work with in order to get the project completed: you should
    treat all of these people as peers, whose help you need, and who need your help
    in order to deliver a quality product to your customers. If you want their respect,
    honesty, and help you need to be respectful, honest, and helpful to them.'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 我说的“商业伙伴”不仅指与你做生意的人，甚至还包括你与之有合作伙伴关系的其他公司。我指的是你为了完成项目而与之共事的所有人：你应该把这些人当作平等的伙伴，你需要他们的帮助，他们也需要你的帮助来向客户交付优质的产品。如果你想得到他们的尊重、诚实和帮助，你需要对他们表示尊重、诚实和乐于助人。
- en: 'Currently, this sounds like the sort of hackneyed non-lesson in working with
    others that has remained unchanged for the last few thousand years: "do as you
    would be done by." But bear with me; there''s more science to it than that.'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 目前，这听起来像是一种陈词滥调的非教训，在与其他人合作方面已经保持了几千年不变：“己所不欲，勿施于人。”但请耐心听我说；这其中的科学性远不止这些。
- en: Have you ever described someone, or heard someone described, as "clueless"?
    They "just don't get it"? You've probably experienced the **correspondence effect**—[http://en.wikipedia.org/wiki/Fundamental_attribution_error](http://en.wikipedia.org/wiki/Fundamental_attribution_error),
    a well-studied effect in social psychology. If *you* make a suboptimal decision,
    it's because of the deadline pressure, compromises to incorporate other people's
    requirements, and other local problems. If *someone else* makes a suboptimal decision,
    it's because they're an idiot. Interestingly, they believe that *their* mistakes
    are due to the situation they find themselves in, and that *your* mistakes come
    about because *you* are the idiot.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否曾经描述过某人，或者听到有人被描述为“一无所知”？他们“就是不明白”？你可能经历过**对应效应**——[http://en.wikipedia.org/wiki/Fundamental_attribution_error](http://en.wikipedia.org/wiki/Fundamental_attribution_error)，这是社会心理学中一个被广泛研究的现象。如果你做出了一个次优决策，那是因为截止日期的压力、为了满足他人需求而做出的妥协，以及其他局部问题。如果其他人做出了一个次优决策，那是因为他们是个白痴。有趣的是，他们认为**自己的**错误是由于他们所处的环境造成的，而你的错误是因为你是个白痴。
- en: Perhaps neither of you is the idiot. Perhaps both of you are trying to do your
    best at reconciling conflicting needs and pressures. Perhaps your opinions on
    what to do next differ because you have different information about the problem,
    not because one of you is a genius and the other a moron.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 可能你们两个都不是白痴。可能你们都在尽力调和相互冲突的需求和压力。可能你们对下一步该做什么的意见不同，是因为你们对问题的了解不同，而不是因为其中一个是天才，另一个是笨蛋。
- en: That's why transparency is key. If you proclaim "we should do this" or even
    "we *will* do this" with no supporting information, you leave the other people
    in the conversation free to conclude *why* you think that – free to get it wrong.
    Alternatively, you could say "here's the problem as I see it, this is what we
    want to get out of solving it, and here is the solution." Now your colleagues
    and partners are left in no doubt as to why you believe in the approach you present,
    and you've set a precedent for how they should present their views if they still
    disagree. The conversation can focus on the problems facing the project, not the
    imbeciles around the table.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么透明度是关键。如果你宣称“我们应该这么做”或者甚至“我们*将*这么做”，而没有提供任何支持信息，你让对话中的其他人自由地得出你为什么这么想的结论——自由地犯错。或者，你可以这样说：“这是我看问题的方法，这是我们想要通过解决这个问题得到的结果，这是我们的解决方案。”现在，你的同事和合作伙伴对你所提出的方案为什么有信心不再有疑问，如果你仍然不同意，你已经为他们设定了如何表达自己观点的先例。对话可以集中在项目面临的问题上，而不是桌子周围的傻瓜们。
- en: An Aside On Persuasion
  id: totrans-129
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 关于说服的补充
- en: Framing an argument in this way is a well-known rhetorical technique. First,
    people identify themselves as facing the problem you describe, so that when you
    describe the benefits of a solution, your audience agrees that it would help.
    When you finally present your proposed solution, people already know that they
    want it. *Nancy Duarte's talk at TEDxEast*—[https://www.duarte.com/presentation-skills-resources/nancys-talk-from-tedxeast-you-can-change-the-world/](https://www.duarte.com/presentation-skills-resources/nancys-talk-from-tedxeast-you-can-change-the-world/)
    goes into more depth on this theme.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 以这种方式构建论点是众所周知的修辞技巧。首先，人们会将自己识别为面临你所描述的问题，这样当描述解决方案的好处时，你的听众就会同意这将有所帮助。当你最终提出你的建议解决方案时，人们已经知道他们想要它了。*南希·杜尔特在TEDxEast的演讲*——[https://www.duarte.com/presentation-skills-resources/nancys-talk-from-tedxeast-you-can-change-the-world/](https://www.duarte.com/presentation-skills-resources/nancys-talk-from-tedxeast-you-can-change-the-world/)对这个主题进行了更深入的探讨。
- en: 'Of course, people may still disagree with your conclusions and the reasons
    you reached them. Listen to their arguments. Ask why (if they didn''t already
    tell you). Remember that this is software development, not a high school debating
    club: you "win" by creating a great product that satisfies a business problem,
    not by ensuring that your argument is accepted over all others.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，人们可能仍然会不同意你的结论以及你得出这些结论的原因。倾听他们的论点。询问为什么（如果他们还没有告诉你）。记住，这是软件开发，而不是高中辩论俱乐部：你“赢”是通过创造一个满足业务问题的优秀产品，而不是确保你的论点被所有人接受。
- en: Choose Appropriate Technology
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择适当的技术
- en: As the last sentence of the previous section says, the goal here is to satisfy
    a business need. If that business need isn't aligned with your current favorite
    platform or shiny toy, you have to decide which you want to pursue. The best choice
    for the business – and, therefore, for your role in it as a developer – is the
    one that achieves the goal with least effort and fewest difficulties or compromises.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 如前一小节最后一句话所说，这里的目的是满足业务需求。如果这个业务需求与你的当前首选平台或闪亮的玩具不一致，你必须决定你想要追求哪个。对业务来说最好的选择——因此，作为开发者在其中的角色——是那种以最少的努力和最少的困难或妥协来实现目标的选择。
- en: Of course, "effort" can include training – a short (and usually fixed length)
    effort needed to get developers and others up to speed with some new technology.
    But then "effort" also includes maintenance and support – ongoing costs that build
    up over the lifetime of the product in the field. This is sometimes ignored when
    estimating a project's cost, as the project ends on the ship date, so maintenance
    is somebody else's problem. That's a false economy though; the maintenance cost
    of a project is very much the problem of the project team.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，“努力”可以包括培训——一种短期的（通常是固定长度）努力，需要让开发人员和其他人掌握一些新技术。但“努力”也包括维护和支持——在产品整个生命周期中逐渐积累的持续成本。在估算项目成本时，有时会忽略这一点，因为项目在发货日期结束，所以维护是别人的问题。但这是一种错误的经济行为；项目的维护成本在很大程度上是项目团队的问题。
- en: 'Aside: Opportunity Cost'
  id: totrans-135
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 顺便说一句：机会成本
- en: No cost analysis is complete without a measure of "opportunity cost." The opportunity
    cost of an activity can be thought of as the answer to the question "what will
    we miss out on doing if we're doing this thing instead?"
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 没有对“机会成本”的衡量，成本分析就不完整。一项活动的机会成本可以被视为回答“如果我们做这件事，我们会错过什么？”这个问题。
- en: So, the actual cost of an activity includes the direct costs (equipment, staff,
    and so on required) and the opportunity costs; there may also be other negative
    aspects that are considered "costs."
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，一项活动的实际成本包括直接成本（所需设备、人员等）和机会成本；还可能有其他被认为是“成本”的负面方面。
- en: On the flip side, the benefit includes more than simply the money made from
    a sale. It can include "defended income"—existing customers who do not switch
    to a competitor as a result of doing the work you're planning. Other benefits
    can include improved reputation or market position.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 反过来，这种好处不仅仅包括从销售中获得的金钱。它还可以包括“防御性收入”——由于你计划进行的工作，现有客户没有转向竞争对手。其他好处可能包括改善声誉或市场地位。
- en: This has all been a bit Economics 101, but for people who work with exact numbers
    all day, it's important to remember that a full cost/benefit analysis does not
    simply involve subtracting money out from money in.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 这一切似乎都是经济学101的内容，但对于整天与精确数字打交道的人来说，记住全面成本/收益分析并不仅仅是简单地从收入中减去钱是很重要的。
- en: Factoring opportunity costs into maintenance work causes multiple hits. There's
    the direct cost of fixing the problems; there's the opportunity cost to your development
    team, as you must take on less new project work while you're fixing the maintenance
    problems; and then there's the opportunity cost to the customers, who lose time
    working around the problems and deploying the maintenance fixes. I'll stop short
    of quoting *how much* more expensive maintenance fixes are; *I've made that mistake
    before*—[http://blog.securemacprogramming.com/2012/09/an-apology-to-readers-of-test-driven-ios-development/](http://blog.duarte.com/2011/03/nancy%E2%80%99s-talk-from-tedxeast-you-can-change-the-world/).
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 将机会成本纳入维护工作会产生多重打击。有解决问题的直接成本；有开发团队的机会成本，因为你必须在你修复维护问题时承担较少的新项目工作；然后还有客户的机会成本，他们失去时间来绕过问题并部署维护修复。我不会引用*维护修复要贵多少*；*我以前犯过这个错误*——[http://blog.securemacprogramming.com/2012/09/an-apology-to-readers-of-test-driven-ios-development/](http://blog.duarte.com/2011/03/nancy%E2%80%99s-talk-from-tedxeast-you-can-change-the-world/)。
- en: 'Another way to look at this technology choice consideration is a quote I heard
    from **Jonathan "Wolf" Rentzsch**, though he certainly isn''t the original source:'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种看待这种技术选择考虑的方法是，我从**乔纳森“狼”伦茨施**那里听到的一个引用，尽管他肯定不是原始来源：
- en: '*All code you write is a liability, not an asset.*'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '*你编写的所有代码都是一种负债，而不是资产*。'
- en: 'There''s a good discussion of the quote at *Eric Lee''s blog on MSDN*—[http://blogs.msdn.com/b/elee/archive/2009/03/11/source-code-is-a-liability-not-an-asset.aspx](http://blogs.msdn.com/b/elee/archive/2009/03/11/source-code-is-a-liability-not-an-asset.aspx).
    If your favorite platform would mean writing more code to solve the problem than
    using some other, then selecting that platform would mean taking on a greater
    liability. We have a phrase to describe the problem of doing work to solve a problem
    that''s already been solved, one that we use mainly when *other* people are guilty
    of this: *Not Invented Here*.'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在 MSDN 上埃里克·李的博客中有关于这个引用的良好讨论——[http://blogs.msdn.com/b/elee/archive/2009/03/11/source-code-is-a-liability-not-an-asset.aspx](http://blogs.msdn.com/b/elee/archive/2009/03/11/source-code-is-a-liability-not-an-asset.aspx)。如果你的首选平台意味着需要编写比使用其他平台更多的代码来解决同样的问题，那么选择该平台就意味着承担更大的责任。我们有一个短语来描述已经解决的问题却还要进行工作的问题，我们主要在其他人犯这种错误时使用这个短语：*Not
    Invented Here*。
- en: All of this means that, to some extent, you have to put your personal preferences
    aside when designing a software system and choosing the technology that will go
    into it. But that isn't a bad thing; it's a chance to learn even more.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 所有这些都意味着，在某种程度上，在设计软件系统并选择将用于其中的技术时，你必须暂时放下个人偏好。但这并不是坏事；这是一个学习更多知识的机会。
- en: Manipulation and Inspiration
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 操作与灵感
- en: In the previous section, I touched on rhetoric and persuasion. As in any collaborative
    activity, these are great tools when used judiciously and dangerous weapons at
    all other times.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我提到了修辞和说服。在任何协作活动中，这些都是在恰当使用时是伟大的工具，而在其他所有时候都是危险的武器。
- en: My opinions on business issues are all based on a philosophy of playing a long
    game. That's why I argue for choosing the right technology even if that means
    retraining or going slower in the short term for other reasons. If the end result
    is a better product, you'll have a more satisfied team, happier customers, and
    more repeat business and referrals.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 我对商业问题的看法都是基于长期游戏的哲学。这就是为什么我主张选择正确的技术，即使这意味着重新培训或为了其他原因在短期内放慢速度。如果最终结果是更好的产品，你将拥有一个更满意的团队，更快乐的客户，以及更多的重复业务和推荐。
- en: In relation to persuasion, the long game is epitomized by inspiring people to
    follow your path, not manipulating them to do what you want. What's the difference?
    To me, inspiration is about showing people that what you propose is the best option.
    Manipulation is pejorative, convincing people to follow some course despite the
    shortcomings to them or to others.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 与说服相关，长期游戏体现在激励人们跟随你的道路，而不是操纵他们去做你想要的事情。区别是什么？对我来说，灵感是向人们展示你提出的方案是最好的选择。操纵是贬义词，说服人们尽管对他们或其他人有缺点，也要遵循某些路线。
- en: Manipulation often means running the risk of getting "caught out," as your mark
    discovers the true reason behind your ruse or the pitfalls it entails. You then
    end up having to hide or play down these issues, until your manipulative example
    becomes degenerate with or even more expensive than doing the right thing.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 操纵往往意味着承担被“抓住”的风险，因为你的目标发现了你诡计背后的真正原因或它所包含的陷阱。然后你不得不隐藏或淡化这些问题，直到你的操纵性例子变得与做正确的事情一样或更昂贵。
- en: 'Worked Example: An App Store Sale'
  id: totrans-150
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 工作示例：应用商店销售
- en: '*Let''s look at this distinction between manipulation and inspiration by examining
    the case of selling an app in one of the mobile app stores.*'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: '*让我们通过考察在移动应用商店中销售应用的情况，来探讨操纵与灵感之间的区别。*'
- en: '*The usual approach to selling apps is to charge a one-off cost on initial
    purchase, as is the case with boxed software. This could suggest a manipulative
    approach to sales; we want to get someone as far as buying the app, but don''t
    care what they do after that. Indeed, updates to the software are usually distributed
    for free, so perhaps we''d prefer it if they never used the software after purchase.*'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: '*销售应用的通常做法是在初次购买时收取一次性费用，就像盒装软件一样。这可能会暗示一种操纵性的销售方法；我们希望让某人购买应用，但对他们之后的行为并不关心。事实上，软件的更新通常是免费分发的，所以我们可能更喜欢他们在购买后不再使用软件。*'
- en: '*The manipulative take, then, would be to put minimal effort into building
    the product, and more work into describing its features and benefits on the product
    page. People will see our effusive description of the app and will be all too
    happy to pay for the download. By the time they''ve realized that the product
    page is a lie and the app isn''t as good as we claimed, we won''t care because
    we''ve got their money.*'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '*那么，操纵性的做法可能是投入最少的力量去构建产品，而将更多的精力投入到产品页面上对其功能和优势的描述。人们会看到我们对应用的溢美之词，并且会很乐意为此付费。等到他们意识到产品页面上的谎言，而应用并不像我们所说的那么好时，我们也不会在乎，因为我们已经得到了他们的钱。*'
- en: '*One big problem with the above approach is that it only works for a short
    while. In the longer term, customers will talk to each other. They''ll read the
    reviews of the app in the store and on other websites, and they''ll discover that
    the app isn''t all that we claim. We''re going to have to convince the reviewers
    to write good things about the app.*'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '*上述方法的一个大问题是它只能维持一段时间。从长远来看，客户会互相交流。他们会阅读商店和其他网站上应用的评论，并发现应用并不像我们所说的那么好。我们将不得不说服评论者写出关于应用的正面评价。*'
- en: '*We could try paying them off ("astroturfing" – the practice of creating fake
    grass-roots support) but that doesn''t scale well; besides, it still leaves the
    possibility that unwanted "honest" reviews outside our control will be published.*'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '*我们可以尝试贿赂他们（“虚假草根支持”——创建虚假草根支持的做法），但这并不容易扩展；此外，它仍然留下了不受我们控制的“诚实”评论被发布的可能性。*'
- en: '*Another way to get good reviews is to create a good product. If people genuinely
    enjoy using the thing, then they''ll gladly tell other people how good it is.
    Now our victims^Wpotential customers will see the reviews left by other happy
    customers and will want a piece of the action. Success! We''ve tricked people
    into buying our app, and all we had to do was... make a great app.*'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '*另一种获得好评的方法是创造一个优质的产品。如果人们真正喜欢使用这个产品，那么他们会很乐意告诉其他人它有多好。现在，我们的受害者^W潜在客户将看到其他快乐客户留下的评论，并想要分一杯羹。成功！我们已经巧妙地让人们购买了我们的应用，而我们所需要做的只是...制作一个出色的应用。*'
- en: It's not just in interactions with customers that this tension between short-
    and long-term benefits can arise – in fact, it will happen anywhere and everywhere
    in life. It's good to keep your trade-off thermostat somewhere towards the long-term
    end of the scale, because (hopefully!) your career will long outlast your current
    project.
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 这种短期与长期利益之间的紧张关系不仅仅出现在与客户的互动中——事实上，它会在生活的方方面面发生。最好是将你的权衡恒温器调整到长期利益的一端，因为（希望！）你的职业生涯将远远超过你当前的项目。
- en: 'It''s with this in mind that I come back to the subject of this section: favoring
    inspiration over manipulation. You don''t want your reputation as you go into
    your next challenge to be based on the sour taste people experience as they remember
    working with you on this one.'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 正是出于这样的考虑，我再次回到本节的主题：重视灵感而非操纵。你不想在你迎接下一个挑战时，你的声誉是基于人们在回忆与你合作这一项目时所体验到的苦涩滋味。
- en: But you *do* need people to see the project and its challenges from your perspective,
    and you *do* need the help of other people to get everything done. This is where
    the inspiration comes in. Inspiration should really be about stimulating other
    people, not about cajoling them. If what you want to do is beneficial for everyone
    involved, it shouldn't take any special tricks to make other people want to do
    it too. The details on how to do that are best left to *Chapter 13, Teamwork*.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 但你需要人们从你的角度看待项目和其挑战，你确实需要其他人的帮助来完成所有工作。这就是灵感的来源。灵感实际上应该是激发其他人，而不是说服他们。如果你想要做的事情对所有人都有益，那么不需要任何特别的技巧来让其他人也想做同样的事情。如何做到这一点，最好的办法是留给*第13章，团队合作*。
- en: You Don't Need to Be A Founder to Be A Programmer
  id: totrans-160
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你不需要成为创始人就能成为一名程序员
- en: '*Thanks to* **Rob Rhyne***—*[http://twitter.com/capttaco](http://twitter.com/capttaco)
    *and* **Saul Mora***—*[http://twitter.com/casademora](http://twitter.com/casademora)
    *for inspiring this section in their NSBrief interview.*'
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: '*感谢* **Rob Rhyne**—*[http://twitter.com/capttaco](http://twitter.com/capttaco)
    *和* **Saul Mora**—*[http://twitter.com/casademora](http://twitter.com/casademora)
    *在他们NSBrief采访中启发了这个部分。*'
- en: As software developers, we live in a great time to start your own business.
    One person, working with a few freelancers and using some online services, can
    get an app out in a few months with very little outlay. Success stories abound
    of programmers who've quit working for "the man" to "go indie" – in other words,
    to start their own software company.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 作为软件开发者，我们现在是一个很好的时代，可以开始自己的业务。一个人，与几个自由职业者合作，使用一些在线服务，可以在几个月内推出一个应用程序，几乎不需要任何支出。有很多关于程序员放弃为“老板”工作，转而“独立”工作——换句话说，成立自己的软件公司的成功故事。
- en: An aside on confirmation bias
  id: totrans-163
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 关于确认偏见的补充说明
- en: One reason that there are so many success stories from small business founders
    is that the failures don't get invited to give talks. In fact, some people claim
    that *9 out of 10 new businesses fail within a year*—[http://www.gardnerbusiness.com/failures.htm](http://www.gardnerbusiness.com/failures.htm),
    a number corroborated by my accountant. Because that's not news, and not interesting,
    it doesn't get reported; so, we only hear about the successes. There's more on
    biases and fallacies in *Chapter 11, Critical Analysis*.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 小企业创始人有很多成功故事的一个原因是，失败者没有被邀请去发表演讲。事实上，有些人声称*10个新企业中有9个在一年内失败*——[http://www.gardnerbusiness.com/failures.htm](http://www.gardnerbusiness.com/failures.htm)，这个数字得到了我的会计师的证实。因为这不是新闻，也不有趣，所以没有被报道；因此，我们只听到成功的故事。关于偏见和谬误的更多内容可以在*第11章，批判性分析*中找到。
- en: But it's not for everyone. Some people (myself included) prefer to let other
    people find the customers and do the marketing, and to get on with writing the
    software. It's not just the greater focus of salaried development that can be
    appealing. A well-run company can offer a more structured environment, with clearly
    defined goals and rewards. Some people thrive on the chaos of running a business,
    while others want observable progress in becoming a better programmer.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 但这并不是适合每个人。有些人（包括我自己）更喜欢让别人去找客户和做市场营销，然后专注于编写软件。不仅仅是工资开发有更大的吸引力。一家管理良好的公司可以提供一个更有结构的环境，有明确的目标和奖励。有些人喜欢经营企业的混乱，而有些人则希望看到成为更好的程序员的可观察进步。
- en: There are plenty of jobs around, in many countries, for people who want to write
    software for a company. Even through recent recessions, people were still hiring
    programmers. The opportunities—and rewards—are there for those who don't want
    to start their own business.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多国家，对于想要为公司编写软件的人来说，有很多工作机会。即使是在最近的衰退期间，人们仍然在招聘程序员。对于那些不想自己创业的人来说，机会和回报都是存在的。
- en: My story
  id: totrans-167
  prefs:
  - PREF_H4
  type: TYPE_NORMAL
  zh: 我的故事
- en: I've been doing this development thing for a while, now. I've worked for large
    and small companies, been self-employed as a contractor, and run my own consultancy
    business. Both of these independent ventures were "successful," in that I made
    enough money to support my lifestyle and got both new and repeat business. Once
    I'd tasted the indie life, why did I go back?
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经从事这项开发工作有一段时间了。我为大公司和中小企业工作过，作为承包商自雇，还经营过自己的咨询公司。这两项独立业务都是“成功的”，因为我赚到了足够的钱来维持我的生活方式，并且获得了新的和重复的业务。一旦尝到了独立生活的滋味，为什么我又回去了？
- en: 'It''s at least partially for the reason of structure explained above. I like
    knowing what''s expected of me and working to improve myself against that standard.
    I found that running my own business, the goals (at least in the first year, which
    is as far as I got on each occasion) are too short-term: either find a customer
    or complete their project. I just didn''t know what I was doing well enough to
    set and work towards long-term goals.'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 至少部分原因是因为上面解释的结构。我喜欢知道对我有什么期望，并努力提高自己以符合这个标准。我发现经营自己的生意，目标（至少在第一年，也就是我每次都达到的程度）过于短期：要么找到客户，要么完成他们的项目。我只是不知道自己做得足够好，可以设定并朝着长期目标努力。
- en: Another reason is that I'm too gregarious. I really enjoy working with other
    people – both of the indie jobs I tried involved a lot of working at home or telecommuting,
    which didn't provide the human contact I needed. It's possible when you're self-employed
    to hire other people or rent office space in a shared environment to solve this
    problem. I couldn't afford to do that in my city.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个原因是，我太合群了。我真的很享受与他人一起工作——我尝试过的独立工作都涉及大量的在家工作或远程办公，这并没有提供我需要的与人接触。当你自雇时，你可以雇佣其他人或在共享环境中租用办公空间来解决这个问题。在我所在的城市，我负担不起这样做。
- en: So, if you want to start your own business, that's cool – you should give it
    a go. Good luck! But if you don't, or if you try it and it isn't for you, there's
    no problem with that. Many people (again, I include myself here) are happy being
    career programmers.
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果你想开始自己的生意，那很酷——你应该尝试一下。祝你好运！但如果你不这么做，或者你尝试了但发现它不适合你，那也没有问题。许多人（包括我自己）都乐于成为职业程序员。
