["```cpp\n#include \"SFML-2.5.1\\include\\SFML\\Graphics.hpp\"  \n```", "```cpp\nint main(){ \n\nreturn 0; \n}  \n```", "```cpp\nsf::Vector2f viewSize(1024, 768); \n```", "```cpp\nsf::videoMode vm(viewSize.x, viewSize.y);  \n```", "```cpp\nsf::RenderWindow window(vm, \"Hello SFMLGame !!!\", sf::Style::Default); \n```", "```cpp\nint main() { \n\n   //Initialize Game Objects \n\n         while (window.isOpen()) { \n\n               // Handle Keyboard Events \n               // Update Game Objects in the scene \n               // Render Game Objects  \n\n         } \n\n   return 0; \n}\n```", "```cpp\nint main() { \n\n   //init game objects \n         while (window.isOpen()) { \n               // Handle Keyboard events \n               // Update Game Objects in the scene \n    window.clear(sf::Color::Red);                \n // Render Game Objects  \nwindow.display();\n         } \n   return 0; \n} \n```", "```cpp\n\n   sf::RectangleShape rect(sf::Vector2f(500.0f, 300.0f)); \n   rect.setFillColor(sf::Color::Yellow); \n   rect.setPosition(viewSize.x / 2, viewSize.y / 2); \n   rect.setOrigin(sf::Vector2f(rect.getSize().x / 2, \n   rect.getSize().y / 2)); \n\n```", "```cpp\n\n   #include \"SFML-2.5.1\\include\\SFML\\Graphics.hpp\" \n\n   sf::Vector2f viewSize(1024, 768); \n   sf::VideoMode vm(viewSize.x, viewSize.y); \n   sf::RenderWindow window(vm, \"Hello Game SFML !!!\", \n   sf::Style::Default); \n\n   int main() { \n\n   //init game objects \n\n   sf::RectangleShape rect(sf::Vector2f(500.0f, 300.0f));\n rect.setFillColor(sf::Color::Yellow);\n rect.setPosition(viewSize.x / 2, viewSize.y / 2);\n rect.setOrigin(sf::Vector2f(rect.getSize().x / 2, \n   rect.getSize().y / 2));\n         while (window.isOpen()) { \n               // Handle Keyboard events \n               // Update Game Objects in the scene \n\n               window.clear(sf::Color::Red); \n\n               // Render Game Objects  \n               window.draw(rect);\n\n               window.display(); \n         } \n   return 0; \n} \n```", "```cpp\nrect.setPosition(viewSize.x / 2, viewSize.y / 2);\n```", "```cpp\n   sf::CircleShape circle(100); \n   circle.setFillColor(sf::Color::Green); \n   circle.setPosition(viewSize.x / 2, viewSize.y / 2); \n   circle.setOrigin(sf::Vector2f(circle.getRadius(), \n   circle.getRadius())); \n   sf::ConvexShape triangle; \n   triangle.setPointCount(3); \n   triangle.setPoint(0, sf::Vector2f(-100, 0)); \n   triangle.setPoint(1, sf::Vector2f(0, -100)); \n   triangle.setPoint(2, sf::Vector2f(100, 0)); \n   triangle.setFillColor(sf::Color(128, 0, 128, 255)); \n   triangle.setPosition(viewSize.x / 2, viewSize.y / 2); \n```", "```cpp\n  while (window.isOpen()) { \n               // Handle Keyboard events \n               // Update Game Objects in the scene \n\n               window.clear(sf::Color::Red); \n\n               // Render Game Objects  \n               window.draw(rect); \n               window.draw(circle);\n window.draw(triangle);\n\n               window.display(); \n         } \n```", "```cpp\ntriangle.setPoint(0, sf::Vector2f(-100, 0)); \ntriangle.setPoint(1, sf::Vector2f(0, -100)); \ntriangle.setPoint(2, sf::Vector2f(100, 0)); \n```", "```cpp\nsf::Texture skyTexture; \nsf::Sprite skySprite;\n```", "```cpp\nvoid init() { \n\n// Load sky Texture \n   skyTexture.loadFromFile(\"Assets/graphics/sky.png\"); \n\n// Set and  Attacha Texture to Sprite \n   skySprite.setTexture(skyTexture); \n\n} \n```", "```cpp\nvoid draw() { \n\n   window.draw(skySprite); \n\n} \n```", "```cpp\n #include \"SFML-2.5.1\\include\\SFML\\Graphics.hpp\" \n\nsf::Vector2f viewSize(1024, 768); \nsf::VideoMode vm(viewSize.x, viewSize.y); \nsf::RenderWindow window(vm, \"Hello Game SFML !!!\", sf::Style::Default); \n\nsf::Texture skyTexture; \nsf::Sprite skySprite; \n\nvoid init() { \n\n   skyTexture.loadFromFile(\"Assets/graphics/sky.png\"); \n   skySprite.setTexture(skyTexture); \n\n} \n\nvoid draw() { \n\n   window.draw(skySprite); \n\n} \n\nint main() { \n\n   init(); \n\n   while (window.isOpen()) { \n\n         window.clear(sf::Color::Red); \n\n         draw(); \n\n         window.display(); \n\n   } \n\n   return 0; \n} \n```", "```cpp\nsf::Texture heroTexture; \nsf::Sprite heroSprite; \n\nIn the init function initialize the following values: \n   heroTexture.loadFromFile(\"Assets/graphics/hero.png\"); \n   heroSprite.setTexture(heroTexture); \n   heroSprite.setPosition(sf::Vector2f(viewSize.x/2, \n      viewSize.y/2)); \n   heroSprite.setOrigin(heroTexture.getSize().x / 2, \n      heroTexture.getSize().y / 2);  \n```", "```cpp\nvoid draw() { \n   window.draw(skySprite); \n   window.draw(bgSprite); \n   window.draw(heroSprite);\n}\n```", "```cpp\nvoid updateInput() { \n\n   sf::Event event; \n\n   while (window.pollEvent(event)) { \n\nif (event.key.code == sf::Keyboard::Escape || \n         event.type ==sf::Event::Closed) \n                     window.close(); \n   } \n\n} \n```", "```cpp\nvoid updateInput() { \n\n   sf::Event event; \n\n   while (window.pollEvent(event)) { \n\n         if (event.type == sf::Event::KeyPressed) { \n\n               if (event.key.code == sf::Keyboard::Right) { \n\n                     playerMoving = true; \n               } \n         }           \n         if (event.type == sf::Event::KeyReleased) { \n\n               if (event.key.code == sf::Keyboard::Right) { \n                     playerMoving = false; \n               }               \n         } \n\n         if (event.key.code == sf::Keyboard::Escape || event.type \n         == sf::Event::Closed) \n               window.close();  \n   } \n}\n```", "```cpp\nvoid update(float dt) { \n\n   if (playerMoving) { \n         heroSprite.move(50.0f * dt, 0); \n   } \n} \n```", "```cpp\n\nint main() { \n\n   sf::Clock clock; \n   init(); \n   while (window.isOpen()) { \n\n         // Update input \n         updateInput(); \n\n         // Update Game \n         sf::Time dt = clock.restart(); \n         update(dt.asSeconds()); \n\n   window.clear(sf::Color::Red); \n\n         //Draw Game  \n         draw(); \n\n         window.display();   \n   }  \n   return 0; \n} \n```"]