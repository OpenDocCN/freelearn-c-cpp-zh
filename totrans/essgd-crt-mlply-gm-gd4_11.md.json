["```cpp\n    @rpc(\"any_peer\", \"call_local\")\n    func set_firing(firing):\n    ```", "```cpp\n    @rpc(\"any_peer\", \"call_local\")\n    func set_firing(firing):\n      if firing:\n        fire()\n      else:\n        timer.stop()\n    ```", "```cpp\n    func fire():\n      animation_player.play(\"fire\")\n      spawner.spawn(bullet_scene)\n      timer.start(1.0 / fire_rate)\n    ```", "```cpp\nclass_name Weapon2D\nextends Marker2D\n@export var bullet_scene: PackedScene\n@export_range(0, 1, 1, \"or_greater\") var fire_rate = 3\n@onready var spawner = $BulletSpawner2D\n@onready var timer = $Timer\n@onready var animation_player = $AnimationPlayer\nfunc fire():\n  animation_player.play(\"fire\")\n  spawner.spawn(bullet_scene)\n  timer.start(1.0 / fire_rate)\n@rpc(\"any_peer\", \"call_local\")\nfunc set_firing(firing):\n  if firing:\n    fire()\n  else:\n    timer.stop()\nfunc _on_timer_timeout():\n  fire()\n```", "```cpp\n    func _unhandled_input(event):\n    ```", "```cpp\n    func _unhandled_input(event):\n      if event.is_action_pressed(\"shoot\"):\n        weapon.rpc(\"set_firing\", true)\n      elif event.is_action_released(\"shoot\"):\n        weapon.rpc(\"set_firing\", false)\n    ```", "```cpp\n    func setup_multiplayer(player_id):\n      var self_id = multiplayer.get_unique_id()\n      var is_player = self_id == player_id\n      set_process(is_player)\n      set_physics_process(is_player)\n      set_process_unhandled_input(is_player)\n    ```", "```cpp\n@rpc(\"any_peer\", \"call_local\")\nfunc sync_world():\n  var player_id = multiplayer.get_remote_sender_id()\n  get_tree().call_group(\"Sync\", \"set_visibility_for\",\n      player_id, true)\n  get_tree().call_group(\"Sync\", \"update_visibility\",\n      player_id)\n```", "```cpp\n    func _ready():\n      if multiplayer.is_server():\n        peer.create_server(PORT)\n        load_database()\n      else:\n        peer.create_client(ADDRESS, PORT)\n        peer.host.compress(EnetConnection.COMPRESS_ZLIB)\n      multiplayer.multiplayer_peer = peer\n    ```", "```cpp\n    func _ready():\n      peer.create_client(ADDRESS, PORT)\n      peer.host.compress(ENetConnection.COMPRESS_ZLIB)\n      multiplayer.multiplayer_peer = peer\n    ```", "```cpp\n    func get_received_data():\n         var enet_connection = multiplayer.multiplayer_\n             peer.host\n         var data_received = enet_connection.pop_statistic\n             (ENetConnection.HOST_TOTAL_RECEIVED_DATA)\n         return data_received\n    ```", "```cpp\n    func get_sent_data():\n      var enet_connection = multiplayer.multiplayer_\n          peer.host\n      var data_sent = enet_connection.pop_statistic\n          (ENetConnection.HOST_TOTAL_SENT_DATA)\n      return data_sent\n    ```", "```cpp\n      var callable = Callable(self, \"get_received_data\")\n      Performance.add_custom_monitor(\"Network/Received\n          Data\", callable)\n      callable = Callable(self, \"get_sent_data\")\n      Performance.add_custom_monitor(\"Network/Sent\n          Data\", callable)\n      for i in 30:\n        asteroid_spawner.spawn()\n    ```"]