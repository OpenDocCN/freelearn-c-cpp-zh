- en: '2'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '2'
- en: Understanding Networking Basics
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解网络基础知识
- en: 'Having a strong knowledge of networking is the foundation of any successful
    multiplayer game development, as it provides a basic understanding of how the
    different components that make up a network work. Networking can be divided into
    three main areas: logical architecture, protocols and standards, and physical
    infrastructure.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有强大的网络知识是任何成功多玩家游戏开发的基础，因为它提供了对构成网络的不同组件如何工作的基本理解。网络可以分为三个主要领域：逻辑架构、协议和标准，以及物理基础设施。
- en: 'As it’s important for anyone interested in networked games to have at least
    some basic understanding of these concepts, the primary goal of this chapter is
    to introduce you to these components and the main issues that may pop up during
    multiplayer application development. By the end of the chapter, you will also
    get a grip on how the Unreal Engine multiplayer framework is organized in order
    to be prepared for the next step: creating your first multiplayer game prototype.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 由于对网络游戏感兴趣的任何人至少都应该对这些概念有一些基本了解，本章的主要目标是向您介绍这些组件以及在多玩家应用程序开发过程中可能出现的重大问题。到本章结束时，您还将了解虚幻引擎多玩家框架的组织方式，以便为下一步：创建您的第一个多玩家游戏原型做好准备。
- en: 'So, in this chapter, we will cover the following topics:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在本章中，我们将涵盖以下主题：
- en: What is computer networking?
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 什么是计算机网络？
- en: Introducing network protocols
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍网络协议
- en: Understanding network issues
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解网络问题
- en: Introducing the Unreal Engine multiplayer system
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍虚幻引擎的多玩家系统
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: There are no technical requirements to follow in this chapter.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章没有技术要求需要遵循。
- en: What is computer networking?
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是计算机网络？
- en: We live in a world where we are constantly communicating with each other through
    computers, smartphones, smart homes, and a plethora of different devices. Computer
    networks are the backbone of modern technology.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们生活在一个通过计算机、智能手机、智能家居和各种不同设备不断相互沟通的世界。计算机网络是现代技术的支柱。
- en: Most people probably don’t even care about device communication and how it works;
    the most important thing is that... well, it works. But what exactly does *network*
    mean? And most importantly, as multiplayer game developers, what do we need to
    know about network systems?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数人可能甚至不关心设备通信及其工作方式；最重要的是……它确实工作。但“网络”究竟是什么意思？而且，最重要的是，作为多玩家游戏开发者，我们需要了解网络系统哪些内容？
- en: '**Computer networking** involves two or more (most of the time, a lot more!)
    devices that are connected together with the common goal of sharing data and resources
    as fast and as reliably as possible.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**计算机网络**涉及两个或更多（大多数情况下，更多！）设备，这些设备通过连接在一起，共同目标是尽可能快、尽可能可靠地共享数据和资源。'
- en: A network can use cables (wired) or radio waves (wireless) and can cover a self-enclosed
    area or be available at a greater scale. Even if all these technologies share
    the same purpose, their structure and capabilities will vary significantly.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 网络可以使用电缆（有线）或无线电波（无线）进行通信，可以覆盖一个封闭区域或更大规模。尽管所有这些技术都拥有相同的目的，但它们的结构和能力将存在显著差异。
- en: Once devices are physically connected, they must establish a “contract” in order
    to communicate securely; without such a contract, data could be sent to the wrong
    person and put important information at risk.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦设备在物理上连接，它们必须建立一个“合同”以便安全通信；没有这样的合同，数据可能会发送给错误的人，从而将重要信息置于风险之中。
- en: After the contract is established, each device can send data to another one
    using a “digital envelope” that identifies the sender and the receiver. This ensures
    that the data is only received by the intended recipient.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 合同建立后，每个设备都可以使用一个“数字信封”向另一个设备发送数据，该信封可以识别发送者和接收者。这确保了数据只被预期的接收者接收。
- en: Dispatching data over the network can be very complex, especially when dealing
    with large files (think about an email with a 150 MB 3D model as an attachment
    and you’ll probably get the idea!). As a consequence, data must be “fragmented”
    into small pieces by the sender and, once it arrives at its destination, it will
    be re-packaged by the receiver, ready to be used.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在网络上传输数据可能非常复杂，尤其是在处理大文件时（想想一个带有150 MB 3D模型附件的电子邮件，你可能就会明白这个意思了！）因此，数据必须由发送方“分割”成小块，一旦到达目的地，接收方将重新打包，以便使用。
- en: 'This brings us to the last stage: losing information. Despite the advancements
    in technology, data loss is still a possibility in our imperfect world. Data can
    be corrupted or lost during transfer; therefore, it is important to take measures
    to ensure the safety of data and prevent such losses.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 这将我们引向最后一个阶段：信息丢失。尽管技术不断进步，但在我们这个不完美的世界中，数据丢失仍然是一种可能性。数据在传输过程中可能会被损坏或丢失；因此，采取措施确保数据安全并防止此类损失是非常重要的。
- en: If things sound difficult, that's because they are! But don’t be afraid, that’s
    exactly how I felt when I started learning about this type of technology; as you
    make your way through this book, you will find that many of the topics have been
    handled by the UE multiplayer system, leaving you free to explore higher level
    topics.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 如果事情听起来很困难，那是因为它们确实如此！但不要害怕，这正是我开始学习这类技术时的感受；随着你通过这本书的内容，你会发现许多主题已经被UE多人游戏系统处理，让你有更多机会探索更高级的主题。
- en: In the next section, you will learn how a network, or a group of networks, is
    organized from a structural and operational perspective.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，你将了解网络或一组网络是如何从结构和操作角度进行组织的。
- en: Types of computer networks
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算机网络类型
- en: 'As you already know, a computer network provides a way for multiple devices
    to communicate by sharing information with each other. Some well-known examples
    are as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所知，计算机网络通过共享信息的方式为多个设备提供了相互通信的途径。以下是一些著名的例子：
- en: Sending emails
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 发送电子邮件
- en: Streaming videos
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 流媒体视频
- en: '...and guess what? Playing online games!'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '...猜猜看？在线玩游戏！'
- en: But how are these devices connected? There are several different types of computer
    networks available that have different capabilities and purposes; depending on
    your needs (and your budget!), you’ll have to find a solution that will grant
    you reliability and trustworthiness.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 但这些设备是如何连接的呢？有几种不同类型的计算机网络可供选择，它们具有不同的功能和目的；根据你的需求（以及你的预算！），你必须找到一个既能提供可靠性又能提供信任的解决方案。
- en: Local Area Networks
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 局域网
- en: '**Local Area Networks** (**LANs**) are probably the most common type of computer
    network. A LAN usually consists of a telecommunication network that connects devices
    that are situated at a close distance (usually no more than 1 kilometer). This
    type of network usually takes advantage of the fast connection over short distances
    granted by Ethernet cables.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**局域网**（**LAN**）可能是最常见的计算机网络类型。局域网通常由一个电信网络组成，该网络连接着位于近距离的设备（通常不超过1公里）。这类网络通常利用以太网电缆在短距离内提供的快速连接。'
- en: 'A LAN can be of two types:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 局域网可以分为两种类型：
- en: A client/server LAN, where several devices (i.e., the clients) are connected
    to a centralized computer (i.e., the server)
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户/服务器局域网，其中多个设备（即客户端）连接到一个中央计算机（即服务器）
- en: A peer-to-peer LAN, where each device shares the network functionalities equally
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 对等局域网，其中每个设备平等地共享网络功能
- en: '*Figure 2**.1* illustrates a typical small-sized LAN where devices are connected
    through Wi-Fi or Ethernet cables.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 2**.1* 展示了一个典型的通过Wi-Fi或以太网电缆连接的小型局域网。'
- en: '![Figure 2.1 – A LAN setup](img/Figure_02_01_B18203.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图 2.1 – 局域网设置](img/Figure_02_01_B18203.jpg)'
- en: Figure 2.1 – A LAN setup
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2.1 – 局域网设置
- en: One of the main advantages of a LAN over a **Wide Area Network** (**WAN**) is
    the lower level of maintenance and reduced implementation costs. Also, since a
    LAN is limited to a relatively small distance and to a limited number of connected
    devices, it ensures a higher level of security.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 与**广域网**（**WAN**）相比，局域网的主要优势是维护水平较低和实施成本较低。此外，由于局域网限制在相对较小的距离和有限数量的连接设备内，它确保了更高的安全性。
- en: Some good examples where LANs are used are academic campuses (sometimes called
    **Campus Area Networks**), hospitals, or offices with multiple departments.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 局域网的一些良好应用实例包括学术校园（有时称为**校园网**）、医院或拥有多个部门的办公室。
- en: A LAN can become a **Wireless Local Area Network** (**WLAN**) when connections
    between devices are only made wirelessly, and it is typically used in homes or
    public spaces (for example, libraries, airports, and cafes) where devices must
    connect without the need for physical cables.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 当设备之间的连接仅通过无线方式进行时，局域网可以成为**无线局域网**（**WLAN**），它通常用于家庭或公共场所（例如图书馆、机场和咖啡馆）等地方，在这些地方设备必须无需物理电缆即可连接。
- en: Wide Area Networks
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 广域网
- en: The primary difference between a LAN and a WAN is that a WAN covers a much larger
    area and is essentially a collection of LANs connected together.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
- en: 'Similarly for the LAN, a WAN can be as follows:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
- en: A client/server WAN, where multiple devices are connected to a central computer
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A peer-to-peer WAN, where each device shares an equal responsibility in the
    network functionalities
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'As there is usually a loss in speed over long distances, a WAN is typically
    slower than a LAN. However, the main advantage of a WAN is the capability to be
    publicly owned: a good example is the internet, where no entity has full ownership.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 2**.2* shows several LANs connected together through a WAN:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.2 – A WAN setup](img/Figure_02_02_B18203.jpg)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
- en: Figure 2.2 – A WAN setup
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
- en: A **Metropolitan Area Network** (**MAN**) is a smaller WAN usually managed by
    cities, regions, or governments; it typically includes a high-speed backbone network,
    which connects multiple LANs. As an example, it may connect multiple campuses
    belonging to the same academic institution (and that’s how it works where I am
    teaching right now!).
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
- en: Virtual Private Networks
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A **Virtual Private Network** (**VPN**) is a secure connection over the internet
    from a device to a network. By using secure encryption, data sent over a VPN is
    protected, preventing unauthorized tracking, protecting privacy, and bypassing
    geo-restrictions.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
- en: '*Figure 2**.3* shows an example where a device connected to a LAN is communicating
    over the internet with another device through a VPN.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
- en: '![Figure 2.3 – A VPN example](img/Figure_02_03_B18203.jpg)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
- en: Figure 2.3 – A VPN example
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
- en: In this section, you have been introduced to the fundamental principles of computer
    networking. You have explored how computer networks are structured and organized.
    In the following section, you will delve deeper into these topics to understand
    how devices communicate using rules and protocols, and how these rules guarantee
    the reliability and accuracy of the data that is exchanged.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
- en: Introducing network protocols
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To manage communication between two or more computers, we need some rules that
    will dictate how data is sent and received, as well as security measures that
    need to be taken to ensure reliability. These rules are called **protocols**.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
- en: 'Putting it simply, a protocol is like an international language: everyone needs
    to know the same words to communicate with one another. More specifically, a **network
    protocol** is a set of directives that rules how to *format*, *transmit*, and
    *receive* data so that devices in the same network can interact.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
- en: But before transmitting data over the network, it should be carefully packaged
    and structured so that the receiver can recognize and reassemble it.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
- en: Packet switching
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Packet switching** refers to the method of sending data to a network in the
    form of small portions (or **packets**). This process involves dividing data into
    small segments and adding an extra portion of information about the packet’s content,
    origin, and destination. This extra information is called a **header** and is
    typically placed at the front of each packet. In some cases, the packet may also
    include additional information at its end, referred to as a **footer**.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**分组交换**是指将数据以小部分（或**数据包**）的形式发送到网络的方法。这个过程涉及将数据分成小段，并添加关于数据包内容、来源和目的地的额外信息。这个额外信息称为**报头**，通常放在每个数据包的前面。在某些情况下，数据包的末尾也可能包含额外的信息，称为**尾部**。'
- en: These packets are then sent over the network and reassembled at their destination.
    Along the way, they are processed by intermediate nodes, which can store incoming
    data and forward it to the next node closer to the final receiver.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这些数据包随后通过网络发送，并在目的地重新组装。在途中，它们被中间节点处理，这些节点可以存储传入数据并将其转发到下一个更接近最终接收者的节点。
- en: Some of the advantages of using packet switching include efficiency in terms
    of bandwidth and reliability as the receiver can detect missing packages. Another
    advantage is cost-effectiveness due to relatively cheap implementation.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 使用分组交换的一些优点包括带宽效率高和可靠性高，因为接收者可以检测到丢失的数据包。另一个优点是由于相对较低的实施成本，具有成本效益。
- en: 'As an example, *Figure 2**.4* shows a **Transmission Control Protocol** (**TCP**)
    packet composed of its header and data sections:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，*图2.4*显示了由其报头和数据部分组成的**传输控制协议**（**TCP**）数据包：
- en: The header is made of blocks of bits, each one with its own meaning (as an example,
    the *header length* tells the header data offset in order to specify where actual
    data will start in the sequence)
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 报头由一系列比特块组成，每个块都有其特定的含义（例如，*报头长度*指示报头数据偏移，以便指定实际数据在序列中的起始位置）
- en: The data can be of varying lengths and holds the actual content included in
    the packet
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据可以有不同的长度，并包含数据包中包含的实际内容
- en: '![Figure 2.4 – A TCP packet](img/Figure_02_04_B18203.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图2.4 – 一个TCP数据包](img/Figure_02_04_B18203.jpg)'
- en: Figure 2.4 – A TCP packet
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.4 – 一个TCP数据包
- en: The collection of protocols that rule how data should be packaged and forwarded
    through the network is now known as the **Internet Protocol Suite** or the **TCP/IP
    suite**.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 规定数据如何打包和通过网络传输的协议集合现在被称为**互联网协议套件**或**TCP/IP套件**。
- en: TCP/IP suite
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: TCP/IP套件
- en: 'The TCP/IP suite is made of different logical levels, or **layers**, that are
    stacked one above the other. These include the following:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: TCP/IP套件由不同的逻辑层，或**层**组成，它们一个叠一个。这些包括以下内容：
- en: The application layer
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用层
- en: The transport layer
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 传输层
- en: The internet layer
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络层
- en: The data link layer
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据链路层
- en: '*Figure 2**.5* shows the layers of the TCP/IP suite with some of the most commonly
    used protocols, along with the physical layer, which we will discuss later in
    this section:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2.5*显示了TCP/IP套件中的层以及一些最常用的协议，还包括我们将在本节后面讨论的物理层：'
- en: '![Figure 2.5 – TCP/IP layers](img/Figure_02_05_B18203.jpg)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图2.5 – TCP/IP层](img/Figure_02_05_B18203.jpg)'
- en: Figure 2.5 – TCP/IP layers
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.5 – TCP/IP层
- en: Each layer has an important role to play in supporting the needs of the one
    above it. As an example, this may involve accepting a block of data from the layer
    above, processing it according to the current layer’s protocols, and then sending
    it to the layer below.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 每一层都在支持其上层需求方面发挥着重要作用。例如，这可能涉及从上层接收数据块，根据当前层的协议处理它，然后将它发送到下层。
- en: Let’s take a look at each of these layers now.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来逐一查看这些层。
- en: The application layer
  id: totrans-80
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 应用层
- en: The **application layer** provides the interface for communication between applications
    running on different machines on the network. It stands at the very top of the
    TCP/IP suite and allows the sharing of data through the use of protocols, such
    as the **File Transfer Protocol** (**FTP**) and the **HyperText Transfer Protocol**
    (**HTTP**), which are used to upload files to the internet and download web pages
    on your favorite browser.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**应用层**为网络中不同机器上运行的应用程序之间的通信提供了接口。它位于TCP/IP套件的最高层，并允许通过使用协议（如**文件传输协议**（**FTP**）和**超文本传输协议**（**HTTP**））共享数据，这些协议用于将文件上传到互联网并在您喜欢的浏览器上下载网页。'
- en: The transport layer
  id: totrans-82
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 传输层
- en: The **transport layer** is responsible for providing reliable data delivery
    and flow control and provides services that allow applications to communicate
    securely over the network.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**传输层**负责提供可靠的数据交付和流量控制，并提供允许应用程序在网络中安全通信的服务。'
- en: While TCP is commonly used for its reliability, there are situations where other
    protocols are preferred for their speed, such as the **User Data Protocol** (**UDP**),
    which won’t ensure packet delivery but will be faster as it doesn’t require the
    overheads associated with establishing and maintaining a connection.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然TCP因其可靠性而被广泛使用，但在某些情况下，其他协议因其速度而被优先考虑，例如**用户数据协议**（**UDP**），它不会保证数据包的交付，但因为它不需要建立和维护连接的开销，所以会更快。
- en: This layer is typically responsible for detecting issues and verifying data
    integrity; one way is through **checksums**, or sequences of numbers and letters
    used to check data for errors.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 此层通常负责检测问题和验证数据完整性；一种方式是通过**校验和**，即用于检查数据错误的数字和字母序列。
- en: The internet layer
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 网络层
- en: The **internet layer** (or, more generically, the **network layer** in the TCP/IP
    suite) is responsible for providing the means to route data between different
    networks and ensure that packets are delivered correctly. This layer also provides
    various services such as addressing, routing, congestion control, and flow control.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**网络层**（或更通用地，TCP/IP套件中的**网络层**）负责提供在不同网络之间路由数据的方法，并确保数据包正确交付。此层还提供各种服务，如寻址、路由、拥塞控制和流量控制。'
- en: The internet layer is responsible for providing a logical addressing system
    that allows hosts to be easily replaced, groups of hosts to be organized into
    subnets, and distant subnets to be able to communicate with one another.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 网络层负责提供一种逻辑寻址系统，该系统允许主机易于替换，将主机组组织成子网，并使远程子网能够相互通信。
- en: The most common protocol used to implement these features is **Internet Protocol
    Version 4** (**IPv4**), which is a 32-bit address that identifies a device on
    a network. The most recent release, **Internet Protocol Version 6** (**IPv6**),
    is based on a 128-bit address and is designed to replace IPv4, as that one is
    running out of available addresses.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 用于实现这些功能的最常见协议是**互联网协议版本4**（**IPv4**），它是一个32位地址，用于标识网络上的设备。最新的版本是**互联网协议版本6**（**IPv6**），它基于128位地址，旨在取代IPv4，因为IPv4的可用地址正在耗尽。
- en: The data link layer
  id: totrans-90
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 数据链路层
- en: The **data link layer** is responsible for providing a method for communication
    between physically connected hosts. This means this layer must provide a method
    through which a source host can package up information and transmit it through
    the physical layer.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据链路层**负责在物理连接的主机之间提供通信方法。这意味着该层必须提供一种方法，使源主机能够打包信息并通过物理层传输。'
- en: '*Figure 2**.6* depicts a typical communication flow between two devices, a
    client and a server, and the data passing through the different layers:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '*图2.6* 展示了两个设备（客户端和服务器）之间典型的通信流程以及数据通过不同层传递的情况：'
- en: '![Figure 2.6 – The communication between a client and a server](img/Figure_02_06_B18203.jpg)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![图2.6 – 客户端与服务器之间的通信](img/Figure_02_06_B18203.jpg)'
- en: Figure 2.6 – The communication between a client and a server
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 图2.6 – 客户端与服务器之间的通信
- en: The physical layer
  id: totrans-95
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 物理层
- en: Underneath all of the previous layers is the **physical layer**, which is responsible
    for actually sending raw data (bits) over a physical medium, such as a cable,
    an optical fiber, a Wi-Fi connection, or even a Bluetooth communication.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在所有上述层之下是**物理层**，它负责在物理介质（如电缆、光纤、Wi-Fi连接或甚至蓝牙通信）上发送原始数据（比特）。
- en: This layer defines how signals are sent and received, as well as how these signals
    are modulated and demodulated into usable digital information.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 此层定义了信号的发送和接收方式，以及如何将这些信号调制和解调为可用的数字信息。
- en: Though we have discussed the physical layer here, it is not actually included
    in the TCP/IP suite, which is why it is slightly separated from the other layers
    shown in *Figure 2**.5*.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们在这里讨论了物理层，但它实际上并不包含在TCP/IP套件中，这就是为什么它在*图2.5*中显示的其他层中稍微分离的原因。
- en: Now that you know how data is packaged and how the TCP/IP suite is organized,
    you will learn about the main problems and pitfalls that can happen over the network
    in the next section.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经了解了数据是如何打包的以及TCP/IP套件的组织方式，你将在下一节学习网络中可能发生的主要问题和陷阱。
- en: Understanding network issues
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解网络问题
- en: With so much data involved and moving around physical media, there is a significant
    risk of running into serious issues. As such, it is important to be aware of these
    potential problems and how to best avoid them or limit their impact.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在涉及大量数据并在物理媒体中移动的情况下，遇到严重问题的风险是相当大的。因此，了解这些潜在问题以及如何最好地避免它们或限制其影响是很重要的。
- en: Security
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安全
- en: The first issue to consider when dealing with computer networking is **security**.
    Without proper security protocols in place, it’s possible for malicious people
    to gain access to sensitive information.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 处理计算机网络时首先要考虑的问题是**安全**。如果没有适当的网络安全协议，恶意人员可能获得访问敏感信息的权限。
- en: Getting your credit card information stolen while in-app purchasing the latest
    skin for your character or your login credentials stolen from your Steam account
    is something you definitely don’t want to experience!
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用内购买您角色的最新皮肤或您的 Steam 账户登录凭证被盗，这绝对不是您想经历的事情！
- en: Packet loss
  id: totrans-105
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据包丢失
- en: '**Packet loss** occurs when data packets sent from one device to another are
    lost or corrupted and is a major issue that can cause significant disruption to
    any network. This type of disruption can lead to a slow or even complete breakdown
    in communication, resulting in a negative gaming experience for players.'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据包丢失**发生在从一个设备发送到另一个设备的数据包丢失或损坏时，这是一个可能导致任何网络出现重大中断的主要问题。这种中断可能导致通信缓慢甚至完全中断，从而给玩家带来负面的游戏体验。'
- en: 'Consider, for instance, if your perfect shoot at a berserker opponent who is
    trying to leap at you is lost over the network: you would be in a great deal of
    trouble at that moment!'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，考虑一下，如果您对试图向您跳来的狂暴对手的完美射击在网络中丢失：那时您会遇到很大的麻烦！
- en: Latency
  id: totrans-108
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 延迟
- en: '**Latency** in computer networking is represented by the time it takes for
    a data packet to travel from one designated point to its destination and is usually
    measured in milliseconds. This can be caused by a variety of factors, such as
    slow internet connections, outdated hardware, or congested networks.'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机网络中的**延迟**表示数据包从一个指定点传输到其目的地所需的时间，通常以毫秒为单位。这可能是由于各种因素造成的，例如缓慢的互联网连接、过时的硬件或拥挤的网络。
- en: In a multiplayer game, latency should be kept as low as possible as it can have
    a significant impact on the performance of the game you are playing. As an example,
    in a first-person shooter game where fast reflexes are essential, having your
    character killed due to a slow connection can ruin all the fun!
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在多人游戏中，应尽可能降低延迟，因为它会对您所玩游戏的性能产生重大影响。例如，在一个需要快速反应的第一人称射击游戏中，如果您的角色因为连接缓慢而被击败，这可能会破坏所有的乐趣！
- en: Note
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: While dealing with security and data loss are not topics discussed in this book,
    you’ll learn about latency and how to handle it in *Part 4* of this book. However,
    if you are interested in delving deeper into the topics of network security and
    data loss, Packt offers an extensive collection of books on the subject.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然本书没有讨论安全和数据丢失问题，但您将在本书的**第4部分**中了解延迟以及如何处理它。然而，如果您对深入探讨网络安全和数据丢失主题感兴趣，Packt
    提供了大量关于该主题的书籍。
- en: Now that you have a basic grip on the main issues when managing data over the
    network, it’s time to move into Unreal Engine and get an introduction to how this
    software handles networking.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您已经对通过网络管理数据时的主要问题有了基本的了解，是时候进入 Unreal Engine 并了解该软件如何处理网络了。
- en: Introducing the Unreal Engine multiplayer system
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍 Unreal Engine 多玩家系统
- en: As we already saw in the previous sections, in a networked system, it is essential
    to consider what data is sent and how it is sent, as this can drastically influence
    the performance and overall experience of the game.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们在前面的章节中已经看到的，在网络化系统中，考虑发送什么数据以及如何发送数据是至关重要的，因为这可以极大地影响游戏的性能和整体体验。
- en: Unreal Engine features a powerful networking framework, which is used in some
    of the most popular online games in the world. This section provides an overview
    of the concepts that power the Unreal Engine multiplayer framework, as well as
    their usage in multiplayer gameplay.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: Unreal Engine 拥有一个强大的网络框架，该框架被用于世界上一些最受欢迎的在线游戏中。本节提供了关于驱动 Unreal Engine 多玩家框架的概念概述，以及它们在多人游戏中的使用。
- en: Network modes and server types
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络模式和服务器类型
- en: 'In Unreal Engine, a computer’s relationship to a multiplayer session is referred
    to as a **network mode**. An Unreal game can be set as one of the following network
    modes:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在虚幻引擎中，计算机与多人会话的关系被称为**网络模式**。虚幻游戏可以设置为以下网络模式之一：
- en: '**Client**: In this mode, the computer will act as a client, connecting to
    a server in a network multiplayer session.'
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**客户端**：在此模式下，计算机将充当客户端，连接到网络多人会话中的服务器。'
- en: '**Standalone**: This mode is strictly used for non-networked games (single
    players or local multiplayer) and will not accept any connections from remote
    clients.'
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**独立模式**：此模式严格用于非联网游戏（单人游戏或本地多人游戏），并且不会接受来自远程客户端的任何连接。'
- en: '**Dedicated Server**: In this mode, the computer will run as a server hosting
    a network multiplayer session and will accept connections from remote clients.
    As a dedicated server, everything will be optimized for persistent and secure
    management, so will ignore any player-oriented features, such as graphics, audio,
    or input.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**专用服务器**：在此模式下，计算机将作为服务器托管网络多人会话，并接受来自远程客户端的连接。作为专用服务器，一切都将优化以实现持久和安全的托管，因此将忽略任何以玩家为导向的功能，例如图形、音频或输入。'
- en: '**Listen Server**: In this mode, the computer will run as a server accepting
    remote clients, but also local players. This means it will sacrifice some performance,
    but will allow a computer to act both as a server and as a client. This mode can
    be thought of as a combination of the client and dedicated server modes, allowing
    you to participate in a game as a client while simultaneously hosting the network.'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**监听服务器**：在此模式下，计算机将作为服务器运行，接受远程客户端，同时也接受本地玩家。这意味着它将牺牲一些性能，但允许计算机同时作为服务器和客户端。这种模式可以被视为客户端和专用服务器模式的组合，允许你在作为客户端参与游戏的同时，同时托管网络。'
- en: Note
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Listen servers have gained popularity due to their ease of setup and ability
    to provide both casual and competitive multiplayer gaming in a LAN. As players
    hosting the session will be playing directly on the server, they will usually
    have an advantage over the other players. However, as servers are also run as
    clients, they are not suitable for highly competitive games or games with a large
    amount of data involved. Additionally, listen servers, which allow a client to
    host a game and have other clients join to play, create potential vulnerabilities
    for all clients on the network. This is because the client hosting the network
    may engage in malicious actions, such as cheating or granting themselves an unfair
    advantage over other players.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 监听服务器因其设置简单和能够提供局域网中的休闲和竞技多人游戏而受到欢迎。由于托管会话的玩家将直接在服务器上玩游戏，他们通常会比其他玩家有优势。然而，由于服务器也作为客户端运行，因此它们不适合高度竞技的游戏或涉及大量数据的游戏。此外，允许客户端托管游戏并让其他客户端加入游玩的监听服务器，为网络上的所有客户端创造了潜在的安全漏洞。这是因为托管网络的客户端可能会进行恶意行为，例如作弊或给自己带来不公平的优势。
- en: The replication system
  id: totrans-125
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 复制系统
- en: In UE, the process of reproducing game state information between the server
    and clients is called **replication**. The replication system allows for high-level
    abstraction and low-level customization, making it simpler to manage any scenarios
    that may arise when creating an Unreal Engine project intended for multiple users
    at once.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 在UE中，服务器和客户端之间复制游戏状态信息的过程称为**复制**。复制系统允许高级抽象和低级定制，使得管理在创建面向多个用户同时使用的虚幻引擎项目时可能出现的任何场景变得更加简单。
- en: If replication is enabled on an Actor, all instances of the game running on
    different machines will be synchronized. On the other hand, if replication is
    disabled, the Actor will only update its functions on the machine where it was
    spawned.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果在Actor上启用了复制，则运行在不同机器上的游戏的所有实例都将同步。另一方面，如果禁用了复制，Actor将只在其被创建的机器上更新其功能。
- en: Some of the most common elements that you will probably replicate during a multiplayer
    game development may be creation/destruction, movement, variables, and components.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在多人游戏开发过程中，你可能需要复制的最常见元素可能包括创建/销毁、移动、变量和组件。
- en: There are, however, other elements that should not be replicated at all as they
    will be running separately on the client, such as skeletal and static meshes,
    materials, particle systems, and sound emitters. Usually, the server does not
    need to know about these kinds of things, considering the nature of these elements
    (i.e., purely aesthetical).
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，还有一些元素不应该复制，因为它们将在客户端单独运行，例如骨骼和静态网格、材质、粒子系统和声音发射器。通常，服务器不需要了解这些元素的性质（即，纯粹的美学性质）。
- en: Network role
  id: totrans-130
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络角色
- en: When playing a game online with multiple players, it is important to understand
    which device is in control of each Actor. This is determined by the network role
    of the Actor itself.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在多人在线游戏中，了解每个Actor由哪个设备控制非常重要。这由Actor自身的网络角色决定。
- en: The device with an **authoritative** Actor role is the one that has control
    of the Actor’s state, and it is responsible for replicating information about
    the Actor to other players in real time.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有**授权**Actor角色的设备是控制Actor状态的设备，它负责实时向其他玩家复制关于Actor的信息。
- en: A copy of the same Actor located on a remote machine that is not authoritative
    is defined as a **remote proxy** and will receive all replicated information from
    the authoritative one.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 位于非授权远程机器上的相同Actor的副本定义为**远程代理**，并将接收来自授权者的所有复制信息。
- en: In UE, the authority is typically held by the server, meaning that information
    is usually *from* the server *to* the clients. This model is known as **server-authoritative**.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在UE中，权威通常由服务器持有，这意味着信息通常是*从*服务器*到*客户端的。这种模型被称为**服务器授权**。
- en: Pawns and PlayerControllers
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Pawn和PlayerControllers
- en: As you may already know, in UE, a Pawn (or, more often, a Character) can be
    owned by a PlayerController. This is also true for multiplayer games, where a
    PlayerController is created for each connected player.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所知，在UE中，Pawn（或更常见的是角色）可以由PlayerController拥有。这在多人游戏中也是如此，为每个连接的玩家创建一个PlayerController。
- en: During gameplay, any Actor that has been assigned to a particular Pawn is automatically
    associated with that Pawn’s owning client. As an example, a Pawn may possess an
    item such as a rifle or a sword Actor, and this item will be held owned by the
    same connection that owns the Pawn.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 在游戏过程中，任何被分配给特定Pawn的Actor会自动与该Pawn的所有者客户端关联。例如，一个Pawn可能拥有一个如步枪或剑Actor这样的物品，而这个物品将由拥有Pawn的相同连接持有。
- en: Relevance and priority
  id: totrans-138
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 相关性和优先级
- en: To determine whether it is beneficial to replicate an Actor during a multiplayer
    game, **relevance** is taken into account. Actors that are deemed not relevant
    will be excluded during replication. This method is used to reduce the amount
    of data that is sent over the network, thereby increasing the efficiency of data
    replication.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 为了确定在多人游戏中复制Actor是否有益，会考虑**相关性**。被认为不相关的Actor将在复制过程中被排除。这种方法用于减少通过网络发送的数据量，从而提高数据复制的效率。
- en: When bandwidth is limited, the most important Actors are selected first when
    replicating data. Each Actor has an assigned **priority** value, which is used
    to determine the order of replication.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 当带宽有限时，在复制数据时首先选择最重要的Actor。每个Actor都有一个分配的**优先级**值，用于确定复制的顺序。
- en: Remote Procedure Calls
  id: totrans-141
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 远程过程调用
- en: During a multiplayer session, a function can be replicated through a **Remote
    Procedure Call** (**RPC**). RPCs can be invoked from any machine connected to
    the network, but their implementation will take place on a particular machine
    that is part of the network session.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在多人会话期间，可以通过**远程过程调用**（**RPC**）复制一个函数。RPC可以从连接到网络的任何机器调用，但它们的实现将在网络会话的一部分特定机器上完成。
- en: An RPC can be sent from the server, the client, or to multiple clients (**multicast**).
    An RPC can either be guaranteed to reach its destination (**reliable**) or not
    (**unreliable**).
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: RPC可以从服务器、客户端或多个客户端（**多播**）发送。RPC要么保证到达目的地（**可靠**），要么不保证（**不可靠**）。
- en: In this section, I provided some of the key definitions regarding the UE multiplayer
    system. The information here may seem quite dense and things may seem a bit overwhelming.
    But don’t be afraid – you just finished the second chapter and the entire book
    is available to help you learn it all!
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我提供了一些关于UE多人系统的关键定义。这里的信息可能看起来相当密集，事情可能看起来有点令人不知所措。但不要害怕——你刚刚完成了第二章，整本书都可供你学习所有内容！
- en: Summary
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, you learned about the fundamental concepts of computer networking
    and the key players involved in successful network communication. Additionally,
    you were introduced to the Internet Protocol and the layers that make up the TCP/IP
    suite with the main issues that may arise during a network connection. Finally,
    you were presented with the Unreal multiplayer system and the key features offered
    by the framework.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你学习了计算机网络的基本概念和参与成功网络通信的关键参与者。此外，你被介绍了互联网协议以及构成 TCP/IP 套件的层级，以及网络连接过程中可能出现的重大问题。最后，你了解了虚幻引擎的多玩家系统和框架提供的关键功能。
- en: In the next chapter, you will start to gain practical experience with UE by
    building a prototype of a multiplayer game and testing its features on your computer.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将通过构建一个多人游戏的原型并在你的电脑上测试其功能来开始使用 UE 获得实际经验。
- en: Credits
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 致谢
- en: The diagrams in this chapter were created with the help of *Made Lineal* icons
    from Flaticon ([https://www.flaticon.com/](https://www.flaticon.com/)).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 本章中的图表是在 Flaticon 的 *Made Lineal* 图标（[https://www.flaticon.com/](https://www.flaticon.com/)）的帮助下创建的。
