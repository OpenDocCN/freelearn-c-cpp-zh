- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: '**Low Level Virtual Machine** (**LLVM**), is a collection of modular and reusable
    compiler and toolchain technologies used to develop compilers and compiler tools,
    such as linters and refactoring tools. LLVM is written in C++ and can be considered
    a good example of a well-structured project that uses interesting techniques aimed
    at making it reusable and efficient. The project can also be considered an excellent
    example of compiler architecture; diving into it will give you a sense of how
    compilers are organized and how they function. This should help to understand
    usage patterns and apply them accordingly.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: '**低级虚拟机**（**LLVM**）是一组模块化和可重用的编译器和工具链技术，用于开发编译器和编译工具，如代码检查器和重构工具。LLVM 用 C++
    编写，可以被认为是使用有趣技术使其可重用和高效的优秀项目示例。该项目也可以被认为是编译器架构的优秀示例；深入了解它将让你了解编译器是如何组织和工作的。这应该有助于理解使用模式并相应地应用它们。'
- en: One of the key components of LLVM is the C/C++ compiler known as Clang. This
    compiler is widely used across various companies and has been designated as the
    default compiler for certain development environments, notably for macOS development.
    Clang will be the primary focus of our investigation in this book, with particular
    attention to its frontend—the part that is closest to the C/C++ programming language.
    Specifically, the book will include examples demonstrating how the C++ standard
    is implemented within the compiler.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: LLVM 的一个关键组件是名为 Clang 的 C/C++ 编译器。这个编译器在各种公司中被广泛使用，并被指定为某些开发环境的默认编译器，特别是在 macOS
    开发中。Clang 将是我们这本书的主要研究对象，特别关注其前端——即最接近 C/C++ 编程语言的部分。具体来说，本书将包括一些示例，展示 C++ 标准如何在编译器中实现。
- en: A pivotal aspect of LLVM’s design is its modularity, which facilitates the creation
    of custom tools that exploit the compiler’s comprehensive capabilities. A notable
    example covered in the book is the Clang-Tidy linter framework, designed to identify
    undesirable code patterns and recommend corrections. Although it includes several
    hundred checks, you may not find one specific to your project’s needs. However,
    the book will provide you with the foundation necessary to develop such a check
    from the beginning.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: LLVM 设计的一个关键方面是其模块化，这有助于创建利用编译器全面功能的自定义工具。本书中涵盖的一个显著例子是 Clang-Tidy 代码检查框架，旨在识别不希望的代码模式并推荐修正。尽管它包括数百个检查，但你可能找不到一个专门针对你项目需求的检查。然而，本书将为你提供从零开始开发此类检查所需的基础。
- en: LLVM is an actively evolving project with two major releases each year. At the
    time the book was written, the latest stable release was version 17\. Meanwhile,
    a release candidate for version 18 was introduced in January 2024, with its official
    release anticipated to coincide with the publication of the book. The book’s content
    has been verified against the latest compiler version, 18, ensuring it provides
    insights based on the most current compiler implementation available.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: LLVM 是一个每年有两个主要版本发布的活跃项目。在本书编写时，最新的稳定版本是 17 版。同时，18 版本的候选发布版在 2024 年 1 月推出，预计其正式发布将与本书的出版同步。本书的内容已与最新的编译器版本
    18 进行了验证，确保它基于最先进的编译器实现提供见解。
- en: Who this book is for
  id: totrans-5
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本书面向的对象
- en: The book is written for C++ engineers who don’t have prior knowledge of compilers
    but wish to gain this knowledge and apply it to their daily activities. It provides
    an overview of the Clang compiler frontend, an essential yet often underestimated
    part of LLVM. This section of the compiler, along with a collection of powerful
    tools, enables programmers to enhance code quality and the overall development
    process. For example, Clang-Tidy offers more than 500 different lint checks that
    detect anti-patterns in code (such as use after move) and help maintain code style
    and standards. Another notable tool is Clang-Format, which allows specifying various
    formatting rules suitable for your project. These tools can also be considered
    an integral part of the development process. For instance, the language server
    (Clangd) is a critical service providing navigation and refactoring support for
    your IDE.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是为那些没有编译器知识但希望获得这种知识并将其应用于日常活动的 C++ 工程师编写的。它提供了 Clang 编译器前端概述，这是 LLVM 的一个基本但常被低估的部分。这个编译器部分，连同一系列强大的工具，使程序员能够提高代码质量和整体开发过程。例如，Clang-Tidy
    提供了超过 500 种不同的 lint 检查，用于检测代码中的反模式（如移动后的使用）并帮助维护代码风格和标准。另一个值得注意的工具是 Clang-Format，它允许指定适合您项目的各种格式化规则。这些工具也可以被认为是开发过程的一个组成部分。例如，语言服务器（Clangd）是一个关键服务，为您的
    IDE 提供导航和重构支持。
- en: Understanding compiler internals might be crucial for anyone wanting to create
    and use such tools. The book provides the necessary foundation to begin this journey,
    covering basic LLVM architecture and offering a detailed description of Clang
    internals. It includes examples from LLVM source code and custom tools that extend
    the basic functionality provided by the compiler. Additionally, the book addresses
    compilation databases and various performance optimizations that can enhance the
    build speed of your projects. This knowledge should help C++ developers correctly
    apply the compiler to their work activities.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 理解编译器内部结构可能对任何想要创建和使用此类工具的人来说至关重要。本书提供了开始这段旅程所需的必要基础，涵盖了基本的 LLVM 架构，并详细描述了 Clang
    的内部结构。它包括来自 LLVM 源代码和扩展编译器基本功能的自定义工具的示例。此外，本书还讨论了编译数据库和可以增强项目构建速度的各种性能优化。这些知识应有助于
    C++ 开发者正确地将编译器应用于他们的工作活动中。
- en: What this book covers
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[*Chapter** 1*](B19722_01.xhtml#x1-150001)*, Environment Setup*, describes
    the basic steps required to set up the environment for future experiments with
    Clang, suitable for Unix-based systems such as Linux and Darwin (macOS). In addition,
    readers will learn how to download, configure, and build LLVM source code. We
    will also create a simple Clang Tool to verify the syntax of the provided source
    code.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第一章*](B19722_01.xhtml#x1-150001)*，环境设置*，描述了为未来使用 Clang 进行实验所需的基本步骤，适用于基于
    Unix 的系统，如 Linux 和 Darwin（macOS）。此外，读者还将学习如何下载、配置和构建 LLVM 源代码。我们还将创建一个简单的 Clang
    工具来验证提供的源代码的语法。'
- en: '[*Chapter** 2*](B19722_02.xhtml#x1-330002)*, Clang Architecture*, examines
    the internal architecture of the Clang compiler. Starting with the basic concept
    of a compiler, we will explore how it is implemented in Clang. We will look at
    various parts of the compiler, including the driver, preprocessor (lexer), and
    parser. We will also examine examples that show how the C++ standard is implemented
    in Clang.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第二章*](B19722_02.xhtml#x1-330002)*，Clang 架构*，探讨了 Clang 编译器的内部架构。从编译器的基本概念开始，我们将探讨它在
    Clang 中的实现方式。我们将查看编译器的各个部分，包括驱动程序、预处理器（词法分析器）和解析器。我们还将检查示例，展示 C++ 标准如何在 Clang
    中实现。'
- en: '[*Chapter** 3*](B19722_03.xhtml#x1-530003)*, Clang AST*, talks about **Clang
    Abstract Syntax Tree (AST)**, which is the basic data structure produced by the
    parser. We will explore how the AST is organized in Clang and how it can be traversed.
    We will also delve into AST Matchers — a powerful tool provided by Clang for locating
    specific AST nodes.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第三章*](B19722_03.xhtml#x1-530003)*，Clang 抽象语法树*，讨论了 **Clang 抽象语法树 (AST)**，这是解析器产生的基'
- en: '[*Chapter** 4*](B19722_04.xhtml#x1-680004)*, Basic Libraries and Tools*, explores
    basic LLVM libraries and tools, including the LLVM **Abstract Data Type (ADT)**
    library, used across all LLVM code. We will investigate TableGen, a **Domain-Specific**
    **Language (DSL)** used to generate C++ code in various parts of LLVM. Additionally,
    we will explore **LLVM Integrated Tester (LIT)** tool used for creating powerful
    end-to-end tests. Using the knowledge gained, we will create a simple Clang plugin
    to estimate source code complexity.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第 4 章*](B19722_04.xhtml#x1-680004)*，基本库和工具*，探讨了基本 LLVM 库和工具，包括跨所有 LLVM 代码使用的
    LLVM **抽象数据类型 (ADT**) 库。我们将研究 TableGen，这是一种用于在 LLVM 的各个部分生成 C++ 代码的 **领域特定语言 (DSL**)。此外，我们还将探索
    **LLVM 集成测试器 (LIT**) 工具，它用于创建强大的端到端测试。利用所获得的知识，我们将创建一个简单的 Clang 插件来估计源代码的复杂性。'
- en: '[*Chapter** 5*](B19722_05.xhtml#x1-990005)*, Clang-Tidy Linter Framework*,
    covers Clang-Tidy, a linter framework based on Clang AST, and creates a simple
    Clang-Tidy check. We will also discuss how compilation errors affect the AST and
    the results provided by different Clang Tools, such as Clang-Tidy.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第 5 章*](B19722_05.xhtml#x1-990005)*，Clang-Tidy 检查框架*，涵盖了基于 Clang AST 的 Clang-Tidy
    检查框架，并创建了一个简单的 Clang-Tidy 检查。我们还将讨论编译错误如何影响 AST 以及不同 Clang 工具（如 Clang-Tidy）提供的结果。'
- en: '[*Chapter** 6*](B19722_06.xhtml#x1-1170006)*, Advanced Code Analysis*, goes
    further and considers another advanced data structure used for code analysis:
    **Control Flow Graphs** **(CFG)**. We will investigate typical cases for its application
    and create a simple Clang-Tidy check that utilizes this data structure.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第 6 章*](B19722_06.xhtml#x1-1170006)*，高级代码分析*，进一步考虑了另一种用于代码分析的高级数据结构：**控制流图
    (CFG**)。我们将研究其应用的典型情况，并创建一个简单的 Clang-Tidy 检查，利用这种数据结构。'
- en: '[*Chapter** 7*](B19722_07.xhtml#x1-1320007)*, Refactoring Tools*, Clang provides
    advanced tools for code modification and refactoring. We will explore different
    ways to create a custom refactoring tool, including one based on the Clang-Tidy
    linter framework. We will also explore Clang-Format, an extremely fast utility
    for automatic code formatting.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第 7 章*](B19722_07.xhtml#x1-1320007)*，重构工具*，Clang 提供了用于代码修改和重构的高级工具。我们将探索创建自定义重构工具的不同方法，包括基于
    Clang-Tidy 检查框架的一个。我们还将探索 Clang-Format，这是一个用于自动代码格式化的极快实用工具。'
- en: '[*Chapter** 8*](B19722_08.xhtml#x1-1520008)*, IDE Support and Clangd*, presents
    Clangd - a Language Server used in various IDEs, such as **Visual Studio Code
    (VS Code)**, to provide intelligent support, including navigation and code modification.
    Clangd exemplifies the utility of the powerful modular architecture of LLVM. It
    utilizes various Clang tools, such as Clang-Tidy and Clang-Format, to enhance
    the development experience in VS Code. Compiler performance is crucial for this
    tool, and we will explore several techniques Clangd employs to improve its performance,
    thereby offering the best experience to developers.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第 8 章*](B19722_08.xhtml#x1-1520008)*，IDE 支持 和 Clangd*，介绍了 Clangd——一种在诸如 **Visual
    Studio Code (VS Code**) 等各种 IDE 中使用的语言服务器，用于提供智能支持，包括导航和代码修改。Clangd 展示了 LLVM 强大的模块化架构的实用性。它利用了各种
    Clang 工具，如 Clang-Tidy 和 Clang-Format，以增强 VS Code 中的开发体验。编译器性能对于这个工具至关重要，我们将探讨
    Clangd 使用的几种提高其性能的技术，从而为开发者提供最佳体验。'
- en: '*Appendix 1: Compilation Database*, describes the Compilation Database—a method
    for providing complex compilation commands to different Clang Tools. This functionality
    is crucial for integrating Clang Tools such as Clangd and Clang-Tidy into real
    C/C++ projects.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*附录 1：编译数据库*，描述了编译数据库——一种向不同的 Clang 工具提供复杂编译命令的方法。这种功能对于将 Clang 工具（如 Clangd
    和 Clang-Tidy）集成到实际的 C/C++ 项目中至关重要。'
- en: '*Appendix 2: Build Speed Optimizations*, covers several compiler performance
    optimizations that can be used to enhance compiler performance. We will cover
    Clang precompiled headers and Clang modules, which represent a serialized AST
    that can be loaded much faster than building it from scratch.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '*附录 2：构建速度优化*，涵盖了几个编译器性能优化，这些优化可以用来提高编译器的性能。我们将介绍 Clang 预编译头和 Clang 模块，它们代表了一种序列化的抽象语法树（AST），可以比从头开始构建快得多。'
- en: To get the most out of this book
  id: totrans-19
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为了充分利用这本书
- en: You will need to have an understanding of C++, especially C++17, which is used
    for LLVM and throughout the examples in the book. The provided examples are assumed
    to be run on a Unix-like operating system, with Linux and Darwin (Mac OS) being
    considered the operating system requirements for the book. We will use Git to
    clone the LLVM source tree and start working on it. Some tools also need to be
    installed, such as CMake and Ninja, which will be actively used to build the examples
    and the LLVM source code.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要了解 C++，特别是 C++17，这是用于 LLVM 以及本书中的示例的。提供的示例假定在类 Unix 操作系统上运行，Linux 和 Darwin（Mac
    OS）被视为本书的操作系要求。我们将使用 Git 来克隆 LLVM 源代码树并开始工作。还需要安装一些工具，例如 CMake 和 Ninja，这些工具将用于构建示例和
    LLVM 源代码。
- en: '**If you are using the digital version of this book, we advise you to** **type
    the code yourself or access the code from the book’s GitHub** **repository (a
    link is available in the next section). Doing so will** **help you avoid any potential
    errors related to the copying and** **pasting of code.**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您正在使用本书的数字版，我们建议您** **亲自输入代码或从本书的 GitHub** **仓库（下一节中有一个链接）访问代码。这样做将** **帮助您避免与代码的复制和粘贴相关的任何潜在错误。**'
- en: Download the example code files
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Clang-Compiler-Frontend-Packt](https://github.com/PacktPublishing/Clang-Compiler-Frontend-Packt).
    In case there’s an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 书籍的代码包也托管在 GitHub 上，地址为 [https://github.com/PacktPublishing/Clang-Compiler-Frontend-Packt](https://github.com/PacktPublishing/Clang-Compiler-Frontend-Packt)。如果代码有更新，它将在现有的
    GitHub 仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他来自我们丰富的图书和视频目录的代码包可供使用，请访问[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)。查看它们！
- en: Conventions used
  id: totrans-25
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`CodeInText`: Indicates code words in text, database table names, folder names,
    filenames, file extensions, pathnames, dummy URLs, and user input. Here is an
    example: ”The first two parameters specify the declaration `(clang::Decl)` and
    the statement for the declaration `(clang::Stmt)`.”'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '`CodeInText`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟 URL 和用户输入。以下是一个示例：“前两个参数指定声明（`clang::Decl`）和声明语句（`clang::Stmt`）。”'
- en: 'A block of code is set as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都应如下编写：
- en: '[PRE1]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We use `<...>` as a placeholder for the folder where the LLVM source code was
    cloned.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 `<...>` 作为克隆 LLVM 源代码的文件夹占位符。
- en: 'Some code examples will be representing input of shells. You can recognize
    them by specific prompt characters:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 一些代码示例将表示 shell 的输入。您可以通过特定的提示字符来识别它们：
- en: '`(``lldb``)` for interactive LLDB shell'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`(``lldb``)` 用于交互式 LLDB shell'
- en: '`$` for Bash shell (macOS and Linux)'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`$` 用于 Bash shell（macOS 和 Linux）'
- en: '`>` for interactive shell provided by different Clang Tools, such as Clang-Query'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`>` 用于由不同的 Clang 工具提供的交互式 shell，例如 Clang-Query'
- en: Important note
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: Warnings or important notes appear like this.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示如下所示。
- en: Tip
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: Tips and tricks appear like this.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 技巧和窍门如下所示。
- en: Get in touch
  id: totrans-41
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们欢迎读者的反馈。
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at [customercare@packtpub.com](mailto:customercare@packtpub.com).'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：如果您对本书的任何方面有疑问，请在邮件主题中提及书名，并给我们发送电子邮件至 [customercare@packtpub.com](mailto:customercare@packtpub.com)。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [https://www.packtpub.com/support/errata](https://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误表**：尽管我们已经尽最大努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，如果您能向我们报告，我们将不胜感激。请访问[https://www.packtpub.com/support/errata](https://www.packtpub.com/support/errata)，选择您的书籍，点击勘误提交表单链接，并输入详细信息。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**: 如果你在网上以任何形式遇到我们作品的非法副本，我们将非常感激如果你能提供位置地址或网站名称。请通过[版权@packt.com](mailto:copyright@packt.com)与我们联系，并提供材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [https://partnerships.packt.com/contributors/](https://partnerships.packt.com/contributors/).'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你有兴趣成为作者**: 如果你有一个你擅长的主题，并且你感兴趣的是撰写或为书籍做出贡献，请访问[https://partnerships.packt.com/contributors/](https://partnerships.packt.com/contributors/)。'
- en: Share your thoughts
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分享你的想法
- en: Once you’ve read *Clang Compiler Frontend*, we’d love to hear your thoughts!
    Please [click here to go straight to the Amazon review page](https://packt.link/r/1837630984)
    for this book and share your feedback.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你阅读了*Clang编译器前端*，我们很乐意听到你的想法！请[点击此处直接跳转到这本书的亚马逊评论页面](https://packt.link/r/1837630984)并分享你的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你的评论对我们和科技社区都很重要，并将帮助我们确保我们提供高质量的内容。
- en: Download a free PDF copy of this book
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 下载这本书的免费PDF副本
- en: Thanks for purchasing this book!
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢购买这本书！
- en: Do you like to read on the go but are unable to carry your print books everywhere?
    Is your eBook purchase not compatible with the device of your choice?
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你喜欢在旅途中阅读，但无法携带你的印刷书籍到处走吗？你的电子书购买是否与你的选择设备不兼容？
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 别担心，现在每购买一本Packt书籍，你都可以免费获得该书的DRM免费PDF版本。
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何地方、任何时间、任何设备上阅读。直接从你最喜欢的技术书籍中搜索、复制和粘贴代码到你的应用程序中。
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 优惠并未停止，你还可以获得独家折扣、时事通讯和丰富的免费内容，每天直接发送到你的邮箱。
- en: 'Follow these simple steps to get the benefits:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下简单步骤获取福利：
- en: 'Scan the QR code or visit the link below:'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描下面的二维码或访问以下链接：
- en: '![PIC](img/free_ebook_qr.png)'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![PIC](img/free_ebook_qr.png)'
- en: '[https://download.packt.com/free-ebook/9781837630981](https://download.packt.com/free-ebook/9781837630981)'
  id: totrans-59
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '[https://download.packt.com/free-ebook/9781837630981](https://download.packt.com/free-ebook/9781837630981)'
- en: Submit your proof of purchase.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交你的购买证明。
- en: That’s it! We’ll send your free PDF and other benefits to your email directly.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这样！我们将直接将你的免费PDF和其他福利发送到你的邮箱。
