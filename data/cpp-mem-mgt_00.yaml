- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: 'Programs regularly have to allocate and manage memory, no matter what programming
    language they are written in. Why and how we do this depends on the language and
    the application domain, however: real-time systems, embedded systems, games, and
    conventional desktop applications all have different needs and constraints, and
    there is no single, universal best approach to all problems.'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 程序通常需要分配和管理内存，无论它们是用哪种编程语言编写的。然而，为什么以及如何做这取决于语言和应用领域：实时系统、嵌入式系统、游戏和传统的桌面应用程序都有不同的需求和约束，并且没有一种单一的、通用的最佳方法可以解决所有问题。
- en: This book shows how modern C++ lets programmers write simpler and safer programs,
    but also how that language makes it possible to take control of memory allocation
    mechanisms and make sure programs respect the constraints they face. Starting
    from the language’s basic concepts of objects’ lifetimes and memory organization,
    you will learn how to write your own containers and your own allocators, and to
    adapt the very behavior of allocation operators to suit your needs. Depending
    on your needs, you will be able to make programs that are smaller, faster, more
    predictable... and safer.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书展示了现代C++如何让程序员编写更简单、更安全的程序，同时也展示了该语言如何使程序员能够控制内存分配机制，并确保程序遵守它们面临的约束。从语言的基本概念——对象的生存期和内存组织开始，你将学习如何编写自己的容器和分配器，以及如何调整分配操作符的行为以满足你的需求。根据你的需求，你将能够编写出更小、更快、更可预测……并且更安全的程序。
- en: Who this book is for
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书面向的对象
- en: This book is written for individuals who have some programming experience and
    who enjoy both high-level and low-level programming. Having prior experience with
    generic programming and concurrent programming will lead to a more pleasant reading
    experience.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书是为那些有一定编程经验并且喜欢高级和低级编程的个人所写的。如果你有泛型编程和并发编程的先验经验，将会使阅读体验更加愉快。
- en: More specifically, this book is written for you if (a) you think managing memory
    in C++ is difficult but are willing to take a fresh look at it, (b) you want better
    control over the way your programs manage memory, or (c) you want your programs
    to be smaller, faster, and safer. You might benefit from this book if you come
    from a C++ background, of course, but also if you normally program in other languages
    and would like to look at what C++ allows you to do. This book will be helpful
    to any programmer, but you might find it particularly useful if you program in
    constrained environments (such as embedded systems or game consoles) or in other
    application domains where you need tight control over resource allocation mechanisms.
    Who knows, you might even enjoy it!
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 更具体地说，如果你（a）认为在C++中管理内存很困难但愿意重新审视它，（b）希望更好地控制程序管理内存的方式，或者（c）希望程序更小、更快、更安全，那么这本书是为你写的。当然，如果你来自C++背景，你可能会从这本书中受益，但即使你通常用其他语言编程，并想看看C++允许你做什么，这本书也会很有帮助。这本书对任何程序员都有帮助，但如果你在受限制的环境中编程（如嵌入式系统或游戏机）或在其他需要严格控制资源分配机制的应用领域编程，你可能会发现它特别有用。谁知道呢，你可能甚至会喜欢它！
- en: What this book covers
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书涵盖的内容
- en: '[*Chapter 1*](B21071_01.xhtml#_idTextAnchor016), *Objects, Pointers, and References*,
    discusses the basic concepts of the object model in the C++ language, providing
    us with a common basic vocabulary.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*](B21071_01.xhtml#_idTextAnchor016)，*对象、指针和引用*，讨论了C++语言中对象模型的基本概念，为我们提供了一个共同的基本词汇。'
- en: '[*Chapter 2*](B21071_02.xhtml#_idTextAnchor027), *Things to Be Careful With*,
    looks at some of the tricky aspects of C++, with a more specific examination of
    low-level programming maneuvers that can lead us into trouble; we will examine
    what kind of trouble these can lead us to.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*](B21071_02.xhtml#_idTextAnchor027)，*需要注意的事项*，探讨了C++的一些棘手方面，更具体地考察了可能导致我们陷入麻烦的低级编程技巧；我们将探讨这些技巧可能导致的麻烦类型。'
- en: '[*Chapter 3*](B21071_03.xhtml#_idTextAnchor047), *Casts and cv-qualifications*,
    examines the tools at our disposal to coerce the type system to our needs and
    discusses how to use these sometimes sharp tools in reasonable ways.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*](B21071_03.xhtml#_idTextAnchor047)，*类型转换和cv-限定符*，考察了我们可用的工具，这些工具可以强制类型系统满足我们的需求，并讨论了如何以合理的方式使用这些有时相当锋利的工具。'
- en: '[*Chapter 4*](B21071_04.xhtml#_idTextAnchor062), *Using Destructors*, looks
    at this important aspect of C++ that makes it possible to write objects that are
    responsible for the management of resources in general and of memory in particular.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*](B21071_04.xhtml#_idTextAnchor062)，*使用析构函数*，探讨了C++的这一个重要方面，它使得编写负责管理资源（尤其是内存）的对象成为可能。'
- en: '[*Chapter 5*](B21071_05.xhtml#_idTextAnchor079), *Using Standard Smart Pointers*,
    provides a look at how we can benefit from this important part of contemporary
    C++ programming, which inscribes responsibility over memory into the type system.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](B21071_05.xhtml#_idTextAnchor079), *使用标准智能指针*，提供了如何从当代C++编程的重要部分中受益的见解，这部分将内存管理的责任写入类型系统。'
- en: '[*Chapter 6*](B21071_06.xhtml#_idTextAnchor096), *Writing Smart Pointers*,
    looks at ways in which we write homemade versions of the standard smart pointers
    as well as how we can design our own smart pointers to cover niches that are not
    yet covered by those provided by the standard library.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*](B21071_06.xhtml#_idTextAnchor096), *编写智能指针*，探讨了编写标准智能指针的自制版本的方法，以及我们如何设计自己的智能指针来覆盖标准库尚未覆盖的领域。'
- en: '[*Chapter 7*](B21071_07.xhtml#_idTextAnchor116), *Overloading Memory Allocation
    Operators*, shows some of the many ways in which we can provide our own versions
    of memory allocation operators and explains why it can be a good idea to do so.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](B21071_07.xhtml#_idTextAnchor116), *重载内存分配操作符*，展示了我们可以提供自己的内存分配操作符版本的各种方法，并解释了为什么这样做可能是个好主意。'
- en: '[*Chapter 8*](B21071_08.xhtml#_idTextAnchor128), *Writing a Naïve Leak Detector*,
    puts our new memory management skills to use to write a working (if simple) tool
    to detect memory leaks in a way that is essentially transparent to user code.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B21071_08.xhtml#_idTextAnchor128), *编写一个简单的内存泄漏检测器*，将我们新的内存管理技能应用于编写一个工作（尽管简单）的工具，以检测内存泄漏，这种方式对用户代码几乎是透明的。'
- en: '[*Chapter 9*](B21071_09.xhtml#_idTextAnchor141), *Atypical Allocation Mechanisms*,
    takes a tour of some unusual applications (and overloads) of the standard memory
    allocation operators, including non-throwing versions and others that handle “exotic”
    memory.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B21071_09.xhtml#_idTextAnchor141), *非典型分配机制*，探讨了标准内存分配操作符的一些不寻常的应用（和重载），包括非抛出版本和其他处理“奇异”内存的版本。'
- en: '[*Chapter 10*](B21071_10.xhtml#_idTextAnchor153), *Arena-Based Memory Management
    and Other Optimizations*, uses our memory management skills to make programs execute
    more quickly and behave more deterministically, benefitting from domain-specific
    or application-specific knowledge.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B21071_10.xhtml#_idTextAnchor153), *基于区域的内存管理和其他优化*，使用我们的内存管理技能使程序执行得更快，行为更确定，并从特定领域或特定应用的知识中受益。'
- en: '[*Chapter 11*](B21071_11.xhtml#_idTextAnchor163), *Deferred Reclamation*, explores
    ways in which we can write programs that automatically reclaim dynamically allocated
    objects at chosen moments during program execution.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第11章*](B21071_11.xhtml#_idTextAnchor163), *延迟回收*，探讨了我们可以编写程序，在程序执行过程中选择的时间点自动回收动态分配的对象。'
- en: '[*Chapter 12*](B21071_12.xhtml#_idTextAnchor172), *Writing Generic Containers
    with Explicit Memory Management*, explains how to write two efficient generic
    containers that manage memory themselves and discusses exception-safety and complexity
    tradeoffs of this practice.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第12章*](B21071_12.xhtml#_idTextAnchor172), *使用显式内存管理编写通用容器*，解释了如何编写两个高效的通用容器，这些容器可以自己管理内存，并讨论了这种做法的异常安全性和复杂性权衡。'
- en: '[*Chapter 13*](B21071_13.xhtml#_idTextAnchor187), *Writing Generic Containers
    with Implicit Memory Management*, revisits the containers written in the previous
    chapter to see the impacts of moving from an explicit memory management approach
    to an implicit one that relies on smart pointers.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第13章*](B21071_13.xhtml#_idTextAnchor187), *使用隐式内存管理编写通用容器*，回顾了上一章中编写的容器，以查看从显式内存管理方法转向依赖于智能指针的隐式方法的影响。'
- en: '[*Chapter 14*](B21071_14.xhtml#_idTextAnchor199), *Writing Generic Containers
    with Allocator Support*, revisits our homemade containers to see how memory management
    can be customized through allocators, covering allocators from before C++11 to
    contemporary allocators, as well as PMR allocators.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第14章*](B21071_14.xhtml#_idTextAnchor199), *使用分配器支持编写通用容器*，回顾了我们自制的容器，以查看如何通过分配器定制内存管理，涵盖了从C++11之前的分配器到当代分配器，以及PMR分配器。 '
- en: '[*Chapter 15*](B21071_15.xhtml#_idTextAnchor213), *Contemporary Issues*, looks
    toward the near future and examines some recent (as of the book’s writing) features
    of C++ that pertain to memory management as well as some interesting candidate
    additions to the language in C++26 and C++29.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第15章*](B21071_15.xhtml#_idTextAnchor213), *当代问题*，展望了近未来的情况，并检查了C++中一些最近（截至本书编写时）与内存管理相关的功能，以及C++26和C++29中语言的一些有趣的候选新增功能。'
- en: '[*Annexure*](B21071_16.xhtml#_idTextAnchor221)*: Things You Should Know*, provides
    some technical background that can help you get the most out of this book but
    that might not be common knowledge. Refer to it as needed, it’s there for you!'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[*附录*](B21071_16.xhtml#_idTextAnchor221)*：您应该知道的事情*，提供了一些可以帮助您充分利用本书的技术背景，但这些可能不是众所周知的知识。根据需要参考它，它在那里为您服务！'
- en: To get the most out of this book
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: '*You will need a contemporary C++ compiler, ideally one that supports at least
    C++20 and ideally C++23\. This book does not require other tools, but you are
    of course welcome to use your favorite code editor and experiment with the examples
    you will meet as* *you progress.*'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '*您需要一个当代的C++编译器，理想情况下至少支持C++20，最好是C++23。本书不需要其他工具，但您当然可以使用您喜欢的代码编辑器，并在您前进的过程中尝试您遇到的示例*
    *。'
- en: '*Care was taken to keep to standard C++ from a portable and safe perspective.
    The few places where you will meet examples that use non-portable code are identified*
    *as such.*'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*为了保持标准的C++，从可移植和安全的视角出发，我们特别留意。您会遇到一些使用非可移植代码的示例，这些示例会被明确标识* *。'
- en: '*Code examples have been tested on three distinct compilers and the samples
    on the book’s GitHub repository all contain, in addition to the actual source
    code, links to online versions (in comments) that compile and that you can modify
    and adapt as* *you wish.*'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '*代码示例已在三个不同的编译器上进行了测试，本书GitHub仓库中的示例除了实际源代码外，还包含在线版本（在注释中）的链接，您可以对其进行修改和适配，以满足您的需求*
    *。'
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您使用的是本书的数字版，我们建议您亲自输入代码或从本书的GitHub仓库（下一节中提供链接）获取代码。这样做将帮助您避免与代码的复制和粘贴相关的任何潜在错误**
    **。**'
- en: '*I hope you enjoy the experience and find the examples to be an interesting
    starting point for your* *own explorations.*'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '*我希望您享受这种体验，并发现示例是您自己探索的有意思的起点* *。'
- en: Download the example code files
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/C-Plus-Plus-Memory-Management](https://github.com/PacktPublishing/C-Plus-Plus-Memory-Management).
    If there’s an update to the code, it will be updated in the GitHub repository.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub下载本书的示例代码文件[https://github.com/PacktPublishing/C-Plus-Plus-Memory-Management](https://github.com/PacktPublishing/C-Plus-Plus-Memory-Management)。如果代码有更新，它将在GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他来自我们丰富图书和视频目录的代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。查看它们吧！
- en: Conventions used
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “The whole body of `f()` could legitimately be rewritten
    by your compiler as `return g(*p)` in this case, with the `return *p` statement
    being turned into unreachable code.”'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称。以下是一个示例：“在这种情况下，编译器可以合法地将整个`f()`函数重写为`return
    g(*p)`，将`return *p`语句转换为不可达代码。”'
- en: 'A block of code is set as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望您注意代码块中的特定部分时，相关的行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都应如下编写：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Tips or important notes
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士或重要提示
- en: Appear like this.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来像这样。
- en: Get in touch
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 读者反馈始终欢迎。
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：如果您对本书的任何方面有疑问，请通过电子邮件[customercare@packtpub.com](mailto:customercare@packtpub.com)联系我们，并在邮件主题中提及书名。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误表**：尽管我们已经尽一切努力确保内容的准确性，但错误仍然可能发生。如果你在这本书中发现了错误，我们将不胜感激，如果你能向我们报告这个错误。请访问[www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)并填写表格。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**: 如果你在互联网上以任何形式遇到我们作品的非法副本，如果你能提供其位置地址或网站名称，我们将不胜感激。请通过[版权@packt.com](mailto:copyright@packt.com)与我们联系，并提供材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你有兴趣成为作者**：如果你在某个领域有专业知识，并且你感兴趣的是撰写或为书籍做出贡献，请访问[authors.packtpub.com](http://authors.packtpub.com)。'
- en: Share Your Thoughts
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享你的想法
- en: Once you’ve read *C++ Memory Management*, we’d love to hear your thoughts! Please
    [click here to go straight to the Amazon review page](https://packt.link/r/1805129805)
    for this book and share your feedback.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你阅读了*C++内存管理*，我们很乐意听听你的想法！请[点击此处直接进入此书的亚马逊评论页面](https://packt.link/r/1805129805)并分享你的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 你的评论对我们和科技社区都很重要，并将帮助我们确保我们提供高质量的内容。
- en: Download a free PDF copy of this book
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载此书的免费PDF副本
- en: Thanks for purchasing this book!
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您购买此书！
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 你喜欢在路上阅读，但又无法携带你的印刷书籍到处走吗？
- en: Is your eBook purchase not compatible with the device of your choice?
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你的电子书购买是否与你的选择设备不兼容？
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 别担心，现在，每购买一本Packt书籍，你都可以免费获得该书的DRM免费PDF版本。
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何地方、任何设备上阅读。直接从你最喜欢的技术书籍中搜索、复制和粘贴代码到你的应用程序中。
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 优惠远不止于此，你还可以获得独家折扣、时事通讯和每日免费内容的每日电子邮件。
- en: 'Follow these simple steps to get the benefits:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下简单步骤获取优惠：
- en: Scan the QR code or visit the link below
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描下面的二维码或访问以下链接
- en: '![](img/B21071_QR_Free_PDF.jpg)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B21071_QR_Free_PDF.jpg)'
- en: '[https://packt.link/free-ebook/978-1-80512-980-6](https://packt.link/free-ebook/978-1-80512-980-6)'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/free-ebook/978-1-80512-980-6](https://packt.link/free-ebook/978-1-80512-980-6)'
- en: Submit your proof of purchase
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交你的购买证明
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这些！我们将直接将免费PDF和其他优惠发送到你的邮箱
- en: 'Part 1: Memory in C++'
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一部分：C++中的内存
- en: In this part, we will develop a common vocabulary on some key aspects of the
    object model in C++. This includes a discussion of ideas such as what an object
    is, what a reference is, and how C++ represents memory; a look at some of the
    risky or delicate maneuvers we sometimes need to do when writing low-level code
    (and the consequences that stem from doing them inappropriately); and how to coerce
    the type system to our needs in ways that do not come back to harm us. The knowledge
    gathered in this part will serve as a basis from which later chapters will be
    built.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分，我们将就C++对象模型的一些关键方面建立一个常用词汇。这包括讨论诸如什么是对象、什么是引用以及C++如何表示内存等观点；在编写底层代码时，我们需要进行一些有风险或微妙的操作（以及由此产生的后果）；以及如何以不会对我们造成伤害的方式强制类型系统满足我们的需求。本部分收集的知识将作为后续章节构建的基础。
- en: 'This part has the following chapters:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含以下章节：
- en: '[*Chapter 1*](B21071_01.xhtml#_idTextAnchor016), *Objects, Pointers, and References*'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第一章*](B21071_01.xhtml#_idTextAnchor016)，*对象、指针和引用*'
- en: '[*Chapter 2*](B21071_02.xhtml#_idTextAnchor027), *Things to Be Careful with*'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第二章*](B21071_02.xhtml#_idTextAnchor027)，*注意事项*'
- en: '[*Chapter 3*](B21071_03.xhtml#_idTextAnchor047), *Casts and cv-qualifications*'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第三章*](B21071_03.xhtml#_idTextAnchor047)，*类型转换和cv-限定符*'
