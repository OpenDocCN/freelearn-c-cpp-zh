- en: Programming the Robot
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编程机器人
- en: After writing a couple of C++ programs and testing their output on the Raspberry
    Pi, it's now time to create our very own car robot and make it move forward, backward,
    left, and right.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在树莓派上编写了几个C++程序并测试了它们的输出后，现在是时候创建我们自己的小车机器人，并使其向前、向后、向左和向右移动了。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Choosing a good robot chassis
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择一个好的机器人底盘
- en: Constructing and connecting the robot
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 构建和连接机器人
- en: Working with H-bridge
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用H桥
- en: Moving the robot
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 移动机器人
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The main hardware requirements for this chapter are the following:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的主要硬件要求如下：
- en: Robot chassis (the parts included in the robot chassis are explained in the *Constructing
    and connecting the robot* section)
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人底盘（机器人底盘中包含的零件在“构建和连接机器人”部分中有解释）
- en: Two DC motors
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个直流电机
- en: L298N motor driver
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: L298N电机驱动器
- en: Female-to-female connecting wires
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 母对母连接线
- en: The code files for this chapter can be downloaded from [https://github.com/PacktPublishing/Hands-On-Robotics-Programming-with-Cpp/tree/master/Chapter03](https://github.com/PacktPublishing/Hands-On-Robotics-Programming-with-Cpp/tree/master/Chapter03).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的代码文件可以从[https://github.com/PacktPublishing/Hands-On-Robotics-Programming-with-Cpp/tree/master/Chapter03](https://github.com/PacktPublishing/Hands-On-Robotics-Programming-with-Cpp/tree/master/Chapter03)下载。
- en: Choosing a robot chassis
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 选择机器人底盘
- en: Choosing a good robot chassis is one of the most important activities to do
    before we start constructing the robot. The chassis for the robot is like a skeleton
    for a human. Our skeletons are made up of bones that provide proper support to
    our organs. In the same way, a good chassis will provide proper support to the
    electronics components and hold them together.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始制作机器人之前，选择一个好的机器人底盘是最重要的活动之一。机器人的底盘就像人的骨架。我们的骨架由提供适当支撑我们器官的骨骼组成。同样，一个好的底盘将为电子元件提供适当的支撑并将它们固定在一起。
- en: 'You can either purchase a robot chassis from e-commerce websites such as Amazon
    and eBay, or you can purchase one directly from a vendor who deals with robotics
    equipment. A quick Amazon search for `robot chassis` will provide you with a list
    of different variants of robot chassis. Choosing from all of these options can
    be a daunting task if you haven''t constructed a robot previously. While choosing
    a robot chassis, keep the following pointers in mind:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从亚马逊和eBay等电子商务网站购买机器人底盘，也可以直接从处理机器人设备的供应商那里购买。在亚马逊上快速搜索“机器人底盘”将为您提供不同变体的机器人底盘列表。如果您以前没有制作过机器人，从所有这些选项中进行选择可能是一项艰巨的任务。在选择机器人底盘时，请记住以下要点：
- en: 'Make sure that the robot chassis consists of two plates (an **Upper Plate**
    and a **Lower Plate**) so that you can place the electronics components in between
    the two plates as well as on the **Upper Plate**, as shown in the following photo:'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 确保机器人底盘包括两块板（一个**上板**和一个**下板**），这样您可以将电子元件放在两块板之间以及在**上板**上，如下图所示：
- en: '![](img/cfe89fce-0ff6-4d8b-b737-49c80bfd99da.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](img/cfe89fce-0ff6-4d8b-b737-49c80bfd99da.png)'
- en: Choose a robot chassis that only supports two DC motors, like the one shown
    in the preceding photo. Robot chassis with support for four DC motors are also
    available, but you would need an extra motor driver to drive a four-wheel robot.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 选择一个仅支持两个直流电机的机器人底盘，就像前面的照片中所示的那样。也有支持四个直流电机的机器人底盘，但您需要额外的电机驱动器来驱动四轮机器人。
- en: Finally, choose a robot chassis that has DC motors (two units), wheels (two
    units), and a castor wheel included as part of the complete kit, so that you do
    not have to purchase these components separately.
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，选择一个具有直流电机（两个单位）、车轮（两个单位）和一个脚轮的机器人底盘作为完整套件的一部分，这样您就不必单独购买这些组件。
- en: The robot chassis shown in the preceding photo is the one that I'll be using
    for creating my car robot, as it consists of two plates and includes the necessary
    components (DC motors, wheels, castor wheels, screws, and spacers) as a part of
    the complete kit.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的照片中显示的机器人底盘是我将用于创建我的小车机器人的底盘，因为它由两块板组成，并包括必要的组件（直流电机、车轮、脚轮、螺丝和间隔柱）作为完整套件的一部分。
- en: Constructing and connecting the robot
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建和连接机器人
- en: Constructing the robot properly is one of the most important steps. A properly
    constructed robot will move smoothly without any obstructions. Before constructing
    the robot, let's take a look at the complete list of components that you will
    need.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 正确构建机器人是最重要的步骤之一。一个正确构建的机器人将能够平稳移动而不会受到任何阻碍。在构建机器人之前，让我们看一下您将需要的所有组件的完整清单。
- en: 'The parts required for building the robot include the following:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 构建机器人所需的零件包括以下内容：
- en: 'A robot chassis, which must include the following components:'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 机器人底盘，必须包括以下组件：
- en: An upper plate and a lower plate
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个上板和一个下板
- en: Two BO DC motors (BO is a type of DC motor that generally is yellow in color)
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个BO直流电机（BO是一种通常为黄色的直流电机）
- en: '**Two** wheels'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**两个**车轮'
- en: '**One** castor wheel'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一个**脚轮'
- en: Spacers
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 间隔柱
- en: Screws for connecting different parts
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 连接不同部件的螺丝
- en: '**One** screwdriver'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一个**螺丝刀'
- en: '**One** L298N motor driver'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一个**L298N电机驱动器'
- en: '**Seven or eight** connecting wires'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**七到八**根连接线'
- en: '**One **battery snapper'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一个**电池夹'
- en: '**One **9V battery'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**一个**9V电池'
- en: Since these robot chassis are created by small-scale companies and there isn't
    a standard robot chassis that is available internationally, the robot chassis
    that I'm using for this project will differ from the robot chassis that is available
    in your country.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这些机器人底盘是由小规模公司制造的，并且没有国际上可用的标准机器人底盘，我用于此项目的机器人底盘将与您国家可用的机器人底盘不同。
- en: While purchasing a robot chassis online, please check the user reviews for the
    product.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在网上购买机器人底盘时，请检查产品的用户评论。
- en: Constructing the robot
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 制作机器人
- en: Constructing the robot becomes much easier when components such as upper and
    lower plates, DC motors, wheels, castor wheels, and spacers are included inside
    one single robot chassis kit. If you purchase these components separately, there
    is a chance that some components will not fit properly, which makes the entire assembly
    of the robot unstable. While the chassis that I'm using may differ from the one
    that you are using, the construction of most two-wheeled robots is quite similar.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当包括上下板、直流电机、车轮、万向轮和间隔器在内的组件都包含在一个单一的机器人底盘套件中时，构建机器人变得更加容易。如果您单独购买这些组件，有可能某些组件不会合适，这会使整个机器人的组装变得不稳定。虽然我使用的底盘可能与您使用的不同，但大多数双轮机器人的构造都是相似的。
- en: You can check the robot construction in the `Chapter03` folder of the GitHub
    repository.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以在GitHub存储库的`Chapter03`文件夹中查看机器人的构建。
- en: Connecting the motor driver to the Raspberry Pi
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将电机驱动器连接到树莓派
- en: After constructing the robot, it's time to connect the Raspberry Pi to the motor
    driver so that we can program the robot and move it in different directions. Before
    doing this, however, let's take a look at what a motor driver is.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 构建完机器人后，是时候将树莓派连接到电机驱动器，这样我们就可以对机器人进行编程并使其朝不同方向移动。然而，在这之前，让我们先了解一下电机驱动器是什么。
- en: What is a motor driver?
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是电机驱动器？
- en: 'A motor driver is a breakout board that consists of a motor driver **integrated
    circuit** (**IC**). A motor driver is basically the same as a current amplifier,
    and its main purpose is to take a low-current signal and convert to a high-current
    signal in order to run the motors. The L298N motor driver is shown in the following
    photo:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 电机驱动器是一个包含电机驱动**集成电路**（**IC**）的分立板。电机驱动器基本上与电流放大器相同，其主要目的是接收低电流信号并转换为高电流信号以驱动电机。下图显示了L298N电机驱动器：
- en: '![](img/f97d6a6a-f6b5-4eeb-ac6b-5b952d1d6d1f.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](img/f97d6a6a-f6b5-4eeb-ac6b-5b952d1d6d1f.png)'
- en: 'The main reason why we need a motor driver is that components such as motors
    cannot be connected directly to the Raspberry Pi as they do not get sufficient
    current from the Raspberry Pi, as shown in the following diagram:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要电机驱动器的主要原因是，诸如电机之类的组件不能直接连接到树莓派，因为它们无法从树莓派获得足够的电流，如下图所示：
- en: '![](img/0dab7eee-2480-4551-af27-bb0485e58102.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0dab7eee-2480-4551-af27-bb0485e58102.png)'
- en: 'This is why we connect the motor to the motor driver first and supply power
    to the motors with a battery, as shown in the following diagram:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么我们首先将电机连接到电机驱动器并使用电池为电机供电的原因，如下图所示：
- en: '![](img/b57fbee5-e0aa-4e20-8f39-8ef886a4f088.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b57fbee5-e0aa-4e20-8f39-8ef886a4f088.png)'
- en: Wiring connections
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接线连接
- en: 'The L298N motor driver consists of **four** input pins, **four** output sockets
    (two sockets for each motor), and **two** sockets for power. The Raspberry Pi
    pins are connected to the input pins of the motor driver. The DC motor wires are
    connected to the output socket of the motor driver and the battery snapper is
    connected to the power socket. The four input pins of the L298N motor driver are
    labeled **IN1**, **IN2**, **IN3**, and **IN4**. The output sockets are labeled
    **OUT1**, **OUT2**, **OUT3**, and **OUT4**. The following figure shows the wiring
    connection of Raspberry Pi, motor driver, and motors:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: L298N电机驱动器由**四个**输入引脚，**四个**输出插座（每个电机两个插座），以及**两个**电源插座组成。树莓派引脚连接到电机驱动器的输入引脚。直流电机线连接到电机驱动器的输出插座，电池夹连接到电源插座。L298N电机驱动器的四个输入引脚标有**IN1**，**IN2**，**IN3**和**IN4**。输出插座标有**OUT1**，**OUT2**，**OUT3**和**OUT4**。下图显示了树莓派、电机驱动器和电机的接线连接：
- en: '![](img/b6b850a0-b20f-4033-8f12-d600d374ddcb.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b6b850a0-b20f-4033-8f12-d600d374ddcb.png)'
- en: 'As you can see in the preceding diagram, the wiringPi pin numbers **0**, **2**,
    **3**, and **4** are connected to the input socket of the motor driver, as follows:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，wiringPi引脚编号**0**，**2**，**3**和**4**连接到电机驱动器的输入插座，如下所示：
- en: wiringPi no **0** is connected to **IN1**
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: wiringPi no **0**连接到**IN1**
- en: wiringPi no **2** is connected to **IN2**
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: wiringPi no **2**连接到**IN2**
- en: wiringPi no **3** is connected to **IN3**
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: wiringPi no **3**连接到**IN3**
- en: wiringPi no **4** is connected to **IN4**
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: wiringPi no **4**连接到**IN4**
- en: The left motor wires are connected to the **OUT1** and **OUT2** sockets
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 左电机线连接到**OUT1**和**OUT2**插座
- en: The right motor wires are connected to the **OUT3** and **OUT4** sockets
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 右电机线连接到**OUT3**和**OUT4**插座
- en: The red wire of the battery snapper is connected to the **VCC** socket of the
    motor driver and the black wire is connected to the ground socket
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电池夹的红线连接到电机驱动器的**VCC**插座，黑线连接到地面插座
- en: The ground pin from the Raspberry Pi is connected to the ground socket
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 树莓派的地针连接到地面插座
- en: Working with H-bridge
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用H桥
- en: 'The L298N motor driver IC can control two motors at a time. It consists of
    a dual H-bridge circuit. This means it consists of two circuits that look like
    the one shown in the following diagram, one for each motor:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: L298N电机驱动IC可以同时控制两个电机。它由双H桥电路组成。这意味着它由两个电路组成，每个电路看起来像下图所示的电路，每个电机一个：
- en: '![](img/253d6933-65c5-49e3-9370-24d2332850e3.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](img/253d6933-65c5-49e3-9370-24d2332850e3.png)'
- en: The H-bridge circuit consists of four switches **S1**, **S2**, ![](img/99b1cc6f-a64c-456d-9452-6789523e1500.png),
    and ![](img/9ba29df2-f0df-47a9-a012-29d0d2994cf4.png). These switches will open
    and close based on the input that we provide to the L298N IC.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: H桥电路由四个开关**S1**，**S2**，![](img/99b1cc6f-a64c-456d-9452-6789523e1500.png)和![](img/9ba29df2-f0df-47a9-a012-29d0d2994cf4.png)组成。这些开关将根据我们提供给L298N
    IC的输入而打开和关闭。
- en: 'Now, since we have two motors, there are four possible input combinations that
    we can provide to the L298N IC, as follows:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，由于我们有两个电机，我们可以向L298N IC提供四种可能的输入组合，如下所示：
- en: HIGH HIGH (1, 1)
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高 高（1, 1）
- en: HIGH LOW (1, 0)
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高 低（1, 0）
- en: LOW HIGH (0, 1)
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 低 高（0, 1）
- en: LOW LOW (0, 0)
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 低 低（0, 0）
- en: 'We will provide the HIGH (1) and LOW (0) signal to the **S1** and **S2** switches,
    as follows:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将向**S1**和**S2**开关提供高（1）和低（0）信号，如下所示：
- en: 'First, when *S1 = 1* and *S2 =0*, the **S1** switch will be closed and the
    **S2** switch will remain open. ![](img/aaf36f47-248a-426f-98f0-57f389c218f8.png) ,
    or ![](img/aa91d868-9da9-453b-bf33-8608d361d9d8.png) , will be 0, so the ![](img/0a247425-ed8b-4718-ad43-8de9b59c7ede.png)
    switch will be open. ![](img/4fd8f439-1baf-47f2-af3d-6da756d2f6a6.png) , or ![](img/20ad82af-0c82-4284-b06a-8881aff42648.png) ,
    will be 1, so the ![](img/293035e2-e863-41f9-ba7d-7b1236aeced3.png)switch will
    be closed. Now, since the **S1** and ![](img/2ef338bc-c25f-454d-bff3-f52500f29f0d.png)  switches
    are closed, the current will flow from the **Vcc** to the **S1**, then to the
    motor, then to the ![](img/4b1ac1d1-8a3c-4a87-baa4-1597a8b623df.png) , and end
    at the GND. The motor will rotate in a clockwise direction, as shown in the following
    diagram:'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，当*S1 = 1*和*S2 =0*时，**S1**开关将关闭，**S2**开关将保持打开。![](img/aaf36f47-248a-426f-98f0-57f389c218f8.png)，或![](img/aa91d868-9da9-453b-bf33-8608d361d9d8.png)，将为0，因此![](img/0a247425-ed8b-4718-ad43-8de9b59c7ede.png)开关将打开。![](img/4fd8f439-1baf-47f2-af3d-6da756d2f6a6.png)，或![](img/20ad82af-0c82-4284-b06a-8881aff42648.png)，将为1，因此![](img/293035e2-e863-41f9-ba7d-7b1236aeced3.png)开关将关闭。现在，由于**S1**和![](img/2ef338bc-c25f-454d-bff3-f52500f29f0d.png)开关都关闭，电流将从**Vcc**流向**S1**，然后流向电机，然后流向![](img/4b1ac1d1-8a3c-4a87-baa4-1597a8b623df.png)，最后到达GND。电机将以顺时针方向旋转，如下图所示：
- en: '![](img/b9aa4e50-1048-49be-b7e7-d6d7c454e8dc.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b9aa4e50-1048-49be-b7e7-d6d7c454e8dc.png)'
- en: 'When *S1 = 0* and *S2 = 1*, the **S1** switch will be open, the **S2** switch
    will be closed, the ![](img/819ca277-57f6-4e56-8859-4663691b668f.png) will be
    closed, and the ![](img/143742d9-a94a-4702-ab83-19828e9f9dfa.png) will be open.
    Now, since the **S2** and ![](img/2c222bb1-19a6-4fd0-90aa-797b95905efc.png)switches
    are closed, the current will flow from the **Vcc** to the **S2**, then to the
    motor, then to the ![](img/be4f60d6-19a9-45ff-a19c-b7fb5a1e10b8.png), and end
    at the **GND**. The motor will rotate in an anticlockwise direction, as shown
    in the following diagram:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当*S1 = 0*和*S2 = 1*时，**S1**开关将打开，**S2**开关将关闭，![](img/819ca277-57f6-4e56-8859-4663691b668f.png)将关闭，![](img/143742d9-a94a-4702-ab83-19828e9f9dfa.png)将打开。现在，由于**S2**和![](img/2c222bb1-19a6-4fd0-90aa-797b95905efc.png)开关关闭，电流将从**Vcc**流向**S2**，然后流向电机，然后流向![](img/be4f60d6-19a9-45ff-a19c-b7fb5a1e10b8.png)，最后到达**GND**。电机将以逆时针方向旋转，如下图所示：
- en: '![](img/9597e40e-f0ce-41c1-90ba-6b18ab7cb7fc.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9597e40e-f0ce-41c1-90ba-6b18ab7cb7fc.png)'
- en: 'When *S1 = 0* and *S2 = 0*, the **S1** switch will be open, the **S2** switch
    will be open, the ![](img/c6711146-011a-41e7-9a51-e6e690ce74bb.png) switch will
    be closed, and the ![](img/c53bf9a1-e1bb-4e79-8307-9939e761c813.png) switch will
    be closed. Now, since both the **S1** and **S2** switches are open, there is no
    path for the current to flow toward the motors. In this case, the motor will stop,
    as shown in the following diagram:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当*S1 = 0*和*S2 = 0*时，**S1**开关将打开，**S2**开关将打开，![](img/c6711146-011a-41e7-9a51-e6e690ce74bb.png)开关将关闭，![](img/c53bf9a1-e1bb-4e79-8307-9939e761c813.png)开关将关闭。现在，由于**S1**和**S2**开关都打开，电流无法流向电机。在这种情况下，电机将停止，如下图所示：
- en: '![](img/0aeecc23-606e-4f6d-964a-e920e8ce8f3b.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0aeecc23-606e-4f6d-964a-e920e8ce8f3b.png)'
- en: 'When *S1 = 1* and *S2 = 1*, the **S1** and **S2** switches will be closed,
    while the ![](img/217b56eb-475a-4c2c-a8fd-f0e3a0a818bc.png) and ![](img/6db4eae3-7d64-4686-b7e0-dafd78eb640d.png) switches
    will be open. Since both the **S1** and **S2** switches are closed, this will
    create a short circuit condition and the current will not move through the motor.
    In this case, the motor will stop, as in the previous case:'
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当*S1 = 1*和*S2 = 1*时，**S1**和**S2**开关将关闭，而![](img/217b56eb-475a-4c2c-a8fd-f0e3a0a818bc.png)和![](img/6db4eae3-7d64-4686-b7e0-dafd78eb640d.png)开关将打开。由于**S1**和**S2**开关都关闭，这将产生短路条件，电流将无法通过电机。在这种情况下，电机将停止，与之前的情况一样：
- en: '![](img/c6797ffb-ed39-4b81-b4f1-5b98de6c968f.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](img/c6797ffb-ed39-4b81-b4f1-5b98de6c968f.png)'
- en: As explained earlier, since the L298N IC consists of two H-bridges, the same
    process will take place in the other H-bridge when we provide high and low signals.
    The second H-bridge will control the other motor.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，由于L298N IC由两个H桥组成，当我们提供高低信号时，另一个H桥将发生相同的过程。第二个H桥将控制另一个电机。
- en: Moving the robot
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动机器人
- en: Now that we have understood the H-bridge circuit, we will write a program called
    `Forward.cpp` to move our robot forward. After that, we will write a program to
    move the robot backward, left, and right, and then stop. You can download the
    `Forward.cpp` program from `Chapter03` of the GitHub repository.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了H桥电路，我们将编写一个名为`Forward.cpp`的程序来使我们的机器人向前移动。之后，我们将编写一个程序来使机器人向后、向左、向右移动，然后停止。您可以从GitHub存储库的`Chapter03`下载`Forward.cpp`程序。
- en: 'The program for moving the robot forward is as follows:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 移动机器人向前的程序如下：
- en: '[PRE0]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Let''s see how this program works:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这个程序是如何工作的：
- en: First, we set the wiringPi pins (numbers 0, 1, 2, and 3) as output pins.
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，我们将wiringPi引脚（编号0、1、2和3）设置为输出引脚。
- en: 'Next, with the following two lines, the left motor moves forward:'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用以下两行，左电机向前移动：
- en: '[PRE1]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Then, the next two lines make the right motor move forwards:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，接下来的两行使右电机向前移动：
- en: '[PRE2]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: After that, the `delay` command means the motors will move forwards for three
    seconds. As we are currently inside a `for` loop, the motor will keep rotating
    continuously.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，`delay`命令意味着电机将向前移动三秒。由于我们目前在一个`for`循环中，电机将持续旋转。
- en: Once you have finished the code, compile the program to check if there are any
    errors.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 编译程序以检查是否有任何错误。
- en: 'Next, connect the 9V battery to the battery snapper and upload the program.
    Before doing this, however, make sure that you lift up the wheels of the robot.
    This is because, when the robot starts moving, you might get one of the following
    three outputs:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，将9V电池连接到电池夹子并上传程序。但在这之前，请确保将机器人的轮子抬起。这是因为当机器人开始移动时，您可能会得到以下三种输出中的一种：
- en: Both the motors move forwards. If you get this output, this means your robot
    will move forwards once you put it on the ground.
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个电机都向前移动。如果您得到这个输出，这意味着您的机器人将在放在地面上后向前移动。
- en: 'One motor moves forwards and the other motor moves backward. If you get this
    output, interchange the wires of the motor that is moving backward on the motor
    driver. For example, if the right motor is moving backward, insert the **M3-OUT**
    wire in the **M4-OUT** socket and the **M4-OUT** wire in the **M3-OUT** socket,
    as shown in the following diagram:'
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个电机向前移动，另一个电机向后移动。如果您得到这种输出，请交换在电机驱动器上向后移动的电机的电线。例如，如果右电机向后移动，请将**M3-OUT**线插入**M4-OUT**插座，将**M4-OUT**线插入**M3-OUT**插座，如下图所示：
- en: '![](img/8c8acc83-f31c-4b68-9b0c-fa414b0c2bfb.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8c8acc83-f31c-4b68-9b0c-fa414b0c2bfb.png)'
- en: 'Both the motors move backward. In this case, your robot will move backward.
    If you get this output, interchange the wires of both the left and right motor
    on the motor driver. To do this for the left motor, connect the **M1-OUT** socket
    wire in the **M2-OUT** socket and the **M2-OUT** socket wire in the **M1-OUT**
    socket. For the right motor, connect the **M3-OUT** socket wire in the **M4-OUT** socket
    and the **M4-OUT** socket wire in the **M3-OUT** socket, as shown in the following
    diagram:'
  id: totrans-98
  prefs:
  - PREF_UL
  - PREF_UL
  type: TYPE_NORMAL
  zh: 两个电机都向后移动。在这种情况下，您的机器人将向后移动。如果您得到这种输出，请交换电机驱动器上左右两个电机的电线。要为左电机执行此操作，请将**M1-OUT**插座线连接到**M2-OUT**插座，将**M2-OUT**插座线连接到**M1-OUT**插座。对于右电机，将**M3-OUT**插座线连接到**M4-OUT**插座，将**M4-OUT**插座线连接到**M3-OUT**插座，如下图所示：
- en: '![](img/10b7768c-4245-4205-8ff5-1934ac6113d4.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](img/10b7768c-4245-4205-8ff5-1934ac6113d4.png)'
- en: Alternatively you can also interchange the pins on the RPi to move the robot
    forward; connect pin 0 in place of pin 2 and pin 2 in place of pin 0 for the left
    motor. Similarly, connect pin 3 in place of pin 4 and pin 4 in place of pin 3
    for the right motor.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，您也可以交换RPi上的引脚以使机器人向前移动；将引脚0连接到左电机的引脚2的位置，将引脚2连接到引脚0的位置。同样，将引脚3连接到右电机的引脚4的位置，将引脚4连接到引脚3的位置。
- en: Click on the upload button and check the final output. Since this program is
    in a `for` loop, the motor will keep running continuously. After testing the output,
    disconnect the battery from the battery snapper so that the power to the motors
    through the motor driver is turned off to stop the motors from moving.
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击上传按钮并检查最终输出。由于这个程序在一个`for`循环中，电机将持续运转。在测试输出后，断开电池与电池夹的连接，以便通过电机驱动器关闭电机的电源，停止电机运动。
- en: Moving the robot backward
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使机器人向后移动
- en: 'To move the robot backward, we simply need to interchange the `HIGH` signal
    with the `LOW` signal and vice versa. The complete program to move the robot in
    this way is written inside the `RobotMovement.cpp` file, which can be downloaded
    from `Chapter03` of the GitHub repository:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 要使机器人向后移动，我们只需要交换`HIGH`信号和`LOW`信号。以这种方式移动机器人的完整程序编写在`RobotMovement.cpp`文件中，可以从GitHub存储库的`Chapter03`中下载：
- en: '[PRE3]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The first two lines will make the left motor move backward, while the following
    two lines will make the right motor move backward. The final line indicates that
    the robot will move for three seconds.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 前两行将使左电机向后移动，而接下来的两行将使右电机向后移动。最后一行表示机器人将移动三秒钟。
- en: Stopping the robot
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 停止机器人
- en: 'To stop the robot from moving, you can provide a `HIGH` signal or a `LOW` signal
    to the pins. In the code to make the robot move backward, add the following command
    to stop the motors for three seconds:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 要停止机器人移动，可以向引脚提供`HIGH`信号或`LOW`信号。在使机器人向后移动的代码中，添加以下命令以停止电机三秒钟：
- en: '[PRE4]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Different types of turns
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 不同类型的转弯
- en: 'There are two types of turn that a robot can carry out:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 机器人可以进行两种类型的转弯：
- en: Axial turn
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 轴向转动
- en: Radial turn
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 径向转动
- en: The code for taking axial and radial turns is added in the `RobotMovement.cpp`
    program.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 轴向和径向转弯的代码已添加到`RobotMovement.cpp`程序中。
- en: Axial turns
  id: totrans-114
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 轴向转动
- en: In axial turns, one wheel of the robot moves backward and the other wheel of
    the robot moves forwards. The robot can turn on the spot without moving from its
    original position. Axial turns are generally carried out if there are space constraints
    while turning, such as if a robot is moving through a maze. A robot can either
    carry out an axial left turn or an axial right turn.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在轴向转动中，机器人的一个车轮向后移动，另一个车轮向前移动。机器人可以在原地转弯而不移动。如果机器人在转弯时有空间限制，例如在迷宫中移动，通常会进行轴向转弯。机器人可以进行轴向左转或轴向右转。
- en: Axial left turn
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 轴向左转
- en: 'In an axial left turn, the left motor of the robot moves backward and the right
    motor moves forward, so the robot takes a left turn, as shown in the following
    diagram:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在轴向左转中，机器人的左电机向后移动，右电机向前移动，因此机器人向左转，如下图所示：
- en: '![](img/381f38c3-0558-46e5-b096-df159f458fe0.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](img/381f38c3-0558-46e5-b096-df159f458fe0.png)'
- en: 'If you have understood how the H-bridge works, you might be able to guess the
    code for taking an axial turn. If not, the code is as follows:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经了解了H桥的工作原理，您可能能够猜出进行轴向转弯的代码。如果不是，代码如下：
- en: '[PRE5]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You will need to play around with the delay value a little bit to make sure
    that the robot is turning properly in the left direction. If the delay value is
    high, the robot will turn more than 90°, whereas if it is low, the robot will
    turn less than 90°.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要稍微调整延迟值，以确保机器人向左正确转向。如果延迟值较高，机器人将转过90°以上，而如果延迟值较低，机器人将转过90°以下。
- en: Axial right turn
  id: totrans-122
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 轴向右转
- en: 'In an axial left turn, the left motor of the robot moves forwards and the right
    motor moves backward, thereby taking a right turn, as shown in the following diagram:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在轴向左转中，机器人的左电机向前移动，右电机向后移动，从而向右转，如下图所示：
- en: '![](img/31e89ebe-ca7e-441b-8a4d-9589d7d49a64.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](img/31e89ebe-ca7e-441b-8a4d-9589d7d49a64.png)'
- en: 'The code for an axial right turn is as follows:'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 轴向右转的代码如下：
- en: '[PRE6]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Radial turn
  id: totrans-127
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 径向转动
- en: In a radial turn, one motor of the robot stops and the other motor moves forwards.
    The wheel that is stopped acts as the center of the circle and the moving wheel
    acts as the circumference. The distance between the motors represents a radius,
    which is why this turn is called a radial turn. A robot can either carry out a
    radial left turn or a radial right turn.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在径向转弯中，机器人的一个电机停止，另一个电机向前移动。停止的轮子作为圆的中心，移动的轮子作为圆周。电机之间的距离代表半径，这就是为什么这种转弯被称为径向转弯。机器人可以进行径向左转或径向右转。
- en: Radial left turn
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 径向左转
- en: 'In a radial left turn, the left motor stops and the right motor moves forwards,
    so the robot takes a left turn, as shown in the following diagram:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在径向左转中，左侧电机停止，右侧电机向前移动，因此机器人向左转，如下图所示：
- en: '![](img/ae9e5b3a-dd2f-4095-9167-cf7ab80f28a8.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ae9e5b3a-dd2f-4095-9167-cf7ab80f28a8.png)'
- en: 'The code for taking a radial left turn is as follows:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 进行径向左转的代码如下：
- en: '[PRE7]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Radial right turn
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 径向右转
- en: 'In a radial right turn, the left motor moves forwards and the right motor stops,
    so the robot takes a right turn, as shown in the following diagram:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 在径向右转中，左侧电机向前移动，右侧电机停止，因此机器人向右转，如下图所示：
- en: '![](img/8510530d-bf08-42af-89b8-8aa87e847364.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8510530d-bf08-42af-89b8-8aa87e847364.png)'
- en: 'The code for taking a radial right turn is as follows:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 进行径向右转的代码如下：
- en: '[PRE8]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Summary
  id: totrans-139
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have looked at certain criteria for selecting a robot chassis.
    After that, we constructed our car, connected the motor driver to the Raspberry
    Pi, and understood the workings of an H-bridge circuit. Finally, we wrote programs
    to make the robot move forward, backward, left, and right.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们已经查看了选择机器人底盘的某些标准。之后，我们构建了我们的小车，将电机驱动器连接到树莓派，并了解了H桥电路的工作原理。最后，我们编写程序使机器人向前、向后、向左和向右移动。
- en: In the next chapter, after understanding the basic fundamentals of moving a
    robot in this chapter, we will first write a program to measure distance using
    an ultrasonic sensor. Next, we will use these distance values for avoiding obstacles,
    that is, if the robot comes very close to a wall then the ultrasonic sensor will
    sense it and it will command the robot to take a turn, thereby avoiding the obstacle.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，在了解了本章中移动机器人的基本原理之后，我们将首先编写一个程序来使用超声波传感器测量距离。接下来，我们将使用这些距离值来避开障碍物，也就是说，如果机器人靠近墙壁，超声波传感器将感应到并命令机器人转弯，从而避开障碍物。
- en: Questions
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: Which motor driver are we using for controlling the robot?
  id: totrans-143
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用哪种电机驱动器来控制机器人？
- en: An L298N motor driver IC consists of which bridge?
  id: totrans-144
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: L298N电机驱动IC包括哪个桥？
- en: What is the C program to move the robot in the forward direction?
  id: totrans-145
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将机器人向前移动的C程序是什么？
- en: '*S1 = 0* (LOW) and *S2 = 1* (HIGH), will move the robot in which direction?'
  id: totrans-146
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*S1 = 0*（低）和*S2 = 1*（高），将使机器人向哪个方向移动？'
- en: What is the code for a radial left turn?
  id: totrans-147
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 进行径向左转的代码是什么？
- en: What is the code for an axial right turn?
  id: totrans-148
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 轴向右转的代码是什么？
