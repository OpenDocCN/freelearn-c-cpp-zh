- en: Chapter 1. Audio Concepts
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1章。音频概念
- en: Programming the audio component of a game is a lot easier these days, thanks
    to all the powerful audio libraries that are available. These libraries ease the
    burden on the developers by taking care of most of the low-level implementation
    details. While this is a good thing, it also makes it easier to dismiss the need
    to understand sound theory. For instance, we can easily play a sound file without
    knowing anything about its representation in memory.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 如今，由于有许多强大的音频库可用，编写游戏的音频组件变得更加容易。这些库通过处理大部分底层实现细节来减轻开发人员的负担。虽然这是一件好事，但也使得更容易忽视理解声音理论的必要性。例如，我们可以轻松地播放一个声音文件，而不知道它在内存中的表示。
- en: However, even when we are using an audio library, there are still situations
    that will require some theoretical knowledge. For instance, we will often find
    parameters and function names related to the theory, such as the frequency of
    a sound, or the bit depth of an audio buffer. Knowing the meaning of these concepts
    is important to ensure that we are using them properly.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，即使在使用音频库时，仍然会有一些需要一些理论知识的情况。例如，我们经常会发现与理论相关的参数和函数名称，比如声音的频率或音频缓冲区的位深度。了解这些概念的含义对于确保我们正确使用它们是很重要的。
- en: The goal of this chapter is to serve as a light introduction to the concepts
    that we will need the most during the course of this book.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的目标是作为对我们在本书过程中最需要的概念的轻量级介绍。
- en: Sound waves
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 声波
- en: Sound is created from the vibrations of objects. These vibrations produce variations
    in the atmospheric pressure which propagate away from the objects in the form
    of sound waves. Our ears are capable of detecting incoming sound waves and converting
    them into nerve signals that our brain interprets as sound.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 声音是由物体的振动产生的。这些振动产生大气压力的变化，以声波的形式传播离开物体。我们的耳朵能够检测到传入的声波，并将它们转换成我们的大脑解释为声音的神经信号。
- en: One way to visualize sound is to draw a graph of the variations in the atmospheric
    pressure at each moment in time. However, understanding how those graphs relate
    to what we hear can be extremely complex. For that reason, we usually start by
    studying the simplest type of wave, the **sine wave**.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 可视化声音的一种方式是绘制每个时刻大气压力的变化图。然而，理解这些图与我们听到的声音之间的关系可能非常复杂。因此，我们通常从研究最简单的波形——**正弦波**开始。
- en: 'The sine wave is interesting for educational purposes, because we can easily
    identify two of the main properties of sound from it: volume and pitch. Most audio
    libraries allow us to control both of these properties for any sounds that we
    play.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 正弦波对教育目的来说很有趣，因为我们可以从中轻松识别声音的两个主要属性：音量和音调。大多数音频库允许我们控制这些属性，以便我们播放任何声音。
- en: '**Volume**: This property corresponds to how loud or quiet the sound is. It
    depends directly on the amplitude (or the height) of the sound wave, as measured
    on the vertical axis. The main unit of volume is the decibel (dB), but most audio
    libraries use a scale between zero (silence) and one (full volume).![Sound waves](img/9099OT_01_01.jpg)'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**音量**：这个属性对应声音的响亮或安静程度。它直接取决于声波的振幅（或高度），如在垂直轴上测量的那样。音量的主要单位是分贝（dB），但大多数音频库使用从零（静音）到一（最大音量）的刻度。'
- en: '**Pitch**: This property determines how high or low the sound is. It depends
    on the frequency of the sound wave, which is the number of times that it repeats
    every second. The unit of frequency is the hertz (Hz). Two things that you should
    know about frequency are that the human ear can only hear frequencies within the
    20 Hz and 20,000 Hz range, and that most sounds that you hear are actually a combination
    of several different frequencies.![Sound waves](img/9099OT_01_02.jpg)'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**音调**：这个属性决定声音的高低。它取决于声波的频率，即它每秒重复的次数。频率的单位是赫兹（Hz）。关于频率，你应该知道的两件事是，人耳只能听到20赫兹到20,000赫兹范围内的频率，以及大多数你听到的声音实际上是几种不同频率的组合。'
- en: Analog and digital audio
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模拟和数字音频
- en: 'Now that we know what sound is, let us turn our thoughts towards recording
    the sound and storing it on a computer. The first step in this process is to convert
    the sound wave into an electrical signal. When we use a continuous signal to represent
    another signal of a different quantity, we call it an **analog signal** or in
    the case of a sound wave, an **analog audio signal**. You are probably already
    familiar with the devices that perform this conversion:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了声音是什么，让我们把思绪转向录制声音并将其存储在计算机上。这个过程的第一步是将声波转换成电信号。当我们使用一个连续信号来表示另一种不同数量的信号时，我们称之为**模拟信号**，或者在声波的情况下，称之为**模拟音频信号**。你可能已经熟悉执行这种转换的设备：
- en: '**Microphones**: These are devices that convert sound waves into electrical
    signals'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**麦克风**：这些是将声波转换成电信号的设备'
- en: '**Speakers**: These are devices that convert electrical signals into sound
    waves'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**扬声器**：这些是将电信号转换成声波的设备。'
- en: Analog signals have many uses, but most computers cannot work with them directly.
    Computers can only operate on sequences of discrete binary numbers, also known
    as **digital signals**. We need to convert the analog signal recorded by the microphone
    into a digital signal, that is, digital audio, before the computer can understand
    it.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 模拟信号有许多用途，但大多数计算机不能直接处理它们。计算机只能处理离散二进制数字序列，也称为**数字信号**。在计算机能够理解之前，我们需要将麦克风记录的模拟信号转换成数字信号，也就是数字音频。
- en: 'The most common method used to represent analog signals digitally is **pulse
    code modulation** (**PCM**). The general idea of PCM is to sample (or measure)
    the amplitude of the analog signal at fixed time intervals, and store the results
    as an array of numbers (called samples). Since the original data is continuous,
    and numbers on a computer are discrete, samples need to be rounded to the nearest
    available number, in a process known as **quantization**. Samples are usually
    stored as integer numbers, but it is also possible to use floating-point numbers
    as shown in the following example:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 用于数字表示模拟信号的最常用方法是**脉冲编码调制**（**PCM**）。 PCM的一般思想是在固定时间间隔内对模拟信号的幅度进行采样（或测量），并将结果存储为一组数字（称为样本）。由于原始数据是连续的，而计算机上的数字是离散的，因此需要将样本四舍五入到最接近的可用数字，这个过程称为**量化**。样本通常存储为整数，但也可以使用浮点数，如以下示例所示：
- en: '![Analog and digital audio](img/9099OT_01_03.jpg)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![模拟和数字音频](img/9099OT_01_03.jpg)'
- en: 'There are two ways to control the quality of the sampled audio:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 有两种方法可以控制采样音频的质量：
- en: '**Sampling rate**: Also known as the sampling frequency, it is the amount of
    samples taken for each second of audio. According to the Nyquist sampling theorem,
    the sampling rate should be at least twice as high as the highest frequency of
    the analog signal, in order to allow a proper reconstruction. You will usually
    work with values of 44,100 Hz or 48,000 Hz. The following figure compares sampling
    at different rates:![Analog and digital audio](img/9099OT_01_04.jpg)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '** 采样率 **：也称为采样频率，它是每秒音频采取的样本数量。根据奈奎斯特采样定理，采样率应至少是模拟信号的最高频率的两倍，以便进行适当的重建。通常会使用44,100
    Hz或48,000 Hz的值。以下图比较了不同速率的采样：![模拟和数字音频](img/9099OT_01_04.jpg)'
- en: '**Bit depth**: Also known as the resolution, it is the amount of bits used
    to represent a single sample. This controls the number of possible discrete values
    that each sample can take, and needs to be high enough to avoid quantization errors.
    You will usually work with bit depths of 16 bits or 24 bits, stored as integer
    numbers, or 32 bits stored as floating-point numbers. The following figure compares
    sampling at different resolutions:![Analog and digital audio](img/9099OT_01_05.jpg)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '** 位深度 **：也称为分辨率，它是用于表示单个样本的位数。这控制了每个样本可以取的可能离散值的数量，并且需要足够高以避免量化误差。通常会使用16位或24位的位深度，存储为整数，或者32位存储为浮点数。以下图比较了不同分辨率的采样：![模拟和数字音频](img/9099OT_01_05.jpg)'
- en: Multi-channel audio
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多通道音频
- en: Another aspect that we should talk about is that many audio systems have more
    than one output. By sending different audio signals to separate outputs (called
    channels), it is possible to produce the illusion of directionality and space.
    The number of channels on these systems can vary from one (**mono**) or two (**stereo**),
    to several more on surround sound systems.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我们应该谈论的另一个方面是许多音频系统具有多个输出。通过将不同的音频信号发送到单独的输出（称为通道），可以产生方向性和空间的错觉。这些系统上的通道数量可以从一个（**单声道**）或两个（**立体声**）到环绕声系统上的更多通道不等。
- en: 'The PCM format described earlier can store audio for multiple channels at once,
    by interleaving one sample from each channel in the correct order. The following
    figure shows an example of this for a stereo system:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 早些时候描述的PCM格式可以一次存储多个通道的音频，通过以正确顺序交错每个通道的一个样本。以下图显示了立体声系统的一个示例：
- en: '![Multi-channel audio](img/9099OT_01_06.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![多通道音频](img/9099OT_01_06.jpg)'
- en: Besides volume and pitch, which we have examined earlier, there is another property
    that you will usually find in every audio library, called **panning**. Panning
    applies to stereo systems, and allows you to simulate the position of the sound,
    placing it anywhere between the left and the right channels. For positioning in
    configurations with more than two channels, you normally use other advanced features,
    such as 3D sound.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 除了我们之前讨论过的音量和音调之外，还有另一个属性通常会在每个音频库中找到，称为**声像**。声像适用于立体声系统，并允许您模拟声音的位置，将其放置在左右声道之间的任何位置。对于具有两个以上通道的配置中的定位，通常会使用其他高级功能，例如3D声音。
- en: Audio file formats
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 音频文件格式
- en: 'There are so many different file formats for storing audio on a computer that
    it is easy to feel overwhelmed at first. Thankfully, you will only use a couple
    of them in your games, most of the time. Audio file formats usually fall into
    one of the following categories:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机上存储音频的文件格式有很多种，一开始可能会感到不知所措。幸运的是，大部分时间你只会在游戏中使用其中的一些。音频文件格式通常属于以下类别之一：
- en: '**Uncompressed audio files**: These are audio files where the data is stored
    in its original state (normally PCM). This means that their data is already prepared
    for playback without any further processing. The downside is that they take up
    a lot of space on disc (approximately 10 MB for one minute of audio). For example,
    WAV and AIFF.'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '** 未压缩音频文件 **：这些是音频文件，其中数据以其原始状态存储（通常为PCM）。这意味着它们的数据已经准备好进行播放，无需进一步处理。缺点是它们在磁盘上占用大量空间（大约每分钟音频占用10
    MB）。例如，WAV和AIFF。'
- en: '**Lossless compression**: These are audio files where the data is encoded using
    compression algorithms that only perform reversible changes, so that no information
    is permanently lost. These files can be up to half the size of the uncompressed
    formats, but need the computer to decode them before playback. For example, FLAC
    and APE.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '** 无损压缩 **：这些是使用仅执行可逆更改的压缩算法对数据进行编码的音频文件，因此不会永久丢失任何信息。这些文件可以达到未压缩格式的一半大小，但需要计算机在播放之前对其进行解码。例如，FLAC和APE。'
- en: '**Lossy compression**: These are the audio files where the data is encoded
    using compression algorithms where some loss of the information is acceptable.
    These algorithms use heuristics to determine which parts of the data are less
    likely to be audible, in order to discard them. File sizes can be as small as
    10 percent of the original size, although sound quality can suffer considerably
    if the compression is too strong. For example, MP3, WMA, and OGG.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**有损压缩**：这些是音频文件，其中数据使用压缩算法进行编码，其中一些信息的丢失是可以接受的。这些算法使用启发式方法来确定数据的哪些部分不太可能被听到，以便丢弃它们。文件大小可以缩小到原始大小的10％，尽管如果压缩过于强烈，声音质量可能会受到相当大的影响。例如，MP3，WMA和OGG。'
- en: '**Sequenced music**: There are some formats that do not fit into any of the
    earlier mentioned categories. For example, MIDI files only store information about
    how the music should be played, but do not contain any sound data, leaving it
    to the computers to decide how they should be interpreted. For this reason, they
    are extremely small, but sound quality is limited, and varies from system to system.
    There are also hybrid formats such as MOD files (also known as module or tracker
    files), which are in many ways similar to MIDI files, but also contain any sound
    data that is required to play them (known as instruments).'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**序列音乐**：有一些格式不适合前面提到的任何类别。例如，MIDI文件只存储有关音乐应如何播放的信息，但不包含任何声音数据，将其留给计算机决定如何解释它们。因此，它们非常小，但声音质量有限，并且因系统而异。还有混合格式，如MOD文件（也称为模块或跟踪器文件），在许多方面类似于MIDI文件，但也包含播放它们所需的任何声音数据（称为乐器）。'
- en: Be aware that despite its popularity, the MP3 is a patented format, and you
    cannot use it commercially without paying royalties (refer to [http://mp3licensing.com/](http://mp3licensing.com/)
    for more information). For this book, we will be using OGG files for long sounds,
    and WAV files for small sound effects.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，尽管MP3很受欢迎，但它是一种受专利保护的格式，您不能在未支付版税的情况下进行商业使用（有关更多信息，请参阅[http://mp3licensing.com/](http://mp3licensing.com/)）。对于本书，我们将使用OGG文件进行长音效，使用WAV文件进行小音效。
- en: Summary
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we have seen that sound is a series of variations in atmospheric
    pressure, travelling in the form of sound waves. We also saw that sound waves
    have properties such as amplitude and frequency, which control how loud or high
    it is and that you can represent a sound wave using electrical signals (analog
    audio) and a series of numbers (digital audio). We learned that when converting
    an analog signal to a digital signal, you need to control the sampling rate and
    the bit depth. Finally, we saw that many audio systems have more than one output
    and that there are many different types of audio file formats.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到声音是大气压力变化的一系列，以声波的形式传播。我们还看到声波具有振幅和频率等属性，控制着声音的响度和高度，并且您可以使用电信号（模拟音频）和一系列数字（数字音频）来表示声波。我们了解到，将模拟信号转换为数字信号时，需要控制采样率和位深度。最后，我们看到许多音频系统具有多个输出，并且有许多不同类型的音频文件格式。
