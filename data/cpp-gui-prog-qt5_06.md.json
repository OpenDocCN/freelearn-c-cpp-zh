["```cpp\nQT += core gui webengine webenginewidgets \n```", "```cpp\n#ifndef MAINWINDOW_H \n#define MAINWINDOW_H \n\n#include <QMainWindow> \n#include <QWebEngineView> \n```", "```cpp\nprivate: \n   Ui::MainWindow *ui; \n QWebEngineView* webview; \n```", "```cpp\nMainWindow::MainWindow(QWidget *parent) : \n   QMainWindow(parent), \n   ui(new Ui::MainWindow) \n{ \n   ui->setupUi(this); \n\n   webview = new QWebEngineView(ui->centralWidget); \n   webview->load(QUrl(\"http://www.kloena.com\")); \n} \n```", "```cpp\nvoid MainWindow::on_backButton_clicked() \n{ \n   webview->back(); \n} \n\nvoid MainWindow::on_forwardButton_clicked() \n{ \n   webview->forward(); \n} \n\nvoid MainWindow::on_refreshButton_clicked() \n{ \n   webview->reload(); \n} \n\nvoid MainWindow::on_goButton_clicked() \n{ \n   loadPage(); \n} \n```", "```cpp\nvoid MainWindow::loadPage() \n{ \n   QString url = ui->addressInput->text(); \n   if (!url.startsWith(\"http://\") && !url.startsWith(\"https://\")) \n   { \n         url = \"http://\" + url; \n   } \n   ui->addressInput->setText(url); \n   webview->load(QUrl(url)); \n} \n```", "```cpp\nMainWindow::MainWindow(QWidget *parent) : \n   QMainWindow(parent), \n   ui(new Ui::MainWindow) \n{ \n   ui->setupUi(this); \n\n webview = new QWebEngineView(ui->webviewFrame); \n   loadPage(); \n} \n```", "```cpp\nvoid MainWindow::on_addressInput_returnPressed() \n{ \n   loadPage(); \n} \n```", "```cpp\npublic: \n   explicit MainWindow(QWidget *parent = 0); \n   ~MainWindow(); \n void paintEvent(QPaintEvent *event); \n```", "```cpp\nvoid MainWindow::paintEvent(QPaintEvent *event) \n{ \n   QMainWindow::paintEvent(event); \n   webview->resize(ui->webviewFrame->size()); \n} \n```", "```cpp\nprivate slots: \n   void on_backButton_clicked(); \n   void on_forwardButton_clicked(); \n   void on_refreshButton_clicked(); \n   void on_goButton_clicked(); \n   void on_addressInput_returnPressed(); \n   void webviewLoading(int progress); \n   void webviewLoaded(); \n```", "```cpp\nvoid MainWindow::webviewLoading(int progress) \n{ \n   ui->progressBar->setValue(progress); \n} \n\nvoid MainWindow::webviewLoaded() \n{ \n   ui->addressInput->setText(webview->url().toString()); \n} \n```", "```cpp\n#include <QWebEnginePage> \n```", "```cpp\nQWebEngineHistory* history = QWebEnginePage::history(); \n```", "```cpp\nQWebEngineProfile::defaultProfile()->clearAllVisitedLinks();\n```", "```cpp\n#include <QWebEngineProfile> \n```", "```cpp\nQWebEngineProfile::defaultProfile()->setPersistentCookiesPolicy(QWebEngineProfile::ForcePersistentCookies);\n```", "```cpp\nQWebEngineProfile::defaultProfile()->setPersistentCookiesPolicy(QWebEngineProfile::NoPersistentCookies); \n```", "```cpp\nQWebEngineProfile::defaultProfile()->setPersistentStoragePath(\"your folder\");  \n```", "```cpp\nQWebEngineProfile::defaultProfile()->cookieStore()->deleteAllCookies(); \n```", "```cpp\nQWebEngineProfile::defaultProfile()->setHttpCacheType(QWebEngineProfile::MemoryHttpCache); \n```", "```cpp\nQWebEngineProfile::defaultProfile()->setHttpCacheType(QWebEngineProfile::NoCache); \n```", "```cpp\nQWebEngineProfile::defaultProfile()->setCachePath(\"your folder\"); \n```", "```cpp\nQWebEngineProfile::defaultProfile()->clearHttpCache(); \n```", "```cpp\n<!DOCTYPE html><html> \n   <head> \n      <title>Page Title</title> \n   </head> \n   <body> \n      <p>Hello World!</p> \n   </body> \n</html> \n```", "```cpp\nwebview->load(QUrl(\"qrc:///html/test.html\")); \n```", "```cpp\n<!DOCTYPE html> \n<html> \n   <head> \n         <title>Page Title</title> \n         <script> \n               function hello() \n               { \n                  document.getElementById(\"myText\").innerHTML =       \n                  \"Something happened!\"; \n                  alert(\"Good day sir, how are you?\"); \n               } \n         </script> \n   </head> \n   <body> \n         <p id=\"myText\">Hello World!</p> \n   </body> \n</html> \n```", "```cpp\nvoid MainWindow::on_pushButton_clicked() \n{ \n   webview->page()->runJavaScript(\"hello();\"); \n} \n```", "```cpp\nQT += core gui webengine webenginewidgets webchannel \n```", "```cpp\n#include <QMainWindow> \n#include <QWebEngineView> \n#include <QWebChannel> \n```", "```cpp\nQ_INVOKABLE void doSomething(); \n```", "```cpp\nQWebChannel* channel = new QWebChannel(this); \nchannel->registerObject(\"mainwindow\", this); \nwebview->page()->setWebChannel(channel); \n```", "```cpp\nvoid MainWindow::doSomething() \n{ \n   ui->label->setText(\"This text has been changed by javascript!\"); \n} \n```", "```cpp\n<script type=\"text/javascript\" src=\"img/qwebchannel.js\"></script> \n```", "```cpp\nvar mainwindow; \nwindow.onload = function() \n{ \n   new QWebChannel(Qt.webChannelTransport,function(channel) \n   { \n         mainwindow = channel.objects.mainwindow; \n   }); \n} \n```", "```cpp\nfunction myFunction() \n{ \n   mainwindow.doSomething(); \n} \n```", "```cpp\n<body> \n   <p id=\"myText\">Hello World!</p> \n   <button onclick=\"myFunction()\">Do Something</button> \n</body> \n```"]