- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: In an era where higher-level languages dominate the technological landscape,
    C++ remains a cornerstone, driving a vast array of systems from bare-metal embedded
    platforms to distributed, cloud-native infrastructures. Its prowess lies in its
    ability to deliver performance-sensitive solutions while adeptly handling complex
    data structures. Over the past two decades, C++ has undergone significant evolution,
    continually adapting to meet the demands of modern computing.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在高级语言主导技术景观的时代，C++ 仍然是一个基石，推动着从裸机嵌入式平台到分布式、云原生基础设施的广泛系统。它的优势在于能够提供性能敏感的解决方案，同时熟练处理复杂的数据结构。在过去二十年中，C++
    经历了显著的发展，不断适应现代计算的需求。
- en: This book serves as a comprehensive guide for those seeking to master the art
    of writing clean, efficient C++ code. It delves into the implementation of SOLID
    principles and the refactoring of legacy code using the latest features and methodologies
    of C++. Readers will gain a deep understanding of the language, the standard library,
    the extensive Boost library collection, and Microsoft’s Guidelines Support Library.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书为那些寻求掌握编写清晰、高效 C++ 代码技艺的人提供了一本全面的指南。它深入探讨了 SOLID 原则的实施和利用 C++ 最新特性和方法对遗留代码进行重构。读者将深入理解语言、标准库、广泛的
    Boost 库集合以及微软的指南支持库。
- en: Starting with the fundamentals, the book covers the core elements essential
    for writing clean code, with a strong emphasis on object-oriented programming
    in C++. It provides insights into the design principles of software testing, illustrated
    with examples utilizing popular unit testing frameworks like Google Test. Furthermore,
    the book explores the application of automated tools for both static and dynamic
    code analysis, featuring the powerful capabilities of Clang Tools.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 从基础知识开始，本书涵盖了编写清晰代码所必需的核心元素，特别强调使用 C++ 进行面向对象编程。它通过使用 Google Test 等流行的单元测试框架的示例，深入探讨了软件测试的设计原则。此外，本书还探讨了用于静态和动态代码分析的自动化工具的应用，展示了
    Clang Tools 的强大功能。
- en: By journey’s end, readers will be equipped with the knowledge and skills to
    apply industry-approved coding practices, enabling them to craft clean, sustainable,
    and readable C++ code for real-world applications.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 到旅程结束时，读者将具备应用行业认可的编码实践的知识和技能，使他们能够为现实应用编写清晰、可持续和可读的 C++ 代码。
- en: Who this book is for
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向的对象
- en: This book is designed for a wide range of professionals in the C++ community.
    If you are a C++ engineer looking to refine your skills and write more elegant,
    efficient code, this book will provide you with the insights and techniques needed
    to elevate your programming practice. It is also an excellent resource for those
    tasked with refactoring and improving existing codebases, offering practical advice
    and strategies to make this process more manageable and effective.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在为 C++ 社区中的广泛专业人士提供帮助。如果你是一位希望提升技能并编写更优雅、高效代码的 C++ 工程师，本书将为你提供提升编程实践所需的知识和技巧。它也是那些负责重构和改进现有代码库的人的绝佳资源，提供了使这一过程更易于管理和有效的实用建议和策略。
- en: Additionally, this book is an invaluable guide for tech and team leaders who
    aim to enhance their software development processes. Whether you are leading a
    small team or managing a larger development project, you will find useful tips
    and methodologies to make your workflows smoother and more efficient. By implementing
    the best practices outlined in this book, you can foster a more productive and
    harmonious development environment, ultimately leading to higher-quality software
    and more successful projects.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，本书还是技术和管理领导者的宝贵指南，他们旨在提升软件开发流程。无论你是领导一个小团队还是管理一个更大的开发项目，你都会找到有用的提示和方法，使你的工作流程更加顺畅和高效。通过实施本书中概述的最佳实践，你可以营造一个更富有成效和和谐的开发环境，最终导致软件质量更高和项目更成功。
- en: What this book covers
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[*Chapter 1*](B19606_01.xhtml#_idTextAnchor013), *Coding Standards in C++*,
    explores the world of clean code and its crucial role in successful software projects.
    We discuss technical debt and how poor-quality code contributes to its accumulation.
    The chapter also covers the importance of code formatting and documentation, emphasizing
    their role in maintaining a manageable and effective codebase. We introduce common
    conventions and best practices used in the C++ community, highlighting the necessity
    of clean code and proper documentation for any project.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*](B19606_01.xhtml#_idTextAnchor013), *C++编码标准*，探讨了干净代码的世界及其在成功软件项目中的关键作用。我们讨论了技术债务以及低质量代码如何导致其积累。本章还涵盖了代码格式化和文档的重要性，强调了它们在维护可管理和有效代码库中的作用。我们介绍了C++社区中使用的常见约定和最佳实践，强调了干净代码和适当文档对任何项目的必要性。'
- en: '[*Chapter 2*](B19606_02.xhtml#_idTextAnchor026), *Main Software Development
    Principles*, covers key software design principles for creating well-structured
    and maintainable code. We discuss the SOLID principles—Single Responsibility,
    Open-Closed, Liskov Substitution, Interface Segregation, and Dependency Inversion—which
    help developers write code that is easy to understand, test, and modify. We also
    highlight the importance of levels of abstraction, the concepts of side effects
    and mutability, and their impact on software quality. By applying these principles,
    developers can create more robust, reliable, and scalable software.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*](B19606_02.xhtml#_idTextAnchor026), *主要软件开发原则*，涵盖了创建结构良好且易于维护的代码的关键软件设计原则。我们讨论了SOLID原则——单一职责、开闭原则、里氏替换原则、接口隔离原则和依赖倒置原则，这些原则有助于开发者编写易于理解、测试和修改的代码。我们还强调了抽象层次的重要性、副作用和可变性的概念及其对软件质量的影响。通过应用这些原则，开发者可以创建更健壮、可靠和可扩展的软件。'
- en: '[*Chapter 3*](B19606_03.xhtml#_idTextAnchor043), *Causes of Bad Code*, identifies
    the key factors leading to subpar code in C++. These include the pressure to deliver
    quickly, the flexibility of C++ allowing multiple solutions to the same problem,
    personal coding styles, and a lack of knowledge of modern C++ features. Understanding
    these causes helps developers avoid common pitfalls and improve existing codebases
    effectively.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*](B19606_03.xhtml#_idTextAnchor043), *糟糕代码的原因*，确定了导致C++代码质量不佳的关键因素。这些因素包括快速交付的压力、C++允许对同一问题有多个解决方案的灵活性、个人编码风格以及缺乏对现代C++特性的了解。了解这些原因有助于开发者避免常见的陷阱，并有效地改进现有的代码库。'
- en: '[*Chapter 4*](B19606_04.xhtml#_idTextAnchor068), *Identifying Ideal Candidates
    for Rewriting - Patterns and Anti-Patterns*, focuses on identifying ideal candidates
    for refactoring in C++ projects. We will explore factors that make code segments
    suitable for refactoring, such as technical debt, complexity, and poor readability.
    We will also discuss common patterns and anti-patterns, providing guidelines and
    techniques for improving code structure, readability, and maintainability without
    altering its behavior. This chapter aims to equip developers with the knowledge
    to enhance the quality and robustness of their C++ codebases effectively.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*](B19606_04.xhtml#_idTextAnchor068), *识别适合重写的理想候选者 - 模式与反模式*，专注于在C++项目中识别适合重构的理想候选者。我们将探讨使代码段适合重构的因素，如技术债务、复杂性和可读性差。我们还将讨论常见的模式和反模式，提供改进代码结构、可读性和可维护性的指南和技术，而不改变其行为。本章旨在使开发者具备有效提升其C++代码库质量和健壮性的知识。'
- en: '[*Chapter 5*](B19606_05.xhtml#_idTextAnchor076), *The Significance of Naming*,
    highlights the crucial role of naming conventions in C++ programming. Proper names
    for variables, functions, and classes enhance code readability and maintainability.
    We discuss best practices for naming, the impact of poor naming on code efficiency,
    and the importance of consistent coding conventions. By understanding and applying
    these principles, you will write clearer and more effective code.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](B19606_05.xhtml#_idTextAnchor076), *命名的重要性*，强调了在C++编程中命名约定的关键作用。为变量、函数和类选择合适的名称可以增强代码的可读性和可维护性。我们讨论了命名的最佳实践、不良命名对代码效率的影响以及一致编码规范的重要性。通过理解和应用这些原则，你将编写更清晰、更有效的代码。'
- en: '[*Chapter 6*](B19606_06.xhtml#_idTextAnchor092), *Utilizing a Rich Static Type
    System in C++*, explores the powerful static type system in C++, emphasizing its
    role in writing robust, efficient, and maintainable code. We discuss advanced
    techniques like using the `<chrono>` library for time durations, `not_null` wrappers,
    and `std::optional` for safer pointer handling. Additionally, we look at external
    libraries like Boost for enhancing type safety. Through real-world examples, we
    demonstrate how to leverage these tools to harness the full potential of C++’s
    type system, resulting in more expressive and error-resistant code.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*](B19606_06.xhtml#_idTextAnchor092), *在C++中利用丰富的静态类型系统*，探讨了C++中强大的静态类型系统，强调其在编写健壮、高效和可维护代码中的作用。我们讨论了高级技术，如使用`<chrono>`库处理时间长度、`not_null`包装器和`std::optional`进行更安全的指针处理。此外，我们还探讨了如Boost等外部库，以增强类型安全性。通过实际示例，我们展示了如何利用这些工具充分发挥C++类型系统的潜力，从而实现更具表达性和错误抵抗力的代码。'
- en: '[*Chapter 7*](B19606_07.xhtml#_idTextAnchor113), *Classes, Objects, and OOP
    in C++*, focuses on advanced topics in classes, objects, and object-oriented programming
    (OOP) in C++. We cover class design, method implementation, inheritance, and template
    usage. Key topics include optimizing class encapsulation, advanced method practices,
    evaluating inheritance versus composition, and sophisticated template techniques.
    Practical examples illustrate these concepts, helping you create robust and scalable
    software architectures.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](B19606_07.xhtml#_idTextAnchor113), *C++中的类、对象和面向对象编程*，专注于C++中类、对象和面向对象编程（OOP）的高级主题。我们涵盖了类设计、方法实现、继承和模板使用。关键主题包括优化类封装、高级方法实践、评估继承与组合、以及复杂的模板技术。实际示例说明了这些概念，帮助您创建健壮和可扩展的软件架构。'
- en: '[*Chapter 8*](B19606_08.xhtml#_idTextAnchor146), *Designing and Developing
    APIs in C++*, explores the principles and practices for designing maintainable
    APIs in C++. We discuss the importance of clarity, consistency, and extensibility
    in API design. Through concrete examples, we illustrate best practices that help
    create intuitive, easy-to-use, and robust APIs. By applying these principles,
    you will develop APIs that meet user needs and remain adaptable over time, ensuring
    the longevity and success of your software libraries.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B19606_08.xhtml#_idTextAnchor146), *在C++中设计和开发API*，探讨了设计可维护API的原理和实践。我们讨论了在API设计中清晰性、一致性和可扩展性的重要性。通过具体示例，我们说明了有助于创建直观、易于使用和健壮API的最佳实践。通过应用这些原则，您将开发出满足用户需求且随时间适应的API，确保您的软件库的长期成功和成功。'
- en: '[*Chapter 9*](B19606_09.xhtml#_idTextAnchor157), *Code Formatting and Naming
    Conventions*, explore the critical role of code formatting and naming conventions
    in creating robust and maintainable software. While these topics may seem minor,
    they greatly enhance code readability, simplify maintenance, and foster effective
    team collaboration, especially in complex languages like C++. We delve into the
    importance of code formatting and provide practical knowledge on using tools like
    Clang-Format and editor-specific plugins to implement consistent formatting. By
    the end of this chapter, you’ll understand the significance of these practices
    and how to apply them effectively in your C++ projects.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B19606_09.xhtml#_idTextAnchor157), *代码格式化和命名约定*，探讨了代码格式化和命名约定在创建健壮和可维护软件中的关键作用。虽然这些主题可能看似微不足道，但它们极大地提高了代码的可读性，简化了维护，并促进了在复杂语言（如C++）中的有效团队合作。我们深入探讨了代码格式化的重要性，并提供了使用Clang-Format和编辑器特定插件等工具实现一致格式化的实用知识。到本章结束时，您将了解这些实践的重要性以及如何在您的C++项目中有效地应用它们。'
- en: '[*Chapter 10*](B19606_10.xhtml#_idTextAnchor184), *Introduction to Static Analysis
    in C++*, discusses the crucial role of static analysis in ensuring code quality
    and reliability in C++ development. We discuss how static analysis identifies
    bugs quickly and cost-effectively, making it a key component of software quality
    assurance. We delve into popular tools like Clang-Tidy, PVS-Studio, and SonarQube,
    and guide integrating static analysis into your development workflow.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B19606_10.xhtml#_idTextAnchor184), *C++中静态分析简介*，讨论了静态分析在确保C++开发中代码质量和可靠性中的关键作用。我们讨论了静态分析如何快速且经济地识别错误，使其成为软件质量保证的关键组成部分。我们深入探讨了Clang-Tidy、PVS-Studio和SonarQube等流行工具，并指导如何将静态分析集成到您的开发工作流程中。'
- en: '[*Chapter 11*](B19606_11.xhtml#_idTextAnchor205), *Dynamic Analysis*, explores
    dynamic code analysis in C++, focusing on tools that scrutinize program behavior
    during execution to detect issues like memory leaks, race conditions, and runtime
    errors. We cover compiler-based sanitizers such as Address Sanitizer (ASan), Thread
    Sanitizer (TSan), and Undefined Behavior Sanitizer (UBSan), along with Valgrind
    for thorough memory debugging. By understanding and integrating these tools into
    your development workflow, you can ensure cleaner, more efficient, and reliable
    C++ code.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第11章*](B19606_11.xhtml#_idTextAnchor205)，*动态分析*，探讨了C++中的动态代码分析，重点关注在程序执行过程中审查程序行为以检测内存泄漏、竞态条件和运行时错误等问题的工具。我们涵盖了基于编译器的清理器，如地址清理器（ASan）、线程清理器（TSan）和未定义行为清理器（UBSan），以及用于彻底内存调试的Valgrind。通过理解和将这些工具集成到您的开发工作流程中，您可以确保编写更干净、更高效、更可靠的C++代码。'
- en: '[*Chapter 12*](B19606_12.xhtml#_idTextAnchor225), *Testing*, emphasizes the
    crucial role of software testing in ensuring quality, reliability, and maintainability.
    We cover various testing methodologies, starting with unit testing to validate
    individual components, followed by integration testing to examine the interaction
    between integrated units. We then move to system testing for a comprehensive assessment
    of the entire software system and conclude with acceptance testing to ensure the
    software meets end-user requirements. By understanding these methodologies, you
    will grasp how testing underpins the development of robust and user-centric software.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第12章*](B19606_12.xhtml#_idTextAnchor225)，*测试*，强调了软件测试在确保质量、可靠性和可维护性中的关键作用。我们涵盖了各种测试方法，从单元测试开始以验证单个组件，然后是集成测试以检查集成单元之间的交互。接着我们转向系统测试，对整个软件系统进行全面评估，最后以验收测试来确保软件满足最终用户的需求。通过理解这些方法，您将掌握测试如何支撑稳健和以用户为中心的软件开发。'
- en: '[*Chapter 13*](B19606_13.xhtml#_idTextAnchor260), *Modern Approach to Managing
    Third Parties*, addresses the critical role of third-party libraries in C++ development.
    We explore the basics of third-party library management, including the impact
    of static versus dynamic compilation on deployment. Given C++’s lack of a standardized
    library ecosystem, we examine tools like vcpkg and Conan to understand their advantages
    in integrating and managing libraries. Additionally, we discuss the use of Docker
    for creating consistent and reproducible development environments. By the end
    of this chapter, you’ll be equipped to choose and manage third-party libraries
    effectively, enhancing your development workflow and software quality.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第13章*](B19606_13.xhtml#_idTextAnchor260)，*管理第三方库的现代方法*，讨论了第三方库在C++开发中的关键作用。我们探讨了第三方库管理的基础知识，包括静态编译与动态编译对部署的影响。鉴于C++缺乏标准化的库生态系统，我们检查了vcpkg和Conan等工具，以了解它们在集成和管理库方面的优势。此外，我们还讨论了使用Docker创建一致和可重复的开发环境。到本章结束时，您将能够有效地选择和管理第三方库，从而提高您的开发工作流程和软件质量。'
- en: '[*Chapter 14*](B19606_14.xhtml#_idTextAnchor282), *Version Control*, highlights
    the importance of maintaining a clean commit history in software development.
    We discuss best practices for clear and purposeful commit messages and introduce
    tools like Git, Conventional Commit Specification, and commit linting. By following
    these principles, developers can enhance communication, collaboration, and project
    maintainability.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第14章*](B19606_14.xhtml#_idTextAnchor282)，*版本控制*，强调了在软件开发中维护干净的提交历史的重要性。我们讨论了清晰和有目的的提交信息的最佳实践，并介绍了Git、常规提交规范和提交linting等工具。通过遵循这些原则，开发者可以增强沟通、协作和项目的可维护性。'
- en: '[*Chapter 15*](B19606_15.xhtml#_idTextAnchor309), *Code Review*, explores the
    critical role of code review in ensuring robust and maintainable C++ code. While
    automated tools and methodologies provide significant benefits, they are not foolproof.
    Code reviews, conducted by human reviewers, help catch errors that automated processes
    may miss and ensure adherence to standards. We discuss strategies and practical
    guidelines for effective code reviews, emphasizing their role in preventing bugs,
    enhancing code quality, and fostering a collaborative culture of learning and
    accountability.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第15章*](B19606_15.xhtml#_idTextAnchor309)，*代码审查*，探讨了代码审查在确保稳健和可维护的C++代码中的关键作用。虽然自动化工具和方法提供了显著的好处，但它们并非万无一失。由人工审查员进行的代码审查有助于捕捉自动化流程可能遗漏的错误，并确保遵守标准。我们讨论了有效代码审查的策略和实用指南，强调其在预防错误、提高代码质量和培养学习与责任感的协作文化中的作用。'
- en: To get the most out of this book
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 要充分利用这本书
- en: To get the most out of this book, you should have a solid understanding of the
    basics of C++. Familiarity with build systems such as Make and CMake will be beneficial.
    Additionally, having basic knowledge of Docker and terminal skills can enhance
    your learning experience, although these are optional.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 要充分利用这本书，你应该对C++的基础知识有扎实的理解。熟悉如Make和CMake等构建系统将有所帮助。此外，具备基本的Docker和终端技能可以增强你的学习体验，尽管这些是可选的。
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您正在使用这本书的数字版，我们建议您自己输入代码或从书的GitHub仓库（下一节中提供链接）获取代码。这样做将帮助您避免与代码的复制和粘贴相关的任何潜在错误。**'
- en: Download the example code files
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Refactoring-with-C-](https://github.com/PacktPublishing/Refactoring-with-C-).
    If there’s an update to the code, it will be updated in the GitHub repository.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub下载本书的示例代码文件[https://github.com/PacktPublishing/Refactoring-with-C-](https://github.com/PacktPublishing/Refactoring-with-C-）。如果代码有更新，它将在GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他来自我们丰富的图书和视频目录的代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。查看它们吧！
- en: Conventions used
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “Mount the downloaded `WebStorm-10*.dmg` disk image
    file as another disk in your system.”'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称。以下是一个示例：“将下载的`WebStorm-10*.dmg`磁盘映像文件作为系统中的另一个磁盘挂载。”'
- en: 'A block of code is set as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块是这样设置的：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望您注意代码块中的特定部分时，相关的行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都写作如下：
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For instance, words in menus or dialog boxes appear in **bold**. Here is an example:
    “Select **System info** from the **Administration** panel.”'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或您在屏幕上看到的单词。例如，菜单或对话框中的单词以粗体显示。以下是一个示例：“从**管理**面板中选择**系统信息**。”'
- en: Tips or important notes
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士或重要注意事项
- en: Appear like this.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来是这样的。
- en: Get in touch
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们欢迎读者提供反馈。
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：如果您对本书的任何方面有疑问，请通过[customercare@packtpub.com](mailto:customercare@packtpub.com)给我们发邮件，并在邮件主题中提及书名。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误**：尽管我们已经尽一切努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，我们将不胜感激，如果您能向我们报告这一点。请访问[www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)并填写表格。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**：如果您在互联网上以任何形式遇到我们作品的非法副本，如果您能提供位置地址或网站名称，我们将不胜感激。请通过[版权@packt.com](mailto:copyright@packt.com)与我们联系，并提供材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**：如果您在某个主题上具有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问[authors.packtpub.com](http://authors.packtpub.com)。'
- en: Share Your Thoughts
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享您的想法
- en: Once you’ve read *Refactoring with C++*, we’d love to hear your thoughts! Please
    [click here to go straight to the Amazon review page](https://packt.link/r/1837633770)
    for this book and share your feedback.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您阅读了《使用C++重构》，我们非常乐意听到您的想法！请[点击此处直接转到此书的亚马逊评论页面](https://packt.link/r/1837633770)并分享您的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 您的评论对我们和科技社区非常重要，并将帮助我们确保我们提供高质量的内容。
- en: Download a free PDF copy of this book
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载此书的免费PDF副本
- en: Thanks for purchasing this book!
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您购买此书！
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 您喜欢在路上阅读，但无法携带您的印刷书籍到处走吗？
- en: Is your eBook purchase not compatible with the device of your choice?
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 您的电子书购买是否与您选择的设备不兼容？
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 别担心，现在每购买一本Packt图书，您都可以免费获得该书的DRM免费PDF版本。
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何地方、任何设备上阅读。直接从您最喜欢的技术书籍中搜索、复制和粘贴代码到您的应用程序中。
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 优惠不仅限于此，您还可以获得独家折扣、时事通讯和每日免费内容的每日电子邮件访问权限
- en: 'Follow these simple steps to get the benefits:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下简单步骤获取这些好处：
- en: Scan the QR code or visit the link below
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描下方二维码或访问以下链接
- en: '![](img/B19606_QR_Free_PDF.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19606_QR_Free_PDF.jpg)'
- en: '[https://packt.link/free-ebook/9781837633777](https://packt.link/free-ebook/9781837633777)'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/free-ebook/9781837633777](https://packt.link/free-ebook/9781837633777)'
- en: Submit your proof of purchase
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交您的购买证明
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  id: totrans-63
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这样！我们将直接将您的免费PDF和其他好处发送到您的电子邮件中
