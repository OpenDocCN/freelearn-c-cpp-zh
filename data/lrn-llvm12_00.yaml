- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Constructing a compiler is a complex and fascinating task. The LLVM project
    provides reusable components for your compiler. The LLVM core libraries implement
    a world-class optimizing code generator, which translates a source language-independent
    intermediate representation of machine code for all popular CPU architectures.
    The compilers for many programming languages already take advantage of LLVM technology.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 构建编译器是一项复杂而迷人的任务。LLVM项目为您的编译器提供了可重用的组件。LLVM核心库实现了世界一流的优化代码生成器，为所有流行的CPU架构转换了与源语言无关的中间表示的机器代码。许多编程语言的编译器已经利用了LLVM技术。
- en: This book teaches you how to implement your own compiler and how to use LLVM
    to achieve it. You will learn how the frontend of a compiler turns source code
    into an abstract syntax tree, and how to generate **intermediate representation**
    (**IR**) from it. Adding an optimization pipeline to your compiler, you can compile
    the IR to performant machine code.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书教会您如何实现自己的编译器，以及如何使用LLVM来实现。您将学习编译器的前端如何将源代码转换为抽象语法树，以及如何从中生成中间表示（IR）。通过向编译器添加优化管道，您可以将IR编译为高性能的机器代码。
- en: The LLVM framework can be extended in several ways, and you will learn how to
    add new passes, new machine instructions, and even a completely new backend to
    LLVM. Advanced topics such as compiling for a different CPU architecture and extending
    clang and the clang static analyzer with your own plugins and checkers are also
    covered. This book follows a practical approach and is packed with example source
    code, which makes it easy to apply the knowledge gained in your own projects.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: LLVM框架可以通过多种方式进行扩展，您将学习如何向LLVM添加新的pass、新的机器指令，甚至是一个全新的后端。高级主题，如为不同的CPU架构进行编译，以及使用自己的插件和检查器扩展clang和clang静态分析器也会被涵盖。本书采用实用的方法，包含大量示例源代码，使得在自己的项目中应用所学知识变得容易。
- en: Who this book is for
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书适合对象
- en: This book is for compiler developers, enthusiasts, and engineers who are new
    to LLVM and are interested in learning about the LLVM framework. It is also useful
    for C++ software engineers looking to use compiler-based tools for code analysis
    and improvement, as well as casual users of LLVM libraries who want to gain more
    knowledge of LLVM essentials. Intermediate-level experience with C++ programming
    is mandatory to understand the concepts covered in this book more effectively.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适用于编译器开发人员、爱好者和工程师，他们对LLVM还不熟悉，有兴趣了解LLVM框架。对于希望使用基于编译器的工具进行代码分析和改进的C++软件工程师，以及希望更多了解LLVM基础知识的LLVM库的普通用户也很有用。理解本书所涵盖概念需要具备中级水平的C++编程经验。
- en: What this book covers
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[*Chapter 1*](B15647_01_ePub_RK.xhtml#_idTextAnchor015), *Installing LLVM*,
    explains how to set up and use your development environment. At the end of the
    chapter, you will have compiled the LLVM libraries and learned how to customize
    the build process.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*]，*安装LLVM*，解释了如何设置和使用开发环境。在本章结束时，您将已经编译了LLVM库，并学会了如何自定义构建过程。'
- en: '[*Chapter 2*](B15647_02_ePub_RK.xhtml#_idTextAnchor032), *Touring the LLVM
    Source*, introduces you to the various LLVM projects and discusses the common
    directory layout shared by all projects. You will create your first project using
    the LLVM core libraries, and you will also compile it for a different CPU architecture.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*]，*LLVM源码之旅*，介绍了各种LLVM项目，并讨论了所有项目共享的常见目录布局。您将使用LLVM核心库创建您的第一个项目，并为不同的CPU架构进行编译。'
- en: '[*Chapter 3*](B15647_03_ePub_RK.xhtml#_idTextAnchor048), *The Structure of
    a Compiler*, gives you an overview of the components of a compiler. At the end
    of the chapter, you will have implemented your first compiler producing LLVM IR.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*]，*编译器的结构*，为您概述了编译器的组件。在本章结束时，您将已经实现了生成LLVM IR的第一个编译器。'
- en: '[*Chapter 4*](B15647_04_ePub_RK.xhtml#_idTextAnchor066), *Turning the Source
    File into an Abstract Syntax Tree*, teaches you in detail how to implement the
    frontend of a compiler. You will create your own frontend for a small programming
    language, ending with the construction of an abstract syntax tree.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*]，*将源文件转换为抽象语法树*，详细教您如何实现编译器的前端。您将为一种小型编程语言创建自己的前端，最终构建一个抽象语法树。'
- en: '[*Chapter 5*](B15647_05_ePub_RK.xhtml#_idTextAnchor079), *Basics of IR Generation*,
    shows you how to generate LLVM IR from an abstract syntax tree. At the end of
    the chapter, you will have implemented a compiler for the example language, emitting
    assembly text or object code files as a result.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*]，*IR生成基础*，向您展示如何从抽象语法树生成LLVM IR。在本章结束时，您将已经实现了一个示例语言的编译器，生成汇编文本或目标代码文件作为结果。'
- en: '[*Chapter 6*](B15647_06_ePub_RK.xhtml#_idTextAnchor102), *IR Generation for
    High-Level Language Constructs*, illustrates how you translate source language
    features commonly found in high-level programming languages to LLVM IR. You will
    learn about the translation of aggregate data types, the various options to implement
    class inheritance and virtual functions, and how to comply with the application
    binary interface of your system.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*]，*高级语言结构的IR生成*，说明了如何将高级编程语言中常见的源语言特性转换为LLVM IR。您将学习如何翻译聚合数据类型，实现类继承和虚函数的各种选项，以及如何遵守系统的应用二进制接口。'
- en: '[*Chapter 7*](B15647_07_ePub_RK.xhtml#_idTextAnchor111), *Advanced IR Generation*,
    shows you how to generate LLVM IR for exception-handling statements in the source
    language. You will also learn how to add metadata for type-based alias analysis,
    and how to add debug information to the generated LLVM IR, and you will extend
    your compiler-generated metadata.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*]，*高级IR生成*，向您展示如何为源语言中的异常处理语句生成LLVM IR。您还将学习如何为基于类型的别名分析添加元数据，以及如何向生成的LLVM
    IR添加调试信息，并扩展您的编译器生成的元数据。'
- en: '[*Chapter 8*](B15647_08_ePub_RK.xhtml#_idTextAnchor126), *Optimizing IR*, explains
    the LLVM pass manager. You will implement your own pass, both as part of LLVM
    and as a plugin, and you will learn how to add your new pass to the optimizing
    pass pipeline.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B15647_08_ePub_RK.xhtml#_idTextAnchor126)，*优化IR*，解释了LLVM pass管理器。您将实现自己的pass，作为LLVM的一部分和作为插件，并学习如何将新pass添加到优化pass管道中。'
- en: '[*Chapter 9*](B15647_09_ePub_RK.xhtml#_idTextAnchor140), *Instruction Selection*,
    shows how LLVM lowers IR to machine instructions. You will learn how instructions
    are defined in LLVM, and you will add a new machine instruction to LLVM so that
    instruction selection takes the new instruction into account.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B15647_09_ePub_RK.xhtml#_idTextAnchor140)，*指令选择*，展示了LLVM如何将IR降低为机器指令。您将学习LLVM中如何定义指令，并向LLVM添加一个新的机器指令，以便指令选择考虑新指令。'
- en: '[*Chapter 10*](B15647_10_ePub_RK.xhtml#_idTextAnchor153), *JIT Compilation*,
    discusses how you can use LLVM to implement a **just-in-time** (**JIT**) compiler.
    By the end of the chapter, you will have implemented your own JIT compiler for
    LLVM IR in two different ways.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B15647_10_ePub_RK.xhtml#_idTextAnchor153)，*JIT编译*，讨论了如何使用LLVM实现**即时**（**JIT**）编译器。在本章结束时，您将以两种不同的方式为LLVM
    IR实现自己的JIT编译器。'
- en: '[*Chapter 11*](B15647_11_ePub_RK.xhtml#_idTextAnchor163), *Debugging Using
    LLVM Tools*, explores the details of various libraries and components of LLVM,
    which helps you to identify bugs in your application. You will use the sanitizers
    to identify buffer overflows and other bugs. With the libFuzzer library, you will
    test functions with random data as input, and XRay will help you to find performance
    bottlenecks. You will use the clang static analyzer to identify bugs at the source
    level, and you will learn that you can add your own checker to the analyzer. You
    will also learn how to extend clang with your own plugin.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第11章*](B15647_11_ePub_RK.xhtml#_idTextAnchor163)，*使用LLVM工具进行调试*，探讨了LLVM的各种库和组件的细节，这有助于您识别应用程序中的错误。您将使用sanitizer来识别缓冲区溢出和其他错误。使用libFuzzer库，您将测试具有随机数据输入的函数，XRay将帮助您找到性能瓶颈。您将使用clang静态分析器在源代码级别识别错误，并了解您可以向分析器添加自己的检查器。您还将学习如何使用自己的插件扩展clang。'
- en: '[*Chapter 12*](B15647_12_ePub_RK.xhtml#_idTextAnchor177), *Creating Your Own
    Backend*, explains how you can add a new backend to LLVM. You will implement all
    the necessary classes, and at the end of the chapter you will compile LLVM IR
    to yet another CPU architecture.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第12章*](B15647_12_ePub_RK.xhtml#_idTextAnchor177)，*创建自己的后端*，解释了如何向LLVM添加新的后端。您将实现所有必要的类，并在本章结束时将LLVM
    IR编译为另一种CPU架构。'
- en: To get the most out of this book
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: '*You need a computer running Linux, Windows, macOS, or FreeBSD, with the development
    toolchain installed for the operating system. Please see the table for the required
    tools. All tools should be in the search path of your shell.*'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '*您需要一台运行Linux、Windows、macOS或FreeBSD的计算机，并为操作系统安装了开发工具链。请参阅所需工具的表格。所有工具都应该在您的shell的搜索路径中。*'
- en: '![](img/B15647_Preface_table_1.1.jpg)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15647_Preface_table_1.1.jpg)'
- en: To view the DAG visualization in [*Chapter 9*](B15647_09_ePub_RK.xhtml#_idTextAnchor140),
    *Instruction Selection*, you must have the Graphviz software from [https://graphviz.org/](https://graphviz.org/)
    installed. By default, the generated image is in PDF format, and you need a PDF
    viewer to show it.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看[*第9章*](B15647_09_ePub_RK.xhtml#_idTextAnchor140)中的DAG可视化，*指令选择*，您必须安装来自[https://graphviz.org/](https://graphviz.org/)的Graphviz软件。默认情况下，生成的图像是PDF格式，您需要一个PDF查看器来显示它。
- en: To create the flame graph in [*Chapter 11*](B15647_11_ePub_RK.xhtml#_idTextAnchor163),
    *Debugging Using LLVM Tools*, you need to install the scripts from [https://github.com/brendangregg/FlameGraph](https://github.com/brendangregg/FlameGraph).
    To run the script, you also need a recent version of Perl installed, and to view
    the graph you need a web browser capable of displaying SVG files, which all modern
    browsers do. To see the Chrome Trace Viewer visualization in the same chapter,
    you need to have the Chrome browser installed.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建[*第11章*](B15647_11_ePub_RK.xhtml#_idTextAnchor163)中的火焰图，*使用LLVM工具进行调试*，您需要从[https://github.com/brendangregg/FlameGraph](https://github.com/brendangregg/FlameGraph)安装脚本。要运行脚本，您还需要安装最新版本的Perl，并且要查看图形，您需要一个能够显示SVG文件的Web浏览器，所有现代浏览器都可以。要查看同一章节中的Chrome
    Trace Viewer可视化，您需要安装Chrome浏览器。
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code via the GitHub repository (link available
    in the next section). Doing so will help you avoid any potential errors related
    to the copying and pasting of code.**'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您使用本书的数字版本，我们建议您自己输入代码或通过GitHub存储库（链接在下一节中提供）访问代码。这样做将有助于避免与复制和粘贴代码相关的任何潜在错误。**'
- en: Download the example code files
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Learn-LLVM-12](https://github.com/PacktPublishing/Learn-LLVM-12).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub上的[https://github.com/PacktPublishing/Learn-LLVM-12](https://github.com/PacktPublishing/Learn-LLVM-12)下载本书的示例代码文件。如果代码有更新，将在现有的GitHub存储库上进行更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有来自我们丰富书籍和视频目录的其他代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)上找到。看一看吧！
- en: Code in Action
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码实例
- en: Code in Action videos for this book can be viewed at [https://bit.ly/3nllhED](https://bit.ly/3nllhED)
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的代码实例视频可在[https://bit.ly/3nllhED](https://bit.ly/3nllhED)上观看
- en: Download the color images
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图片
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781839213502_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781839213502_ColorImages.pdf).'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一个 PDF 文件，其中包含本书中使用的屏幕截图/图表的彩色图像。您可以在此处下载：[https://static.packt-cdn.com/downloads/9781839213502_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781839213502_ColorImages.pdf)。
- en: Conventions used
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了许多文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "You can observe in the code that a quantum circuit
    operation is being defined and a variable called `numOnes`."'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟 URL、用户输入和 Twitter 用户名。例如：“您可以在代码中观察到定义了一个量子电路操作，并定义了一个名为`numOnes`的变量。”'
- en: 'A block of code is set as follows:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select **System info** from the **Administration** panel."'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或屏幕上看到的单词。例如，菜单或对话框中的单词会以这种方式出现在文本中。例如：“从**管理**面板中选择**系统信息**。”'
- en: Tips or important notes
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 提示或重要说明
- en: Appear like this.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来像这样。
- en: Get in touch
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at [customercare@packtpub.com](mailto:customercare@packtpub.com).'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：如果您对本书的任何方面有疑问，请在消息主题中提及书名，并发送电子邮件至[customercare@packtpub.com](mailto:customercare@packtpub.com)。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 勘误：尽管我们已经尽一切努力确保内容的准确性，但错误确实会发生。如果您在本书中发现错误，我们将不胜感激地希望您向我们报告。请访问[www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)，选择您的书，点击勘误提交表格链接，并输入详细信息。
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**：如果您在互联网上发现我们作品的任何形式的非法副本，请向我们提供位置地址或网站名称。请通过链接与我们联系：[copyright@packt.com](mailto:copyright@packt.com)。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**：如果您在某个专题上有专业知识，并且有兴趣撰写或为书籍做出贡献，请访问[authors.packtpub.com](http://authors.packtpub.com)。'
- en: Reviews
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评论
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 请留下评论。阅读并使用本书后，为什么不在购买书籍的网站上留下评论呢？潜在读者可以看到并使用您的客观意见来做出购买决策，我们在 Packt 可以了解您对我们产品的看法，我们的作者可以看到您对他们书籍的反馈。谢谢！
- en: For more information about Packt, please visit [packt.com](http://packt.com).
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 Packt 的更多信息，请访问[packt.com](http://packt.com)。
