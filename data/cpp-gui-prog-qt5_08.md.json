["```cpp\n#include <QGraphicsScene> \n#include <QGraphicsRectItem> \n#include <QGraphicsEllipseItem> \n#include <QGraphicsTextItem> \n#include <QBrush> \n#include <QPen> \n\nprivate:\n  Ui::MainWindow *ui;\n  QGraphicsScene* scene;\n```", "```cpp\nMainWindow::MainWindow(QWidget *parent) : \n   QMainWindow(parent), \n   ui(new Ui::MainWindow) \n{ \n   ui->setupUi(this); \n\n   scene = new QGraphicsScene(this); \n   ui->graphicsView->setScene(scene); \n\n   QBrush greenBrush(Qt::green); \n   QBrush blueBrush(Qt::blue); \n   QPen pen(Qt::black); \n   pen.setWidth(2); \n\n   QGraphicsRectItem* rectangle = scene->addRect(80, 0, 80, 80, pen, greenBrush); \n   QGraphicsEllipseItem* ellipse = scene->addEllipse(0, -80, 200, 60, pen, blueBrush); \n   QGraphicsTextItem* text = scene->addText(\"Hello World!\", QFont(\"Times\", 25)); \n} \n```", "```cpp\nscene = new QGraphicsScene(this); \nui->graphicsView->setScene(scene); \n```", "```cpp\nQBrush greenBrush(Qt::green); \n...\nQGraphicsTextItem* text = scene->addText(\"Hello World!\", QFont(\"Times\", 25)); \n```", "```cpp\nQGraphicsRectItem* rectangle = scene->addRect(80, 0, 80, 80, pen, greenBrush); \nrectangle->setFlag(QGraphicsItem::ItemIsMovable); \nrectangle->setFlag(QGraphicsItem::ItemIsSelectable); \n\nQGraphicsEllipseItem* ellipse = scene->addEllipse(0, -80, 200, 60, pen, blueBrush); \nellipse->setFlag(QGraphicsItem::ItemIsMovable); \nellipse->setFlag(QGraphicsItem::ItemIsSelectable); \n\nQGraphicsTextItem* text = scene->addText(\"Hello World!\", QFont(\"Times\", 25)); \ntext->setFlag(QGraphicsItem::ItemIsMovable); \ntext->setFlag(QGraphicsItem::ItemIsSelectable); \n```", "```cpp\nui->setupUi(this); \nscene = new QGraphicsScene(this); \nui->graphicsView->setScene(scene); \nconnect(scene, &QGraphicsScene::selectionChanged, this, &MainWindow::selectionChanged); \n```", "```cpp\n#include <QDebug> \n```", "```cpp\nprivate: \n   Ui::MainWindow *ui; \n\npublic slots: \n void selectionChanged(); \n```", "```cpp\nvoid MainWindow::selectionChanged() \n{ \n   qDebug() << \"Item selected\"; \n} \n```", "```cpp\n#include <QWidget> \n#include <QDebug> \n#include <QBrush> \n#include <QPen> \n#include <QFont> \n#include <QGraphicsScene> \n#include <QGraphicsItemGroup> \n#include <QGraphicsItem> \n#include <QGraphicsRectItem> \n#include <QGraphicsTextItem> \n#include <QGraphicsPixmapItem> \n```", "```cpp\nclass profileBox : public QGraphicsItemGroup \n{ \npublic: \n   explicit profileBox(QGraphicsItem* parent = nullptr); \n```", "```cpp\nprofileBox::profileBox(QGraphicsItem *parent) : QGraphicsItemGroup(parent) \n{ \n   QBrush brush(Qt::white); \n   QPen pen(Qt::black); \n   QFont font; \n   font.setFamily(\"Arial\"); \n   font.setPointSize(12); \n} \n```", "```cpp\nQGraphicsRectItem* rectangle = new QGraphicsRectItem(); \nrectangle->setRect(0, 0, 90, 100); \nrectangle->setBrush(brush); \nrectangle->setPen(pen); \n\nnameTag = new QGraphicsTextItem(); \nnameTag->setPlainText(\"\"); \nnameTag->setFont(font); \n\nQGraphicsPixmapItem* picture = new QGraphicsPixmapItem(); \nQPixmap pixmap(\":/images/person-icon-blue.png\"); \npicture->setPixmap(pixmap); \npicture->setPos(15, 30); \n```", "```cpp\nthis->addToGroup(rectangle); \nthis->addToGroup(nameTag); \nthis->addToGroup(picture); \n```", "```cpp\nthis->setFlag(QGraphicsItem::ItemIsMovable); \nthis->setFlag(QGraphicsItem::ItemIsSelectable); \nthis->setFlag(QGraphicsItem::ItemSendsScenePositionChanges); \n```", "```cpp\nvoid profileBox::init(QString name, MainWindow *window, QGraphicsScene* scene) \n{ \n   nameTag->setPlainText(name); \n   mainWindow = window; \n   scene->addItem(this); \n} \n```", "```cpp\n#include \"mainwindow.h\" \n\nclass MainWindow; \n\nclass profileBox : public QGraphicsItemGroup \n{ \npublic: \n   explicit profileBox(QGraphicsItem* parent = nullptr); \n   void init(QString name, MainWindow* window, QGraphicsScene* scene); \n\nprivate: \n   MainWindow* mainWindow; \n   QGraphicsTextItem* nameTag; \n\n```", "```cpp\n#include \"profilebox.h\"\n```", "```cpp\nMainWindow::MainWindow(QWidget *parent) : \n   QMainWindow(parent), \n   ui(new Ui::MainWindow) \n{ \n   ui->setupUi(this); \n\n   scene = new QGraphicsScene(this); \n   ui->graphicsView->setScene(scene); \n\n   connect(scene, &QGraphicsScene::selectionChanged, this, &MainWindow::selectionChanged); \n\n   profileBox* box = new profileBox(); \n   box->init(\"John Doe\", this, scene); \n} \n```", "```cpp\nvoid MainWindow::on_addButton_clicked() \n{ \n   bool ok; \n   QString name = QInputDialog::getText(this, tr(\"Employee Name\"), \n   tr(\"Please insert employee's full name here:\"), QLineEdit::Normal,  \n   \"John Doe\", &ok); \n   if (ok && !name.isEmpty()) \n   { \n         profileBox* box = new profileBox(); \n         box->init(name, this, scene); \n   } \n} \n```", "```cpp\n#include <QWidget> \n#include <QGraphicsItem> \n#include <QPen> \n\nclass profileLine : public QGraphicsLineItem \n{ \npublic: \n   profileLine(QGraphicsItem* parent = nullptr); \n   void initLine(QGraphicsItem* start, QGraphicsItem* end); \n   void updateLine(); \n\n   QGraphicsItem* startBox; \n   QGraphicsItem* endBox; \n\nprivate: \n}; \n```", "```cpp\nprofileLine::profileLine(QGraphicsItem *parent) : QGraphicsLineItem(parent) \n{ \n   QPen pen(Qt::black); \n   pen.setWidth(2); \n   this->setPen(pen); \n\n   this->setZValue(-999); \n} \n```", "```cpp\nvoid profileLine::initLine(QGraphicsItem* start, QGraphicsItem* end) \n{ \n   startBox = start; \n   endBox = end; \n\n   updateLine(); \n} \n```", "```cpp\nvoid profileLine::updateLine() \n{ \n   if (startBox != NULL && endBox != NULL) \n   { \n         this->setLine(startBox->pos().x() + startBox->boundingRect().width() / 2, startBox->pos().y() + startBox->boundingRect().height() / 2, endBox->pos().x() + endBox->boundingRect().width() / 2, endBox->pos().y() + endBox->boundingRect().height() / 2); \n   } \n} \n```", "```cpp\nthis->setLine(x1, y1, x2, y2); \n```", "```cpp\nvoid MainWindow::on_addButton_clicked() \n{ \n   bool ok; \n   QString name = QInputDialog::getText(this, tr(\"Employee Name\"), tr(\"Please insert employee's full name here:\"), QLineEdit::Normal, \"John Doe\", &ok); \n   if (ok && !name.isEmpty()) \n   { \n         profileBox* box = new profileBox(); \n         box->init(name, this, scene); \n\n         if (scene->selectedItems().size() > 0) \n         { \n               profileLine* line = new profileLine(); \n               line->initLine(box, scene->selectedItems().at(0)); \n               scene->addItem(line); \n\n               lines.push_back(line); \n         } \n   } \n} \n```", "```cpp\nprivate: \n   Ui::MainWindow *ui; \n   QGraphicsScene* scene; \n   QList<profileLine*> lines; \n```", "```cpp\nclass profileBox : public QGraphicsItemGroup \n{ \npublic: \n   explicit profileBox(QGraphicsItem* parent = nullptr); \n   void init(QString name, MainWindow* window, QGraphicsScene* scene); \n   QVariant itemChange(GraphicsItemChange change, const QVariant \n   &value) override; \n```", "```cpp\nQVariant profileBox::itemChange(GraphicsItemChange change, const QVariant &value) \n{ \n   if (change == QGraphicsItem::ItemPositionChange) \n   { \n         qDebug() << \"Item moved\"; \n\n         mainWindow->updateLines(); \n   } \n\n   return QGraphicsItem::itemChange(change, value); \n} \n```", "```cpp\nvoid MainWindow::updateLines() \n{ \n   if (lines.size() > 0) \n   { \n         for (int i = 0; i < lines.size(); i++) \n         { \n               lines.at(i)->updateLine(); \n         } \n   } \n} \n```", "```cpp\npublic: \n   explicit MainWindow(QWidget *parent = 0); \n   ~MainWindow(); \n\n   void updateLines(); \n   void keyReleaseEvent(QKeyEvent* event); \n```", "```cpp\nvoid MainWindow::keyReleaseEvent(QKeyEvent* event) \n{ \n   qDebug() << \"Key pressed: \" + event->text(); \n\n   if (event->key() == Qt::Key_Delete) \n   { \n         if (scene->selectedItems().size() > 0) \n         { \n               QGraphicsItem* item = scene->selectedItems().at(0); \n               scene->removeItem(item); \n\n               for (int i = lines.size() - 1; i >= 0; i--) \n               { \n                     profileLine* line = lines.at(i); \n\n                     if (line->startBox == item || line->endBox == \n                     item) \n                     { \n                           lines.removeAt(i); \n                           scene->removeItem(line); \n                           delete line; \n                     } \n               } \n               delete item; \n         } \n   } \n} \n```"]