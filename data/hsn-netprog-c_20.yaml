- en: Setting Up Your C Compiler on Windows
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Windows上设置您的C编译器
- en: Microsoft Windows is one of the most popular desktop operating systems.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 微软Windows是最受欢迎的桌面操作系统之一。
- en: Before beginning, I highly recommend that you install **7-Zip** from [https://www.7-zip.org](https://www.7-zip.org)/.
    7-Zip will allow you to extract the various compression archive formats that library
    source code is distributed in.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，我强烈建议您从[https://www.7-zip.org](https://www.7-zip.org)安装**7-Zip**。7-Zip将允许您提取库源代码分发的各种压缩归档格式。
- en: Let's continue and get MinGW, OpenSSL, and `libssh` set up on Windows 10.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们继续，并在Windows 10上设置MinGW、OpenSSL和`libssh`。
- en: Installing MinGW GCC
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装MinGW GCC
- en: MinGW is a port of GCC to Windows. It is the compiler we recommend for this
    book.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: MinGW是将GCC移植到Windows的版本。这是我们推荐的用于本书的编译器。
- en: You can obtain MinGW from [http://www.mingw.org/](http://www.mingw.org/). Find
    the download link on that page and download and run the **MinGW Installation Manager**
    (**mingw-get**).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[http://www.mingw.org/](http://www.mingw.org/)获取MinGW。在该页面上找到下载链接，下载并运行**MinGW安装管理器**（**mingw-get**）。
- en: 'The MinGW Installation Manager is a GUI tool for installing MinGW. It''s shown
    in the following screenshot:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: MinGW安装管理器是一个用于安装MinGW的GUI工具。以下截图显示了它：
- en: '![](img/84679923-d996-454e-914b-7077bac444c6.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/84679923-d996-454e-914b-7077bac444c6.png)'
- en: Click Install. Then, click Continue. Wait while some files download, and then
    click Continue once again.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 点击安装。然后，点击继续。等待一些文件下载，然后再次点击继续。
- en: 'At this point, the tool will give you a list of packages that you can install.
    You need to mark mingw32-base-bin, msys-base-bin, and mingw32-gcc-g++-bin for
    installation. This is shown in the following screenshot:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，该工具将向您提供一个可以安装的包列表。您需要为安装标记mingw32-base-bin、msys-base-bin和mingw32-gcc-g++-bin。以下截图显示了这一点：
- en: '![](img/0c4584f0-3672-41e6-912d-ca2c5e8311da.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0c4584f0-3672-41e6-912d-ca2c5e8311da.png)'
- en: 'You will also want to select the mingw32-libz-dev package. It is listed under
    the MinGW Libraries section. The following screenshot shows this selection:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 您还希望选择mingw32-libz-dev包。它在MinGW库部分列出。以下截图显示了此选择：
- en: '![](img/f80d717a-c480-4811-b918-af1b220e155a.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f80d717a-c480-4811-b918-af1b220e155a.png)'
- en: The `g++` and `libz` packages we've selected are required for building `libssh`
    later.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我们选择的`g++`和`libz`包是稍后构建`libssh`所必需的。
- en: When you're ready to proceed, click Installation from the menu and select Apply
    Changes.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当你准备好继续时，从菜单中选择安装并选择应用更改。
- en: 'A new dialog will show the changes to be made. The following screenshot shows
    what this dialog may look like:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一个新的对话框将显示要进行的更改。以下截图显示了此对话框可能的外观：
- en: '![](img/8e98f21f-e4d0-442c-9707-f5d06334bdcc.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8e98f21f-e4d0-442c-9707-f5d06334bdcc.png)'
- en: Click the Apply button to download and install the packages. Once the installation
    is complete, you can close the MinGW Installation Manager.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 点击应用按钮以下载和安装包。安装完成后，您可以关闭MinGW安装管理器。
- en: To be able to use MinGW from the command line easily, you will need to add MinGW
    to your `PATH`.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 为了能够轻松地从命令行使用MinGW，您需要将MinGW添加到您的`PATH`。
- en: 'The steps for adding MinGW to your `PATH` are as follows:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 将MinGW添加到您的`PATH`的步骤如下：
- en: Open the System control panel (Windows key + *Pause*/*Break*).
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开系统控制面板（Windows键 + *暂停*/*中断*）。
- en: 'Select Advanced system settings:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择高级系统设置：
- en: '![](img/e776b32e-ffa4-4c58-a8f4-878ebfc15151.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e776b32e-ffa4-4c58-a8f4-878ebfc15151.png)'
- en: 'From the System Properties window, navigate to the Advanced tab and click the Environment Variables...
    button:'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从系统属性窗口，导航到高级选项卡并点击环境变量...按钮：
- en: '![](img/c57bf130-4e24-406a-90f1-4733d447a8da.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c57bf130-4e24-406a-90f1-4733d447a8da.png)'
- en: From this screen, find the `PATH` variable under System variables. Select it
    and press **Edit...**.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从这个屏幕上，在系统变量下找到`PATH`变量。选择它并按**编辑...**。
- en: 'Click New and type in the MinGW path—`C:\mingw\bin`, as shown in the following
    screenshot:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击新建并输入MinGW路径—`C:\mingw\bin`，如下截图所示：
- en: '![](img/9f990d51-0b4b-4e7a-ad35-55e58858f68e.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9f990d51-0b4b-4e7a-ad35-55e58858f68e.png)'
- en: Click OK to save your changes.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击确定以保存您的更改。
- en: 'Once MinGW has been added to your `PATH`, you can open a new command window
    and enter `gcc --version` to ensure that `gcc` has been installed correctly. This
    is shown in the following screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦MinGW已添加到您的`PATH`，您就可以打开一个新的命令窗口并输入`gcc --version`以确保`gcc`已正确安装。以下截图显示了这一点：
- en: '![](img/0558634c-758f-49ab-ac91-9ad356da1c56.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/0558634c-758f-49ab-ac91-9ad356da1c56.png)'
- en: Installing Git
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装Git
- en: You will need to have the `git` version control software installed to download
    this book's code.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要安装版本控制软件`git`来下载本书的代码。
- en: '`git` is available from [https://git-scm.com/download](https://git-scm.com/download).
    A handy GUI-based installer is provided, and you shouldn''t have any issues getting
    it working. When installing, be sure to check the option for adding `git` to your
    `PATH`. This is shown in the following screenshot:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`git`可以从[https://git-scm.com/download](https://git-scm.com/download)获取。提供了一个便捷的基于GUI的安装程序，您应该不会遇到任何问题。在安装时，请确保选中将`git`添加到您的`PATH`的选项。以下截图显示了这一步骤：'
- en: '![](img/f0b7a8df-4d1e-45fa-bc23-fb303a42bf62.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f0b7a8df-4d1e-45fa-bc23-fb303a42bf62.png)'
- en: 'After `git` has finished installing, you can test it by opening a new command
    window and entering `git --version`:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在`git`安装完成后，您可以通过打开一个新的命令窗口并输入`git --version`来测试它：
- en: '![](img/5ad52e29-8376-4e11-8232-5d6ff30c9744.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5ad52e29-8376-4e11-8232-5d6ff30c9744.png)'
- en: Installing OpenSSL
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装OpenSSL
- en: The OpenSSL library can be tricky to get going on Windows.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 在Windows上启动OpenSSL库可能会有些棘手。
- en: If you are brave, you can obtain the OpenSSL library source code directly from [https://www.openssl.org/source/](https://www.openssl.org/source/).
    You will, of course, need to build OpenSSL before it can be used. Building OpenSSL
    is not easy, but instructions are provided in the `INSTALL` and `NOTES.WIN` files
    included with the OpenSSL source code.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有勇气，可以直接从[https://www.openssl.org/source/](https://www.openssl.org/source/)获取OpenSSL库的源代码。当然，在使用之前，您需要构建OpenSSL。构建OpenSSL并不容易，但OpenSSL源代码中包含的`INSTALL`和`NOTES.WIN`文件提供了说明。
- en: An easier alternative is to install prebuilt OpenSSL binaries. You can find
    a list of prebuilt OpenSSL binaries from the OpenSSL wiki at [https://wiki.openssl.org/index.php/Binaries](https://wiki.openssl.org/index.php/Binaries).
    You will need to locate binaries that match your operating system and compiler.
    Installing them will be a matter of copying the relevant files to the MinGW `include`,
    `lib`, and `bin` directories.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 一个更简单的替代方案是安装预构建的OpenSSL二进制文件。您可以从OpenSSL维基百科[https://wiki.openssl.org/index.php/Binaries](https://wiki.openssl.org/index.php/Binaries)中找到预构建的OpenSSL二进制文件列表。您需要找到与您的操作系统和编译器匹配的二进制文件。安装它们只需将相关文件复制到MinGW的`include`、`lib`和`bin`目录即可。
- en: 'The following screenshot shows a binary OpenSSL distribution. The `include`
    and `lib` folders should be copied over to `c:\mingw\` and merged with the existing
    folders, while `openssl.exe` and the two DLL files need to be placed in `c:\mingw\bin\`:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了一个二进制OpenSSL发行版。应将`include`和`lib`文件夹复制到`c:\mingw\`并合并到现有文件夹中，而`openssl.exe`和两个DLL文件需要放置在`c:\mingw\bin\`：
- en: '![](img/f9238f39-e6e9-4b9c-a17a-1e9b05038b65.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f9238f39-e6e9-4b9c-a17a-1e9b05038b65.png)'
- en: 'You can try building `openssl_version.c` from [Chapter 9](47ba170d-42d9-4e38-b5d8-89503e005708.xhtml),
    *Loading Secure Web Pages with HTTPS and OpenSSL*, to test that everything is
    installed correctly. It should look like the following:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以尝试从[第9章](47ba170d-42d9-4e38-b5d8-89503e005708.xhtml) *使用HTTPS和OpenSSL加载安全网页*
    中构建`openssl_version.c`来测试是否已正确安装了所有内容。它应该看起来像以下这样：
- en: '![](img/b798e570-c39f-4c2f-a3cd-62b920b3e749.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/b798e570-c39f-4c2f-a3cd-62b920b3e749.png)'
- en: Installing libssh
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 安装libssh
- en: You can obtain the latest `libssh` library from [https://www.libssh.org/](https://www.libssh.org/).
    If you are proficient in installing C libraries, feel free to give it a go. Otherwise,
    read on for step-by-step instructions.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[https://www.libssh.org/](https://www.libssh.org/)获取最新的`libssh`库。如果您擅长安装C库，不妨试试。否则，请继续阅读逐步说明。
- en: Before beginning, be sure that you've first installed the OpenSSL libraries
    successfully. These are required by the `libssh` library.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，请确保您已成功安装了OpenSSL库。这些是`libssh`库所必需的。
- en: 'We will need CMake installed in order to build `libssh`. You can obtain CMake
    from [https://cmake.org/](https://cmake.org/). They provide a nice GUI installer,
    and you shouldn''t run into any difficulties. Make sure you select the option
    to add CMake to your `PATH` during installation:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 为了构建`libssh`，我们需要安装CMake。您可以从[https://cmake.org/](https://cmake.org/)获取CMake。他们提供了一个不错的GUI安装程序，您不应该遇到任何困难。确保在安装过程中选择将CMake添加到您的`PATH`选项：
- en: '![](img/e80c6ca3-2751-432e-a3b5-afdf77b81058.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e80c6ca3-2751-432e-a3b5-afdf77b81058.png)'
- en: Once you have the CMake tool and the OpenSSL libraries installed, navigate to
    the `libssh` website to download the `libssh` source code. At the time of writing,
    Version 0.8.7 is the latest, and it is available from [https://www.libssh.org/files/0.8/](https://www.libssh.org/files/0.8/).
    Download and extract the `libssh` source code.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您安装了CMake工具和OpenSSL库，导航到`libssh`网站下载`libssh`源代码。在撰写本文时，版本0.8.7是最新的，可以从[https://www.libssh.org/files/0.8/](https://www.libssh.org/files/0.8/)获取。下载并解压`libssh`源代码。
- en: Take a look at the included `INSTALL` file.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 请查看附带的`INSTALL`文件。
- en: 'Now, open a command window in the `libssh` source code directory. Create a
    new `build` folder with the following commands:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，在`libssh`源代码目录中打开一个命令窗口。使用以下命令创建一个新的`build`文件夹：
- en: '[PRE0]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Keep this command window open. We'll do the build here in a minute.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 保持此命令窗口打开。我们将在一会儿进行构建。
- en: Start CMake 3.14.3 (**cmake-gui**) from the start menu or desktop shortcut.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 从开始菜单或桌面快捷方式启动CMake 3.14.3（**cmake-gui**）。
- en: 'You need to set the source code and build locations using the Browse Source...
    and Browse Build... buttons. This is shown in the following screenshot:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要使用“浏览源...”和“浏览构建...”按钮设置源代码和构建位置。以下截图显示了这一过程：
- en: '![](img/c4cf41a7-8d2d-4576-8b81-ab20ddd20bde.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c4cf41a7-8d2d-4576-8b81-ab20ddd20bde.png)'
- en: Then, click Configure.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，点击“配置”。
- en: On the next screen, select MinGW Makefiles as the generator for this project.
    Click Finish.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一屏幕上，选择MinGW Makefiles作为此项目的生成器。点击“完成”。
- en: '![](img/349233d1-58f1-492d-85fa-76bec0dd6ae1.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/349233d1-58f1-492d-85fa-76bec0dd6ae1.png)'
- en: It may take a moment to process.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 处理可能需要一点时间。
- en: 'From the configuration options, make the following changes:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在配置选项中，进行以下更改：
- en: Uncheck WITH_NACL
  id: totrans-64
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消选择WITH_NACL
- en: Uncheck WITH_GSSAPI
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 取消选择WITH_GSSAPI
- en: Change `CMAKE_INSTALL_PREFIX` to `c:\mingw`
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`CMAKE_INSTALL_PREFIX`更改为`c:\mingw`
- en: Then, click Configure again. It will take a moment. If everything worked, click
    Generate.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，再次点击“配置”。这可能需要一点时间。如果一切正常，点击“生成”。
- en: You should now be able to build `libssh`.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您应该能够构建`libssh`。
- en: 'Go back to your command window in the build directory. Use the following command
    to complete the build:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 返回构建目录中的命令窗口。使用以下命令完成构建：
- en: '[PRE1]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'After the build completes, use the following command to copy the files over
    to your MinGW installation:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 构建完成后，使用以下命令将文件复制到您的MinGW安装中：
- en: '[PRE2]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'You can try building `ssh_version.c` from [Chapter 11](c9d0a1dc-878b-4961-825e-65688fac08ae.xhtml),
    *Establishing SSH Connections with libssh*, to test that everything is installed
    correctly. It should look like the following:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以尝试从[第11章](c9d0a1dc-878b-4961-825e-65688fac08ae.xhtml)“使用libssh建立SSH连接”构建`ssh_version.c`，以测试是否所有安装都正确。它应该看起来像以下这样：
- en: '![](img/cb20c15a-dc94-4992-9eb1-11dffc687062.png)'
  id: totrans-74
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/cb20c15a-dc94-4992-9eb1-11dffc687062.png)'
- en: Alternatives
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 替代方案
- en: In this book, we recommend free software whenever possible. This is important
    for user freedom, and this is one reason we recommend GCC throughout the book.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，我们尽可能推荐免费软件。这对于用户自由度很重要，这也是我们全书推荐GCC的一个原因。
- en: In addition, to MinGW GCC, the Clang C compiler is also open source and excellent
    quality. The code in this book was also tested to run successfully using Clang
    on Windows.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，除了MinGW GCC，Clang C编译器也是开源且质量上乘的。本书中的代码也经过测试，在Windows上使用Clang成功运行。
- en: Command-line tools such as GCC and Clang are often easier to integrate into
    the complicated workflows required for larger projects. These open source tools
    also provide better standards compliance than Microsoft's compilers.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: GCC和Clang等命令行工具通常更容易集成到大型项目所需的复杂工作流程中。这些开源工具还提供了比微软编译器更好的标准合规性。
- en: That said, the code in this book also works with Microsoft's compilers. The
    code was tested for both Microsoft Visual Studio 2015 and Microsoft Visual Studio
    2017.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 话虽如此，本书中的代码也可以与微软的编译器一起使用。代码在Microsoft Visual Studio 2015和Microsoft Visual Studio
    2017上进行了测试。
