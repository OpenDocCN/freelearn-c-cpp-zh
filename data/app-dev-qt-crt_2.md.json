["```cpp\nunsigned long factorial(unsigned int n)\n{\n    switch(n) \n    {\n        case 0: return 0;\n        case 1: return 1;\n        default: return n * factorial(n-1);\n    }\n}\n```", "```cpp\nunsigned long factorial(unsigned int n)\n{\n    unsigned long result = 1;\n    for(unsigned int i = n; i > 1; i--)\n    {\n        result *= i;\n    }\n}\n```", "```cpp\n    #ifndef MATHFUNCTIONS_H\n    #define MATHFUNCTIONS_H\n\n    class MathFunctions\n    {\n    public:\n        MathFunctions();\n\n        static unsigned long int factorial(unsigned int n);\n    };\n\n    #endif // MATHFUNCTIONS_H \n    ```", "```cpp\n    #include \"mathfunctions.h\"\n\n    MathFunctions::MathFunctions()\n    {\n    }\n\n    unsigned long\n    MathFunctions::factorial(unsigned int n)\n    {\n        switch(n)\n        {\n            case 0: return 0;\n            case 1: return 1;\n            default: return n * factorial(n-1);\n        }\n    }\n    ```", "```cpp\n#-------------------------------------------------\n#\n# Project created by QtCreator 2013-07-23T19:50:46\n#\n#-------------------------------------------------\n\nQT       -= gui\n\nTARGET = MathFunctions\nTEMPLATE = lib\nCONFIG += staticlib\n\nSOURCES += mathfunctions.cpp\n\nHEADERS += mathfunctions.h\nunix:!symbian {\n    maemo5 {\n        target.path = /opt/usr/lib\n    } else {\n        target.path = /usr/lib\n    }\n    INSTALLS += target\n}\n```", "```cpp\n#include <QCoreApplication>\n#include \"MathFunctions.h\"\n\nint main(int argc, char *argv[])\n{\n    QCoreApplication a(argc, argv);\n\n    qDebug(\"6! is %d\", MathFunctions::factorial(6));\n\n    return a.exec();\n}\n```", "```cpp\nqDebug() << \"6! is\" << MathFunctions::factorial(6);\n```", "```cpp\nCONFIG(release, debug|release): DEFINES += QT_NO_DEBUG_OUTPUT\n```", "```cpp\nCONFIG(release, debug|release): DEFINES += QT_NO_WARNING_OUTPUT\n```", "```cpp\n#-------------------------------------------------\n#\n# Project created by QtCreator 2013-07-23T20:43:19\n#\n#-------------------------------------------------\n\nQT       += core\n\nQT       -= gui\n\nCONFIG(release, debug|release): DEFINES += QT_NO_DEBUG_OUTPUT\n\nTARGET = MathFunctionsTest\nCONFIG   += console\nCONFIG   -= app_bundle\n\nTEMPLATE = app\n\nSOURCES += main.cpp\n\nwin32:CONFIG(release, debug|release): LIBS += -L$$PWD/../build-MathFunctions-Desktop_Qt_5_0_2_MSVC2012_64bit/release/ -lMathFunctions\nelse:win32:CONFIG(debug, debug|release): LIBS += -L$$PWD/../build-MathFunctions-Desktop_Qt_5_0_2_MSVC2012_64bit/debug/ -lMathFunctions\nelse:unix: LIBS += -L$$PWD/../build-MathFunctions-Desktop_Qt_5_0_2_MSVC2012_64bit/ -lMathFunctions\n\nINCLUDEPATH += $$PWD/../MathFunctions\nDEPENDPATH += $$PWD/../MathFunctions\n\nwin32:CONFIG(release, debug|release): PRE_TARGETDEPS += $$PWD/../build-MathFunctions-Desktop_Qt_5_0_2_MSVC2012_64bit/release/MathFunctions.lib\nelse:win32:CONFIG(debug, debug|release): PRE_TARGETDEPS += $$PWD/../build-MathFunctions-Desktop_Qt_5_0_2_MSVC2012_64bit/debug/MathFunctions.lib\nelse:unix: PRE_TARGETDEPS += $$PWD/../build-MathFunctions-Desktop_Qt_5_0_2_MSVC2012_64bit-Debug/libMathFunctions.a\n```", "```cpp\n#include <QCoreApplication>\n#include <QDebug>\n#include \"MathFunctions.h\"\n\nint main(int argc, char *argv[])\n{\n    QCoreApplication a(argc, argv);\n\n    int values[] = { 6, 7, 8 };\n\n    for(int i = 0; i < sizeof(values)/sizeof(int); i++)\n    {\n        qDebug() << values[i]\n                 << \"! = \"\n                 << MathFunctions::factorial(values[i]);\n    }\n\n    return a.exec();\n}\n```"]