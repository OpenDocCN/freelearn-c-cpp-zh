["```cpp\nroot@fefe04587d4e:/# kill -l\n```", "```cpp\n 1) SIGHUP 2) SIGINT 3) SIGQUIT 4) SIGILL 5) SIGTRAP\n 6) SIGABRT 7) SIGBUS 8) SIGFPE 9) SIGKILL 10) SIGUSR1\n11) SIGSEGV 12) SIGUSR2 13) SIGPIPE 14) SIGALRM 15) SIGTERM\n16) SIGSTKFLT 17) SIGCHLD 18) SIGCONT 19) SIGSTOP 20) SIGTSTP\n21) SIGTTIN 22) SIGTTOU 23) SIGURG 24) SIGXCPU 25) SIGXFSZ\n26) SIGVTALRM 27) SIGPROF 28) SIGWINCH 29) SIGIO 30) SIGPWR\n31) SIGSYS 34) SIGRTMIN 35) SIGRTMIN+1 36) SIGRTMIN+2 37) SIGRTMIN+3\n38) SIGRTMIN+4 39) SIGRTMIN+5 40) SIGRTMIN+6 41) SIGRTMIN+7 42) SIGRTMIN+8\n43) SIGRTMIN+9 44) SIGRTMIN+10 45) SIGRTMIN+11 46) SIGRTMIN+12 47) SIGRTMIN+13\n48) SIGRTMIN+14 49) SIGRTMIN+15 50) SIGRTMAX-14 51) SIGRTMAX-13 52) SIGRTMAX-12\n53) SIGRTMAX-11 54) SIGRTMAX-10 55) SIGRTMAX-9 56) SIGRTMAX-8 57) SIGRTMAX-7\n58) SIGRTMAX-6 59) SIGRTMAX-5 60) SIGRTMAX-4 61) SIGRTMAX-3 62) SIGRTMAX-2\n63) SIGRTMAX-1 64) SIGRTMAX\n\n```", "```cpp\n#include<stdio.h>\n#include<signal.h>\n#include <iostream>\n\nint main()\n{\n    std::cout << \"Starting ...\" << std::endl;\n    signal(SIGTERM, SIG_IGN);\n    while (true) ;\n    std::cout << \"Ending ...\" << std::endl;\n    return 0;\n}\n```", "```cpp\n#include<stdio.h>\n#include<signal.h>\n#include <iostream>\n\nint main()\n{\n    std::cout << \"Starting ...\" << std::endl;\n    signal(SIGKILL, SIG_IGN);\n    while (true) ;\n    std::cout << \"Ending ...\" << std::endl;\n    return 0;\n}\n```", "```cpp\n#include<stdio.h>\n#include<signal.h>\n#include <iostream>\n\nvoid handleSigTerm (int sig);\n\nint main()\n{\n    std::cout << \"Starting ...\" << std::endl;\n    signal(SIGTERM, handleSigTerm);\n    while (true);\n    std::cout << \"Ending ...\" << std::endl;\n    return 0;\n}\n```", "```cpp\nvoid handleSigTerm (int sig)\n{\n    std::cout << \"Just got \" << sig << \" signal\" << std::endl;\n    std::cout << \"cleaning up some used resources ...\"\n        << std::endl;\n    abort();\n}\n```", "```cpp\nvoid(*signal(int, void (*)(int)))(int);\n```", "```cpp\n#include<stdio.h>\n#include<signal.h>\n#include <iostream>\n\nint main(int argc, char* argv[])\n{\n    std::cout << \"Starting ...\" << std::endl;\n    if (argc <= 1)\n    {\n       std::cout << \"Process pid missing ...\" << std::endl;\n       return 1;\n    }\n    int pid = std::atoi(argv[1]);\n    kill (pid, SIGTERM);\n\n    std::cout << \"Ending ...\" << std::endl;\n    return 0;\n}\n```", "```cpp\nint raise (int signo);\n```"]