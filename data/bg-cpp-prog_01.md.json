["```cpp\n    int i = 1 / 0;\n```", "```cpp\n    int j = 0; \n    int i = 1 / j;\n```", "```cpp\n    #include <iostream> \n\n    // The entry point of the program \n    int main() \n    { \n        std::cout << \"Hello, world!n\"; \n    }\n```", "```cpp\nC:\\Program Files\\Microsoft Visual Studio\\2017\\Community>cd %VCToolsInstallDir%\nC:\\Program Files\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.0.10.2517>dir\n```", "```cpp\n    #include <iostream> \n\n    int main() \n    { \n        std::cout << \"Hello, world!n\"; \n    }\n```", "```cpp\nC:\\Beginning_C++\\Chapter_01>cl /EHsc simple.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.00.25017 for x86\nCopyright (C) Microsoft Corporation.  All rights reserved\n\nsimple.cpp\n\nMicrosoft (R) Incremental Linker Version 14.10.25017.0\nCopyright (C) Microsoft Corporation.  All rights reserved.\n/out:simple.exe\n\nsimple.obj\n```", "```cpp\nC:\\Beginning_C++\\Chapter_01>simple\nHello, World!\n```", "```cpp\nC:\\Beginning_C++\\Chapter_01>simple\nHello, World!\n\nC:\\Beginning_C++\\Chapter_01>ECHO %ERRORLEVEL%\n0\n```", "```cpp\n    int main() \n    { \n        std::cout << \"Hello, world!n\"; \n return 99; \n    }\n```", "```cpp\n        int main(int argc, char *argv[]) \n        { \n            std::cout << \"there are \" << argc << \" parameters\" <<  \n            std::endl; \n            for (int i = 0; i < argc; ++i) \n            { \n                std::cout << argv[i] << std::endl; \n            } \n        }\n```", "```cpp\n    for (int i = 0; i < argc; ++i) \n    { \n        std::cout << argv[i] << std::endl; \n    }\n```", "```cpp\nC:\\Beginning_C++\\Chapter_01>simple\nthere are 1 parameters\nsimple\n```", "```cpp\nC:\\Beginning_C++\\Chapter_01>simple test parameters\nthere are 3 parameters\nsimple\ntest parameters\n```", "```cpp\nC:\\Beginning_C++\\Chapter_01>simple \u2033test parameters\u2033\nthere are 2 parameters\nsimple\ntest parameters\n```", "```cpp\n    #include <iostream>  \n #define NUMBER 4 \n\n    int main() \n    { \n std::cout << NUMBER << std::endl; \n    }\n```", "```cpp\n    int main() \n    { \n std::cout << 4 << std::endl; \n    }\n```", "```cpp\n    int main() \n    { \n int NUMBER = 99; \n        std::cout << NUMBER << std::endl; \n    }\n```", "```cpp\nC:\\Beginning_C++\\Chapter_01>cl /EHhc simple.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.00.25017 for x86\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\nsimple.cpp\nsimple.cpp(7): error C2143: syntax error: missing ';' before 'constant'\nsimple.cpp(7): error C2106: '=': left operand must be l-value\n```", "```cpp\n    int 4 = 99;\n```", "```cpp\ncl /EHsc simple.cpp /DNUMBER=4\n```", "```cpp\n    #include <iostream> \n\n    #define MESSAGE(c, v)  \n    for(int i = 1; i < c; ++i) std::cout << v[i] << std::endl; \n\n    int main(int argc, char *argv[]) \n    { \n        MESSAGE(argc, argv); \n        std::cout << \"invoked with \" << argv[0] << std::endl; \n    }\n```", "```cpp\n    int main(int argc, char *argv[]) \n    { \n        for(int i = 1; i < argc; ++i)  \n            std::cout << argv[i] << std::endl; \n        std::cout << \"invoked with \" << argv[0] << std::endl; \n    }\n```", "```cpp\n #ifdef DEBUG \n    #define MESSAGE(c, v)  \n    for(int i = 1; i < c; ++i) std::cout << v[i] << std::endl; \n #else #define MESSAGE #endif\n```", "```cpp\nC:\\Beginning_C++\\Chapter_01>simple test parameters\ninvoked with simple\n```", "```cpp\nC:\\Beginning_C++\\Chapter_01>simple test parameters\ntest parameters \ninvoked with simple\n```", "```cpp\n    // ostream standard header \n    #pragma once \n    #ifndef _IOSTREAM_ \n    #define _IOSTREAM_\n```", "```cpp\n    #endif /* _IOSTREAM_ */\n```", "```cpp\n targets : dependents \n        commands \n```", "```cpp\n    test.exe : main.obj file1.obj file2.obj utils.obj \n        link /out:test.exe main.obj file1.obj file2.obj utils.obj\n```", "```cpp\n    main.obj : main.cpp file1.h file2.h utils.pch \n        cl /c /Ehsc main.cpp /Yuutils.h\n```", "```cpp\n    utils.pch : utils.cpp utils.h \n        cl /c /EHsc utils.cpp /Ycutils.h\n```", "```cpp\n    #include <iostream> \n    #include <string> \n    #include <ctime>\n```", "```cpp\n    #include \u2033utils.h\u2033\n```", "```cpp\n    utils.pch utils.obj :: utils.cpp utils.h \n        cl /EHsc /c utils.cpp /Ycutils.h\n```", "```cpp\nC:\\Beginning_C++\\Chapter_01\\Code>nmake\nMicrosoft (R) Program Maintenance Utility Version 14.00.24210.0\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\ncl /EHsc /c utils.cpp /Ycutils.h\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.00.24210 for x86\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\nutils.cpp\n```", "```cpp\n    #include \"utils.h\" \n    #include \"name.h\" \n    #include \"time.h\" \n\n    void main() \n    { \n        print_name(); \n        print_time(); \n    }\n```", "```cpp\n main.obj : main.cpp name.h time.h utils.pch cl /EHsc /c main.cpp /Yuutils.h \n\n    utils.pch utils.obj :: utils.cpp utils.h \n        cl /EHsc /c utils.cpp /Ycutils.h\n```", "```cpp\n    void print_name();\n```", "```cpp\n    void print_time();\n```", "```cpp\n    #include \"utils.h\" \n    #include \"name.h\" \n\n    void print_name() \n    { \n        std::cout << \"Your first name? \"; \n        std::string name; \n        std::cin >> name; \n        std::cout << name; \n    }\n```", "```cpp\n    name.obj : name.cpp name.h utils.pch \n        cl /EHsc /c name.cpp /Yuutils.h\n```", "```cpp\n    #include \"utils.h\" \n    #include \"time.h\" \n\n    void print_time() \n    { \n        std::time_t now = std::time(nullptr); \n        std::cout << \", the time and date are \" \n                  << std::ctime(&now) << std::endl; \n    }\n```", "```cpp\n    time.obj : time.cpp time.h utils.pch \n        cl /EHsc /c time.cpp /Yuutils.h\n```", "```cpp\n    time_test.exe : main.obj name.obj time.obj utils.obj \n        link /out:$@ $**\n```", "```cpp\n    time_test.exe : main.obj name.obj time.obj utils.obj \n        link /out:$@ $** \n clean : @echo Cleaning the project...    \n        del main.obj name.obj time.obj utils.obj utils.pch del time_test.exe\n```", "```cpp\nC:\\Beginning_C++\\Chapter_01>time_test\nYour first name? Richard\nRichard, the time and date are Tue Sep  6 19:32:23 2016\n```", "```cpp\n    void print_name() \n    {\n std::cout << \"Please type your first name and press [Enter] \"; \n        std::string name;\n```", "```cpp\n // More polite version \n    void print_name();\n```"]