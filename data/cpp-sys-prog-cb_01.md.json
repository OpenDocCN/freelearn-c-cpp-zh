["```cpp\nfind . -name file\n```", "```cpp\n$ find /usr/local \"python*\"\n```", "```cpp\n $ grep \"text\" filename\n```", "```cpp\n $ grep \"text\" -R /usr/share\n```", "```cpp\n$ ls -l | grep filename\n```", "```cpp\n $ vi filename\n```", "```cpp\n$ rm filename\n```", "```cpp\n$ rm -r directoryName\n```", "```cpp\n$ cp file1 file2\n```", "```cpp\n$ cp -r folder1 folder2  \n```", "```cpp\n$ cp -r /usr/local/folder1 relative/folder2\n```", "```cpp\nroot@90f5b4545a54:~# adduser spacex --ingroup developers\nAdding user `spacex' ...\nAdding new user `spacex' (1001) with group `developers' ...\nCreating home directory `/home/spacex' ...\nCopying files from `/etc/skel' ...\nNew password:\nRetype new password:\npasswd: password updated successfully\nChanging the user information for spacex\nEnter the new value, or press ENTER for the default\nFull Name []: Onorato\nRoom Number []:\nWork Phone []:\nHome Phone []:\nOther []:\nIs the information correct? [Y/n] Y\n```", "```cpp\nroot@90f5b4545a54:~# login spacex\nPassword:\nWelcome to Ubuntu 19.04 (GNU/Linux 4.9.125-linuxkit x86_64)\n* Documentation: https://help.ubuntu.com\n* Management: https://landscape.canonical.com\n* Support: https://ubuntu.com/advantage\nThis system has been minimized by removing packages and content that are\nnot required on a system that users do not log into.\nTo restore this content, you can run the 'unminimize' command.\nThe programs included with the Ubuntu system are free software;\nthe exact distribution terms for each program are described in the\nindividual files in /usr/share/doc/*/copyright.\nUbuntu comes with ABSOLUTELY NO WARRANTY, to the extent permitted by\napplicable law.\nspacex@90f5b4545a54:~$\n```", "```cpp\nspacex@90f5b4545a54:~$ passwd\nChanging password for spacex.\n Current password:\n New password:\n Retype new password:\n passwd: password updated successfully\n spacex@90f5b4545a54:~$\n```", "```cpp\nroot@90f5b4545a54:~# usermod -a -G testers spacex\n here spacex is added to the testers group\n```", "```cpp\nroot@90f5b4545a54:~# userdel -r spacex\nuserdel: spacex mail spool (/var/mail/spacex) not found\nroot@90f5b4545a54:~#\n```", "```cpp\nspacex@90f5b4545a54:~$ groups\n developers testers\n spacex@90f5b4545a54:~$\n```", "```cpp\nroot@90f5b4545a54:/# ls -l\n -rwxr-xr-x 1 root root 13 May 8 20:11 conf.json\n```", "```cpp\n $ chmod g+w conf.json \n```", "```cpp\n $ chmod 751 conf.json \n```", "```cpp\n$vi hello.cpp\n```", "```cpp\n#include <iostream>\nint main()\n{\n    std::cout << \"Hello World!\" << std::endl;\n    return 0;\n}\n```", "```cpp\n$ vi Makefile\n```", "```cpp\nCC = g++\nall: hello\nhello: hello.o\n      ${CC} -o hello hello.o\nhello.o: hello.cpp\n      ${CC} -c hello.cpp\nclean:\n      rm hello.o hello\n```", "```cpp\n$ make\n```", "```cpp\n #include <iostream>\n int main()\n {\n    int x = 10;\n    x += 2;\n    std::cout << \"Hello World! x = \" << x << std::endl;\n    return 0;\n }\n```", "```cpp\nroot@bffd758254f8:~/Chapter1# make\n g++ -c hello.cpp\n g++ -o hello hello.o\n```", "```cpp\nroot@bffd758254f8:~/Chapter1# gdb hello\n GNU gdb (Ubuntu 8.2.91.20190405-0ubuntu3) 8.2.91.20190405-git\n Copyright (C) 2019 Free Software Foundation, Inc.\n License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\n This is free software: you are free to change and redistribute it.\n There is NO WARRANTY, to the extent permitted by law.\n Type \"show copying\" and \"show warranty\" for details.\n This GDB was configured as \"x86_64-linux-gnu\".\n Type \"show configuration\" for configuration details.\n For bug reporting instructions, please see:\n <http://www.gnu.org/software/gdb/bugs/>.\n Find the GDB manual and other documentation resources online at:\n <http://www.gnu.org/software/gdb/documentation/>.\nFor help, type \"help\".\n Type \"apropos word\" to search for commands related to \"word\"...\n Reading symbols from hello...\n (No debugging symbols found in hello)\n (gdb)\n```", "```cpp\nCC = g++\nall: hello\nhello: hello.o\n    ${CC} -o hello hello.o\nhello.o: hello.cpp\n    $(CC) -c -g hello.cpp\nclean:\n    rm hello.o hello\n```", "```cpp\nroot@bcec6ff72b3c:/BOOK/chapter1# gdb hello\nGNU gdb (Ubuntu 8.2.91.20190405-0ubuntu3) 8.2.91.20190405-git\nCopyright (C) 2019 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\nType \"show copying\" and \"show warranty\" for details.\nThis GDB was configured as \"x86_64-linux-gnu\".\nType \"show configuration\" for configuration details.\nFor bug reporting instructions, please see:\n<http://www.gnu.org/software/gdb/bugs/>.\nFind the GDB manual and other documentation resources online at:\n <http://www.gnu.org/software/gdb/documentation/>.\nFor help, type \"help\".\nType \"apropos word\" to search for commands related to \"word\"...\nReading symbols from hello...\n(No debugging symbols found in hello)\n(gdb)\n```", "```cpp\n(gdb) l\n 1 #include <iostream>\n 2 int main()\n 3 {\n 4    int x = 10;\n 5    x += 2;\n 6    std::cout << \"Hello World! x = \" << x << std::endl;\n 7    return 0;\n 8 }\n```", "```cpp\n(gdb) b 5\n Breakpoint 1 at 0x1169: file hello.cpp, line 5.\n (gdb)\n```", "```cpp\n(gdb) r\n Starting program: /root/Chapter1/hello\n```", "```cpp\nBreakpoint 1, main () at hello.cpp:5\n 5 x += 2;\n```", "```cpp\n(gdb) n\n6 std::cout << \"Hello World! x = \" << x << std::endl;\nthe 'n' command (short for next) execute one line. Now we may want to check the content of the variable x after the increment:\n```", "```cpp\n(gdb) p x\n$1 = 12\n```", "```cpp\n(gdb) c \n Continuing.\n Hello World! x = 12\n [Inferior 1 (process 101) exited normally]\n (gdb)\n```", "```cpp\nroot@5fd725701f0f:/# ps u\nUSER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND\nroot 1 0.0 0.1 4184 3396 pts/0 Ss 17:20 0:00 bash\nroot 18 0.0 0.1 5832 2856 pts/0 R+ 17:22 0:00 ps u\n```", "```cpp\nroot@e9ebbdbe3899:/# ps aux\nUSER PID %CPU %MEM VSZ RSS TTY STAT START TIME COMMAND\nroot 1 0.0 0.1 4184 3344 pts/0 Ss 16:24 0:00 bash\nroot 149 0.0 0.1 4184 3348 pts/1 Ss 17:40 0:00 bash\nroot 172 85.0 0.0 5832 1708 pts/0 R+ 18:02 0:04 ./hello\nroot 173 0.0 0.1 5832 2804 pts/1 R+ 18:02 0:00 ps aux\nroot@e9ebbdbe3899:/# ll /proc/172/\ntotal 0\ndr-xr-xr-x 9 root root 0 May 12 18:02 ./\ndr-xr-xr-x 200 root root 0 May 12 16:24 ../\ndr-xr-xr-x 2 root root 0 May 12 18:02 attr/\n-rw-r--r-- 1 root root 0 May 12 18:02 autogroup\n-r-------- 1 root root 0 May 12 18:02 auxv\n-r--r--r-- 1 root root 0 May 12 18:02 cgroup\n--w------- 1 root root 0 May 12 18:02 clear_refs\n-r--r--r-- 1 root root 0 May 12 18:02 cmdline\n-rw-r--r-- 1 root root 0 May 12 18:02 comm\n-rw-r--r-- 1 root root 0 May 12 18:02 coredump_filter\n-r--r--r-- 1 root root 0 May 12 18:02 cpuset\nlrwxrwxrwx 1 root root 0 May 12 18:02 cwd -> /root/Chapter1/\n-r-------- 1 root root 0 May 12 18:02 environ\nlrwxrwxrwx 1 root root 0 May 12 18:02 exe -> /root/Chapter1/hello*\ndr-x------ 2 root root 0 May 12 18:02 fd/\ndr-x------ 2 root root 0 May 12 18:02 fdinfo/\n-rw-r--r-- 1 root root 0 May 12 18:02 gid_map\n-r-------- 1 root root 0 May 12 18:02 io\n-r--r--r-- 1 root root 0 May 12 18:02 limits\n... \n```", "```cpp\nroot@5fd725701f0f:/# kill -9 PID\n```", "```cpp\nroot@e9ebbdbe3899:/# cp file file2\n cp: cannot stat 'file': No such file or directory\n root@e9ebbdbe3899:/# echo $?\n 1\n```", "```cpp\n#!/bin/bash\ncat does_not_exists.txt\nif [ $? -eq 0 ]\nthen\n    echo \"All good, does_not_exist.txt exists!\"\n    exit 0\nelse\n    echo \"does_not_exist.txt really DOES NOT exists!!\" >&2\n    exit 11\nfi\n```", "```cpp\nroot@e9ebbdbe3899:~# chmod u+x first_script.sh\n```", "```cpp\ncp file.txt ~/projects && rm -f file.txt\n```", "```cpp\ncp file.txt ~/projects || echo 'copy failed!'\n```", "```cpp\n#include <fcntl.h>\n#include <stdio.h>\n#include <stdlib.h>\n#include <errno.h>\n#include <string.h>\n\nint main(int argc, char *argv[])\n{\n    int fileDesc = open(\"myFile.txt\", O_RDONLY);\n    if (fileDesc == -1)\n    {\n        fprintf(stderr, \"Cannot open myFile.txt .. error: %d\\n\", \n           fileDesc);\n        fprintf(stderr, \"errno code = %d\\n\", errno);\n        fprintf(stderr, \"errno meaningn = %s\\n\", strerror(errno));\n        exit(1);\n    }\n}\n```", "```cpp\nRETURN VALUES\n     If successful, open() returns a non-negative integer, termed a \nfile descriptor. It \n      returns -1 on failure, and sets errno to indicate the error\n```"]