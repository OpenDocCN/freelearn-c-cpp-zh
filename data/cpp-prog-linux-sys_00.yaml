- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: 'Greetings, dear reader! You are among friends. Welcome to this journey of advanced
    skills, unexpected surprises, cunning knowledge, and novel programming tools.
    Suppose you are an experienced software engineer who knows how to write quality
    code and is aware of some build and operating systems. You have also met several
    computer architectures and fixed one or two bugs. And how about the following:
    You are a student who just learns how to do the job of a software engineer. You
    want to be a good professional someday. And you want to be the expert, whom others
    call, whenever the software behaves unpredictably. Or you just have picked up
    this book out of initial interest, still not knowing what to expect. Then perfect!'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 亲爱的读者，您好！您已经置身于朋友之中。欢迎您踏上高级技能、意外惊喜、巧妙知识和新颖编程工具的旅程。假设您是一位经验丰富的软件工程师，知道如何编写高质量的代码，并对一些构建和操作系统有所了解。您也遇到过几种计算机架构，并修复了一个或两个错误。那么以下情况如何：您是一位刚开始学习如何成为一名软件工程师的学生。您希望有一天成为一名优秀的专业人士。您希望成为别人在软件行为不可预测时寻求的专家。或者您只是出于最初的好奇心拿起这本书，还不知道能期待什么。那就太完美了！
- en: We challenge you to remember any situations in your practice, where, to this
    day, you have no explanation of what happened. No, we do not mean the supernatural
    – although this topic is rather arcane. We speak about the system and how we conduct
    its behavior as professional engineers. Our code is just an instrument that tells
    the machine what to do. So, let’s say you have remembered that one bug that has
    been bugging you for some time – how do you proceed? What if it stands between
    you and your next promotion? How about when it disappoints a client that is important
    to you? Or you just want to impress your teacher. We get you! We are there, too.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 我们挑战您回忆一下在您的实践中，至今仍无法解释发生了什么的情况。不，我们不是指超自然现象——尽管这个话题相当晦涩。我们谈论的是系统及其行为，以及我们作为专业工程师如何进行其行为。我们的代码只是告诉机器做什么的工具。所以，假设您已经记起了一个困扰您一段时间的问题——您将如何处理？如果它阻碍了您晋升的道路呢？或者当它让一个对您来说重要的客户失望时呢？或者您只是想给您的老师留下深刻印象。我们理解您！我们也在那里。
- en: Do not be fooled, though. We give you the opportunity to enrich the way you
    engineer through some fundamental pointers, but we do not have all the answers.
    We strongly believe that changing the way you see how code works will make you
    a more robust expert, no matter your professional field. And you should care because
    the world of technology is rapidly advancing. It is impossible to keep up with
    every innovation, algorithm, language, operating system, and architecture. But
    you could start asking yourself the right questions at the right moment. You have
    the possibility to know how to optimize further, design better, validate your
    environment, and encourage yourself to understand your own work thoroughly.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，不要被误导。我们通过一些基本要点为您提供机会，丰富您作为工程师的方式，但我们并非拥有所有答案。我们坚信，改变您看待代码工作方式的方法将使您成为一个更加稳健的专家，无论您的专业领域是什么。您应该关心这一点，因为技术世界正在快速发展。跟上每一个创新、算法、语言、操作系统和架构是不可能的。但您可以在正确的时间提出正确的问题。您有机会了解如何进一步优化、更好地设计、验证您的环境，并激励自己彻底理解您的工作。
- en: We challenge you again. This time to be more self-aware and efficient through
    our experience and expertise. There are some sophisticated real-world challenges
    that we so impatiently want to share with you. Please remember, it will take you
    some time. As friends, we hope you enjoy this book and share the exciting parts
    with others. Chop-chop... Let’s go!
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 我们再次向您发起挑战。这次，通过我们的经验和专业知识，让我们帮助您更加自我意识和高效。有一些复杂的现实世界挑战，我们急切地想要与您分享。请记住，这需要您花费一些时间。作为朋友，我们希望您喜欢这本书，并将其中激动人心的部分与他人分享。快快……让我们出发吧！
- en: Who this book is for
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向的对象
- en: This book is for programmers and developers who want to boost their programming
    knowledge in C++ for Linux and Unix-based operating systems. Whether you are a
    beginner looking to learn how to use C++ in such an environment or an experienced
    programmer looking to explore the latest C++20 features applicable to system programming,
    you’ll find this book helpful.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向希望提升在基于Linux和Unix操作系统中C++编程知识的程序员和开发者。无论您是希望学习如何在这样的环境中使用C++的初学者，还是希望探索适用于系统编程的最新C++20特性的经验丰富的程序员，您都会发现这本书很有帮助。
- en: What this book covers
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[*Chapter 1*](B20833_01.xhtml#_idTextAnchor014), *Getting Started with the
    Linux Systems and the POSIX Standard*, introduces the reader to the reasoning
    behind the existence of different operating systems. The Linux specifics are discussed,
    and the reader proceeds to the fundamentals of Unix-based OS programming. The
    kernel space and user spaces are mentioned as the System Call Interface is explained
    thoroughly. Afterward, we use this opportunity to present POSIX and some standard
    function calls in order to let the reader grasp the benefits of the system programming.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*](B20833_01.xhtml#_idTextAnchor014), *开始使用Linux系统和POSIX标准*，向读者介绍了不同操作系统存在的理由。讨论了Linux的特定内容，读者接着学习基于Unix的操作系统编程的基础。提到了内核空间和用户空间，因为系统调用接口被彻底解释。之后，我们利用这个机会介绍POSIX和一些标准函数调用，以便让读者了解系统编程的好处。'
- en: '[*Chapter 2*](B20833_02.xhtml#_idTextAnchor029), *Learning More about Process
    Management*, expands on learnings from the previous chapter and states that if
    the operating system is the main resource manager, then the process is the main
    resource user. It does so through a routine, which could get complex and needs
    to be well analyzed. Therefore, the chapter goes through the main process’s life
    cycle - its startup, running, and final states. The nature of the thread is presented
    as well. We go through the OS’s scheduling algorithms as well. A sample C++ application
    is introduced and its `main()` function is discussed as an entry point. In addition,
    different ways to initiate a process are presented: `fork()`, `vfork()`, and `exec()`.
    Other fundamental functions such as `wait()`, `exit()`, `pthread_create()`, and
    `pthread_join()` are discussed as well.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*](B20833_02.xhtml#_idTextAnchor029), *关于进程管理的更多学习*，扩展了前一章的学习内容，并指出如果操作系统是主要资源管理器，那么进程就是主要资源使用者。这是通过一个可能变得复杂且需要良好分析的过程来实现的。因此，本章介绍了主要进程的生命周期——其启动、运行和最终状态。还介绍了线程的本质。我们探讨了操作系统的调度算法。引入了一个示例C++应用程序，并讨论了其`main()`函数作为入口点。此外，还介绍了启动进程的不同方法：`fork()`、`vfork()`和`exec()`。还讨论了其他基本函数，如`wait()`、`exit()`、`pthread_create()`和`pthread_join()`。'
- en: '[*Chapter 3*](B20833_03.xhtml#_idTextAnchor047), *Navigating through the Filesystems*,
    shows how the file is the basic resource representation in Linux - both for data
    and access to I/O devices. This abstraction allows the user to manipulate streams
    or store data in the same manner, through the same system interfaces. The file
    system structure - metadata and inodes, is discussed. Examples of C++ file system
    operations are presented to the reader. We use this opportunity to introduce the
    pipes as an initial instrument for inter-process communication. The `string_view`
    C++20 object is offered as well. At the end, we mention signal handling as it
    will be required for later chapters.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*](B20833_03.xhtml#_idTextAnchor047), *文件系统导航*，展示了文件在Linux中作为基本资源表示的作用——无论是数据还是对I/O设备的访问。这种抽象允许用户以相同的方式通过相同的系统接口操作流或存储数据。我们讨论了文件系统结构——元数据和inode。向读者展示了C++文件系统操作的示例。我们利用这个机会介绍了管道作为进程间通信的初始工具。还提供了C++20的`string_view`对象。最后，我们提到了信号处理，因为它将在后续章节中需要。'
- en: '[*Chapter 4*](B20833_04.xhtml#_idTextAnchor060), *Diving Deep into the C++
    Object*, guides the reader through some core C++ features like the process of
    object creation and its initialization. We discuss lifetime object problems, temporaries,
    RVO, RAII pattern, and C++20\. We also cover function objects and lambda expressions
    together with their specifics and guidance on how to use them. Next, we will get
    deeper into lambdas. In the end, we will focus on some specific examples of how
    to use lambdas in STL and multithreading.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*](B20833_04.xhtml#_idTextAnchor060), *深入C++对象*，引导读者了解一些核心的C++特性，如对象的创建过程及其初始化。我们讨论了生命周期对象问题、临时对象、RVO、RAII模式以及C++20。我们还一起介绍了函数对象和lambda表达式，以及如何使用它们的详细说明。接下来，我们将更深入地探讨lambda表达式。最后，我们将关注一些如何在STL和多线程中使用lambda表达式的具体示例。'
- en: '[*Chapter 5*](B20833_05.xhtml#_idTextAnchor075), *Handling Errors with C++*,
    explores the different kinds of error reporting in C++ programming for Unix-based
    operating systems, such as error codes, exceptions, and asserts. We will discuss
    the best practices in exception handling and exception manipulation and what happens
    with uncaught exceptions in the system. We will discuss the exception specifications
    and why we prefer the `noexcept` keyword. We will go through the performance impact
    when using exceptions and the mechanics behind them. Next, we will discuss how
    we can use `std::optional` to handle errors. At the end, we will discuss what
    `std::uncaught_exceptions` functionality provides.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](B20833_05.xhtml#_idTextAnchor075)，*使用C++处理错误*，探讨了基于Unix操作系统的C++编程中不同类型的错误报告，如错误代码、异常和断言。我们将讨论异常处理和异常操作的最佳实践以及未捕获异常在系统中的情况。我们将讨论异常规范以及为什么我们更喜欢`noexcept`关键字。我们将探讨使用异常时的性能影响及其背后的机制。接下来，我们将讨论如何使用`std::optional`来处理错误。最后，我们将讨论`std::uncaught_exceptions`功能提供了什么。'
- en: '[*Chapter 6*](B20833_06.xhtml#_idTextAnchor086), *Concurrent System Programming
    with C++*, discusses the fundamentals and the theory behind processes and threads
    in Unix-based operating systems. We will go through the changes in the memory
    model of C++ in order to natively support concurrency. We will get acquainted
    with the C++ primitives which enable multithreading support - thread, jthread,
    and task. Next, we will learn how to synchronize the execution of parallel code
    using C++ synchronization primitives. We will also investigate what STL provides
    in the direction of parallel algorithms. In the end, we will learn how to write
    lock-free code.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*](B20833_06.xhtml#_idTextAnchor086)，*使用C++进行并发系统编程*，讨论了基于Unix的操作系统中的进程和线程的基本原理和理论。我们将探讨C++内存模型的变化，以便原生地支持并发。我们将熟悉C++原语，这些原语使多线程支持成为可能——线程、jthread和任务。接下来，我们将学习如何使用C++同步原语来同步并行代码的执行。我们还将研究STL在并行算法方向上提供了什么。最后，我们将学习如何编写无锁代码。'
- en: '[*Chapter 7*](B20833_07.xhtml#_idTextAnchor101), *Proceeding with Inter-process
    Communication*, guides readers through the basic IPC mechanisms in the Linux environment
    (as they already have the impression of the multithreading’s challenges). It is
    important that the processes are able to communicate with each other easily, therefore,
    we go quickly through message queues. They allow the exchange of data without
    blocking processes. We will spend some time discussing synchronization mechanisms
    – semaphore and mutex- and then proceed with the shared memory. It provides quick
    access to some data and, at the same time, allows heterogeneous systems to have
    a common point for data exchange. At last, the sockets are frequently used, but
    mainly for their possibility to allow communication between computer systems on
    the network.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](B20833_07.xhtml#_idTextAnchor101)，*进程间通信的进行*，引导读者了解Linux环境中的基本IPC机制（因为他们已经对多线程的挑战有所了解）。进程之间能够轻松地相互通信是很重要的，因此，我们快速地浏览了消息队列。它们允许在不阻塞进程的情况下交换数据。我们将花一些时间讨论同步机制——信号量和互斥量——然后继续讨论共享内存。它提供了对某些数据的快速访问，同时允许异构系统有一个数据交换的共同点。最后，套接字经常被使用，但主要是为了它们允许网络上的计算机系统之间进行通信的可能性。'
- en: '[*Chapter 8*](B20833_08.xhtml#_idTextAnchor116), *Using Clocks, Timers, and
    Signals in Linux*, introduces the signals and timers in Unix-based operating systems.
    We will initially present how the signaling system works and how the user can
    effectively manage the time of operations. We will cover what C++ language provides
    as functionality to handle clocks and timers. We will introduce the standard time
    API, `std::chrono`, predefined clocks and times. Next, we will cover how to use
    them correctly and what to expect from them. Next, we will focus on the duration
    capabilities that the standard provides and user-defined clocks. Ultimately, we
    will cover the calendar and time zone libraries introduced in C++20.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B20833_08.xhtml#_idTextAnchor116)，*在Linux中使用时钟、定时器和信号*，介绍了基于Unix的操作系统中的信号和定时器。我们最初将介绍信号系统是如何工作的，以及用户如何有效地管理操作时间。我们将介绍C++语言提供的功能来处理时钟和定时器。我们将介绍标准时间API，`std::chrono`，预定义的时钟和时间。接下来，我们将介绍如何正确使用它们以及可以期待什么。然后，我们将关注标准提供的持续时间功能以及用户定义的时钟。最终，我们将介绍C++20中引入的日历和时间库。'
- en: '[*Chapter 9*](B20833_09.xhtml#_idTextAnchor129), *Understanding the C++ Memory
    Model*, explores some new C++20 features. It guides the reader through some crucial
    remarks on how and why to manage dynamic resources. It proceeds with a discussion
    on the conditional variables and mutex usages, as well as lazy initialization
    and cache friendliness. An introduction to the C++ memory order follows as we
    discuss ways to choose from different synchronization mechanisms. The spinlock/ticketlock
    techniques are also presented.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B20833_09.xhtml#_idTextAnchor129)，*理解C++内存模型*，探讨了C++20的一些新特性。它指导读者了解如何以及为什么管理动态资源的一些关键评论。接着讨论了条件变量和互斥锁的使用，以及懒初始化和缓存友好性。在讨论如何从不同的同步机制中选择方法时，介绍了C++内存顺序。还展示了自旋锁/票选锁技术。'
- en: '[*Chapter 10*](B20833_10.xhtml#_idTextAnchor147), *Using Coroutines in C++
    for System Programming*, talks about coroutines, an already existing term with
    implementations in some programming languages, but now they are introduced in
    C++20\. They are described as stackless functions suspended during execution and
    resumed later. The chapter discusses those exact valuable features in the area
    of system programming. Their disadvantages are also discussed, for example, keeping
    the suspended coroutine state on the heap. Some practical usages are presented.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B20833_10.xhtml#_idTextAnchor147)，*在系统编程中使用C++协程*，讨论了协程，这是一个在有些编程语言中已有实现但现在是C++20中引入的概念。它们被描述为在执行期间挂起并在稍后恢复的栈函数。本章讨论了系统编程领域中的这些确切的有价值特性。还讨论了它们的缺点，例如，在堆上保持挂起的协程状态。还展示了某些实际用法。'
- en: To get the most out of this book
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: Some familiarity with the basics of the C++ language and POSIX programming in
    C language is required before starting with this book. Prior knowledge of the
    fundamentals of Linux and Unix will be helpful but not necessary.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始本书之前，需要熟悉C++语言的基础和C语言中的POSIX编程。对Linux和Unix的基本知识将有所帮助，但不是必需的。
- en: '| **Software covered in** **the book** | **Operating** **system requirements**
    |'
  id: totrans-20
  prefs: []
  type: TYPE_TB
  zh: '| **本书涵盖的软件** | **操作系统要求** |'
- en: '| --- | --- |'
  id: totrans-21
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| C++20 | Linux Mint 21 |'
  id: totrans-22
  prefs: []
  type: TYPE_TB
  zh: '| C++20 | Linux Mint 21 |'
- en: '| GCC12.2 |  |'
  id: totrans-23
  prefs: []
  type: TYPE_TB
  zh: '| GCC12.2 |  |'
- en: '| godbolt.org |  |'
  id: totrans-24
  prefs: []
  type: TYPE_TB
  zh: '| godbolt.org |  |'
- en: If you are using the digital version of this book, we advise you to type the
    code yourself or access the code from the book’s GitHub repository (a link is
    available in the next section). Doing so will help you avoid any potential errors
    in copying and pasting code.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是本书的数字版，我们建议您亲自输入代码或从本书的GitHub仓库（下一节中提供链接）获取代码。这样做将帮助您避免复制粘贴代码时可能出现的任何潜在错误。
- en: Each chapter has its respective Technical requirements. All examples are run
    through them. The code is system-dependent, so it might not work directly in your
    environment.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 每一章都有其各自的技术要求。所有示例都经过这些要求运行。代码依赖于系统，因此可能无法直接在您的环境中运行。
- en: Download the example code files
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/C-Programming-for-Linux-Systems](https://github.com/PacktPublishing/C-Programming-for-Linux-Systems).
    If there’s an update to the code, it will be updated in the GitHub repository.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub（[https://github.com/PacktPublishing/C-Programming-for-Linux-Systems](https://github.com/PacktPublishing/C-Programming-for-Linux-Systems)）下载本书的示例代码文件。如果代码有更新，它将在GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他来自我们丰富的图书和视频目录的代码包可供选择，这些代码包可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。查看它们吧！
- en: Conventions used
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “The example uses the `open()` and `close()` POSIX
    functions, which try to open and close a file from the filesystem of our Linux
    test environment.”'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter账号。以下是一个示例：“该示例使用`open()`和`close()`
    POSIX函数，这些函数尝试从我们的Linux测试环境的文件系统中打开和关闭文件。”'
- en: 'A block of code is set as follows:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望您注意代码块中的特定部分时，相关的行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都按以下方式编写：
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Tips or important notes
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士或重要注意事项
- en: Appear like this.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来像这样。
- en: Get in touch
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：如果你对本书的任何方面有疑问，请通过电子邮件发送至[customercare@packtpub.com](mailto:customercare@packtpub.com)，并在邮件主题中提及书名。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误表**：尽管我们已经尽最大努力确保内容的准确性，但错误仍然可能发生。如果你在这本书中发现了错误，我们非常感谢你向我们报告。请访问[www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)并填写表格。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**：如果你在互联网上遇到我们作品的任何形式的非法副本，我们非常感谢你提供位置地址或网站名称。请通过[copyright@packt.com](mailto:copyright@packt.com)与我们联系，并提供材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果你有兴趣成为作者**：如果你在某个领域有专业知识，并且你感兴趣的是撰写或为本书做出贡献，请访问[authors.packtpub.com](http://authors.packtpub.com)。'
- en: Share Your Thoughts
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享你的想法
- en: Once you’ve read *C++ Programming for Linux Systems*, we’d love to hear your
    thoughts! Please [click here to go straight to the Amazon review page](https://packt.link/r/1805129007)
    for this book and share your feedback.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你阅读了《Linux系统编程的C++编程》，我们很乐意听到你的想法！请[点击此处直接转到该书的亚马逊评论页面](https://packt.link/r/1805129007)并分享你的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 你的评论对我们和科技社区非常重要，并将帮助我们确保我们提供高质量的内容。
- en: Download a free PDF copy of this book
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载本书的免费PDF副本
- en: Thanks for purchasing this book!
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢你购买本书！
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你喜欢在旅途中阅读，但无法携带你的印刷书籍到处走吗？
- en: Is your eBook purchase not compatible with the device of your choice?
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你的电子书购买是否与你的选择设备不兼容？
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 别担心，现在，随着每本Packt书籍，你都可以免费获得该书的DRM免费PDF版本。
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何地方、任何时间、任何设备上阅读。直接从你最喜欢的技术书籍中搜索、复制和粘贴代码到你的应用程序中。
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 优惠远不止这些，你还可以获得独家折扣、时事通讯和每日免费内容的每日电子邮件。
- en: 'Follow these simple steps to get the benefits:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下简单步骤获取优惠：
- en: Scan the QR code or visit the link below
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描下面的二维码或访问以下链接
- en: '![](img/B20833_QR_Free_PDF.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B20833_QR_Free_PDF.jpg)'
- en: '[https://packt.link/free-ebook/9781805129004](https://packt.link/free-ebook/9781805129004)'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/free-ebook/9781805129004](https://packt.link/free-ebook/9781805129004)'
- en: Submit your proof of purchase
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交你的购买证明
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  id: totrans-62
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这些！我们将直接将你的免费PDF和其他优惠发送到你的电子邮件中
- en: Part 1:Securing the Fundamentals
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一部分：巩固基础
- en: This part of the book will provide you with the necessary instruments to get
    into the advanced topics of system programming. Experienced readers will find
    it helpful, too, as some of the C++20 features are practically presented in the
    area of system programming. This part ensures that the readers are on the same
    page with the presented subjects and provides the opportunity to extract the best
    from the technical examples. At the same time, it notes important aspects of the
    Linux system development.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的这一部分将为你提供进入系统编程高级主题所需的基本工具。经验丰富的读者也会发现这部分内容很有帮助，因为C++20的一些特性在系统编程领域得到了实际的应用。本部分确保读者与所讨论的主题保持一致，并提供从技术示例中提取最佳内容的机会。同时，它还注意到了Linux系统开发的重要方面。
- en: 'This part has the following chapters:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含以下章节：
- en: '[*Chapter 1*](B20833_01.xhtml#_idTextAnchor014)*, Getting Started with Linux
    Systems and the POSIX Standard*'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第1章*](B20833_01.xhtml#_idTextAnchor014)*，从Linux系统和POSIX标准开始学习*'
- en: '[*Chapter 2*](B20833_02.xhtml#_idTextAnchor029)*, Learning More about Process
    Management*'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第2章*](B20833_02.xhtml#_idTextAnchor029)*，学习更多关于进程管理*'
- en: '[*Chapter 3*](B20833_03.xhtml#_idTextAnchor047)*, Navigating through the Filesystems*'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第3章*](B20833_03.xhtml#_idTextAnchor047)*，在文件系统中导航*'
- en: '[*Chapter 4*](B20833_04.xhtml#_idTextAnchor060)*, Diving Deep into the C++
    Object*'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第4章*](B20833_04.xhtml#_idTextAnchor060)*，深入探索C++对象*'
- en: '[*Chapter 5*](B20833_05.xhtml#_idTextAnchor075)*, Handling Errors with C++*'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第5章*](B20833_05.xhtml#_idTextAnchor075)*，使用C++处理错误*'
