- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Companies need to utilize C++ for its speed. However, object-oriented software
    design leads to code which is easier to modify and maintain. Understanding how
    to utilize C++ as an object-oriented language is essential. Programming in C++
    won't guarantee OOP – one must understand OO concepts and how they map to C++
    language features as well as OO programming techniques. Additionally, programmers
    will want to harness additional skills beyond OOP to make code more generic, more
    robust, as well as employ well-tested, creative solutions which can be found in
    popular design patterns.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 公司需要利用C++的速度。然而，面向对象的软件设计会导致更容易修改和维护的代码。了解如何将C++作为面向对象的语言使用是至关重要的。在C++中编程并不能保证面向对象编程-必须理解面向对象的概念以及它们如何映射到C++语言特性以及面向对象编程技术。此外，程序员还希望掌握超出面向对象编程的额外技能，以使代码更通用、更健壮，并采用经过充分测试的创造性解决方案，这些解决方案可以在流行的设计模式中找到。
- en: A programmer who learns how to use C++ as an object-oriented language will become
    a valuable C++ developer. A C++ programmer without OOP understanding and skills
    is one whose code will be difficult to maintain, modify or to understand by anyone
    else. Becoming an OO programmer in C++ is a valuable skill desired by companies
    needing to utilize this language.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 学习如何将C++作为面向对象语言使用的程序员将成为有价值的C++开发人员。一个没有面向对象理解和技能的C++程序员，其代码将难以被其他人维护、修改或理解。成为C++中的面向对象程序员是公司需要利用这种语言的宝贵技能。
- en: This book has step-by-step explanations of essential OO concepts, paired with
    practical examples in code and often with diagrams so you can truly understand
    how and why things work. Self-assessment questions are available to test your
    skills.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本书详细解释了基本的面向对象概念，并配有实际的代码示例，通常还附有图表，以便您真正理解事物的工作原理和原因。自我评估问题可用于测试您的技能。
- en: This book first provides the necessary building blocks of skills (which may
    not be object-oriented), which provide an essential foundation on which the OO
    essentials will be built. Next, OO concepts will be described and paired with
    language features as well as coding techniques so that you can understand how
    to use C++ as an OOP language successfully. Additionally, more advanced skills
    are added to augment the programmer's repertoire, including friend function/classes,
    operator overloading, templates (to build more generic code), exception handling
    (to build robust code), STL basics, as well as design patterns and idioms.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书首先提供了必要的技能构建模块（可能不是面向对象的），这些模块为面向对象的基本知识打下了基础。接下来，将描述面向对象的概念，并配以语言特性和编码技巧，以便您能够成功地将C++作为面向对象的语言使用。此外，还添加了更高级的技能，包括友元函数/类、运算符重载、模板（用于构建更通用的代码）、异常处理（用于构建健壮的代码）、STL基础，以及设计模式和习语。
- en: By the end of this book, you will understand both essential and advanced OO
    concepts and how to implement these concepts in C++. You will learn not just how
    to use C++, but how to use it as an OOP language. You will additionally understand
    ways to make more robust and easily maintainable code, as well as understand how
    to employ well tested design patterns as part of your programming repertoire.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 通过本书，您将了解基本和高级的面向对象概念，以及如何在C++中实现这些概念。您将学会不仅如何使用C++，还要如何将其作为面向对象的语言使用。此外，您还将了解如何使代码更健壮、更易于维护，以及如何在编程中使用经过充分测试的设计模式。
- en: Who this book is for
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书适合谁
- en: This book's intended audience is professional programmers as well as adept college
    students who want to understand how to utilize C++ as an object-oriented programming
    language to write robust, maintainable code. This book assumes the reader is a
    programmer, but not one who is necessarily familiar with C++. The early chapters
    concisely review core language features and serve as building blocks for the predominant
    OOP chapters, advanced features and design patterns.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本书的目标读者是专业程序员以及熟练的大学生，他们希望了解如何利用C++作为面向对象编程语言来编写健壮、易于维护的代码。本书假设读者是程序员，但不一定熟悉C++。早期章节简要回顾了核心语言特性，并作为主要面向对象编程章节、高级特性和设计模式的基石。
- en: What this book covers
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[*Chapter 1*](B15702_01_Final_NM_ePub.xhtml#_idTextAnchor018), *Understanding
    Basic C++ Assumptions*, provides a concise review of basic language features assumed
    in the book, which existing programmers can quickly grasp.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*]，*理解基本的C++假设*，提供了本书中假定的基本语言特性的简要回顾，现有程序员可以快速掌握。'
- en: '[*Chapter 2*](B15702_02_Final_NM_ePub.xhtml#_idTextAnchor066), *Adding Language
    Necessities*, reviews non-OO features that are critical C++ building blocks: const
    qualifiers, function prototyping (default values) and function overloading.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*]，*添加语言必需品*，回顾了关键的非面向对象特性，这些特性是C++的基本构建模块：const修饰符、函数原型（默认值）和函数重载。'
- en: '[*Chapter 3*](B15702_03_Final_NM_ePub.xhtml#_idTextAnchor112), *Indirect Addressing
    – Pointers*, reviews pointers in C++, including memory allocation/deallocation,
    pointer usage/dereferencing, usage in function arguments and void *''s.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*]，*间接寻址-指针*，回顾了C++中的指针，包括内存分配/释放、指针使用/解引用、在函数参数中的使用和void *。'
- en: '[*Chapter 4*](B15702_04_Final_NM_ePub.xhtml#_idTextAnchor169), *Indirect Addressing
    – References*, introduces references as an alternative to pointers, including
    initialization, function arguments/return values and const qualification.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*]，*间接寻址-引用*，介绍了引用作为指针的替代方法，包括初始化、函数参数/返回值和const修饰。'
- en: '[*Chapter 5*](B15702_05_Final_NM_ePub.xhtml#_idTextAnchor199), *Exploring Classes
    in Detail*, introduces OOP by first exploring OO the concepts of encapsulation
    and information hiding and then covers class features in detail: member functions,
    the `this` pointer, access labels and regions, constructors, destructors and qualifiers
    on data members and member functions (`const`, `static`, `inline`).'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 第5章《详细探讨类》首先介绍了面向对象编程，探讨了封装和信息隐藏的概念，然后详细介绍了类的特性：成员函数、`this`指针、访问标签和区域、构造函数、析构函数以及数据成员和成员函数的限定符（`const`、`static`、`inline`）。
- en: '[*Chapter 6*](B15702_06_Final_NM_ePub.xhtml#_idTextAnchor262), *Implementing
    Hierarchies with Single Inheritance*, details generalization and specialization
    using single inheritance. It covers inheriting members, the use of base class
    constructors, inherited access regions, the order of construction/destruction,
    as well as public versus private and protected base classes and how this changes
    the meaning of inheritance.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 第6章《使用单一继承实现层次结构》详细介绍了使用单一继承进行概括和特化。它涵盖了继承成员、基类构造函数的使用、继承的访问区域、构造/析构的顺序，以及公共与私有和受保护的基类，以及这如何改变继承的含义。
- en: '[*Chapter 7*](B15702_07_Final_NM_ePub.xhtml#_idTextAnchor298), *Utilizing Dynamic
    Binding through Polymorphism*, describes the OO concept of polymorphism and then
    distinguishes operation from method, and details virtual functions and the runtime
    binding of methods to operations (including how the v-table works).'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 第7章《通过多态性利用动态绑定》描述了多态性的面向对象概念，然后区分了操作和方法，并详细介绍了虚函数和方法的运行时绑定（包括v表的工作原理）。
- en: '[*Chapter 8*](B15702_08_Final_NM_ePub.xhtml#_idTextAnchor335), *Mastering Abstract
    Classes*, explains the OO concept of an abstract class, their implementation using
    pure virtual functions, the OO concept of an interface and how to implement it,
    as well as up and down casting within a public inheritance hierarchy.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 第8章《掌握抽象类》解释了抽象类的面向对象概念，它们使用纯虚拟函数进行实现，接口的面向对象概念以及如何实现它，以及在公共继承层次结构中进行向上和向下转换。
- en: '[*Chapter 9*](B15702_09_Final_NM_ePub.xhtml#_idTextAnchor361), *Exploring Multiple
    Inheritance*, details how to use multiple inheritance as well as its controversy
    in OO designs. It covers virtual base classes, diamond-shaped hierarchies, and
    when to consider alternate designs by examining the OO concept of a discriminator.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 第9章《探索多重继承》详细介绍了如何使用多重继承以及在面向对象设计中的争议。它涵盖了虚基类、菱形继承结构，以及通过检查鉴别器的面向对象概念来考虑替代设计的时机。
- en: '[*Chapter 10*](B15702_10_Final_NM_ePub.xhtml#_idTextAnchor386), *Implementing
    Association, Aggregation and Composition*, describes the OO concepts of association,
    aggregation and composition and how to implement each concept using pointers,
    sets of pointers, containment and sometimes references.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 第10章《实现关联、聚合和组合》描述了关联、聚合和组合的面向对象概念以及如何使用指针、指针集、包含和有时引用来实现每个概念。
- en: '[*Chapter 11*](B15702_11_Final_NM_ePub.xhtml#_idTextAnchor417), *Handling Exceptions*,
    explains how to `try`, `throw`, and `catch` exceptions by considering many exception
    scenarios. It also shows how to extend an exception handling hierarchy.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 第11章《处理异常》解释了如何通过考虑许多异常情况来`try`、`throw`和`catch`异常。它还展示了如何扩展异常处理层次结构。
- en: '[*Chapter 12*](B15702_12_Final_NM_ePub.xhtml#_idTextAnchor453), *Friends and
    Operator Overloading*, explains the proper use of friend functions and classes,
    and examines operator overloading (which may use friends) to allow an operator
    to work with user defined types in the same way it works with standard types.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 第12章《友元和运算符重载》解释了友元函数和类的正确使用，并检查了运算符重载（可能使用友元）以使运算符与用户定义的类型以与标准类型相同的方式工作。
- en: '[*Chapter 13*](B15702_13_Final_NM_ePub.xhtml#_idTextAnchor486), *Working with
    Templates*, details template functions and classes to genericize certain types
    of code to work with any data type. It also shows how operator overloading can
    make selected code more generic for any type to further support the use of templates.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第13章《使用模板》详细介绍了模板函数和类，以使某些类型的代码通用化以适用于任何数据类型。它还展示了如何通过运算符重载使选定的代码更通用，以进一步支持模板的使用。
- en: '[*Chapter 14*](B15702_14_Final_NM_ePub.xhtml#_idTextAnchor518), *Understanding
    STL Basics*, introduces the Standard Template Library in C++ and demonstrates
    how to use common containers, such as `list`, `iterator`, `deque`, `stack`, `queue`,
    `priority_queue` and `map`. Additionally, STL algorithms and functors are introduced.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 第14章《理解STL基础》介绍了C++中的标准模板库，并演示了如何使用常见的容器，如`list`、`iterator`、`deque`、`stack`、`queue`、`priority_queue`和`map`。此外，还介绍了STL算法和函数对象。
- en: '[*Chapter 15*](B15702_15_Final_NM_ePub.xhtml#_idTextAnchor572), *Testing Classes
    and Components*, illustrates OO testing methods using the canonical class form,
    drivers to test classes, and shows how to test classes related through inheritance,
    association and aggregation and testing classes using exception handling.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 第15章《测试类和组件》说明了使用经典类形式进行面向对象测试方法，用于测试类的驱动程序，并展示了如何通过继承、关联和聚合来测试相关类，并使用异常处理来测试类。
- en: '[*Chapter 16*](B15702_16_Final_NM_ePub.xhtml#_idTextAnchor622), *Using the
    Observer Pattern*, introduces design patterns overall, and then explains the Observer
    pattern with an in-depth example illustrating the components of the pattern.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 第16章《使用观察者模式》介绍了设计模式的整体概念，然后通过深入示例解释了观察者模式，说明了模式的各个组成部分。
- en: '[*Chapter 17*](B15702_17_Final_NM_ePub.xhtml#_idTextAnchor649), *Applying the
    Factory Pattern*, introduces the Factory Method pattern and showcases its implementation
    with and without an Object Factory. It also compares an Object Factory with an
    Abstract Factory.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第17章*](B15702_17_Final_NM_ePub.xhtml#_idTextAnchor649)，*应用工厂模式*，介绍了工厂方法模式，并展示了其在有或没有对象工厂的情况下的实现。还比较了对象工厂和抽象工厂。'
- en: '[*Chapter 18*](B15702_18_Final_NM_ePub.xhtml#_idTextAnchor682), *Applying the
    Adapter Pattern*, examines the Adapter pattern, providing strategies and examples
    utilizing inheritance versus association to implement the pattern. Additionally,
    it demonstrates a wrapper class as a simple Adapter.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第18章*](B15702_18_Final_NM_ePub.xhtml#_idTextAnchor682)，*应用适配器模式*，探讨了适配器模式，提供了使用继承与关联来实现该模式的策略和示例。此外，它演示了一个包装类作为简单的适配器。'
- en: '[*Chapter 19*](B15702_19_Final_NM_ePub.xhtml#_idTextAnchor718), *Using the
    Singleton Pattern*, examines in detail the Singleton pattern with a sophisticated
    paired-class implementation. Singleton registries are also introduced.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第19章*](B15702_19_Final_NM_ePub.xhtml#_idTextAnchor718)，*使用单例模式*，详细探讨了单例模式，以及一个复杂的成对类实现。还介绍了单例注册表。'
- en: '[*Chapter 20*](B15702_20_Final_NM_ePub.xhtml#_idTextAnchor756), *Removing Implementation
    Details Using the pImpl Pattern*, describes the pImpl pattern to reduce compile
    time dependencies within code. A detailed implementation is explored using unique
    pointers. Performance issues are explored relating to the pattern.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第20章*](B15702_20_Final_NM_ePub.xhtml#_idTextAnchor756)，*使用pImpl模式去除实现细节*，描述了pImpl模式，以减少代码中的编译时间依赖关系。使用了独特指针来探讨了详细的实现。还探讨了与该模式相关的性能问题。'
- en: To get the most out of this book
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 充分利用本书
- en: It is assumed that you have a current C++ compiler available. You will want
    to try the many online code examples! You may use any C++ compiler; however, version
    17 or higher is recommended. The code presented will be C++20 compliant, but will
    work equally well in version 17\. Minimally, please download g++ from [https://gcc.gnu.org](https://gcc.gnu.org).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您有一个当前的C++编译器可用。您可以尝试许多在线代码示例！您可以使用任何C++编译器；但建议使用17版或更高版本。所呈现的代码将符合C++20标准，但在17版中同样有效。请至少从[https://gcc.gnu.org](https://gcc.gnu.org)下载g++。
- en: '![](img/B15702_Preface_Table_01.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B15702_Preface_Table_01.jpg)'
- en: '*Please keep in mind that though there is an ISO standard for C++, some compilers
    vary and interpret the standard with very slight differences.*'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '*请记住，虽然C++有一个ISO标准，但一些编译器会有所不同，并以微小的差异解释标准。*'
- en: If you are using the digital version of this book, we advise you to type the
    code yourself or access the code via the GitHub repository (link available in
    the next section). Doing so will help you avoid any potential errors related to
    the copying and pasting of code.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是本书的数字版本，我们建议您自己输入代码或通过GitHub存储库（链接在下一节中提供）访问代码。这样做将有助于避免与复制和粘贴代码相关的任何潜在错误。
- en: '*Trying the coding examples as you read the book is highly recommended. Completing
    the assessments will further enhance your grasp of each new concept.*'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*强烈建议您在阅读本书时尝试编码示例。完成评估将进一步加强您对每个新概念的理解。*'
- en: Download the example code files
  id: totrans-35
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from your account at [www.packt.com](http://www.packt.com).
    If you purchased this book elsewhere, you can visit [www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files emailed directly to you.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[www.packt.com](http://www.packt.com)的帐户中下载本书的示例代码文件。如果您在其他地方购买了本书，您可以访问[www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便直接通过电子邮件接收文件。
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/Demystified-Object-Oriented-Programming-with-CPP](https://github.com/PacktPublishing/Demystified-Object-Oriented-Programming-with-CPP).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 该书的代码包也托管在GitHub上，网址为[https://github.com/PacktPublishing/Demystified-Object-Oriented-Programming-with-CPP](https://github.com/PacktPublishing/Demystified-Object-Oriented-Programming-with-CPP)。如果代码有更新，将在现有的GitHub存储库上进行更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他代码包，来自我们丰富的图书和视频目录，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)上找到。去看看吧！
- en: Download the color images
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图片
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一个PDF文件，其中包含本书中使用的屏幕截图/图表的彩色图片。您可以在此处下载：
- en: '[https://static.packt-cdn.com/downloads/9781839218835_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781839218835_ColorImages.pdf)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://static.packt-cdn.com/downloads/9781839218835_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781839218835_ColorImages.pdf)'
- en: Code in Action
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实战代码
- en: 'Please visit the following link to check the CiA videos: [https://bit.ly/2P1UXlI](https://bit.ly/2P1UXlI)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 请访问以下链接查看CiA视频：[https://bit.ly/2P1UXlI](https://bit.ly/2P1UXlI)
- en: Conventions used
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 本书中使用了许多文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example from the book: "Reviewing our aforementioned `main()`
    function, we first create an `STL` `list` of `Humanoid` pointers with `list<Humanoid
    *> allies;`."'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter句柄。以下是书中的一个例子："回顾我们前面的`main()`函数，我们首先创建一个`STL`的`list`，其中包含`list<Humanoid
    *> allies;`。"'
- en: 'A block of code or program segment is set as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块或程序段设置如下：
- en: '[PRE0]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都将按如下方式编写：
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see on
    screen. For example, words in menus or dialog boxes appear in the text like this.
    Here is an example: "The pImpl pattern (**p**ointer to **Impl**ementation idiom)
    is a structural design pattern that separates the implementation of a class from
    its public interface."'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示一个新术语，一个重要的词，或者你在屏幕上看到的词。例如，菜单或对话框中的单词会以这种方式出现在文本中。这里有一个例子：“pImpl模式（**p**ointer
    to **Impl**ementation idiom）是一种结构设计模式，它将类的实现与其公共接口分离开来。”'
- en: Tips or important notes
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 提示或重要说明
- en: Appear like this.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 会以这种方式出现。
- en: Get in touch
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at [customercare@packtpub.com](mailto:customercare@packtpub.com).'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：如果您对本书的任何方面有疑问，请在您的消息主题中提及书名，并发送电子邮件至[customercare@packtpub.com](mailto:customercare@packtpub.com)。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误**：尽管我们已经尽一切努力确保内容的准确性，但错误是难免的。如果您在本书中发现错误，我们将不胜感激，如果您能向我们报告。请访问[www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)，选择您的书籍，点击“勘误提交表格”链接，并输入详细信息。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**：如果您在互联网上发现我们作品的任何形式的非法副本，我们将不胜感激，如果您能向我们提供地址或网站名称。请通过链接联系我们，发送至[copyright@packt.com](mailto:copyright@packt.com)。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in, and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**：如果您在某个专业领域有专长，并且有兴趣撰写或为一本书做出贡献，请访问[authors.packtpub.com](http://authors.packtpub.com)。'
- en: Reviews
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评论
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 请留下评论。当您阅读并使用本书后，为什么不在购买书籍的网站上留下评论呢？潜在的读者可以看到并使用您的客观意见来做出购买决定，我们在Packt可以了解您对我们产品的看法，我们的作者也可以看到您对他们书籍的反馈。谢谢！
- en: For more information about Packt, please visit [packt.com](http://packt.com).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 有关Packt的更多信息，请访问[packt.com](http://packt.com)。
