- en: '*Chapter 3*: Turning an LED On or Off Using a Push Button'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第三章*：使用按钮点亮或熄灭LED'
- en: 'In this chapter, we will review and practice how to turn an LED on or off using
    a **push button** connected to a microcontroller board. A push button is a practical
    component that acts like a switch and is used for closing or opening an electronic
    circuit. We can use them to initialize or activate a process in a microcontroller
    board. Consequently, the input data provided by a push button is important in
    many microcontroller applications that require human intervention. Specifically,
    we will cover the following main topics in this chapter:'
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将回顾和实践如何使用连接到微控制器板的**按钮**来点亮或熄灭LED。按钮是一个实用的组件，其作用类似于开关，用于闭合或打开电子电路。我们可以使用它们来初始化或激活微控制器板上的一个过程。因此，按钮提供的输入数据对于许多需要人工干预的微控制器应用来说非常重要。具体来说，本章将涵盖以下主要内容：
- en: Introducing push buttons
  id: totrans-2
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍按钮
- en: Understanding electrical noise from push buttons
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解来自按钮的电气噪声
- en: Connecting an LED to a microcontroller board port and using an internal **pull-up**
    resistor
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将LED连接到微控制器板端口并使用内部**上拉**电阻
- en: Testing out the push button
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试按钮
- en: By the end of this chapter, you will have learned how to connect a push button
    to the Curiosity Nano and the Blue Pill microcontroller boards, as well as how
    to program the push button's input to turn an LED on or off. You will also have
    learned how to reduce the problem of **electrical noise** in push buttons. Trying
    to solve this problem is not trivial, as we will see in this chapter. In particular,
    the *Understanding electrical noise from push buttons* section explains that not
    all push buttons work 100% free of manufacturing errors, and electrical noise
    can be present in them when they are used.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将学会如何将按钮连接到Curiosity Nano和Blue Pill微控制器板，以及如何编程按钮的输入来点亮或熄灭LED。你还将学会如何减少按钮中的**电气噪声**问题。正如我们将在本章中看到的那样，尝试解决这个问题并不简单。特别是，“理解来自按钮的电气噪声”部分解释说，并非所有按钮都能100%无制造错误地工作，并且在使用时可能存在电气噪声。
- en: Technical requirements
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The software tools that we will use in this chapter will be the **MPLAB-X**
    and **Arduino IDEs**. The code in this chapter can be found in this book''s GitHub
    repository at the following URL:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本章我们将使用的软件工具将是**MPLAB-X**和**Arduino IDE**。本章的代码可以在本书的GitHub存储库中找到，以下是URL：
- en: '[https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter03](https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter03)'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter03](https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter03)'
- en: 'The Code in Action video for this chapter can be found here: [https://bit.ly/3cXfZLM](https://bit.ly/3cXfZLM)'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的“代码在行动”视频可以在这里找到：[https://bit.ly/3cXfZLM](https://bit.ly/3cXfZLM)
- en: 'The code examples in this repository will be used to turn an LED on or off
    using the Curiosity Nano and the Blue Pill microcontroller boards. The IDEs''
    installation guides and uses were explained in [*Chapter 1*](B16413_01_Final_NM_ePub.xhtml#_idTextAnchor014),
    *Introduction to Microcontrollers and Microcontroller Boards*. In this chapter,
    we will also use the following pieces of hardware:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本存储库中的代码示例将用于使用Curiosity Nano和Blue Pill微控制器板来点亮或熄灭LED。IDE的安装指南和使用方法在[*第一章*](B16413_01_Final_NM_ePub.xhtml#_idTextAnchor014)，“微控制器和微控制器板简介”中已解释。在本章中，我们还将使用以下硬件：
- en: A solderless breadboard.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 无焊面包板。
- en: The Blue Pill and Curiosity Nano microcontroller boards.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Blue Pill和Curiosity Nano微控制器板。
- en: A micro-USB cable for connecting your microcontroller boards to a computer.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用于将微控制器板连接到计算机的微型USB线。
- en: The ST-Link/V2 electronic interface, which is needed to upload the compiled
    code to the Blue Pill. Bear in mind that the ST-Link/V2 requires four female-to-female
    DuPont wires.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 需要上传编译代码到Blue Pill的ST-Link/V2电子接口。请注意，ST-Link/V2需要四根公对公的杜邦线。
- en: One LED. Any color will do. We prefer to use a red one for our exercises.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个LED。任何颜色都可以。我们更喜欢在练习中使用红色。
- en: One 220-ohm resistor rated at one-quarter watt.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个220欧姆、额定功率为四分之一瓦的电阻。
- en: Four male-to-male DuPont wires for connecting the resistor and the push button
    to the boards.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 四根公对公的杜邦线，用于将电阻和按钮连接到板上。
- en: A regular, **normally open** push button.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个普通的、**常开**按钮。
- en: The next section provides a brief introduction to push buttons, which are used
    in electronic circuits.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节简要介绍了按钮开关，这些开关在电子电路中得到了应用。
- en: Introducing push buttons
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍按钮开关
- en: 'A push button is an electronic device that basically acts like a mechanical
    **switch**; it can be used for either closing or opening an electrical or electronic
    circuit. They are also called *momentary push buttons*, or *pushbuttons*. Push
    buttons are made with hard materials such as plastic and have a tiny metal spring
    inside that makes contact with two wires or contacts, allowing electricity to
    flow through them if the button is pressed (in **normally open** push buttons)
    or when it is depressed (in **normally closed** push buttons). When the push button
    is off, the spring retracts, the electrical contact is interrupted, and electrical
    current will not flow through the contacts. Push buttons are useful for manually
    controlling or initializing a process in an electrical or electronic circuit,
    including applications that contain microcontroller boards. The following image
    shows a normally closed (left) and a normally open (right) push button:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮开关是一种基本像机械**开关**一样工作的电子设备；它可以用来闭合或断开电路。它们也被称为*瞬态按钮开关*或*按钮开关*。按钮开关由硬质材料如塑料制成，内部有一个微小的金属弹簧，它与两根电线或触点接触，如果按下按钮（在**通常开路**按钮开关中）或按下时（在**通常闭路**按钮开关中），允许电流通过它们。当按钮开关关闭时，弹簧缩回，电气接触被中断，电流不会通过触点流动。按钮开关用于手动控制或初始化电路中的过程，包括包含微控制器板的应用。以下图像显示了通常闭路（左侧）和通常开路（右侧）的按钮开关：
- en: '![Figure 3.1 – Normally closed (left) and normally open (right) push buttons](img/Figure_3.1_B16413.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![图3.1 – 通常闭路（左侧）和通常开路（右侧）按钮开关](img/Figure_3.1_B16413.jpg)'
- en: Figure 3.1 – Normally closed (left) and normally open (right) push buttons
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.1 – 通常闭路（左侧）和通常开路（右侧）按钮开关
- en: As you can see in *Figure 3.1*, the normally open push button (on right) looks
    depressed. Note that the pins are connected to a microcontroller board.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 如*图3.1*所示，通常开路的按钮开关（在右侧）看起来是按下的。请注意，引脚连接到了微控制器板上。
- en: Note
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 注意
- en: Normally open and normally closed push buttons may look exactly the same, depending
    on their manufacturers and models. If you are unsure, try your button with a microcontroller
    board and see what type of push button it is. If the push button sends a logic
    signal to the microcontroller board without you needing to press it, this means
    that it is a normally closed push button. In this chapter, you will learn how
    to connect a push button to a microcontroller board.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 通常开路和通常闭路的按钮开关可能看起来完全相同，这取决于它们的制造商和型号。如果您不确定，请尝试使用微控制器板测试您的按钮，看看它是什么类型的按钮开关。如果按钮开关在不需要您按下它的情况下向微控制器板发送逻辑信号，这意味着它是一个通常闭路的按钮开关。在本章中，您将学习如何将按钮开关连接到微控制器板上。
- en: A typical application of a push button in microcontroller board projects is
    to connect or disconnect either the ground or a positive voltage from an I/O pin
    on the microcontroller board. This voltage change that's made by the push button
    can be seen by the microcontroller board through its I/O pin (port); this initializes
    a process in the microcontroller board.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在微控制器板项目中，按钮开关的一个典型应用是连接或断开微控制器板上的I/O引脚的接地或正电压。按钮开关产生的这种电压变化可以通过微控制器板的I/O引脚（端口）被微控制器板看到；这将在微控制器板上初始化一个过程。
- en: 'There are different types of push buttons in terms of size. Large and robust
    ones are used for some industrial applications where an operator needs to quickly
    identify and push them. Smaller buttons are typically used in electrical appliances
    and devices, such as computer keyboards and landline telephones. In this chapter,
    we will use a small push button that is commonly found in many electronic kits
    and in kits that include microcontroller boards. In fact, the Blue Pill and the
    Curiosity Nano microcontroller boards have small push buttons in their circuits.
    They can be used in both boards for resetting the programs that run on them. There
    are two main types of push buttons: **normally open** and **normally closed**
    push buttons. Let''s look at them in more detail:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮根据尺寸的不同，有多种类型。大而坚固的按钮通常用于一些工业应用，在这些应用中，操作员需要快速识别并按下它们。较小的按钮通常用于家用电器和设备，例如电脑键盘和固定电话。在本章中，我们将使用一种常见的小型按钮，这种按钮在许多电子套件和包含微控制器板的套件中都很常见。实际上，Blue
    Pill和Curiosity Nano微控制器板在其电路中都有小型按钮。它们可以用于这两个板来重置其上运行的程序。主要有两种类型的按钮：**常开**和**常闭**按钮。让我们更详细地看看它们：
- en: '**Normally open push buttons**. In this type of button, its switch always remains
    open when it is not pressed; that is, it does not close an electrical circuit.
    It makes an electrical contact (closes a circuit) every time we press it. When
    we press the push button down, its internal switch closes. These are the most
    common types of push buttons. They can be useful for momentarily activating or
    initializing a process; for example, pressing the push button briefly to reset
    a microcontroller board.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**常开按钮**。在这种类型的按钮中，当未按下时，其开关始终保持开启状态；也就是说，它不会闭合电路。每次我们按下它时，它都会建立电气接触（闭合电路）。当我们按下按钮时，其内部开关关闭。这些是最常见的按钮类型。它们可以用于暂时激活或初始化一个过程；例如，短暂按下按钮以重置微控制器板。'
- en: '**Normally closed push buttons**. In its default state, this button can close
    a circuit, meaning that its switch is normally closed without us having to press
    the push button. We open the switch (hence the circuit where it is connected to)
    when we press this type of push button. These buttons can be useful when we need
    to momentarily turn off or interrupt an electrical/electronic circuit. For example,
    we can open the connection of a sensor to a microcontroller board if we want to
    stop reading the sensor for whatever reason.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**常闭按钮**。在其默认状态下，此按钮可以闭合电路，这意味着其开关在未按下按钮的情况下通常是闭合的。当我们按下这种类型的按钮时，我们打开开关（因此连接到电路的电路也被打开）。这些按钮在需要暂时关闭或中断电气/电子电路时非常有用。例如，如果我们想停止读取传感器，我们可以打开传感器与微控制器板之间的连接。'
- en: The next section describes a problem that is present in many push buttons, known
    as **electrical noise**. This type of noise can sometimes be very difficult (but
    not impossible) to minimize.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节描述了许多按钮中存在的一个问题，称为**电气噪声**。这种类型的噪声有时可能非常难以（但并非不可能）最小化。
- en: Understanding electrical noise from push buttons
  id: totrans-33
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解按钮产生的电气噪声
- en: Electrical noise can be generated in many push buttons. This can negatively
    affect the functionality of an electronic circuit where the push button is connected,
    and it can have unpredictable results in a microcontroller board.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多按钮中都可以产生电气噪声。这可能会对按钮连接的电子电路的功能产生负面影响，并在微控制器板上产生不可预测的结果。
- en: A common problem with push buttons is that *they are not perfect*. They don't
    close their switch instantly, and in many cases, electrical noise can be produced.
    This may happen because not all the push buttons are free of manufacturing errors.
    If we try to connect a push button directly to a microcontroller's I/O port, every
    time we press the button, it seems that we do it right. To us, it seems like we
    pressed it only once. However, to the microcontroller board, it looks like the
    button was pressed many times for extremely short periods of time, and this is
    because of electrical noise that is generated in the push button. Electrical noise
    can be defined as random electrical levels or signals coupling with an electronic
    circuit. This electrical disturbance or interference can vary greatly, from very
    small voltages to high voltage levels, and its frequency can also change randomly.
    There are many sources that generate electrical noise, including heat, faulty
    electronic components, mechanical movement, and loose electrical connections in
    a circuit, among other sources.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮的一个常见问题是**它们并不完美**。它们不会立即关闭开关，并且在许多情况下会产生电噪声。这可能是因为并非所有按钮都完全无制造错误。如果我们尝试将按钮直接连接到微控制器的I/O端口，每次按下按钮时，我们似乎都按对了。对我们来说，这似乎就像我们只按了一次。然而，对微控制器板来说，它看起来按钮被按了多次，而且时间非常短，这是由于按钮中产生的电噪声。电噪声可以定义为与电子电路耦合的随机电平或信号。这种电干扰或干扰可能变化很大，从非常小的电压到高电压水平，其频率也可能随机变化。有许多来源会产生电噪声，包括热量、有缺陷的电子元件、机械运动以及电路中的松散电气连接等。
- en: The undesired electrical noise from push buttons is almost always generated
    by something called **bouncing**, which is caused by the friction and mechanical
    movements of the push button's internal metal parts and spring. We need to **debounce**
    the push button to diminish its electrical noise and thus properly close a circuit
    (if we are using a normally open push button) in a clean and efficient way. If
    we don't debounce a push button, its internal switch may close a circuit erratically
    every time we press the push button, which will affect the functionality of the
    entire circuit or microcontroller board's input. The data signal that's generated
    by a push button should be either zero volts (logical LOW) or 3.3 volts (logical
    HIGH). If we don't debounce a push button, it will create electrical noise that
    possibly changes those logical levels, and thus the microcontroller board may
    not recognize them as such.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 来自按钮的不希望的电噪声几乎总是由一种称为**抖动**的现象引起的，这是由按钮内部金属部件和弹簧的摩擦和机械运动造成的。我们需要对按钮进行**去抖动**，以减少其电噪声，并因此以干净和高效的方式正确地闭合电路（如果我们使用的是常开按钮）。如果我们不对按钮进行去抖动，其内部开关可能会在每次按下按钮时无规律地闭合电路，这将影响整个电路或微控制器板的输入功能。按钮产生的数据信号应该是零伏特（逻辑低）或3.3伏特（逻辑高）。如果我们不对按钮进行去抖动，它将产生可能改变这些逻辑级别的电噪声，因此微控制器板可能无法将其识别为这样的信号。
- en: Important
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 重要
- en: The HIGH **logic level** voltage used in both the Blue Pill and the Curiosity
    Nano boards is 3.3 volts. Remember that in some microcontroller boards, their
    HIGH logic level is 5 volts instead of 3.3 volts, such as the Arduino family of
    microcontroller boards.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在Blue Pill和Curiosity Nano板上使用的**高逻辑电平**电压是3.3伏特。记住，在某些微控制器板上，它们的逻辑高电平是5伏特而不是3.3伏特，例如Arduino系列的微控制器板。
- en: There are several techniques that deal with electrical noise in push buttons.
    For example, this type of noise can be greatly minimized by either connecting
    some electronic components to a push button, or via coding, as we will see in
    the next few sections.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种技术可以处理按钮中的电噪声。例如，这种噪声可以通过连接一些电子元件到按钮，或者通过编码来大大减少，正如我们将在接下来的几节中看到的。
- en: Debouncing a push button via hardware
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过硬件去抖动按钮
- en: 'One way to reduce electrical noise from a push button is to connect a capacitor
    and two resistors (this is also called **RC debouncing** circuit, a resistor-capacitor
    network, or an RC filter) connected to the push button, as shown in the following
    diagram. When we press the push button, the capacitor will be charged. When we
    release the button, the capacitor will retain its charge for a very short period
    of time, and the resistor that is connected to it will discharge it after that
    time. That capacitor''s charge represents a HIGH logic voltage, and it can be
    used in a microcontroller board. Any transient electrical noise that occurs during
    the capacitor''s charge time can be ignored because the capacitor is providing
    a HIGH logical value in the meantime:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 减少按钮电噪声的一种方法是将一个电容器和两个电阻（这也可以称为**RC去抖动**电路、电阻-电容器网络或RC滤波器）连接到按钮上，如图所示。当我们按下按钮时，电容器将被充电。当我们释放按钮时，电容器将保持其电荷一段时间，然后连接到它的电阻将在之后放电。这个电容器的电荷代表一个高逻辑电压，它可以在微控制器板上使用。在电容器充电期间发生的任何瞬态电噪声都可以忽略，因为在此期间电容器提供了一个高逻辑值：
- en: '![Figure 3.2 – An RC debouncer connected to a push button](img/Figure_3.2_B16413.jpg)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![图3.2 – 连接到按钮的RC去抖动器](img/Figure_3.2_B16413.jpg)'
- en: Figure 3.2 – An RC debouncer connected to a push button
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.2 – 连接到按钮的RC去抖动器
- en: The preceding diagram contains two resistors, **R1** and **R2**, a normally
    open push button, and a capacitor, **C**. The resistors and the capacitor form
    an RC debouncer. Remember that **Vcc** means positive voltage, which is 3.3 volts
    for the Curiosity Nano and Blue Pill. Generally, you can obtain Vcc from one of
    the pins of the microcontroller board labeled 3.3V or Vcc. In addition, you can
    connect the RC debouncer to one of the microcontroller pins labeled as ground.
    As we saw in the preceding diagram, the three electronic components can be used
    to reduce electrical noise in the push button. The typical values for **R1**,
    **R2**, and **C** are 10K ohms, 10K ohms, and 0.1 microfarads, respectively, although
    you may need to change those values if the RC debouncer is not working effectively,
    because the electrical noise is not always the same in each push button. The mathematical
    formula for calculating the RC debouncer is thoroughly explained Ganssle, J.G.
    (2008), *A guide to debouncing*.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 上述图示包含两个电阻，**R1** 和 **R2**，一个常开按钮，和一个电容器，**C**。电阻和电容器形成一个RC去抖动器。记住，**Vcc** 表示正电压，对于Curiosity
    Nano和Blue Pill来说，是3.3伏。通常，您可以从标记为3.3V或Vcc的微控制器板的一个引脚获得Vcc。此外，您可以将RC去抖动器连接到标记为地的一个微控制器引脚。正如我们在前面的图示中看到的，这三个电子元件可以用来减少按钮中的电噪声。**R1**、**R2**
    和 **C** 的典型值分别是10K欧姆、10K欧姆和0.1微法拉，尽管如果RC去抖动器没有有效工作，您可能需要更改这些值，因为每个按钮中的电噪声并不总是相同的。RC去抖动器的数学公式在Ganssle,
    J.G. (2008)的《去抖动指南》中有详细解释。
- en: We included the RC debouncer in this section as a reference, just in case the
    debouncing method via software does not work for you. The next section will show
    you how to debounce a push button using software *only*.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本节中包含了RC去抖动器作为参考，以防软件去抖动方法对您不起作用。下一节将向您展示如何仅使用软件去抖动按钮。
- en: Debouncing a push button via software
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过软件去抖动按钮
- en: 'We can minimize the spurious electrical noise from a push button via coding.
    A trick that we can use in the code is to ignore the electrical noise for a very
    short period of time (usually some dozens of milliseconds), right after we press
    the push button connected to our circuit. The following diagram shows how to connect
    a push button directly to a microcontroller board''s I/O port to perform debouncing
    via software:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过编码来最小化按钮产生的虚假电噪声。我们可以在代码中使用的一个技巧是在按下连接到我们电路的按钮后，立即忽略一段非常短时间的电噪声（通常是一些几十毫秒）。以下图示展示了如何将按钮直接连接到微控制器板的I/O端口，以通过软件进行去抖动：
- en: '![Figure 3.3 – A push button connected to an I/O port with a pull-down resistor](img/Figure_3.3_B16413.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图3.3 – 带下拉电阻连接到I/O端口的按钮](img/Figure_3.3_B16413.jpg)'
- en: Figure 3.3 – A push button connected to an I/O port with a pull-down resistor
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.3 – 带下拉电阻连接到I/O端口的按钮
- en: 'The preceding diagram shows a pull-down resistor, **R**, that is forcing the
    input port from the microcontroller board to receive zero volts (logical LOW),
    which is connected to ground, while the push button is not being pressed. A typical
    value for the pull-down resistor, **R**, is 10k ohms. We can use a pull-down resistor
    when we need to constantly input a LOW level to the microcontroller board''s I/O
    port, and just change to a logical HIGH level when we press the push button. This
    can be useful for momentarily starting a process, for example, turning on a light
    connected to our circuit. The following diagram shows how to connect a pull-up
    resistor to a microcontroller port, forcing its input to be 3.3 volts (**Vcc**):'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的图中显示了一个下拉电阻，**R**，它迫使微控制器板的输入端口接收零伏（逻辑低），这连接到地，而按钮未被按下。下拉电阻，**R**，的典型值是 10k
    欧姆。当我们需要不断向微控制器板的 I/O 端口输入低电平时，我们可以使用下拉电阻。当我们按下按钮时，只需将其切换到逻辑高电平。这可以用于瞬间启动一个过程，例如，打开连接到我们电路的灯。以下图示展示了如何将上拉电阻连接到微控制器端口，强制其输入为
    3.3 伏（**Vcc**）：
- en: '![Figure 3.4 – A push button connected to an I/O port with a pull-up resistor](img/Figure_3.4_B16413.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.4 – 带有上拉电阻连接到 I/O 端口的按钮](img/Figure_3.4_B16413.jpg)'
- en: Figure 3.4 – A push button connected to an I/O port with a pull-up resistor
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.4 – 带有上拉电阻连接到 I/O 端口的按钮
- en: The resistor's value (**R**) in the preceding diagram is typically 10K ohms.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 前面图中的电阻值（**R**）通常是 10K 欧姆。
- en: Important note
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: You need to connect either a pull-down or pull-up resistor to a microcontroller's input
    port, because if you don't connect anything to the port (this can happen when
    the push button is not being pressed), the port will present an undetermined (random)
    voltage at its input due to its internal electronics arrangement. This is called
    a **floating** input voltage.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要将下拉或上拉电阻连接到微控制器的输入端口，因为如果您不连接任何东西到端口（这可能在按钮未被按下时发生），端口将由于其内部电子排列而呈现未确定的（随机）电压。这被称为**浮空**输入电压。
- en: The preceding diagram includes a normally open push button. Once the push button
    is pressed, the input voltage will change to a logical HIGH level, or 3.3 volts.
    Remember that the logical HIGH level can be 5 volts, depending on the microcontroller
    board that you are using. The **Vcc** voltage and the ground are connected to
    the microcontroller board.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的图中包含一个常开按钮。一旦按钮被按下，输入电压将变为逻辑高电平，或 3.3 伏。请记住，逻辑高电平可以是 5 伏，这取决于你使用的微控制器板。**Vcc**
    电压和地线连接到微控制器板上。
- en: Fortunately, many microcontrollers provide internal pull-up and pull-down resistors
    that are connected to their I/O ports that can be activated via coding. The Blue
    Pill contains both! This means that we can connect a push button directly to its
    I/O ports, without connecting an external resistor, and just activate the board's
    internal pull-up or pull-down resistors via software. This speeds up prototyping
    development that requires the use of push buttons, but this may not always be
    the ideal solution.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，许多微控制器提供了内部上拉和下拉电阻，这些电阻连接到它们的 I/O 端口，可以通过编码激活。Blue Pill 就包含这些！这意味着我们可以直接将按钮连接到其
    I/O 端口，无需连接外部电阻，只需通过软件激活板上的内部上拉或下拉电阻。这可以加快需要使用按钮的原型开发，但这可能并不总是最佳解决方案。
- en: 'The following diagram shows two ways of connecting a push button directly to
    an I/O port. This port already has a pull-up or a pull-down resistor that''s been
    activated via software:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图示展示了两种将按钮直接连接到 I/O 端口的方法。此端口已经通过软件激活了一个上拉或下拉电阻：
- en: '![Figure 3.5 – Push buttons connected directly to an I/O port](img/B16413_Figure_3.1_NEW.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.5 – 直接连接到 I/O 端口的按钮](img/B16413_Figure_3.1_NEW.jpg)'
- en: Figure 3.5 – Push buttons connected directly to an I/O port
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.5 – 直接连接到 I/O 端口的按钮
- en: As you can see, the debouncing method via software does not use the RC debouncing
    that's connected to the push button. This method works most of the time, and it
    saves you time and effort. However, you should experiment and try out both methods
    if the electrical noise from the push button is persistent.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，软件去抖动方法不使用连接到按钮的 RC 去抖动。这种方法大多数时候都有效，并且可以节省您的时间和精力。然而，如果您发现按钮的电气噪声持续存在，您应该进行实验并尝试两种方法。
- en: Each debouncing method has its trade-offs. In the hardware-based method, you
    will need to connect some electronic components to the push button. You will also
    need to *buy* those extra components. In the software-based method, where you
    will be using the microcontroller's internal pull-up or pull-down resistors, you
    don't need to connect any extra components to the push button, but you will need
    to add more lines of code to your program to deal with the debouncing, and these
    instructions may take up some valuable processing cycles from your microcontroller.
    Despite this, we recommend that you use the software-based debouncing method because
    it is simple to implement.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 每种去抖动方法都有其权衡。在基于硬件的方法中，你需要在按钮上连接一些电子元件。你还需要购买这些额外的元件。在基于软件的方法中，你将使用微控制器的内部上拉或下拉电阻，你不需要将任何额外的元件连接到按钮上，但你需要在程序中添加更多行代码来处理去抖动，这些指令可能会占用微控制器的一些宝贵的处理周期。尽管如此，我们仍然建议你使用基于软件的去抖动方法，因为它易于实现。
- en: The next section deals with examples that show you how to connect a push button
    to the Blue Pill and Curiosity Nano microcontroller boards, as well as how to
    debounce it via software.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节将处理示例，展示如何将按钮连接到蓝色药丸和Curiosity Nano微控制器板，以及如何通过软件去抖动它。
- en: Connecting an LED to a microcontroller board port and using an internal pull-up
    resistor
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将LED连接到微控制器板端口并使用内部上拉电阻
- en: In this section, you will learn how to connect a push button to both the Blue
    Pill and the Curiosity Nano boards. This is a simple exercise for these microcontroller
    boards, and it demonstrates how to use a push button to send a logical LOW level
    signal to a microcontroller board to turn an LED connected to it on or off. If
    we want to use a push button in our electronic circuit example, we will need to
    connect it to an input port from a microcontroller board. Also, remember that
    we should debounce our push button to avoid undesirable results.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，你将学习如何将按钮连接到蓝色药丸和Curiosity Nano微控制器板。这对于这些微控制器板来说是一个简单的练习，它演示了如何使用按钮向微控制器板发送逻辑低电平信号来打开或关闭连接到它的LED。如果我们想在我们的电子电路示例中使用按钮，我们需要将其连接到微控制器板的一个输入端口。此外，请记住，我们应该去抖动按钮以避免不希望的结果。
- en: The following subsection will show you how to debounce a push button that is
    connected to the Blue Pill via coding. This is the simplest way to debounce a
    push button and you can use this method in other chapters of this book.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 以下小节将展示如何通过编码来去抖动连接到蓝色药丸的按钮。这是去抖动按钮最简单的方法，你可以在本书的其他章节中使用这种方法。
- en: Debouncing a push button via software connected to the Blue Pill
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过软件连接蓝色药丸来去抖动按钮
- en: In this section, we will show you a Fritzing diagram, and then a photo that
    shows how everything is connected. We will also look at some code that demonstrates
    how to debounce the push button via software.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将展示一个Fritzing图，然后是一张显示所有连接的图片。我们还将查看一些代码，演示如何通过软件去抖动按钮。
- en: 'The following is a Fritzing diagram that shows how to connect a push button
    directly to an I/O port that is already using its internal pull-up resistor. The
    LED and its respective resistor are connected to the Blue Pill''s port number;
    that is, `B12`:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一个Fritzing图，展示了如何将按钮直接连接到一个已经使用其内部上拉电阻的I/O端口。LED及其相应的电阻连接到蓝色药丸的端口号；即，`B12`：
- en: '![Figure 3.6 – A Blue Pill using its internal pull-up resistor with the push
    button](img/Figure_3.6_B16413.jpg)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![图3.6 – 使用内部上拉电阻的蓝色药丸与按钮](img/Figure_3.6_B16413.jpg)'
- en: Figure 3.6 – A Blue Pill using its internal pull-up resistor with the push button
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.6 – 使用内部上拉电阻的蓝色药丸与按钮
- en: As you can see, the LED will turn on or off every time we press the push button.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，每次我们按下按钮时，LED都会打开或关闭。
- en: 'Please note that in the preceding image, the push button is connected to the
    center of the breadboard, to the right of the microcontroller board. Follow these
    steps to connect the push button and the LED to the Blue Pill, as shown in the
    preceding image:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，在前面的图像中，按钮连接到面包板的中心，位于微控制器板的右侧。按照以下步骤将按钮和LED连接到蓝色药丸，如图所示：
- en: Insert the Blue Pill into the solderless breadboard.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将蓝色药丸插入无焊面包板。
- en: Insert the push button into the breadboard and connect one of its pins to the
    Blue Pill's ground pin using a DuPont wire.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将按钮插入面包板，并使用杜邦线将其中一个引脚连接到蓝色药丸的地线引脚。
- en: Connect another pin from the push button to port `B0` of the Blue Pill using
    a DuPont wire.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用杜邦线将按钮的另一个引脚连接到 Blue Pill 的 `B0` 端口。
- en: Insert a 220-ohm resistor into the breadboard and connect one of its pins to
    port B12 of the Blue Pill using a DuPont wire.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一个 220 欧姆的电阻插入面包板，并使用杜邦线将其一个引脚连接到 Blue Pill 的 B12 端口。
- en: Insert the LED into the breadboard, connecting its anode to the other resistor's
    pin.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 LED 插入面包板，将其阳极连接到另一个电阻的引脚。
- en: Connect the LED's cathode to one of the ground pins of the Blue Pill using a
    DuPont wire.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用杜邦线将 LED 的阴极连接到 Blue Pill 的一个地线引脚。
- en: 'The following image shows how to connect the push button to the Blue Pill,
    based on the Fritzing diagram shown previously:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像展示了如何根据之前显示的 Fritzing 图纸连接按钮到 Blue Pill：
- en: '![Figure 3.7 – Connecting the push button to the Blue Pill''s cathode, and
    then to one of the ground pins from the Blue Pill using a DuPont wire](img/Figure_3.7_B16413.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.7 – 将按钮连接到 Blue Pill 的阴极，然后使用杜邦线将其连接到 Blue Pill 的一个地线引脚](img/Figure_3.7_B16413.jpg)'
- en: Figure 3.7 – Connecting the push button to the Blue Pill's cathode, and then
    to one of the ground pins from the Blue Pill using a DuPont wire
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.7 – 将按钮连接到 Blue Pill 的阴极，然后使用杜邦线将其连接到 Blue Pill 的一个地线引脚
- en: As you can see, the Blue Pill board has ground (`G`) pins on the top and bottom
    rows of pins. This facilitates the component connections in the circuit.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，Blue Pill 板在引脚的顶部和底部行都有地（G）引脚。这有助于电路中的组件连接。
- en: Remember that you will need to connect the ST-Link/V2 electronic interface to
    the Blue Pill to upload the program to it from the Arduino IDE, as explained in
    [*Chapter 1*](B16413_01_Final_NM_ePub.xhtml#_idTextAnchor014)*,* *Introduction
    to Microcontrollers and Microcontroller Boards*.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，您需要将 ST-Link/V2 电子接口连接到 Blue Pill，以便从 Arduino IDE 上传程序，如[*第 1 章*](B16413_01_Final_NM_ePub.xhtml#_idTextAnchor014)*，*微控制器和微控制器板简介*中所述。
- en: 'The following code shows how to debounce a push button via software on the
    Blue Pill. You can find this code file in this book''s GitHub repository, with
    comments provided. The file is called `internal_pullup_debounce_Blue_Pill.ino`:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码展示了如何在 Blue Pill 上通过软件进行按钮消抖。您可以在本书的 GitHub 仓库中找到此代码文件，其中包含注释。文件名为 `internal_pullup_debounce_Blue_Pill.ino`：
- en: '[PRE0]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The preceding code waits 50 milliseconds once the push button has been pressed
    and toggles the LED value. This value is experimental, so you may need to change
    it if your push button is working erratically.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码在按钮按下后等待 50 毫秒，并切换 LED 的值。这个值是实验性的，所以如果你的按钮工作不稳定，你可能需要更改它。
- en: Important Note
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The Blue Pill's I/O ports are referenced in the Arduino IDE with the letter
    P. For example, port B12 is referenced as `PB12` in the IDE. In addition, the
    port labels (names) must be written in capital letters.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Arduino IDE 中，Blue Pill 的 I/O 端口用字母 P 表示。例如，端口 B12 在 IDE 中表示为 `PB12`。此外，端口标签（名称）必须用大写字母书写。
- en: As shown in the preceding code, it continuously reads the port `B0` of the Blue
    Pill. If the push button is pressed, port `B0` is connected to ground by the push
    button. Then, the `B12` output port sends out a HIGH logical level and turns on
    the LED connected to `B12`. If the push button is not pressed, the `B12` port
    sends out a LOW logical level.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如前述代码所示，它持续读取 Blue Pill 的端口 `B0`。如果按下按钮，按钮将端口 `B0` 连接到地。然后，`B12` 输出端口发送高逻辑电平并打开连接到
    `B12` 的 LED。如果未按下按钮，`B12` 端口发送低逻辑电平。
- en: Tip
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士
- en: 'You can also debounce a push button via software if you are using an Arduino
    microcontroller board. In fact, the software-based debouncing method we used in
    this chapter is based on the method that''s used in Arduino boards, as explained
    here:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用 Arduino 微控制器板，您也可以通过软件进行按钮消抖。实际上，我们在本章中使用的基于软件的消抖方法是基于 Arduino 板上使用的方法，如这里所述：
- en: '[https://www.arduino.cc/en/Tutorial/BuiltInExamples/Debounce](https://www.arduino.cc/en/Tutorial/BuiltInExamples/Debounce)'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://www.arduino.cc/en/Tutorial/BuiltInExamples/Debounce](https://www.arduino.cc/en/Tutorial/BuiltInExamples/Debounce)'
- en: If your LED turns on and off when you press the push button, congratulations!
    Pay attention to how the microcontroller board reacts when you press the push
    button. If the LED turns on erratically several times when you just press the
    push button, you may need to change either the resistor or capacitor values if
    you are doing RC debouncing, or change the millisecond waiting value if you are
    debouncing the push button via software.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您按下按钮时LED灯亮和灭，恭喜您！注意当您按下按钮时微控制器板如何反应。如果您在仅按下按钮时LED灯不规律地闪烁几次，如果您正在进行RC去抖动，您可能需要更改电阻或电容的值；如果您通过软件去抖动按钮，您可能需要更改毫秒等待值。
- en: The next section describes how to debounce a push button via software connected
    to the Curiosity Nano microcontroller board.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节描述了如何通过软件去抖动连接到Curiosity Nano微控制器板的按钮。
- en: Turning an LED on or off with a push button on the Curiosity Nano
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Curiosity Nano上的按钮开关LED灯
- en: In this section, we use the Curiosity Nano to debounce a push button via software
    by waiting some milliseconds once the push button has been pressed. We can use
    the `__delay_ms()` function for this. Remember that the function is written with
    two underscore symbols (`__`).
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们使用Curiosity Nano通过等待一些毫秒来软件去抖动按钮。我们可以使用`__delay_ms()`函数来完成此操作。请记住，该函数是用两个下划线符号（`__`）编写的。
- en: 'The following Fritzing diagram shows how to connect the push button to the
    Curiosity Nano:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 以下Fritzing图显示了如何将按钮连接到Curiosity Nano：
- en: '![Figure 3.8 – A push button directly connected to the Curiosity Nano board](img/Figure_3.8_B16413.jpg)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![图3.8 – 直接连接到Curiosity Nano板的按钮](img/Figure_3.8_B16413.jpg)'
- en: Figure 3.8 – A push button directly connected to the Curiosity Nano board
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.8 – 直接连接到Curiosity Nano板的按钮
- en: Please note that the push button is connected to the center of the breadboard,
    to the right of the microcontroller board.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，按钮连接到面包板的中心，位于微控制器板的右侧。
- en: 'According to the preceding image, here are the steps for connecting all the
    components:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 根据前面的图像，以下是连接所有组件的步骤：
- en: Insert the Curiosity Nano into the solderless breadboard.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将Curiosity Nano插入无焊面包板。
- en: Insert a push button into the breadboard and connect one of its pins to the
    Curiosity Nano's ground pin using a DuPont wire.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将按钮插入面包板，并使用杜邦线将其中一个引脚连接到Curiosity Nano的地线引脚。
- en: Connect another pin from the push button to port `RA0` of the Curiosity Nano
    using a DuPont wire.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用杜邦线将按钮的另一个引脚连接到Curiosity Nano的`RA0`端口。
- en: Insert a 220-ohm resistor into the breadboard and connect one of its pins to
    the port `RD2` of the Curiosity Nano using a DuPont wire.
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将一个220欧姆的电阻插入面包板，并使用杜邦线将其中一个引脚连接到Curiosity Nano的`RD2`端口。
- en: Insert the LED into the breadboard, connecting its anode to the other resistor's
    pin.
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将LED插入面包板，将其阳极连接到另一个电阻的引脚。
- en: Connect the LED's cathode to one of the ground pins of the Curiosity Nano using
    a DuPont wire.
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用杜邦线将LED的阴极连接到Curiosity Nano的一个地线引脚。
- en: 'The following image shows how everything is connected:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像显示了所有组件的连接方式：
- en: '![Figure 3.9 – The Curiosity Nano and a push button connected to it](img/Figure_3.9_B16413.jpg)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![图3.9 – Curiosity Nano和连接到它的按钮](img/Figure_3.9_B16413.jpg)'
- en: Figure 3.9 – The Curiosity Nano and a push button connected to it
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 图3.9 – 连接到Curiosity Nano的按钮
- en: In the preceding image, you can see that the Curiosity Nano has ground (`GND`)
    pins in both the upper and lower rows of pins. This allows us to wire the components
    in the circuit.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的图像中，您可以看到Curiosity Nano的上下行引脚都有地线（`GND`）引脚。这允许我们为电路中的组件布线。
- en: We have created a project for the MPLAB-X IDE, which can found in this book's
    GitHub repository. It contains comments explaining each line of code. You will
    need to uncompress its ZIP file first to open the project in the MPLAB-X IDE.
    This project file is called `16F15376_Curiosity_Nano_pushbutton.X.zip`.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 我们为MPLAB-X IDE创建了一个项目，该项目可以在本书的GitHub仓库中找到。它包含解释每行代码的注释。您需要首先解压其ZIP文件，然后在MPLAB-X
    IDE中打开项目。此项目文件名为`16F15376_Curiosity_Nano_pushbutton.X.zip`。
- en: 'The following code from that project shows how software-based debouncing is
    done:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 以下项目中的代码展示了如何通过软件实现去抖动：
- en: '[PRE1]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The preceding code reads the value from the push button and waits 100 milliseconds;
    then, it reads it again to see if the push button is still being pressed. We found
    this 100-millisecond value experimentally and it seems to work most of the time.
    Remember that you may need to adjust it, depending on how your own push button
    behaves in your circuit.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 之前的代码从按钮读取值并等待 100 毫秒；然后再次读取以查看按钮是否仍然被按下。我们通过实验找到了这个 100 毫秒的值，并且它似乎在大多数情况下都有效。记住，您可能需要根据您自己的按钮在电路中的表现进行调整。
- en: This is a slightly different approach than the one we used in the Blue Pill.
    We coded the waiting time to try and ignore some electrical noise that may occur
    during that time. If your LED turns on and off when you press the push button,
    congratulations! You are now able to connect and use a push button in an electronic
    circuit connected to a microcontroller board. Remember that a push button may
    be used to initiate a process or activity in a microcontroller board.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这与我们之前在 Blue Pill 中使用的方法略有不同。我们编码了等待时间，试图忽略在此期间可能发生的某些电气噪声。如果你的 LED 在按下按钮时开启和关闭，恭喜！你现在能够连接并使用连接到微控制器板的按钮。记住，按钮可以用来在微控制器板上启动一个过程或活动。
- en: The next section will show you how to check if a push button is working OK,
    and if it is a normally open or normally closed push button.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节将展示如何检查按钮是否正常工作，以及它是否是常开或常闭按钮。
- en: Testing out the push button
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试按钮
- en: 'In this section, we will focus on testing a push button. Before using it with
    a microcontroller board, it''s a good idea to try it out to see if it works mechanically,
    and testing allows us to find out if the push button is normally closed or normally
    opened. The following image shows how to connect all the components to try out
    the push button:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将专注于测试按钮。在使用微控制器板之前，尝试一下以检查其机械工作情况是个好主意，测试还可以帮助我们确定按钮是常闭还是常开。以下图片显示了如何连接所有组件以测试按钮：
- en: '![Figure 3.10 – Connecting the push button to an LED and a battery pack](img/Figure_3.10_B16413.jpg)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![图 3.10 – 将按钮连接到 LED 和电池组](img/Figure_3.10_B16413.jpg)'
- en: Figure 3.10 – Connecting the push button to an LED and a battery pack
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3.10 – 将按钮连接到 LED 和电池组
- en: 'As you can see, we don''t need to connect a push button to a microcontroller
    board to test it. Here are the steps for connecting the components and testing
    the push button:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 如您所见，我们不需要将按钮连接到微控制器板来测试它。以下是连接组件和测试按钮的步骤：
- en: Connect the batteries' positive **(+)** terminal to one pin of the push button.
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将电池的正极 **(+)** 端连接到按钮的一个引脚上。
- en: Connect the other push button pin to the 220-ohm resistor.
  id: totrans-125
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将另一个按钮引脚连接到 220 欧姆电阻。
- en: Connect the 220-ohm resistor to the LED's anode pin.
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 220 欧姆电阻连接到 LED 的阳极引脚。
- en: Connect the LED's cathode pin to the batteries' negative **(-)** terminal. Be
    careful when connecting the LED's pins. If it is connected in reverse, the LED
    will not turn on.
  id: totrans-127
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 LED 的阴极引脚连接到电池的负极 **(-)** 端。在连接 LED 的引脚时要小心。如果反接，LED 将不会点亮。
- en: Once you've connected everything, if the LED turns on without you pressing the
    push button, this means that the push button is of the normally closed type. If
    it does, the LED should turn off when you press the push button. If the LED turns
    on every time you press the push button, this means that it is a normally open
    one.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦连接好所有组件，如果 LED 在不按下按钮的情况下点亮，这意味着按钮是常闭型的。如果按下按钮，LED 应该熄灭。如果每次按下按钮时 LED 都点亮，这意味着它是常开型的。
- en: Press the push button several times. If the LED turns on and off erratically,
    or if the LED does not turn on at all, the push button may be faulty and you will
    need to replace it, assuming that the batteries have enough voltage.
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下按钮几次。如果 LED 不规则地开启和关闭，或者 LED 完全不亮，按钮可能存在故障，您需要更换它，前提是电池有足够的电压。
- en: Connecting the batteries to the push button and the LED should be enough to
    see if the push button works.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 将电池连接到按钮和 LED 上，应该足以检查按钮是否工作。
- en: Summary
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, we learned what a push button is and how can we reduce the
    problem of electrical noise that many push buttons have, a process called debouncing.
    This process can be done either via software or hardware. We also reviewed the
    importance of push buttons in some electronic projects that require human intervention
    – for example, how to manually restart a microcontroller board when we press its
    on-board push button. Using a push button in an electronic circuit containing
    a microcontroller board is important because you are programming a user interaction
    there, so a user can start a process in the microcontroller board.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了按钮是什么以及如何减少许多按钮都有的电气噪声问题，这个过程被称为消抖。这个过程可以通过软件或硬件来完成。我们还回顾了按钮在一些需要人工干预的电子项目中的重要性——例如，当我们按下其板载按钮时，如何手动重新启动微控制器板。在包含微控制器板的电子电路中使用按钮很重要，因为你在那里编程用户交互，所以用户可以启动微控制器板上的一个过程。
- en: The next chapter will focus on how to connect a photoresistor (a sensor that
    measures the amount of light in the environment).
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章将重点介绍如何连接光敏电阻（一种测量环境中光量的传感器）。
- en: Further reading
  id: totrans-134
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Ganssle, J.G. (2008). *A guide to debouncing*. Technical Report. Baltimore,
    MD: The Ganssle Group.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ganssle, J.G. (2008). *消抖指南*. 技术报告。马里兰州巴尔的摩：Ganssle Group。
- en: 'Gay, W. (2018). *Beginning STM32: Developing with FreeRTOS, libopencm3 and
    GCC*. St. Catharines: Apress.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Gay, W. (2018). *STM32入门：使用FreeRTOS、libopencm3和GCC进行开发*. 圣凯瑟琳斯：Apress。
- en: 'Horowitz, P., Hill, W. (2015). *The art of electronics. [3rd ed.]* Cambridge
    University Press: New York, NY.'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Horowitz, P., Hill, W. (2015). *电子艺术. [第3版]* 剑桥大学出版社：纽约，纽约。
- en: Microchip (2019). *PIC16F15376 Curiosity Nano Hardware User Guide*. Microchip
    Technology, Inc. Available from [http://ww1.microchip.com/downloads/en/DeviceDoc/50002900B.pdf](http://ww1.microchip.com/downloads/en/DeviceDoc/50002900B.pdf)
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microchip (2019). *PIC16F15376 Curiosity Nano 硬件用户指南*. Microchip Technology,
    Inc. 可从 [http://ww1.microchip.com/downloads/en/DeviceDoc/50002900B.pdf](http://ww1.microchip.com/downloads/en/DeviceDoc/50002900B.pdf)
    获取
- en: 'Mims, F.M. (2000). *Getting started in electronics*. Lincolnwood, IL: Master
    Publishing, Inc.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mims, F.M. (2000). *入门电子学*. 伊利诺伊州林肯伍德：Master Publishing, Inc.
- en: Ostapiuk, R. & Tay, I. (2020). *Fundamentals of the C programming language*.
    Microchip Technology, Inc. Retrieved from [https://microchipdeveloper.com/tls2101:start](https://microchipdeveloper.com/tls2101:start)
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ostapiuk, R. & Tay, I. (2020). *C编程语言基础*. Microchip Technology, Inc. 从 [https://microchipdeveloper.com/tls2101:start](https://microchipdeveloper.com/tls2101:start)
    获取
- en: 'Ward, H.H. (2020). *C programming for the PIC microcontroller*. New York, NY:
    Apress.'
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Ward, H.H. (2020). *PIC微控制器C编程*. 纽约，纽约：Apress。
