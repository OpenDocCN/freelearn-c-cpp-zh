- en: '14'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '14'
- en: Conclusion
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Congratulations!
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 恭喜！
- en: You have built a point-and-click adventure game that utilizes 3D assets, incorporates
    camera and character controllers that respond to player inputs, triggers visual
    and sound effects for feedback, follows player progress, and loads a new level.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 你已经创建了一个使用 3D 资产、集成对玩家输入做出反应的摄像头和角色控制器、触发视觉和声音效果以提供反馈、跟踪玩家进度并加载新关卡的点对点冒险游戏。
- en: This chapter will cover a topic that is usually covered when you come to the
    finish line. We will show you how to export your game so that you can share it
    with the rest of the world. That being said, we’ll also discuss reasons why you
    might want to export more frequently than just waiting until the end.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖一个通常在你到达终点时才会涉及的话题。我们将向您展示如何导出您的游戏，以便您可以将它与世界分享。话虽如此，我们还将讨论为什么你可能需要比仅仅等待结束更频繁地导出的原因。
- en: After that, we’ll be fully done with the technical parts of the engine. Hence,
    we’ll present a few pieces of advice, more like guidelines you can follow in your
    development cycle to be efficient either before you start your projects or during
    them.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们将完成引擎的技术部分。因此，我们将提出一些建议，更像是你在开发周期中可以遵循的指南，以便在开始项目之前或项目进行中提高效率。
- en: Lastly, you will look at a few game genres for which you can use Godot Engine.
    Every game engine is usually built around at least one strong and a few core needs.
    That being said, most engines worth their salt also support the most expected
    features. You’ll see how some of the knowledge you have gained throughout the
    book could be expanded upon in new areas.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你将了解一些你可以使用 Godot 引擎的游戏类型。每个游戏引擎通常都是围绕至少一个强大和一些核心需求构建的。话虽如此，大多数值得信赖的引擎也支持最预期的功能。你将看到你在本书中学到的某些知识如何在新领域得到扩展。
- en: 'This is going to be a relatively short and, most definitely, less technical
    chapter. Nevertheless, we still have the following topics to tackle:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这将是一个相对简短且肯定不那么技术性的章节。尽管如此，我们仍有一些以下主题需要处理：
- en: Exporting your game
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 导出你的游戏
- en: Offering different gameplay experiences
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提供不同的游戏体验
- en: Discovering different genres
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 探索不同的游戏类型
- en: By the end of this chapter, you’ll have learned how to export your creation,
    evaluate different options you can offer to your players, and – finally – find
    a list of genres you can consider using Godot Engine for.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 到本章结束时，你将学会如何导出你的作品，评估你可以提供给玩家的不同选项，最终找到你可以考虑使用 Godot 引擎的游戏类型列表。
- en: Technical requirements
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: There won’t be any new resources in this chapter. If you prefer, you can continue
    your own work from the previous chapter or peruse the content we keep in this
    book’s repository at [https://github.com/PacktPublishing/Game-Development-with-Blender-and-Godot](https://github.com/PacktPublishing/Game-Development-with-Blender-and-Godot).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将不会有任何新的资源。如果您愿意，您可以继续上一章的工作，或者浏览我们在这个书的存储库中保留的内容：[https://github.com/PacktPublishing/Game-Development-with-Blender-and-Godot](https://github.com/PacktPublishing/Game-Development-with-Blender-and-Godot)。
- en: Exporting your game
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 导出你的游戏
- en: So, you have a game. What now? You can keep running the game in the editor,
    as you’ve been doing all along. At some point, though, you’ll most likely want
    to show it to your friends and family or even deploy it somewhere public for everybody
    to look at it. This section will teach you how to export your game so that you
    can share your creation with the rest of the world.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，你有一个游戏。接下来怎么办？你可以像之前一直做的那样在编辑器中继续运行游戏。然而，在某个时候，你很可能会想向你的朋友和家人展示它，甚至将其部署到公共场合供所有人查看。本节将教你如何导出你的游戏，以便你可以与世界分享你的创作。
- en: 'Although we’ll only cover how to do it for Windows, Godot Engine is also capable
    of exporting your game to the following platforms:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们只涵盖如何在 Windows 上操作，但 Godot 引擎也能够将你的游戏导出到以下平台：
- en: Android
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android
- en: iOS
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: iOS
- en: HTML
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HTML
- en: Linux
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux
- en: macOS
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: macOS
- en: '**Universal Windows Platform** (**UWP**)'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**通用Windows平台**（**UWP**）'
- en: 'Although exporting is usually a simple process, it would be wise to check the
    documentation since updates that platforms receive sometimes change the steps
    you must take. You can find the most comprehensive list of instructions here:
    [https://docs.godotengine.org/en/3.4/tutorials/export/](https://docs.godotengine.org/en/3.4/tutorials/export/).'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然导出通常是一个简单的过程，但检查文档总是明智的，因为平台收到的更新有时会改变你必须采取的步骤。您可以在以下位置找到最全面的指令列表：[https://docs.godotengine.org/en/3.4/tutorials/export/](https://docs.godotengine.org/en/3.4/tutorials/export/).
- en: What about consoles?
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，关于游戏机呢？
- en: Consoles are not part of the aforementioned list because they lie in a somewhat
    gray area due to licensing. As a developer, you need to be in touch with a console
    producer and sign agreements to have access to their tools and kits. In essence,
    although there is still some technical aspect to this, it also has some moving
    parts in the legal department.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 由于版权问题，控制台不在上述列表中，因为它们处于一个相对模糊的领域。作为开发者，你需要与控制台制作人保持联系并签署协议，以获得访问他们的工具和套件。本质上，尽管这仍然有一些技术方面，但在法律部门也有一些变动。
- en: Before we start tackling Windows-specific export settings, we need to add or
    change a few things in our project.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始处理Windows特定的导出设置之前，我们需要在我们的项目中添加或更改一些内容。
- en: Preparing your project for export
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 准备项目以进行导出
- en: 'By default, Godot doesn’t launch your games in **Fullscreen** mode even though
    it’s something most games use. While in the end, we will make our game cover the
    whole screen, it’s worth discussing a few other options you will see when you
    open **Project Settings**. More specifically, you’ll see two features when you
    visit the **Window** section under the **Display** group, as follows:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Godot不会以**全屏**模式启动你的游戏，尽管这是大多数游戏所使用的。虽然最终我们的游戏将覆盖整个屏幕，但讨论一下当你打开**项目设置**时将看到的几个其他选项是值得的。更具体地说，当你访问**显示**组下的**窗口**部分时，你会看到两个功能，如下所示：
- en: '**Resizable**: This option makes your game screen resizable, just as you would
    be able to resize any other application that’s not in **Fullscreen** mode. This
    is on right off the bat, so turn it off.'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可调整大小**：此选项使你的游戏屏幕可调整大小，就像你能够调整任何非**全屏**模式的应用程序一样。这个选项默认是开启的，所以请将其关闭。'
- en: '**Borderless**: When your game is not running in **Fullscreen** mode, it will
    have to have borders defined by your operating system. Having this option on will
    remove those borders and the header of the window. By the way, most modern desktop
    applications—such as Slack, Discord, and likewise—use this feature these days.'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**无边框**：当你的游戏不以**全屏**模式运行时，它将需要由你的操作系统定义的边框。开启此选项将移除这些边框和窗口的标题栏。顺便说一句，如今大多数现代桌面应用程序（如Slack、Discord等）都使用这个功能。'
- en: 'We suggest you turn on the **Fullscreen** option and the other two that we
    just talked about off. After that, this is what our **Project Settings** screen
    looks like:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们建议你开启**全屏**选项以及我们刚才提到的其他两个选项关闭。之后，这就是我们的**项目设置**屏幕看起来像的：
- en: '![Figure 14.1 – The project settings we are using before we export our game
    ](img/Figure_14.1_B17473.jpg)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图14.1 – 在导出游戏之前我们使用的项目设置](img/Figure_14.1_B17473.jpg)'
- en: Figure 14.1 – The project settings we are using before we export our game
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.1 – 在导出游戏之前我们使用的项目设置
- en: So far, we’ve focused only on building the game itself without worrying about
    the intro, game settings, or credits screens. These can be constructed just like
    any other Godot scene. Then, once you figure out the flow between these scenes,
    you can use the `change_scene` function to transition to the one the player is
    asking for. Alternatively, you can keep some of these screens as hidden scenes
    inside the `Game.tscn` file and turn their visibility on as requested.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们只专注于构建游戏本身，而没有担心开场、游戏设置或字幕屏幕。这些可以像任何其他Godot场景一样构建。然后，一旦你弄清楚这些场景之间的流程，你就可以使用`change_scene`函数切换到玩家请求的场景。或者，你也可以将这些屏幕作为隐藏场景放在`Game.tscn`文件中，并在需要时打开它们的可见性。
- en: Since our game will now run in **Fullscreen** mode, you won’t be able to terminate
    it by using the operating system’s buttons. In Windows, pressing the *Alt* + *F4*
    key combination will exit the window. We need to provide a far better way for
    the player to quit the game.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的游戏现在将以**全屏**模式运行，你将无法通过使用操作系统的按钮来终止它。在Windows中，按下*Alt* + *F4*键组合将退出窗口。我们需要提供一个更好的方式让玩家退出游戏。
- en: Creating a mechanism for turning the game off
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建关闭游戏机制
- en: Movies end with the production companies’ logos and actors’ names on a theater
    screen. Unless you are really intent on looking at the credits, you will consider
    this moment as your cue to get up and leave the theater. Either this way or if
    you want to terminate your movie experience early on at any moment you want, you
    have the freedom to leave the premises.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 电影在电影院屏幕上以制作公司的标志和演员名单结束。除非你真的想看这些字幕，否则你会认为这是你起身离开电影院的提示。无论哪种方式，或者如果你在任何时候想要提前结束电影体验，你都有权离开场地。
- en: A similar situation would happen with the click of a button if you were consuming
    a movie with a video player on your computer. When we run our little game in **Fullscreen**
    mode, since there won’t be any button around to click, this is something you have
    to present to your players in different forms.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你在电脑上的视频播放器中观看电影，点击一下按钮就会发生类似的情况。当我们以**全屏**模式运行我们的小游戏时，由于周围没有可以点击的按钮，这就需要你以不同的形式向玩家展示这一点。
- en: This is usually done by pressing *Esc* on the keyboard to reveal a screen—sometimes
    blocking the game screen and sometimes as an overlay—so that the player can either
    go into the game’s settings or load a different game session and obviously quit
    the game.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这通常是通过在键盘上按下*Esc*来揭示一个屏幕——有时会遮挡游戏屏幕，有时作为叠加层——以便玩家可以选择进入游戏设置或加载不同的游戏会话，显然是退出游戏。
- en: 'We will implement only the *Esc* press part in this section and treat it as
    the player’s desire to quit. To that end, we suggest you open the `Game.gd` script
    and add the following lines of code to it:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将仅实现*Esc*按键部分，并将其视为玩家想要退出的意愿。为此，我们建议你打开`Game.gd`脚本，并向其中添加以下代码行：
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You might have been expecting to see *Esc* in that `if` block. It’s there but
    as an **identifier**. If you go to **Project Settings** and bring up the **Input
    Map** tab, you will see a list of shortcuts that are mapped to easily comprehensible
    names. The following screenshot shows a portion of **Input Map**:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能期望在那个`if`块中看到*Esc*。它在那里，但作为一个**标识符**。如果你转到**项目设置**并打开**输入映射**标签，你会看到一个映射到易于理解名称的快捷键列表。以下截图显示了**输入映射**的一部分：
- en: '![Figure 14.2 – The Input Map tab is part of Project Settings ](img/Figure_14.2_B17473.jpg)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![图14.2 – 输入映射标签是项目设置的一部分](img/Figure_14.2_B17473.jpg)'
- en: Figure 14.2 – The Input Map tab is part of Project Settings
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.2 – 输入映射标签是项目设置的一部分
- en: If you’re building games that allow your players to use multiple input devices,
    then configuring **Input Map** will be tremendously helpful. For example, you
    could set it so that a game controller or a joystick’s button press means the
    same thing if the player wishes to exert the same behavior with a keyboard. It’s
    a neat way of consolidating different inputs under one name you can easily follow
    in your code.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在构建允许玩家使用多个输入设备的游戏，那么配置**输入映射**将非常有帮助。例如，你可以设置，如果玩家希望使用键盘执行相同的行为，那么游戏控制器或操纵杆的按钮按下具有相同的意义。这是一种将不同的输入统一在易于在代码中跟踪的单一名称下进行整合的好方法。
- en: We took care of screen sizes and letting the player quit the game, so we should
    be all set for exporting our game.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经处理了屏幕尺寸和允许玩家退出游戏的问题，因此我们应该为导出我们的游戏做好准备。
- en: Configuring Windows export settings
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置Windows导出设置
- en: Godot’s download size is extremely small compared to other game engines. One
    of the reasons for this is that it doesn’t come loaded with export packages. Platform
    requirements sometimes change and Godot’s specific functionalities must conform
    to their guidelines, so it makes sense to download and get updates on export packages
    as you go.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 与其他游戏引擎相比，Godot的下载大小非常小。其中一个原因是它没有预装导出包。平台要求有时会变化，Godot的具体功能必须符合它们的指南，因此，在导出过程中下载和更新导出包是有意义的。
- en: 'Since we’ve never exported a game, there is no export package in our setup.
    To get one, press the **Editor** button in the top menu to access the **Manage
    Export Templates** setting. When you bring it up, you will see an interface with
    which you can download and install the right package for the version you are using.
    The following screenshot shows the current state of export templates:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们从未导出过游戏，我们的设置中没有导出包。要获取一个，请点击顶部菜单中的**编辑器**按钮以访问**管理导出模板**设置。当你打开它时，你会看到一个界面，你可以下载并安装适用于你使用的版本的正确包。以下截图显示了当前导出模板的状态：
- en: '![Figure 14.3 – This screen will help us download export templates ](img/Figure_14.3_B17473.jpg)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图14.3 – 这个屏幕将帮助我们下载导出模板](img/Figure_14.3_B17473.jpg)'
- en: Figure 14.3 – This screen will help us download export templates
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.3 – 这个屏幕将帮助我们下载导出模板
- en: 'You should press the **Download and Install** button and wait. Once that’s
    done, you could press the **Close** button in that interface. Next in our export
    efforts is to work with the **Export** settings, so follow these steps:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该点击**下载和安装**按钮并等待。一旦完成，你就可以在那个界面中点击**关闭**按钮。接下来在我们的导出工作中，我们需要处理的是**导出**设置，所以请按照以下步骤操作：
- en: Press the **Project** button in the top menu and select **Export** among the
    options.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击顶部菜单中的**项目**按钮，并在选项中选择**导出**。
- en: Press the **Add** button and choose **Windows Desktop** among the options.
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下**添加**按钮，并在选项中选择**Windows桌面**。
- en: Fill out the `Build` folder outside the project files, so we defined it as `../Build/Clara.exe`.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在项目文件外部填写`Build`文件夹，因此我们将其定义为`../Build/Clara.exe`。
- en: Press the **Export Project** button in the bottom part of the **Export** interface.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**导出**界面的底部部分按下**导出项目**按钮。
- en: Turn off the **Export With Debug** option near the bottom. Confirm your file
    path and press **Save**.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 关闭底部附近的**导出带调试**选项。确认您的文件路径并按**保存**。
- en: 'Before we move on to explaining things, here is a visual representation of
    some of the steps you had to take for exporting:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们继续解释之前，这里有一些步骤的视觉表示，这些步骤是您在导出时必须执行的：
- en: '![Figure 14.4 – Some of the export settings for Windows ](img/Figure_14.4_B17473.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图14.4 – Windows的一些导出设置](img/Figure_14.4_B17473.jpg)'
- en: Figure 14.4 – Some of the export settings for Windows
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图14.4 – Windows的一些导出设置
- en: These steps, assuming your Windows is running on a 64-bit machine, will export
    your game to the folder you defined. When you run the executable, you should be
    playing the game just as you were while you were developing it in Godot. Pressing
    *Esc* will terminate the program and take you back to the operating system.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您的Windows运行在64位机器上，这些步骤会将您的游戏导出到您定义的文件夹。当您运行可执行文件时，您应该会像在Godot中开发时一样玩游戏。按下*Esc*将终止程序并带您回到操作系统。
- en: You might have noticed an extra file with a PCK extension besides `Clara.exe`.
    If you want to keep those two together, you can turn on the **Embed PCK** option
    in the **Export** settings, yet keeping things separate might be a good idea too.
    Godot keeps your game’s resources in a separate package file and uses it when
    you run the executable.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 您可能已经注意到除了`Clara.exe`之外还有一个带有PCK扩展名的额外文件。如果您想将这两个文件放在一起，您可以在**导出**设置中打开**嵌入PCK**选项，但保持它们分开可能也是一个好主意。Godot将您的游戏资源保存在一个单独的包文件中，并在您运行可执行文件时使用它。
- en: Why or when would this be useful? If you want to enhance your game with more
    content, you can create only content packages and instruct the game executable
    to pull them in. Your next DLC might be just around the corner, and this is a
    useful mechanism toward that goal.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么或何时这会有用？如果您想通过更多内容来增强您的游戏，您可以创建内容包，并指示游戏可执行文件将其拉入。您的下一个DLC可能就在转角处，这是实现这一目标的实用机制。
- en: Not only do you have a finished game, but you can also ship it! Exciting, indeed.
    Although we have provided mostly technical instructions, we feel it would also
    be valuable to share a few words about different gameplay experiences you can
    offer to your players.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 不仅您有一个完成的游戏，您还可以将其发布！确实令人兴奋。虽然我们主要提供了技术说明，但我们认为分享一些关于您可以提供给玩家的不同游戏体验的词也很宝贵。
- en: Offering different gameplay experiences
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提供不同的游戏体验
- en: Sometimes, it’s OK to use prototype assets or another artist’s creations so
    that you can focus on fun. We are saying this with a word of caution because we’ll
    always advise you to be sure of the license of the assets you are using. That
    being said, the topic we want to discuss is what you do with the assets once you
    have access to them.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候，使用原型资产或另一位艺术家的创作是完全可以接受的，这样您可以专注于乐趣。我们这样说是因为我们始终建议您确保您使用的资产的许可。话虽如此，我们想要讨论的主题是您一旦获得这些资产后如何处理它们。
- en: The `Models` folder contains extra assets that we didn’t use throughout the
    book. When you were constructing the first level in [*Chapter 9*](B17473_09.xhtml#_idTextAnchor146),
    *Designing the Level*, we mentioned that you could use some of those other assets.
    Maybe you did and had to follow the instructions in later chapters based on your
    own conditions, especially with input detection, pathfinding, and likewise.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`Models`文件夹包含我们在整本书中没有使用的一些额外资产。当您在[*第9章*](B17473_09.xhtml#_idTextAnchor146)中构建第一个关卡时，*设计关卡*，我们提到您可以使用一些其他资产。也许您确实使用了，并根据您自己的条件遵循了后续章节中的说明，特别是输入检测、路径查找等。'
- en: At some point, as with right now in the last pages of this book, you might find
    yourself at a loss for coming up with what more to add to your game.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在某个时候，就像现在这本书的最后几页一样，您可能会发现自己不知道还能为游戏添加什么。
- en: Having an iterative creation process
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 具有迭代创作过程
- en: Some people find it much more empowering to have visual assets laid right in
    front of them. The creative juices start flowing when they look at different objects’
    size-and-shape relationships. Then, there are others who find this inconvenient
    and getting in the way of drawing out a proper plan. If they figure out what needs
    to be done, they can start altering assets or looking for new ones. Finally, a
    mix of both of these approaches might work.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 有些人发现，将视觉资产直接放在他们面前会更有力量。当他们观察不同物体的大小和形状关系时，创造力开始涌现。然后，还有其他人觉得这很麻烦，阻碍了他们制定合适的计划。如果他们弄清楚需要做什么，他们就可以开始修改资产或寻找新的资产。最后，这两种方法的结合可能更有效。
- en: In the end—specifically, if you want to go commercial with your work—you’ve
    got to keep the player in the center of your workflow. Quick iterations followed
    by early and frequent playtesting might be what you need. The ramifications of
    some of your choices mixed with players’ expectations from the game might create
    a lot of stress, so be aware of this. We’ll give you an example by using the assets
    and layout of the second level.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最后——特别是，如果你想将你的作品商业化——你必须将玩家放在你的工作流程的中心。快速迭代，随后是早期和频繁的测试，可能正是你所需要的。你的某些选择与玩家对游戏的期望相结合可能会产生很多压力，所以要有这个意识。我们将通过使用第二级的资产和布局来给你一个例子。
- en: 'There are currently two bookcases on that level: an upright one and a knocked-down
    one. This is a relatively cheap and effective storytelling method. Why is one
    bookcase on the floor? Perhaps there was a calamity, but we don’t know. Is it
    going to be moved out of the way? If you, as a developer, want it or the playtesting
    shows it’s a strong request, then you have to spend more time in Blender or Godot
    to come up with an animation plan for the bookcase. Clara will most likely need
    another action that shows her lifting up and moving the bookcase. If she shouldn’t
    because it’s unlikely that she can lift up such a heavy object, then you either
    need a tool or a companion that can help her.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 目前在该级别上有两个书架：一个直立的书架和一个倒下的书架。这是一个相对便宜且有效的叙事方法。为什么有一个书架在地板上？也许曾经发生过一场灾难，但我们不知道。它会被移开吗？如果你作为开发者想要它，或者测试表明这是一个强烈的要求，那么你需要在
    Blender 或 Godot 中花更多时间来制定书架的动画计划。Clara 很可能需要另一个动作来展示她抬起并移动书架。如果她不应该这么做，因为她不太可能举起如此重的物体，那么你可能需要一个工具或一个同伴来帮助她。
- en: One simple change or request, and you will be inundated with a series of tasks.
    Unfortunately, not all these changes will be visual either. You’ll have to account
    for the programming parts where you have to keep the state of the bookcase still
    on the floor or moved out of the way.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 一点简单的更改或请求，你就会被一系列任务淹没。不幸的是，这些更改并不全是视觉上的。你还得考虑编程部分，比如你需要保持书架的状态仍然在地板上，或者将其移开。
- en: Ultimately, as the creator, you’ve got to ask yourself where this effort might
    be leading. If you could take this idea to have Clara access another level or
    a secret used in the game—in other words, mix it with something that already exists
    as a mechanic—you can replicate it with the minimum number of steps; it might
    be worth it.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，作为创作者，你必须问自己这个努力可能将引领你走向何方。如果你可以将这个想法与 Clara 访问另一个级别或游戏中使用的秘密相结合——换句话说，将其与已经作为机制存在的东西混合在一起——你可以用最少的步骤来复制它；这可能值得。
- en: So, it’s always a trade-off. As much as you should honor fun and your players’
    requests, you should approach it carefully and also consider what works best for
    you.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，这始终是一个权衡。尽管你应该尊重乐趣和玩家的请求，但你应该谨慎处理，并考虑什么最适合你。
- en: As we are wrapping up our book, let us discuss which other things you can do
    with Godot.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们即将完成我们的书籍时，让我们讨论一下你还可以用 Godot 做些什么。
- en: Discovering different genres
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索不同的流派
- en: Even though Godot Engine is known for creating quality 2D games and other well-known
    engines are preferred for building 3D games, you have seen that Godot is actually
    quite capable of building a 3D game. This is going to change for the better when
    Godot 4 comes out.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管 Godot 引擎因其创建高质量的 2D 游戏而闻名，而其他知名引擎更受青睐用于构建 3D 游戏，但你已经看到 Godot 实际上在构建 3D 游戏方面相当有实力。当
    Godot 4 发布时，这将变得更好。
- en: 'Until then, what else can you do with Godot? You can build any kind of game
    with it, to be honest. There has also been a recent trend to build desktop applications
    using Godot Engine. However, we will consider these cases as extraordinary and
    instead focus on some more commonly known genres that employ 3D features, as follows:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 到那时，你还能用Godot做什么？坦白说，你可以用它构建任何类型的游戏。最近也有一种趋势是使用Godot引擎构建桌面应用程序。然而，我们将考虑这些情况为特殊情况，并专注于一些更常见的、使用3D功能的游戏类型，如下所示：
- en: 'Simulation and strategy games: When you used raycasting to detect user input,
    it was done so that Clara could move to a particular spot with pathfinding. In
    a simulation or strategy game, either on a grid or free-move structure, your selected
    unit or units could move to their designated destination in a similar way. You
    could even combine a turn-based feature on top of this where you keep track of
    which side’s units have already moved.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模拟和策略游戏：当你使用射线投射来检测用户输入时，这是为了让Clara能够通过路径查找移动到特定的位置。在模拟或策略游戏中，无论是在网格上还是在自由移动的结构中，你的选定单位或单位可以以类似的方式移动到指定的目的地。你甚至可以在上面结合回合制功能，以跟踪哪一方的单位已经移动。
- en: 'Racing games: Godot already has a **VehicleBody** node to simulate the behavior
    of a car. Isn’t that nice! By appropriately placing a **Camera** node inside a
    **MeshInstance** node and combining the mechanics of a **VehicleBody** node, you
    could be building the next awesome racing game. Start your engine, Godot Engine,
    and vroom!'
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 赛车游戏：Godot已经有一个**VehicleBody**节点来模拟汽车的行为。这不是很好吗！通过在**MeshInstance**节点内部适当地放置一个**Camera**节点，并结合**VehicleBody**节点的机制，你就可以构建下一个令人惊叹的赛车游戏。启动你的引擎，Godot引擎，轰鸣吧！
- en: 'First-person shooters: A classic example that could definitely be built with
    Godot Engine. You’ll be using raycasting a lot in this type of game where you
    detect whether bullets connect with objects. If they do, maybe a good mix of technical
    and creative problems lies ahead of you. Should bullets penetrate or destroy every
    object the same way?'
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一人称射击游戏：这是一个可以用Godot引擎构建的经典例子。在这种类型的游戏中，你会大量使用射线投射来检测子弹是否与对象连接。如果它们连接了，可能在你面前的是一个很好的技术和创意问题的混合。子弹是否应该以相同的方式穿透或摧毁每个对象？
- en: 'Role-playing games: This is similar to First-person shooters, so it could be
    done. In this genre, you generally have a lengthy narrative to present to your
    player. Also, you’ve got to keep track of where the player is in the story and
    whether they have met some of the conditions to reveal the following parts of
    the story or the outcome of a puzzle. We haven’t discovered this in this book,
    but it would be wise to check out `Resource` as a useful Godot mechanism to facilitate
    content-heavy games.'
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 角色扮演游戏：这与第一人称射击游戏类似，因此可以制作。在这个类型中，你通常有一个较长的叙事要向玩家展示。此外，你还需要跟踪玩家在故事中的位置以及他们是否满足了一些条件以揭示故事的下一部分或谜题的结果。我们在这本书中没有发现这一点，但检查`Resource`作为一个有用的Godot机制来促进内容丰富的游戏可能是个明智的选择。
- en: 'Multiplayer/Co-op: This is not a genre by itself, since any genre can be made
    multiplayer or co-op. However, there are some games where the experience won’t
    be the same without networking, so we had to mention this separately. Godot has
    networking parts you can use to connect to third-party services or have two computers
    in the same network connect to each other.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 多玩家/合作模式：这本身不是一个独立的类型，因为任何类型都可以制作成多玩家或合作模式。然而，有些游戏如果没有网络连接，体验将不会相同，所以我们不得不单独提及这一点。Godot有可以用来连接第三方服务或使同一网络中的两台计算机相互连接的网络组件。
- en: These are some of the genres that can most definitely be made with Godot. You
    can also include some other genres such as puzzles or sports games, or any other
    subgenre that uses 3D assets.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是一些肯定可以用Godot制作的游戏类型。你还可以包括一些其他类型，如益智游戏或体育游戏，或者任何使用3D资源的子类型。
- en: Summary
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: As we are concluding our book in this chapter, your game project is also coming
    to an end. Hence, we opened it by showing you the necessary steps for exporting
    your game. Even though it might seem like you’d tackle this phase once your game
    is built, as was mentioned in the *Iterative creation process* section, it might
    be wise to export your game often and share it with others for frequent feedback.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们在本章结束本书，你的游戏项目也即将完成。因此，我们首先向您展示了导出游戏所需的必要步骤。尽管在游戏构建完成后处理这一阶段似乎顺理成章，正如在*迭代创作过程*部分提到的，经常导出游戏并与他人分享以获得频繁的反馈可能是个明智的选择。
- en: The rest of the chapter was dedicated to discussing different approaches you
    can take in your game development efforts, best practices, general guidelines,
    and—finally—getting to know different genres you can target.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的其余部分致力于讨论你在游戏开发努力中可以采取的不同方法，最佳实践，一般指南，最后是了解你可以针对的不同流派。
- en: You’ve come a long way in your game development journey. It started with Blender
    in the first five chapters and continued with a few transitional chapters until
    you fully switched to building a game with Godot Engine. Hopefully, you now have
    a much better opinion about how things work in both applications. Also, if you
    have some prior experience, we hope that this book has increased your confidence
    level in some areas.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 你在游戏开发之旅中已经走了很长的路。它始于前五章的Blender，然后通过几个过渡章节继续，直到你完全转向使用Godot引擎来构建游戏。希望你现在对这两个应用程序的工作原理有了更好的看法。此外，如果你有一些先前的经验，我们希望这本书在某些方面提高了你的信心水平。
- en: As we are leaving you, we wish you the very best in your future efforts, and
    may your code compile the first time!
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们离开你的时候，我们祝愿你在未来的努力中一切顺利，愿你的代码第一次就能编译成功！
- en: Further reading
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: You might have noticed that the exported game is using Godot’s icon. It would
    be nice to have your own custom icon. There are several moving parts to this,
    but it’s possible. The instructions are listed at [https://docs.godotengine.org/en/3.4/tutorials/export/changing_application_icon_for_windows.xhtml](https://docs.godotengine.org/en/3.4/tutorials/export/changing_application_icon_for_windows.xhtml).
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经注意到导出的游戏使用了Godot的图标。拥有自己的自定义图标会更好。这涉及到几个部分，但这是可能的。说明列在[https://docs.godotengine.org/en/3.4/tutorials/export/changing_application_icon_for_windows.xhtml](https://docs.godotengine.org/en/3.4/tutorials/export/changing_application_icon_for_windows.xhtml)。
- en: 'If you would like to deploy your game for feedback purposes instead of sending
    files over emails or chat applications, you can use the following platforms:'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想要为了反馈目的部署你的游戏，而不是通过电子邮件或聊天应用程序发送文件，你可以使用以下平台：
- en: '[https://itch.io](https://itch.io)'
  id: totrans-94
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://itch.io](https://itch.io)'
- en: '[https://gotm.io](https://gotm.io)'
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[https://gotm.io](https://gotm.io)'
- en: The latter URL is especially useful in our situation because that platform also
    hosts Godot game jams. For PC games, Steam is a big marketplace, but the aforementioned
    places might work faster than signing up and going through the application process
    on Steam.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 后者URL在我们的情况下特别有用，因为该平台还托管Godot游戏马拉松。对于PC游戏，Steam是一个大型的市场，但上述地方可能比在Steam上注册并通过申请流程更快。
