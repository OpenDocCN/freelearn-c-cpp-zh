["```cpp\n    QT += core gui webengine webenginewidgets\n\n    ```", "```cpp\n    #include <QtWebEngineWidgets/QtWebEngineWidgets>\n    ```", "```cpp\n    public:\n      explicit MainWindow(QWidget *parent = 0);\n      ~MainWindow();\n\n      void loadUrl();\n\n    ```", "```cpp\n    private slots:\n      void on_goButton_clicked();\n      void on_address_returnPressed();\n      void on_backButton_clicked();\n      void on_forwardButton_clicked();\n      void loading(int progress);\n\n    ```", "```cpp\n    private:\n      Ui::MainWindow *ui;\n      QWebEngineView* webview;\n\n    ```", "```cpp\n    MainWindow::MainWindow(QWidget *parent) :\n      QMainWindow(parent),\n      ui(new Ui::MainWindow)\n    {\n      ui->setupUi(this);\n\n      webview = new QWebEngineView;\n      ui->horizontalLayout_2->addWidget(webview);\n\n      connect(webview, SIGNAL(loadProgress(int)), SLOT(loading(int)));\n    }\n    ```", "```cpp\n    void MainWindow::loadUrl()\n    {\n      QUrl url = QUrl(ui->address->text());\n      url.setScheme(\"http\");\n      webview->page()->load(url);\n    }\n    ```", "```cpp\n    void MainWindow::on_goButton_clicked()\n    {\n      loadUrl();\n    }\n\n    void MainWindow::on_address_returnPressed()\n    {\n      loadUrl();\n    }\n    ```", "```cpp\n    void MainWindow::on_backButton_clicked()\n    {\n      webview->back();\n    }\n\n    void MainWindow::on_forwardButton_clicked()\n    {\n      webview->forward();\n    }\n    ```", "```cpp\n    void MainWindow::loading(int progress)\n    {\n      ui->progressBar->setValue(progress);\n    }\n    ```", "```cpp\n    <Img src=\"img/googlelogo_color_272x92dp.png\"></img>\n    <h1>Hello World!</h1>\n    <h3>This is our custom HTML page.</h3>\n\n    <script>alert(\"Hello!\");</script>\n    ```", "```cpp\n    #include <QMainWindow>\n    #include <QtWebEngineWidgets/QtWebEngineWidgets>\n    #include <QDebug>\n    #include <QFile>\n\n    ```", "```cpp\n    public:\n      explicit MainWindow(QWidget *parent = 0);\n      ~MainWindow();\n      void loadUrl();\n\n    private slots:\n      void on_goButton_clicked();\n      void on_address_returnPressed();\n      void on_backButton_clicked();\n      void on_forwardButton_clicked();\n\n      void startLoading();\n      void loading(int progress);\n      void loaded(bool ok);\n\n     void on_loadHtml_clicked();\n    private:\n      Ui::MainWindow *ui;\n      QWebEngineView* webview;\n\n    ```", "```cpp\n    MainWindow::MainWindow(QWidget *parent) :\n      QMainWindow(parent),\n      ui(new Ui::MainWindow)\n    {\n      ui->setupUi(this);\n\n      webview = new QWebEngineView;\n      ui->horizontalLayout_2->addWidget(webview);\n\n      //webview->page()->settings()>setAttribute(QWebEngineSettings::JavascriptEnabled, false);\n      //webview->page()->settings()->setAttribute(QWebEngineSettings::AutoLoadImages, false);\n\n      //QString fontFamily = webview->page()->settings()->fontFamily(QWebEngineSettings::SerifFont);\n      QString fontFamily = webview->page()->settings()->fontFamily(QWebEngineSettings::SansSerifFont);\n      int fontSize = webview->page()->settings()->fontSize(QWebEngineSettings::MinimumFontSize);\n      QFont myFont = QFont(fontFamily, fontSize);\n      webview->page()->settings()->setFontFamily(QWebEngineSettings::StandardFont, myFont.family());\n\n      QFile file(\"://tux.png\");\n      if (file.open(QFile::ReadOnly))\n      {\n        QByteArray data = file.readAll();\n        webview->page()->setContent(data, \"image/png\");\n      }\n      else\n      {\n        qDebug() << \"File cannot be opened.\";\n      }\n\n      connect(webview, SIGNAL(loadStarted()), SLOT(startLoading()));\n      connect(webview, SIGNAL(loadProgress(int)), SLOT(loading(int)));\n      connect(webview, SIGNAL(loadFinished(bool)), SLOT(loaded(bool)));\n    }\n    ```", "```cpp\n    void MainWindow::loadUrl()\n    {\n      QUrl url = QUrl(ui->address->text());\n      url.setScheme(\"http\");\n      webview->page()->load(url);\n    }\n    ```", "```cpp\n    void MainWindow::on_goButton_clicked()\n    {\n      loadUrl();\n    }\n\n    void MainWindow::on_address_returnPressed()\n    {\n      loadUrl();\n    }\n\n    void MainWindow::on_backButton_clicked()\n    {\n      webview->back();\n    }\n\n    void MainWindow::on_forwardButton_clicked()\n    {\n      webview->forward();\n    }\n    ```", "```cpp\n    void MainWindow::startLoading()\n    {\n      ui->progressBar->show();\n    }\n\n    void MainWindow::loading(int progress)\n    {\n      ui->progressBar->setValue(progress);\n    }\n\n    void MainWindow::loaded(bool ok)\n    {\n      ui->progressBar->hide();\n    }\n    ```", "```cpp\n    void MainWindow::on_loadHtml_clicked()\n    {\n      webview->setHtml(ui->source->toPlainText());\n    }\n    ```", "```cpp\n    QT += core gui webengine webenginewidgets\n\n    ```", "```cpp\n    #include <QtWebEngineWidgets/QWebEngineView>\n    #include <QtWebEngineWidgets/QWebEnginePage>\n    #include <QtWebEngineWidgets/QWebEngineSettings>\n    ```", "```cpp\n    MainWindow::MainWindow(QWidget *parent) :\n      QMainWindow(parent),\n      ui(new Ui::MainWindow)\n    {\n      ui->setupUi(this);\n      QWebEngineView* webview = new QWebEngineView;\n      QUrl url = QUrl(\"qrc:/map.html\");\n      webview->page()->load(url);\n      ui->verticalLayout->addWidget(webview);\n    }\n    ```", "```cpp\n    <!DOCTYPE html>\n    <html>\n      <head>\n      </head>\n      <body ondragstart=\"return false\">\n      </body>\n    </html>\n    ```", "```cpp\n    <body ondragstart=\"return false\">\n      <div id=\"map-canvas\" />\n    </body>\n    ```", "```cpp\n    <meta name=\"viewport\" content=\"initial-scale=1.0,user-scalable=no\" />\n    <style type=\"text/css\">\n      html { height: 100% }\n      body { height: 100%; margin: 0; padding: 0 }\n      #map-canvas { height: 100% }\n    </style>\n    <script type=\"text/javascript\" src=\"img/js?key=YOUR_KEY_HERE&libraries=drawing\"></script>\n    ```", "```cpp\n    <script type=\"text/javascript\">\n      var map;\n      function initialize()\n      {\n        // Add map\n        var mapOptions =\n        {\n          center: new google.maps.LatLng(40.705311, -74.2581939),\n            zoom: 6\n        };\n\n        map = new google.maps.Map(document.getElementById(\"map-canvas\"),mapOptions);\n\n        // Add event listener\n        google.maps.event.addListener(map, 'zoom_changed', function()\n        {\n          //alert(map.getZoom());\n        });\n\n        // Add marker\n        var marker = new google.maps.Marker(\n        {\n          position: new google.maps.LatLng(40.705311, -74.2581939),\n            map: map,\n            title: \"Marker A\",\n        });\n        google.maps.event.addListener(marker, 'click', function()\n        {\n          map.panTo(marker.getPosition());\n        });\n        marker.setMap(map);\n\n        // Add polyline\n        var points = [ new google.maps.LatLng(39.8543, -73.2183), new google.maps.LatLng(41.705311, -75.2581939), new google.maps.LatLng(40.62388, -75.5483) ];\n        var polyOptions =\n        {\n          path: points,\n          strokeColor: '#FF0000',\n          strokeOpacity: 1.0,\n          strokeWeight: 2\n        };\n        historyPolyline = new google.maps.Polyline(polyOptions);\n        historyPolyline.setMap(map);\n\n        // Add polygon\n        var points = [ new google.maps.LatLng(37.314166, -75.432),new google.maps.LatLng(40.2653, -74.4325), new google.maps.LatLng(38.8288, -76.5483) ];\n          var polygon = new google.maps.Polygon(\n        {\n          paths: points,\n          fillColor:  '#000000',\n          fillOpacity: 0.2,\n          strokeWeight: 3,\n          strokeColor: '#fff000',\n        });\n        polygon.setMap(map);\n\n        // Setup drawing manager\n        var drawingManager = new google.maps.drawing.DrawingManager();\n        drawingManager.setMap(map);\n      }\n\n      google.maps.event.addDomListener(window, 'load', initialize);\n\n    </script>\n    ```", "```cpp\n    QT += core gui webengine webenginewidgets\n\n    ```", "```cpp\n    font: 75 26pt \"MS Shell Dlg 2\";\n    ```", "```cpp\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <script src=\"img/qwebchannel.js\"></script>\n\n        <script src=\"img/jquery.min.js\"></script>\n        <script src=\"img/bootstrap.js\"></script>\n\n        <link rel=\"stylesheet\" type=\"text/css\"       href=\"css/bootstrap.css\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/font-      awesome.css\">\n      </head>\n      <body>\n      </body>\n    </html>\n    ```", "```cpp\n    <script>\n      $(document).ready(function()\n      {\n        new QWebChannel(qt.webChannelTransport, function(channel)\n          {\n            mainWindow = channel.objects.mainWindow;\n          });\n\n          $(\"#login\").click(function(e)\n          {\n            e.preventDefault();\n\n            var user = $(\"#username\").val();\n            var pass = $(\"#password\").val();\n            mainWindow.showLoginInfo(user, pass);\n          });\n\n          $(\"#changeText\").click(function(e)\n          {\n            e.preventDefault();\n\n            mainWindow.changeQtText(\"Good bye!\");\n          });\n      });\n    </script>\n    ```", "```cpp\n    <div class=\"container-fluid\">\n      <form id=\"example-form\" action=\"#\" class=\"container-fluid\">\n        <div class=\"form-group\">\n          <div class=\"col-md-12\"><h3>Call C++ Function from Javascript</h3></div>\n\n          <div class=\"col-md-12\"><div class=\"alert alert-info\" role=\"alert\"><i class=\"fa fa-info-circle\"></i> <span id=\"infotext\">Click \"Login\" to send username and password variables to C++.Click \"Change Cpp Text\" to change the text label on Qt GUI.</span></div></div>\n\n          <div class=\"col-md-12\">\n            <label>Username:</label> <input id=\"username\" type=\"text\"><p />\n          </div>\n\n          <div class=\"col-md-12\">\n            <label>Password:</label> <input id=\"password\" type=\"password\"><p />\n          </div>\n\n          <div class=\"col-md-12\">\n            <button id=\"login\" class=\"btn btn-success\" type=\"button\"><i class=\"fa fa-check\"></i> Login</button> <button id=\"changeText\" class=\"btn btn-primary\" type=\"button\"><i class=\"fa fa-pencil\"></i> Change Cpp Text</button>\n          </div>\n        </div>\n      </form>\n    </div>\n    ```", "```cpp\n    public:\n      explicit MainWindow(QWidget *parent = 0);\n      ~MainWindow();\n\n      Q_INVOKABLE void changeQtText(QString newText);\n      Q_INVOKABLE void showLoginInfo(QString user, QString pass);\n\n    ```", "```cpp\n    #include <QtWebEngineWidgets/QWebEngineView>\n    #include <QtWebChannel/QWebChannel>\n    #include <QMessageBox>\n    ```", "```cpp\n    MainWindow::MainWindow(QWidget *parent) :\n      QMainWindow(parent),\n      ui(new Ui::MainWindow)\n    {\n      qputenv(\"QTWEBENGINE_REMOTE_DEBUGGING\", \"1234\");\n\n      ui->setupUi(this);\n\n      QWebEngineView* webview = new QWebEngineView();\n      ui->verticalLayout->addWidget(webview);\n\n      QWebChannel* webChannel = new QWebChannel();\n      webChannel->registerObject(\"mainWindow\", this);\n      webview->page()->setWebChannel(webChannel);\n\n      webview->page()->load(QUrl(\"qrc:///html/test.html\"));\n    }\n    ```", "```cpp\n    void MainWindow::changeQtText(QString newText)\n    {\n      ui->label->setText(newText);\n    }\n\n    void MainWindow::showLoginInfo(QString user, QString pass)\n    {\n      QMessageBox::information(this, \"Login info\", \"Username is \" + user + \" and password is \" + pass);\n    }\n    ```", "```cpp\n<script src=\"img/qwebchannel.js\"></script>\n```", "```cpp\nQWebChannel* webChannel = new QWebChannel();\nwebChannel->registerObject(\"mainWindow\", this);\nwebview->page()->setWebChannel(webChannel);\n```", "```cpp\nnew QWebChannel(qt.webChannelTransport, function(channel)\n{\n  mainWindow = channel.objects.mainWindow;\n});\n```", "```cpp\nqputenv(\"QTWEBENGINE_REMOTE_DEBUGGING\", \"1234\");\n```", "```cpp\nQ_INVOKABLE void changeQtText(QString newText);\n```", "```cpp\n    #include <QtWebEngineWidgets/QWebEngineView>\n    #include <QtWebChannel/QWebChannel>\n    #include <QMessageBox>\n    ```", "```cpp\n    public:\n      explicit MainWindow(QWidget *parent = 0);\n      ~MainWindow();\n\n      QWebEngineView* webview;\n\n    ```", "```cpp\n    MainWindow::MainWindow(QWidget *parent) :\n      QMainWindow(parent),\n      ui(new Ui::MainWindow)\n    {\n      //qputenv(\"QTWEBENGINE_REMOTE_DEBUGGING\", \"1234\");\n\n      ui->setupUi(this);\n\n      webview = new QWebEngineView();\n      ui->verticalLayout->addWidget(webview);\n\n      QWebChannel* webChannel = new QWebChannel();\n      webChannel->registerObject(\"mainWindow\", this);\n      webview->page()->setWebChannel(webChannel);\n\n      webview->page()->load(QUrl(\"qrc:///html/test.html\"));\n    }\n    ```", "```cpp\n    void MainWindow::on_changeHtmlTextButton_clicked()\n    {\n      webview->page()->runJavaScript(\"changeHtmlText('Text has been replaced by C++!');\");\n    }\n\n    void MainWindow::on_playUIAnimationButton_clicked()\n    {\n      webview->page()->runJavaScript(\"startAnim();\");\n    }\n    ```", "```cpp\n    <!DOCTYPE html>\n    <html>\n      <head>\n        <script src=\"img/qwebchannel.js\"></script>\n\n        <script src=\"img/jquery.min.js\"></script>\n        <script src=\"img/bootstrap.js\"></script>\n\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/bootstrap.css\">\n        <link rel=\"stylesheet\" type=\"text/css\" href=\"css/font-awesome.css\">\n      </head>\n      <body>\n      </body>\n    </html>\n    ```", "```cpp\n    <script>\n      $(document).ready(function()\n      {\n        $(\"#tux\").css({ opacity:0, width:\"0%\", height:\"0%\" });\n        $(\"#listgroup\").hide();\n        $(\"#listgroup2\").hide();\n\n        new QWebChannel(qt.webChannelTransport, function(channel)\n        {\n          mainWindow = channel.objects.mainWindow;\n        });\n      });\n\n      function changeHtmlText(newText)\n      {\n        $(\"#infotext\").html(newText);\n      }\n\n      function startAnim()\n      {\n        // Reset\n        $(\"#tux\").css({ opacity:0, width:\"0%\", height:\"0%\" });\n        $(\"#listgroup\").hide();\n        $(\"#listgroup2\").hide();\n\n        $(\"#tux\").animate({ opacity:1.0, width:\"100%\", height:\"100%\" }, 1000, function()\n        {\n          // tux animation complete\n          $(\"#listgroup\").slideDown(1000, function()\n          {\n            // listgroup animation complete\n            $(\"#listgroup2\").fadeIn(1500);\n          });\n        });\n      }\n    </script>\n    ```", "```cpp\n    <div class=\"container-fluid\">\n      <form id=\"example-form\" action=\"#\" class=\"container-fluid\">\n        <div class=\"form-group\">\n          <div class=\"col-md-12\"><h3>Call Javascript Function from C++</h3></div>\n\n          <div class=\"col-md-12\"><div class=\"alert alert-info\" role=\"alert\"><i class=\"fa fa-info-circle\"></i> <span id=\"infotext\">Change this text using C++.</span></div></div>\n\n          <div class=\"col-md-2\">\n            <img id=\"tux\" src=\"img/tux.png\"></img>\n          </div>\n\n          <div class=\"col-md-5\">\n            <ul id=\"listgroup\" class=\"list-group\">\n              <li class=\"list-group-item\">Cras justo odio</li>\n               <li class=\"list-group-item\">Dapibus ac facilisis in</li>\n               <li class=\"list-group-item\">Morbi leo risus</li>\n               <li class=\"list-group-item\">Porta ac consectetur ac</li>\n               <li class=\"list-group-item\">Vestibulum at eros</li>\n            </ul>\n          </div>\n\n          <div id=\"listgroup2\" class=\"col-md-5\">\n            <a href=\"#\" class=\"list-group-item active\">\n              <h4 class=\"list-group-item-heading\">Item heading</h4>\n              <p class=\"list-group-item-text\">Cras justo odio</p>\n            </a>\n            <a href=\"#\" class=\"list-group-item\">\n              <h4 class=\"list-group-item-heading\">Item heading</h4>\n              <p class=\"list-group-item-text\">Dapibus ac facilisis in</p>\n            </a>\n            <a href=\"#\" class=\"list-group-item\">\n              <h4 class=\"list-group-item-heading\">Item heading</h4>\n              <p class=\"list-group-item-text\">Morbi leo risus</p>\n            </a>\n          </div>\n\n        </div>\n      </form>\n    </div>\n    ```"]