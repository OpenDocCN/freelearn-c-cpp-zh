- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Welcome to *Data Structures and Algorithms with the C++ STL*, a resource that
    aims to deepen your understanding of data structures and algorithms using the
    robust tools provided by the C++ `std::vector`, advanced usage of sequence and
    associative containers, in-depth discussions on STL algorithms and their enhancements
    with modern C++ features, and a penetrating look at creating STL-compatible types
    and algorithms.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎阅读*使用C++ STL的数据结构和算法*，这是一本旨在加深你对使用C++ `std::vector`提供的强大工具理解数据结构和算法、深入讨论STL算法及其与现代C++特性的增强、以及深入探讨创建与STL兼容的类型和算法的资源的书籍。
- en: 'The book is structured into five parts, each focusing on a different aspect
    of STL. *Part 1*, *Mastering std::vector*, details the fundamental usage of vectors
    and their manipulation with STL algorithms. *Part 2*, *Understanding STL Data
    Structures*, expands your repertoire with sequence, ordered and unordered associative
    containers, and container adaptors. *Part 3*, *Mastering STL Algorithms*, provides
    comprehensive coverage of fundamental, numeric, and range-based algorithms, focusing
    on best practices. *Part 4*, *Creating STL-Compatible Types & Algorithms*, guides
    you through developing your own types and algorithms that integrate seamlessly
    with STL. Lastly, *Part 5*, *STL Data Structures and Algorithms: Under the Hood*,
    offers advanced insights into exception safety, thread safety, concurrency, and
    the interactions of STL with the latest C++ features such as concepts and coroutines.'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本书分为五个部分，每部分都专注于STL的不同方面。*第一部分*，*精通std::vector*，详细介绍了向量的基本用法及其与STL算法的操纵。*第二部分*，*理解STL数据结构*，通过序列、有序和无序关联容器以及容器适配器扩展了你的知识库。*第三部分*，*精通STL算法*，全面覆盖了基本、数值和基于范围的算法，重点关注最佳实践。*第四部分*，*创建与STL兼容的类型和算法*，指导你开发自己的类型和算法，这些类型和算法可以无缝地与STL集成。最后，*第五部分*，*STL数据结构和算法：内部机制*，提供了关于异常安全性、线程安全性、并发性以及STL与最新C++特性（如概念和协程）交互的高级见解。
- en: Each chapter is structured to build on previously introduced concepts, ensuring
    a cohesive learning experience. By the end of this book, you should be proficient
    in the practical application of the STL, equipped to tackle modern software challenges
    with confidence and expertise. Let us embark on this journey not only to understand
    the mechanics of the STL but also to appreciate its elegance and power in crafting
    exceptional C++ software.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 每一章的结构都是为了在先前介绍的概念基础上进行构建，确保学习体验的连贯性。到本书结束时，你应该能够熟练地应用STL的实践应用，有信心和专业知识应对现代软件挑战。让我们开始这段旅程，不仅为了理解STL的机制，还要欣赏其在构建卓越C++软件中的优雅和强大。
- en: Who this book is for
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向对象
- en: This book is crafted for intermediate-level C++ developers who wish to refine
    their skills and knowledge in applying STL components to solve complex problems
    efficiently.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 本书是为希望提高其将STL组件应用于解决复杂问题效率的技能和知识的中级C++开发者而编写的。
- en: What this book covers
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖内容
- en: '[*Chapter 1*](B21945_01.xhtml#_idTextAnchor015), *The Basics of std::vector*,
    introduces `std::vector`, comparing it with C-style arrays, and demonstrates its
    declaration, initialization, and element manipulation.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*](B21945_01.xhtml#_idTextAnchor015)，*std::vector的基础知识*，介绍了`std::vector`，将其与C风格数组进行比较，并演示了其声明、初始化和元素操作。'
- en: '[*Chapter 2*](B21945_02.xhtml#_idTextAnchor035), *Mastering Iterators with
    std::vector*, explores the different types of iterators in the STL and their application
    within `std::vector` contexts, including custom iterator creation.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*](B21945_02.xhtml#_idTextAnchor035)，*使用std::vector精通迭代器*，探讨了STL中不同类型的迭代器及其在`std::vector`环境中的应用，包括自定义迭代器的创建。'
- en: '[*Chapter 3*](B21945_03.xhtml#_idTextAnchor064), *Mastering Memory and Allocators
    with std::vector*, discusses vector capacity versus size, memory optimization
    techniques, and the design of custom allocators for enhanced performance.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*](B21945_03.xhtml#_idTextAnchor064)，*使用std::vector精通内存和分配器*，讨论了向量的容量与大小，内存优化技术以及为提高性能而设计的自定义分配器的设计。'
- en: '[*Chapter 4*](B21945_04.xhtml#_idTextAnchor093), *Mastering Algorithms with
    std::vector*, delves into algorithmic operations on vectors, such as sorting and
    searching, and the importance of understanding iterator invalidation.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*](B21945_04.xhtml#_idTextAnchor093)，*使用std::vector精通算法*，深入探讨了向量上的算法操作，如排序和搜索，以及理解迭代器失效的重要性。'
- en: '[*Chapter 5*](B21945_05.xhtml#_idTextAnchor125), *Making the Case for std::vector*,
    examines the performance aspects, practical applications, and versatility of `std::vector`
    as a go-to STL container.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](B21945_05.xhtml#_idTextAnchor125), *为std::vector辩护*, 检查了`std::vector`作为STL容器的首选性能方面、实际应用和多功能性。'
- en: '[*Chapter 6*](B21945_06.xhtml#_idTextAnchor142), *Advanced Sequence Container
    Usage*, analyzes advanced usage scenarios and best practices for sequence containers
    like `std::array`, `std::deque`, and others.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*](B21945_06.xhtml#_idTextAnchor142), *高级序列容器使用*, 分析了序列容器如 `std::array`、`std::deque`
    等的高级使用场景和最佳实践。'
- en: '[*Chapter 7*](B21945_07.xhtml#_idTextAnchor235), *Advanced Ordered Associative
    Container Usage*, explores the intricacies of ordered associative containers such
    as `std::set` and `std::map` and their unique performance considerations.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](B21945_07.xhtml#_idTextAnchor235), *高级有序关联容器使用*, 探讨了有序关联容器如 `std::set`
    和 `std::map` 的复杂性及其独特的性能考虑。'
- en: '[*Chapter 8*](B21945_08.xhtml#_idTextAnchor298), *Advanced Unordered Associative
    Container Usage*, investigates unordered associative containers, highlighting
    their internal workings and use cases.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B21945_08.xhtml#_idTextAnchor298), *高级无序关联容器使用*, 研究无序关联容器，突出其内部工作原理和用例。'
- en: '[*Chapter 9*](B21945_09.xhtml#_idTextAnchor361), *Advanced Container Adaptor
    Usage*, focuses on container adaptors like `std::stack` and `std::queue`, discussing
    their implementation and when to use them effectively.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B21945_09.xhtml#_idTextAnchor361), *高级容器适配器使用*, 专注于容器适配器如 `std::stack`
    和 `std::queue`，讨论了它们的实现和何时有效地使用它们。'
- en: '[*Chapter 10*](B21945_10.xhtml#_idTextAnchor465), *Advanced Container View
    Usage,* introduces container views such as `std::span` and `std::mdspan`, providing
    insights into their utility and performance benefits.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B21945_10.xhtml#_idTextAnchor465), *高级容器视图使用,* 介绍了容器视图如 `std::span`
    和 `std::mdspan`，提供了它们效用和性能优势的见解。'
- en: '[*Chapter 11*](B21945_11.xhtml#_idTextAnchor498), *Fundamental Algorithms and
    Searching*, Covers the foundational algorithms for sorting and searching within
    STL and their practical applications.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第11章*](B21945_11.xhtml#_idTextAnchor498), *基本算法和搜索*, 涵盖了STL中排序和搜索的基础算法及其实际应用。'
- en: '[*Chapter 12*](B21945_12.xhtml#_idTextAnchor507), *Manipulation and Transformation*,
    Details the techniques for transforming data within STL containers, including
    the nuances of copying, moving, and removing elements.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第12章*](B21945_12.xhtml#_idTextAnchor507), *操作和转换*, 详细介绍了在STL容器内转换数据的技术，包括复制、移动和删除元素的细微差别。'
- en: '[*Chapter 13*](B21945_13.xhtml#_idTextAnchor530), *Numeric and Range-Based
    Operations*, Explores numeric operations and their applications on ranges, demonstrating
    how they can optimize algorithmic complexity.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第13章*](B21945_13.xhtml#_idTextAnchor530), *数值和基于范围的运算*, 探索了数值运算及其在范围上的应用，展示了它们如何优化算法的复杂性。'
- en: '[*Chapter 14*](B21945_14.xhtml#_idTextAnchor542), *Permutations, Partitions,
    and Heaps*, Provides an in-depth look at data organization algorithms, such as
    partitioning and heap operations, within the STL.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第14章*](B21945_14.xhtml#_idTextAnchor542), *排列、划分和堆*, 深入探讨了STL中的数据组织算法，如划分和堆操作。'
- en: '[*Chapter 15*](B21945_15.xhtml#_idTextAnchor563), *Modern STL with Ranges*,
    Discusses the modern approach to STL with ranges, enhancing the composability
    and efficiency of algorithms.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第15章*](B21945_15.xhtml#_idTextAnchor563), *使用范围的现代STL*, 讨论了使用范围的现代STL方法，增强了算法的可组合性和效率。'
- en: '[*Chapter 16*](B21945_16.xhtml#_idTextAnchor590), *Creating STL-Types Containers*,
    Guides through the creation of custom containers that are compatible with STL
    algorithms and the essential components required for full integration.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第16章*](B21945_16.xhtml#_idTextAnchor590), *创建STL类型容器*, 指导创建与STL算法兼容的自定义容器，并介绍实现完全集成所需的基本组件。'
- en: '[*Chapter 17*](B21945_17.xhtml#_idTextAnchor636), *Creating STL-Compatible
    Algorithms*, Details the development of custom algorithms that work seamlessly
    with STL containers and adhere to STL principles.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第17章*](B21945_17.xhtml#_idTextAnchor636), *创建与STL兼容的算法*, 详细介绍了与STL容器无缝工作并遵循STL原则的自定义算法的开发。'
- en: '[*Chapter 18*](B21945_18.xhtml#_idTextAnchor658), *Type Traits and Policies*,
    Delves into the advanced topics of type traits and policies, key in crafting adaptable
    and efficient template code.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第18章*](B21945_18.xhtml#_idTextAnchor658), *类型特性和策略*, 深入探讨了类型特性和策略的高级主题，这对于编写可适应和高效的模板代码至关重要。'
- en: '[*Chapter 19*](B21945_19.xhtml#_idTextAnchor679), *Exception Safety*, Examines
    the levels of exception safety guaranteed by STL and how to write robust STL-compatible
    code with noexcept.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第19章*](B21945_19.xhtml#_idTextAnchor679)，*异常安全性*，探讨了STL保证的异常安全性级别以及如何使用noexcept编写健壮的STL兼容代码。'
- en: '[*Chapter 20*](B21945_20.xhtml#_idTextAnchor696), *Thread Safety and Concurrency
    with the STL*, Discusses the concurrency and thread safety features of STL containers,
    the prevention of race conditions, and best practices for multithreaded programming.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第20章*](B21945_20.xhtml#_idTextAnchor696)，*STL的线程安全和并发*，讨论了STL容器的并发和线程安全特性、防止竞态条件以及多线程编程的最佳实践。'
- en: '[*Chapter 21*](B21945_21.xhtml#_idTextAnchor745), *STL Interaction with Concepts
    and Coroutines*, Explores the interaction between STL and the latest C++ features
    like concepts and coroutines, showcasing their synergy.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第21章*](B21945_21.xhtml#_idTextAnchor745)，*STL与概念和协程的交互*，探讨了STL与最新C++特性（如概念和协程）之间的交互，展示了它们的协同作用。'
- en: '[*Chapter 22*](B21945_22.xhtml#_idTextAnchor762), *Parallel Algorithms with
    the STL*, Introduces execution policies for parallel algorithms in STL, the role
    of constexpr, and the considerations for performance and efficiency.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第22章*](B21945_22.xhtml#_idTextAnchor762)，*STL的并行算法*，介绍了STL中并行算法的执行策略、constexpr的作用以及性能和效率的考虑因素。'
- en: To get the most out of this book
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 要充分利用本书
- en: Before embarking on this book, readers should have a firm grasp of fundamental
    C++ programming concepts, such as syntax, control structures, and basic object-oriented
    principles. An understanding of pointers, memory management, and template basics
    is also assumed, as these are foundational to effectively utilizing the STL. The
    book presumes familiarity with C++11 standard features, as many examples and explanations
    rely on this version of the language or newer. Moreover, a basic knowledge of
    data structures such as arrays and linked lists, as well as classic algorithms,
    will be beneficial for following the advanced topics discussed within.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始本书之前，读者应该对基本的C++编程概念有牢固的掌握，例如语法、控制结构以及基本的面向对象原则。对指针、内存管理和模板基础的理解也是假设的，因为这些是有效利用STL的基础。本书假设读者熟悉C++11标准特性，因为许多示例和解释都依赖于这个语言版本或更新的版本。此外，对数组、链表等数据结构以及经典算法的基本了解将有助于理解本书中讨论的高级主题。
- en: '| **Software/hardware covered in** **the book** | **Operating** **system requirements**
    |'
  id: totrans-31
  prefs: []
  type: TYPE_TB
  zh: '| **本书涵盖的软件/硬件** | **操作系统要求** |'
- en: '| --- | --- |'
  id: totrans-32
  prefs: []
  type: TYPE_TB
  zh: '| --- | --- |'
- en: '| C++ | Windows, macOS, or Linux |'
  id: totrans-33
  prefs: []
  type: TYPE_TB
  zh: '| C++ | Windows、macOS或Linux |'
- en: '| C++ STL |  |'
  id: totrans-34
  prefs: []
  type: TYPE_TB
  zh: '| C++ STL |  |'
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您正在使用本书的数字版，我们建议您亲自输入代码或从本书的GitHub仓库（下一节中有一个链接）获取代码。这样做将帮助您避免与代码复制和粘贴相关的任何潜在错误。**'
- en: Download the example code files
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at . If there’s
    an update to the code, it will be updated in the GitHub repository.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub下载本书的示例代码文件。如果代码有更新，它将在GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有来自我们丰富的图书和视频目录的其他代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。查看它们！
- en: Conventions used
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “This is where the genius of std::vector shines;
    over-allocating reduces the need for frequent and, potentially, computationally
    costly reallocations.”'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter账号。以下是一个示例：“这就是std::vector的精华所在；过度分配减少了频繁和可能计算成本高昂的重新分配的需求。”'
- en: 'A block of code is set as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都应如下编写：
- en: '[PRE1]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Tips or important notes
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士或重要提示
- en: Appear like this.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来是这样的。
- en: Get in touch
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: '**General feedback**: If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：如果您对此书的任何方面有疑问，请通过电子邮件发送给我们 [customercare@packtpub.com](mailto:customercare@packtpub.com)，并在邮件主题中提及书名。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误**：尽管我们已经尽最大努力确保内容的准确性，但错误仍然可能发生。如果您在此书中发现错误，我们将不胜感激，如果您能向我们报告，我们将不胜感激。请访问
    [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata) 并填写表格。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**：如果您在互联网上以任何形式发现我们作品的非法副本，我们将不胜感激，如果您能提供位置地址或网站名称，我们将不胜感激。请通过电子邮件发送链接到
    [copyright@packt.com](mailto:copyright@packt.com) 与我们联系。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com)'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**：如果您在某个主题上具有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问 [authors.packtpub.com](http://authors.packtpub.com)'
- en: Share Your Thoughts
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享您的想法
- en: Once you’ve read *Data Structures and Algorithms with the C++ STL*, we’d love
    to hear your thoughts! Please [click here to go straight to the Amazon review
    page](https://packt.link/r/1835468551) for this book and share your feedback.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您阅读了《使用C++ STL的数据结构和算法》，我们非常乐意听到您的想法！请[点击此处直接进入此书的亚马逊评论页面](https://packt.link/r/1835468551)并分享您的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 您的评论对我们和科技社区非常重要，并将帮助我们确保我们提供高质量的内容。
- en: Download a free PDF copy of this book
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载此书的免费PDF副本
- en: Thanks for purchasing this book!
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您购买此书！
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 您喜欢在路上阅读，但无法携带您的印刷书籍到处走？
- en: Is your eBook purchase not compatible with the device of your choice?
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 您的电子书购买是否与您选择的设备不兼容？
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 不要担心，现在，随着每本Packt书籍，您都可以免费获得该书的DRM免费PDF版本。
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何地方、任何设备上阅读。直接从您最喜欢的技术书籍中搜索、复制和粘贴代码到您的应用程序中。
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 优惠不会就此结束，您还可以获得独家折扣、时事通讯和每日免费内容的每日电子邮件。
- en: 'Follow these simple steps to get the benefits:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下简单步骤获取优惠：
- en: Scan the QR code or visit the link below
  id: totrans-65
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描下面的二维码或访问以下链接
- en: '![](img/B21945_QR_Free_PDF.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![二维码](img/B21945_QR_Free_PDF.jpg)'
- en: '[https://packt.link/free-ebook/978-1-83546-855-5](https://packt.link/free-ebook/978-1-83546-855-5)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/free-ebook/978-1-83546-855-5](https://packt.link/free-ebook/978-1-83546-855-5)'
- en: Submit your proof of purchase
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交您的购买证明
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这些！我们将直接将您的免费PDF和其他优惠发送到您的电子邮件地址。
- en: 'Part 1: Mastering std::vector'
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1部分：精通std::vector
- en: In this Part, we will build our knowledge of C++ `std::vector`. We will start
    with introducing `std::vector`, contrasting it with traditional C-style arrays,
    and covering essential operations such as initializing, accessing, and modifying
    elements. We then advance to the intricacies of iterators, revealing their types
    and uses in `std::vector` operations and the elegance of range-based for loops.
    Memory management is demystified by constructing an understanding of optimizing
    the allocation and deallocation of resources, including an introduction to creating
    custom allocators. The section then builds into applying algorithms to sort, search,
    and manipulate vector contents efficiently, emphasizing the role of custom comparators
    and the importance of understanding iterator invalidation. The final chapter encapsulates
    the performance considerations and practical applications of `std::vector`, cementing
    its status as the default container choice for C++ developers.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在本部分中，我们将构建我们对C++ `std::vector`的知识。我们将从介绍`std::vector`开始，将其与传统C风格数组进行对比，并涵盖初始化、访问和修改元素等基本操作。然后，我们将深入到迭代器的复杂性，揭示它们在`std::vector`操作中的类型和用途，以及基于范围的for循环的优雅性。通过构建对优化资源分配和释放的理解，我们解开了内存管理的神秘面纱，包括创建自定义分配器的介绍。然后，本节将构建到将算法应用于排序、搜索和高效操作向量内容，强调自定义比较器的作用以及理解迭代器失效的重要性。最后一章总结了`std::vector`的性能考虑和实际应用，巩固了其在C++开发者默认容器选择中的地位。
- en: 'This part has the following chapters:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包含以下章节：
- en: '[*Chapter 1*](B21945_01.xhtml#_idTextAnchor015)*: The Basics of std::vector*'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第1章*](B21945_01.xhtml#_idTextAnchor015)*：std::vector的基础知识*'
- en: '[*Chapter 2*](B21945_02.xhtml#_idTextAnchor035)*: Mastering Iterators with
    std::vector*'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第2章*](B21945_02.xhtml#_idTextAnchor035)*：掌握使用std::vector的迭代器*'
- en: '[*Chapter 3*](B21945_03.xhtml#_idTextAnchor064)*: Mastering Memory and Allocators
    with std::vector*'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第3章*](B21945_03.xhtml#_idTextAnchor064)*：掌握使用std::vector的内存和分配器*'
- en: '[*Chapter 4*](B21945_04.xhtml#_idTextAnchor093)*: Mastering Algorithms with
    std::vector*'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第4章*](B21945_04.xhtml#_idTextAnchor093)*：掌握使用std::vector的算法*'
- en: '[*Chapter 5*](B21945_05.xhtml#_idTextAnchor125)*: Making a Case for std::vector*'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第5章*](B21945_05.xhtml#_idTextAnchor125)*：为std::vector辩护*'
