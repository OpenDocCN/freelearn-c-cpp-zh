- en: Chapter 6. Developing Mobile Applications with Qt Creator
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第6章。使用Qt Creator开发移动应用程序
- en: Qt and mobile development have a long history. Qt's beginnings included early
    releases on Linux Personal Digital Assistants in the late nineties and at the
    turn of this century. Since then, it's been ported to a number of mobile environments,
    including the mobile variants of Linux that Nokia shipped such as MeeGo, as well
    as Symbian. While Symbian and MeeGo have come and gone, Qt's acceptance of mobile
    platforms lives on, most recently with support for Android.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: Qt和移动开发有着悠久的历史。Qt的起步包括在九十年代末和本世纪初在Linux个人数字助理上的早期发布。从那时起，它已经移植到了许多移动环境，包括诺基亚出货的移动Linux变体，如MeeGo，以及Symbian。尽管Symbian和MeeGo已经消失，Qt对移动平台的接受仍然存在，最近还支持Android。
- en: In this chapter, we talk a little about writing mobile applications, and then
    learn how to set up Qt Creator to write applications for Android. It's worth noting
    right at the outset that while we will leverage everything you have learned about
    Qt development developing a mobile application, we also need to understand how
    the environments that mobile software runs in are different from traditional desktop
    and laptop environments, and how to design for those constraints. Once we understand
    those differences, writing software for Android with Qt is a snap!
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们会简要讨论编写移动应用程序，然后学习如何设置Qt Creator来编写Android应用程序。值得一提的是，尽管我们将利用您在Qt开发中学到的一切来开发移动应用程序，但我们还需要了解移动软件运行的环境与传统的桌面和笔记本电脑环境有何不同，以及如何设计以适应这些限制。一旦我们了解了这些差异，使用Qt为Android编写软件就会变得轻而易举！
- en: A mobile software development primer
  id: totrans-3
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动软件开发入门
- en: 'The key difference to remember when developing software for any mobile platform—such
    as a cell phone or tablet—is that every resource is at a premium. The device is
    smaller, meaning that:'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 在为任何移动平台（如手机或平板电脑）开发软件时要记住的关键区别是，每一种资源都是宝贵的。设备更小，这意味着：
- en: Your user will pay less attention to your application, and use it for shorter
    periods of time
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的用户将对您的应用程序付出更少的关注，并且使用时间更短
- en: 'The screen is smaller, so you can display less information on the display (don''t
    be fooled by the high-dot pitch of today''s displays: reading 6-point font on
    a 4-inch display is no fun, high pixel densities or not)'
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 屏幕更小，因此您可以在显示器上显示更少的信息（不要被今天显示器的高点密度所迷惑：在4英寸的显示器上阅读6号字体是很不方便的，无论像素密度有多高）
- en: The processor and graphics processing unit are slower
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 处理器和图形处理单元速度较慢
- en: There's less RAM and less graphics memory
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RAM和图形内存较少
- en: There's less persistent storage for your application's data
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 应用程序数据的持久存储较少
- en: The network is slower, by as much as three orders of magnitude
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 网络速度较慢，甚至慢了三个数量级
- en: Let's look at each of these in more detail.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更详细地看看这些。
- en: User attention is at a premium
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户的注意力是宝贵的
- en: Can you walk and chew gum at the same time? I can't—but many people walk, chew
    gum, and use their mobile device all at the same time. (Worse, some even drive
    while using their devices!) It's very rare for an application on a cell phone
    or tablet to have 100 percent of the user's attention for more than a few minutes
    at a time. A good rule of thumb is that the smaller the device, the more likely
    the user is to treat it as something to pick up and glance at, or use it while
    they're doing something else.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 你能一边走路一边嚼口香糖吗？我不能——但很多人可以一边走路，一边嚼口香糖，一边使用他们的移动设备。 （更糟糕的是，一些人甚至在开车时使用他们的设备！）手机或平板上的应用程序很少能够吸引用户超过几分钟的百分之百的注意力。一个很好的经验法则是，设备越小，用户越有可能把它当作一种拿起来看一眼或者在做其他事情时使用的东西。
- en: 'The limited attention your user pays to your application has three key consequences:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 用户对您的应用程序的有限关注有三个关键后果：
- en: Your application must be fast. Mobile devices are no place for extra progress
    bars, spinning cursors, or lengthy splash screens.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的应用程序必须快速。移动设备不适合额外的进度条、旋转光标或冗长的启动画面。
- en: Your application must be succinct. The best mobile applications show data on
    only a page or two, having very flat navigation hierarchies. A common structure
    is to have a single screen of information, and a single screen with preferences
    that lets you configure what information should be shown (such as what location
    for which you're getting the information). Favor clear iconography over verbose
    text—if you can't draw, find someone who can, or buy icons from a site such as
    *The Noun Project* ([http://bit.ly/1fvBsnu](http://bit.ly/1fvBsnu)).
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的应用程序必须简洁。最好的移动应用程序只在一页或两页上显示数据，具有非常扁平的导航层次结构。一个常见的结构是有一个屏幕上的信息，和一个屏幕上的偏好设置，让您配置应该显示什么信息（比如您获取信息的位置）。如果您不能绘制清晰的图标，那就找一个可以的人，或者从*The
    Noun Project*（[http://bit.ly/1fvBsnu](http://bit.ly/1fvBsnu)）这样的网站购买图标。
- en: Your application must be accessible. Buttons should be big (a good guideline
    is that no hit target in your application should be smaller than the pad of your
    finger, about a square centimeter), and the text should be bigger, if possible.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的应用程序必须易于访问。按钮应该足够大（一个很好的指导原则是，应用程序中的点击目标不应该小于手指的垫，大约是一平方厘米），文本应该尽可能大。
- en: For these reasons, Qt Quick is the better choice for most mobile applications
    you'll write. You can create smooth and responsive applications that are visually
    pleasing and don't overwhelm your users.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，Qt Quick是您将编写的大多数移动应用程序的更好选择。您可以创建流畅且响应迅速的应用程序，视觉上令人愉悦，并且不会让用户感到不知所措。
- en: Computational resources are at a premium
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 计算资源是宝贵的
- en: 'Mobile devices must carry their power source with them: that means batteries.
    While batteries have improved over the last twenty years, they haven''t kept up
    with Moore''s Law; most of the improvements have been on the processor side, as
    processors have become smaller and dissipate less heat in the course of a normal
    operation.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 移动设备必须携带它们的电源来源：也就是电池。虽然电池在过去二十年里有所改进，但它们并没有跟上摩尔定律的步伐；大部分的改进都是在处理器方面，因为处理器变得更小，在正常操作过程中散发的热量也更少。
- en: Nonetheless, mobile devices aren't as fast as desktops or laptops—a good way
    to think about it is that the last generation's processor design probably scales
    well for mobile devices today. That's not to say that mobile devices are slow,
    just that they're slower. Equally important, you can't run the processor or graphics
    processor at full tilt without seriously affecting battery life.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管如此，移动设备不像台式机或笔记本那样快速——一个好的思路是，上一代的处理器设计可能对今天的移动设备有很好的适应性。这并不是说移动设备很慢，只是它们比较慢。同样重要的是，你不能让处理器或图形处理器全速运行而不严重影响电池寿命。
- en: 'Qt—especially Qt Quick—is optimized for low power consumption, but there are
    still things you can do to help squeeze the best performance out of your mobile
    application:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: Qt——特别是Qt Quick——被优化为低功耗，但仍然有一些事情可以帮助你挤出移动应用程序的最佳性能：
- en: '**Don''t poll**: This is probably the single most important point. Use Qt''s
    asynchronous signal-slot mechanism wherever possible, and consider multithreading
    using `QThread`, Qt''s multithreading environment, if you need to do something
    in the background. The more your application sleeps, the further it prolongs the
    battery life.'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**不要轮询**：这可能是最重要的一点。尽可能使用Qt的异步信号-槽机制，并考虑使用`QThread`进行多线程，如果需要在后台执行某些操作。你的应用程序休眠得越多，电池寿命就会延长得越久。'
- en: '**Avoid gratuitous animations**: Some animation is both customary and important
    in today''s applications; well-thought-out animations can help to orient the user
    as to where they''ve come from in an application''s user interface and where they''re
    going. But don''t flash, blink, or otherwise animate just to see pixels move;
    under the hood a lot has to happen to move those pixels, and that can eat battery
    life.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**避免不必要的动画**：一些动画在当今的应用程序中是习惯的和重要的；深思熟虑的动画可以帮助用户了解他们在应用程序用户界面中来自哪里，以及他们要去哪里。但不要闪烁、闪烁或以其他方式进行动画，只是为了看到像素移动；在幕后，要移动这些像素需要发生很多事情，这会消耗电池寿命。'
- en: '**Use the network judiciously**: Most mobile devices have at least two radios
    (cellular and Wi-Fi); some have more. Accessing the network should be seen as
    a necessary evil, because the radios consume power when transmitting and receiving
    data. And don''t forget data parsing, either: if you''re parsing a lot of data,
    you''re likely running the CPU at full tilt to do the heavy lifting, and that
    means lower battery life.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**谨慎使用网络**：大多数移动设备至少有两个无线电（蜂窝和Wi-Fi）；有些设备有更多。访问网络应该被视为一种必要的恶，因为在传输和接收数据时，无线电会消耗电力。而且不要忘记数据解析：如果你解析了大量数据，你可能会让CPU全速运行来完成繁重的工作，这意味着电池寿命会降低。'
- en: Network resources are at a premium
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 网络资源是稀缺的
- en: 'I''ve already warned you about the high cost to the battery for using the network.
    To add insult to injury, most mobile devices run on networks that can be up to
    three orders of magnitude slower than a desktop: your office desktop may have
    gigabit Ethernet, but in many parts of the world, a megabit per second is considered
    fast. This situation is rapidly improving, as network operators deploy cellular
    wireless networks such as **Long Term Evolution** (**LTE**) and Wi-Fi hotspots
    everywhere, but it''s by no means uniformly available. On a recent trip in California,
    in the course of eight hours, my cellular network connectivity throughput ran
    the gamut from faster than my cable modem (running at 25 megabits per second)
    down to the dreaded megabit-a-second that can make a large web page crawl.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经警告过你使用网络对电池的高成本。更令人伤感的是，大多数移动设备运行的网络速度可能比台式机慢三个数量级：你的办公桌面可能有千兆以太网，但在世界上许多地方，每秒一兆比特被认为是快速的。这种情况正在迅速改善，因为网络运营商部署了诸如**长期演进**（**LTE**）和Wi-Fi热点等蜂窝无线网络，但这并不是普遍可用的。最近在加利福尼亚的一次旅行中，在八个小时内，我的蜂窝网络连接吞吐量从比我的电缆调制解调器更快（运行在每秒25兆比特）到可怕的每秒一兆比特，这可能使一个大网页加载得很慢。
- en: For most applications, you should be fine using the **Hypertext Transfer Protocol**
    (**HTTP**); Qt's `QNetworkAccessManager` class implements HTTP and HTTPS, and
    using HTTP means that you can build web services to support your backend in a
    standard way.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 对于大多数应用程序，你应该可以使用**超文本传输协议**（**HTTP**）；Qt的`QNetworkAccessManager`类实现了HTTP和HTTPS，使用HTTP意味着你可以以标准方式构建支持后端的网络服务。
- en: If you're developing a game or a very custom kind of application, you may need
    to build a custom protocol. Consider using `QTcpSocket` or `QUdpSocket` for your
    network protocol, remembering of course that TCP is a reliable protocol, while
    with UDP there's no guarantee of your data reaching its destination; reliability
    is up to you.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你正在开发游戏或非常定制的应用程序，你可能需要构建一个自定义协议。考虑使用`QTcpSocket`或`QUdpSocket`来进行网络协议，当然要记住TCP是一种可靠的协议，而UDP则不能保证数据到达目的地；可靠性取决于你自己。
- en: Storage resources are at a premium
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 存储资源是稀缺的
- en: Mobile devices typically use all solid-state memory. Although solid-state memory
    has come down in price significantly in the last several years, it's still not
    as cheap as the rotating magnetic memory that makes up the disk drives in most
    desktops and many laptops. As a result, mobile devices may have as little as 8
    GB of flash memory for persistent storage, or if you're lucky, 16 or 32 GB. That's
    shared across the system and all applications; your application shouldn't use
    more than a few gigabytes at most, and that's only if your user is expecting it—say,
    for a podcast application. That should be the sum total of the size of your application,
    its static resources such as audio and video, and anything it might download and
    cache from the network.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 移动设备通常使用全固态存储器。尽管在过去几年里，固态存储器的价格已经大幅下降，但它仍然不像大多数台式机和许多笔记本电脑中的磁盘驱动器所组成的旋转磁性存储器那样便宜。因此，移动设备的持久存储可能只有8GB的闪存，或者如果你很幸运的话，可能是16GB或32GB。这些存储空间是系统和所有应用程序共享的；你的应用程序不应该使用超过几GB的存储空间，而且只有在用户期望的情况下才能使用这么多，比如播客应用程序。这应该是你的应用程序、其静态资源（如音频和视频）以及它可能从网络上下载和缓存的任何东西的总大小。
- en: Equally important, the runtime size of your application needs to be smaller.
    Most mobile devices have between a half GB and 2 GB of dynamic RAM available;
    the system shares this across all running applications, so it's important to allocate
    what you need and free it when you're done. Qt's memory management system, which
    I explained in [Chapter 3](ch03.html "Chapter 3. Designing Your Application with
    Qt Designer"), *Designing Your Application with Qt Designer,* and [Chapter 5](ch05.html
    "Chapter 5. Performance Optimization with Qt Creator"), *Performance Optimization
    with Qt Creator*, comes in handy here.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 同样重要的是，应用程序的运行时大小需要更小。大多数移动设备可用的动态RAM介于半GB和2GB之间；系统会在所有运行的应用程序之间共享这些内存，因此重要的是在需要时分配所需的内存，并在完成后释放。Qt的内存管理系统在这里非常有用，我在[第3章](ch03.html
    "第3章。使用Qt Designer设计您的应用程序")和[第5章](ch05.html "第5章。使用Qt Creator进行性能优化")中已经解释过。
- en: Finally, don't forget that your graphics textures can eat valuable GPU memory
    as well. While Qt manages the GPU for you, whether you're using Qt or Qt Quick,
    you can write an application that consumes all of a device's texture memory, making
    it difficult, or impossible, for the native OS to render what it needs if it needs
    to interrupt your application.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，不要忘记你的图形纹理也会占用宝贵的GPU内存。虽然Qt为你管理GPU，无论你使用Qt还是Qt Quick，你都可以编写一个消耗设备所有纹理内存的应用程序，这会使原生操作系统难以渲染所需的内容，如果需要中断你的应用程序，甚至可能是不可能的。
- en: To port or not to port?
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 移植还是不移植？
- en: To paraphrase the immortal bard, that's the question. With Qt's incredible flexibility
    across numerous platforms, the temptation to grab an existing application and
    port it can be overwhelming; especially in the vertical markets where you have
    a piece of custom software written in Qt for the desktop and a customer who wants
    "the same thing" for the latest mobile device for their mobile workers. In general,
    the best advice I can offer is to avoid porting UI, and only port the business
    logic in an application if it seems well-behaved for mobile devices.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 用Qt在众多平台上具有令人难以抗拒的灵活性，诱惑力很大，尤其是在垂直市场上，你可能已经用Qt为桌面编写了一款定制软件，而客户希望为他们的移动工作者提供最新移动设备上的“同样的东西”。总的来说，我能提供的最好建议是避免移植UI，只有在应用程序对移动设备表现良好时才移植业务逻辑。
- en: 'UI ported from the desktop or a laptop environment seldom works well on mobile
    devices. The user''s operating patterns are just too different: what a person
    wants to do while seated at a desktop or laptop is just not the same as what they
    want or can do standing up, walking around, or in brief spurts in a conference
    room, cafeteria, or café. If you''re porting from one mobile device to another,
    it may not be so bad; for example, a developer with a Qt application for MeeGo,
    Nokia''s Linux-based platform, shouldn''t have too much of a problem bringing
    their application to Qt on Android.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 从桌面或笔记本环境移植的UI很少在移动设备上表现良好。用户的操作模式完全不同：一个人在桌面或笔记本前所想做的事情与站立、走动或在会议室、餐厅或咖啡厅短暂停留时所想做或能做的事情完全不同。如果你从一个移动设备移植到另一个移动设备，情况可能不会那么糟糕；例如，一个在MeeGo上使用Qt应用程序的开发人员，可能不会在将他们的应用程序移植到Android上遇到太多问题。
- en: Porting business logic may be a safer bet, assuming it doesn't make heavy use
    of the CPU, network, or dynamic or static storage. Qt offers a wrapper for SQLite
    through QtSQL, and many enterprise applications use that for local storage. That's
    a reasonable alternative for data storage, and most HTTP-based networking applications
    shouldn't be too hard on the network layer, as long as they have reasonable caching
    policies and don't make too many requests for data too often. But if the application
    uses a lot of storage or has a persistent network connection, it's time to rearchitect
    and rewrite.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 移植业务逻辑可能是一个更安全的选择，假设它不会过度使用CPU、网络或动态或静态存储。Qt通过QtSQL提供了SQLite的封装，许多企业应用程序都使用它进行本地存储。这是数据存储的一个合理选择，大多数基于HTTP的网络应用程序在网络层上不应该太过苛刻，只要它们有合理的缓存策略，不会太频繁地请求数据。但如果应用程序使用了大量存储空间或有持续的网络连接，那么就是重新设计和重写的时候了。
- en: A word on testing
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于测试
- en: Testing any application is important, but mobile applications require additional
    effort in testing, especially Android applications. There's a wide variety of
    devices on the market, and users expect your application to perform well on any
    device they may have.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 测试任何应用程序都很重要，但移动应用程序需要额外的测试工作，尤其是Android应用程序。市场上有各种各样的设备，用户希望你的应用程序在任何可能拥有的设备上都能表现良好。
- en: The most important thing you can do is test your application on real devices,
    as many of them as you can get your hands on, if you're interested in releasing
    your application commercially. While as you will see, the Android SDK used by
    Qt Creator comes with an emulator that can run your Android application on your
    desktop or laptop, running in an emulator is no substitute for running on the
    device. A lot of things are different, from the size of the hardware itself to
    having a touch screen, and of course the network connection and raw processing
    power.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 你能做的最重要的事情就是在真实设备上测试你的应用程序，尽可能多地使用它们，如果你有意商业发布你的应用程序。正如你将看到的，Qt Creator使用的Android
    SDK带有一个模拟器，可以在桌面或笔记本电脑上运行你的Android应用程序，但在模拟器上运行不能替代在设备上运行。很多东西都不一样，从硬件大小到触摸屏，当然还有网络连接和原始处理能力。
- en: Fortunately, Android devices aren't terribly expensive, and there are an awful
    lot of them around. If you're just starting out, eBay or the Google Play Store
    can be a good place to shop for an inexpensive used or new device. If you're a
    student or budding entrepreneur, don't forget that many family members may have
    an Android device you can borrow, or you can use the Android cell phone that you
    already have.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，Android设备并不是非常昂贵，而且市面上有很多。如果你刚开始，eBay或Google Play商店可能是购买廉价二手或新设备的好地方。如果你是学生或初创企业家，不要忘记许多家庭成员可能有你可以借用的Android设备，或者你已经拥有的Android手机。
- en: What and when should you test? Everything and often! On a multiweek project,
    you should never be more than a few days away from a build running on a device.
    The longer you spend writing code that you haven't tested on a device, the more
    assumptions you may be making about how the device will perform.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 什么时候应该测试什么？什么都要测试，而且要经常测试！在一个跨几周的项目中，您不应该离设备运行构建的时间超过几天。您在设备上没有测试的代码写得越多，您对设备性能的假设就越多。
- en: Be sure not to just test your application in good circumstances, but in bad
    ones as well. Network connectivity is a prime example; you should test your error
    handling in cases with no network coverage. If you have good network coverage
    where you're working, one trick you can use is to put the device in a metal cookie
    tin or paint can; the metal attenuates the signal and has the same effect as the
    signal being lost in the real world (say, in a tunnel or on the subway).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 一定不要只在良好的情况下测试您的应用，也要在不好的情况下测试。网络连接就是一个典型的例子；您应该在没有网络覆盖的情况下测试错误处理。如果您所在的地方有良好的网络覆盖，一个小技巧是将设备放在金属饼干罐或油漆罐中；金属会减弱信号，具有与在现实世界中信号丢失的相同效果（比如在隧道或地铁中）。
- en: Setting up Qt Creator for Android
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为Android设置Qt Creator
- en: 'Android''s functionality is delimited in API levels; Qt for Android supports
    Android level 10 and above: that''s Android 2.3.3, a variant of Gingerbread. Fortunately,
    most devices in the field today are at least Gingerbread, making Qt for Android
    a viable development platform for millions of devices.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: Android的功能在API级别中被限定；Qt for Android支持Android 10及以上的级别：这是Android 2.3.3，是Gingerbread的一个变种。幸运的是，今天市场上大多数设备至少都是Gingerbread，这使得Qt
    for Android成为了数百万设备的可行开发平台。
- en: Downloading all the pieces
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 下载所有的组件
- en: 'To get started with Qt Creator for Android, you''re going to need to download
    a lot of stuff. Let''s get started:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始使用Qt Creator for Android，您需要下载很多东西。让我们开始吧：
- en: Begin with a release of Qt for Android, which was either part of the Qt installation
    you downloaded in [Chapter 1](ch01.html "Chapter 1. Getting Started with Qt Creator"),
    *Getting Started with Qt Creator,* or you need to go back and download it from
    [http://bit.ly/13G4Jfr](http://bit.ly/13G4Jfr)
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先是Qt for Android的一个版本，它可能是您在[第1章](ch01.html "第1章. 使用Qt Creator入门")中下载的Qt安装的一部分，或者您需要返回并从[http://bit.ly/13G4Jfr](http://bit.ly/13G4Jfr)下载它
- en: The Android developer tools require a current version of the **Java Development
    Kit** (**JDK**) (not just the runtime, the Java Runtime Environment, but the whole
    kit and caboodle); download it from [http://bit.ly/14HAaj4](http://bit.ly/14HAaj4),
    or you may be able to get things to work with Linux using OpenJDK at [http://bit.ly/1deNuTX](http://bit.ly/1deNuTX)
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Android开发工具需要当前版本的**Java Development Kit** (**JDK**)（不仅仅是运行时，Java Runtime Environment，而是整个工具包）；您可以从[http://bit.ly/14HAaj4](http://bit.ly/14HAaj4)下载，或者您也可以尝试使用OpenJDK在Linux上运行，下载地址是[http://bit.ly/1deNuTX](http://bit.ly/1deNuTX)
- en: You need the latest Android **Software Development Kit** (**SDK**), which you
    can download for Mac OS X, Linux, or Windows from [http://bit.ly/146nsPl](http://bit.ly/146nsPl)
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要最新的Android **Software Development Kit** (**SDK**)，您可以从[http://bit.ly/146nsPl](http://bit.ly/146nsPl)下载，适用于Mac
    OS X、Linux或Windows
- en: You need the latest Android **Native Development Kit** (**NDK**), which you
    can download from [http://bit.ly/16UYK50](http://bit.ly/16UYK50)
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要最新的Android **Native Development Kit** (**NDK**)，您可以从[http://bit.ly/16UYK50](http://bit.ly/16UYK50)下载
- en: You need the current version of Ant, the Java build tool, which you can download
    from [http://bit.ly/18AVIlF](http://bit.ly/18AVIlF)
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您需要当前版本的Ant，即Java构建工具，您可以从[http://bit.ly/18AVIlF](http://bit.ly/18AVIlF)下载
- en: Download, unzip, and install each of these, in this order. On Windows, I installed
    the Android SDK and NDK by unzipping them to the root of my hard drive, and installed
    the JDK in the default location I was offered.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 按照这个顺序下载、解压并安装所有这些。在Windows上，我将Android SDK和NDK解压到我的硬盘根目录，并将JDK安装在我被提供的默认位置。
- en: Setting up the environment variables
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设置环境变量
- en: 'Once you install the JDK, you need to be sure that you''ve set your `JAVA_HOME`
    environment variable to point to the directory where it was installed. How you
    do this differs from platform to platform; on a Mac OS X or Linux box, you''d
    edit your `.bashrc`, `.tcshrc`, or the others; on Windows you''ll go into system
    properties, click on **Environment Variables...**, and add the `JAVA_HOME` variable.
    The path should be to the base of the JDK directory: for me, it was `C:\Program
    Files\Java\jdk1.7.0_25\`, although the path for you will depend on where you installed
    the JDK and what version you installed. (Make sure you set the path with the trailing
    directory separator; the Android SDK is pretty fussy about that sort of thing.)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 安装JDK后，您需要确保已经设置了`JAVA_HOME`环境变量，指向安装JDK的目录。如何设置这一点因平台而异；在Mac OS X或Linux上，您需要编辑`.bashrc`、`.tcshrc`或其他文件；在Windows上，您需要进入系统属性，点击**环境变量...**，并添加`JAVA_HOME`变量。路径应该是JDK目录的基础：对我来说，是`C:\Program
    Files\Java\jdk1.7.0_25\`，但对您来说，路径将取决于您安装JDK的位置和安装的版本。（确保设置路径时带有尾部目录分隔符；Android
    SDK对这类事情非常挑剔。）
- en: 'Next up, you need to update your `PATH` variable to point to all the stuff
    you just installed. Again, it''s an environment variable, and you''ll need to
    add the following:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，您需要更新`PATH`变量，指向刚刚安装的所有内容。同样，这是一个环境变量，您需要添加以下内容：
- en: The `bin` directory of your JDK
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 您的JDK的`bin`目录
- en: The `android\sdk\tools` directory
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`android\sdk\tools`目录'
- en: The `android\sdk\platform-tools` directory
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`android\sdk\platform-tools`目录'
- en: 'For me, on my Windows 8 computer, my `PATH` variable includes the following
    now:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 对我来说，在我的Windows 8电脑上，我的`PATH`变量现在包括以下内容：
- en: '[PRE0]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Don''t forget the separators: on Windows, it''s a semicolon (`;`) on Mac OS
    X and Linux it''s a colon (`:`).'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 不要忘记分隔符：在Windows上是分号（`;`），在Mac OS X和Linux上是冒号（`:`）。
- en: At this point, it's a good idea to restart your computer (if you're running
    Windows) or log out and log back in to make sure all these settings take effect.
    If you're on a Mac OS X or Linux box, you may be able to start a new terminal
    and have the same effect (or reload your shell configuration file) instead, but
    I like the idea of restarting at this point to ensure that the next time I start
    everything up, it'll work correctly.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一点上，重新启动计算机（如果您使用Windows），或注销并重新登录以确保所有这些设置生效。如果您使用的是Mac OS X或Linux系统，您可能可以启动一个新的终端并产生相同的效果（或重新加载您的shell配置文件），但我喜欢在这一点上重新启动以确保下次启动时一切都能正常工作。
- en: Finishing the Android SDK installation
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 完成Android SDK安装
- en: 'Now we need to use the Android SDK tools to ensure you have a full version
    of the SDK for at least one Android API level installed. We''ll need to start
    Eclipse, the Android SDK''s development environment, and run the Android SDK manager.
    To do this, follow the ensuing steps:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们需要使用Android SDK工具来确保您至少安装了一个Android API级别的完整版本的SDK。我们需要启动Eclipse，Android
    SDK的开发环境，并运行Android SDK管理器。要做到这一点，请按照以下步骤：
- en: Find Eclipse. It's probably in the Eclipse directory of the directory you installed
    the Android SDK in. If Eclipse doesn't start, check your `JAVA_HOME` and `PATH`
    variables; odds are Eclipse can't find the Java environment it needs to run.
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 找到Eclipse。它可能在您安装Android SDK的目录的Eclipse目录中。如果Eclipse无法启动，请检查您的`JAVA_HOME`和`PATH`变量；很可能Eclipse找不到运行所需的Java环境。
- en: Click on **OK** when Eclipse prompts you for a workspace. This doesn't matter;
    you won't use Eclipse except to download Android SDK components.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当Eclipse提示您选择工作区时，单击**OK**。这并不重要；除了下载Android SDK组件外，您不会使用Eclipse。
- en: Click on the Android SDK Manager button in the Eclipse toolbar (circled in the
    next screenshot):![Finishing the Android SDK installation](img/2319OS_06_01.jpg)
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击Eclipse工具栏中的Android SDK Manager按钮（在下一个截图中圈出）：![完成Android SDK安装](img/2319OS_06_01.jpg)
- en: The Eclipse SDK, with the Android SDK Manager button circled
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: Eclipse SDK，带有圈出的Android SDK Manager按钮
- en: Make sure you have at least one Android API level above API Level 10 installed,
    along with the Google USB Driver (you'll need that to debug on hardware).
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保您至少安装了一个Android API级别高于API级别10，以及Google USB驱动程序（您需要它来在硬件上进行调试）。
- en: Quit Eclipse.
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 退出Eclipse。
- en: Next, let's see if the Android Debug Bridge—the software component that transfers
    your executables to your Android device and supports on-device debugging—is working
    as it should. Fire up a shell prompt and type `adb`. If you see a lot of output
    and no error, the bridge is correctly installed. If not, go back and check your
    `PATH` variable to be sure it's correct.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们看看Android调试桥（将可执行文件传输到Android设备并支持设备上调试的软件组件）是否正常工作。启动shell提示符，然后键入`adb`。如果您看到大量输出且没有错误，则桥已正确安装。如果没有，请返回并检查您的`PATH`变量以确保它是正确的。
- en: While you're at it, you should developer-enable your Android device, too, so
    it'll work with ADB. Follow the steps given at [http://bit.ly/1a29sal](http://bit.ly/1a29sal).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在此期间，您还应该启用Android设备的开发者功能，以便它可以与ADB一起使用。请按照[http://bit.ly/1a29sal](http://bit.ly/1a29sal)中给出的步骤进行操作。
- en: Configuring Qt Creator
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 配置Qt Creator
- en: 'Now, it''s time to tell Qt Creator about all the stuff you just installed:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候告诉Qt Creator您刚刚安装的所有内容了：
- en: Start Qt Creator, but don't create a new project.
  id: totrans-76
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启动Qt Creator，但不要创建新项目。
- en: Under the **Tools** menu, choose **Options...** and then **Android**.
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**工具**菜单下，选择**选项...**然后选择**Android**。
- en: 'Fill in the blanks, as the next screenshot shows. They should be:'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填写空白，如下一个截图所示。它们应该是：
- en: The path to the SDK directory in the directory where you installed the Android
    SDK.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: SDK目录的路径，在您安装Android SDK的目录中。
- en: The path to where you installed the Android NDK.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您安装Android NDK的路径。
- en: Check **Automatically create kits for Android tool chains**.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检查**自动为Android工具链创建套件**。
- en: The path to Ant; either the Ant executable itself on Mac OS X and Linux platforms,
    or `ant.bat` in the bin directory of the directory where you unpacked Ant.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Ant的路径；在Mac OS X和Linux平台上是Ant可执行文件本身，或者在解压Ant的目录的bin目录中的`ant.bat`。
- en: The directory where you installed the JDK (this may be automatically picked
    up from your `JAVA_HOME` directory).![Configuring Qt Creator](img/2319OS_06_02.jpg)
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您安装JDK的目录（这可能会自动从您的`JAVA_HOME`目录中获取）。![配置Qt Creator](img/2319OS_06_02.jpg)
- en: The Qt Creator Android configuration, set with the paths where I installed the
    various Android components
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Qt Creator Android配置，设置了我安装各种Android组件的路径
- en: Click on **OK** to close the **Options** window.
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击**OK**关闭**选项**窗口。
- en: 'You should now be able to create a new Qt GUI or Qt Quick application for Android!
    Do so, and ensure that Android is a target option in the wizard as the next screenshot
    shows; be sure to choose at least one ARM target, one x86 target, and one target
    for your desktop environment:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您应该能够为Android创建新的Qt GUI或Qt Quick应用程序！这样做，并确保Android是向导中的目标选项，如下一个截图所示；确保至少选择一个ARM目标，一个x86目标，以及一个桌面环境的目标：
- en: '![Configuring Qt Creator](img/2319OS_06_03.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![配置Qt Creator](img/2319OS_06_03.jpg)'
- en: Android targets in the New Qt Quick Application wizard
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 新Qt Quick应用程序向导中的Android目标
- en: Building and running your application
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 构建和运行您的应用程序
- en: 'Write and build your application normally. A good idea is to first build the
    Qt Quick "Hello World" application for Android, before you go to town and make
    a lot of changes, and test the environment by compiling for the device. When you''re
    ready to run on the device:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 正常编写和构建您的应用程序。一个好主意是先为Android构建Qt Quick“Hello World”应用程序，然后再进行大量更改，并通过为设备编译来测试环境。当您准备好在设备上运行时：
- en: Navigate to **Projects** (on the left) and then choose the **Android for arm**
    kit's **Run Settings**.
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到**项目**（左侧），然后选择**Android for arm**套件的**运行设置**。
- en: Under **Package Configurations**, ensure that the Android SDK level is set to
    the SDK level of the SDK you installed.
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**包配置**下，确保Android SDK级别设置为您安装的SDK级别。
- en: Ensure that **Package name** reads something like `org.qtproject.example`, followed
    by your project name.
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保**包名称**类似于`org.qtproject.example`，然后跟上你的项目名称。
- en: Connect your Android device to your computer using the USB cable.
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用USB线将你的Android设备连接到计算机上。
- en: Choose the **Android for arm** run target, and then click on either **Debug**
    or **Run** to debug or run your application on the device.
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择**Android for arm**运行目标，然后点击**调试**或**运行**来在设备上调试或运行你的应用程序。
- en: Summary
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Qt for Android gives you an excellent leg up on mobile development, but it's
    not a panacea. If you're planning on targeting mobile devices, you should be sure
    to have a good understanding of the usage patterns for your application's users,
    as well as the constraints in CPU, GPU, memory, and network that a mobile application
    must run under.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: Qt for Android为移动开发提供了极大的帮助，但并非万能药。如果你计划面向移动设备开发，你应该确保对应用程序用户的使用模式有很好的理解，以及移动应用程序必须在CPU、GPU、内存和网络方面的限制下运行。
- en: Once we understand these, all of our skills with Qt Creator and Qt carry over
    to the mobile arena. Begin by installing the JDK, Android SDK, Android NDK, and
    Ant, and then develop applications as usual, compiling for the device and running
    on the device frequently to iron out any unexpected problems along the way.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们理解了这些，我们所有在Qt Creator和Qt上的技能都可以应用到移动领域。首先安装JDK、Android SDK、Android NDK和Ant，然后像平常一样开发应用程序，经常在设备上编译和运行，以解决途中出现的任何意外问题。
- en: In our final chapter, we learn a bunch of odds and ends about Qt Creator and
    Qt in general that will make software development much easier. Stay tuned!
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的最后一章中，我们学习了一些关于Qt Creator和Qt的杂项知识，这将使软件开发变得更加容易。敬请关注！
