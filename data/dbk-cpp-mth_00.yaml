- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Imagine C++ as a mythical, ancient language, descended from the ones, forged
    in the fires of low-level magic, tempered with the precision of high-level incantations.
    Born out of the need to both control the machine and present an abstraction, it
    is a tool wielded by those who seek to bridge the chasm between raw machine and
    high-level constructs, while still accessing the luxury of modern tools.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 想象C++是一种神话般的古老语言，源自那些在低级魔法的烈火中锻造的语言，经过高级咒语的精确锻造。它诞生于控制机器和提供抽象的需求，是那些寻求弥合原始机器和高级结构之间鸿沟的人使用的工具，同时仍然享有现代工具的奢侈。
- en: Imagine this book as unlike any other you have encountered. The authors have
    embarked on a daring quest, navigating the labyrinthine depths of C++ to shed
    light on its true nature. With courage and precision, they aim to strip away the
    layers of myth and mystery that have long surrounded this fabled language, tackling
    both its triumphs and its perceived flaws.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下这本书与您所遇到的其他任何书籍都不同。作者们踏上了一场大胆的征程，穿梭在C++错综复杂的深处，以揭示其真正的本质。他们带着勇气和精确，旨在剥去长期以来围绕这种传奇语言的神化和神秘的面纱，同时应对其胜利和被感知的缺陷。
- en: Approach this book with an open mind, for it promises a journey unlike any other,
    a journey not suited to the faint of heart. The authors dive headfirst into the
    complex reputation of C++, confronting its infamous pointers and intricate memory
    management, and even descending into the depths of low-level C++, where assembly
    reigns and pointers are simply numbers. We look at the different C++s that exist
    out there, at the ecosystem around C++, at how to learn it today, and at the things
    you’d do better to forget about. Through each chapter, we peel back the layers,
    uncovering the underlying logic and elegance within these powerful constructs.
    With stories of C++ legends and a touch of humor (albeit sometimes questionable),
    we aim to keep you engaged while guiding you through both the sublime and the
    absurd. Expect to encounter some of the worst code you’ve ever seen, presented
    intentionally to teach you what not to do, all while illuminating the true potential
    of C++. This is a book designed not just to teach but also to reveal the soul
    of C++ through both its virtues and its pitfalls.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 以开放的心态阅读这本书，因为它承诺了一段与众不同的旅程，一段不适合胆小的人的旅程。作者们一头扎进了C++复杂的声誉中，面对其臭名昭著的指针和复杂的内存管理，甚至深入到低级C++的深处，在那里汇编语言统治，指针仅仅是数字。我们审视了存在的不同C++版本，C++的生态系统，以及如何今天学习它，以及你最好忘记的事情。通过每一章，我们剥去层层面纱，揭示这些强大构造背后的逻辑和优雅。通过C++传奇故事和一点幽默（尽管有时有些可疑），我们旨在保持你的参与度，同时引导你穿越至高无上和荒谬。预期会遇到一些你见过的最糟糕的代码，故意展示给你，教你不要做什么，同时照亮C++的真正潜力。这是一本不仅旨在教学，而且通过其优点和缺点揭示C++灵魂的书。
- en: Who this book is for
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向的对象
- en: This book, with its myth-busting, semi-humorous approach, is perfect for programmers
    who already have a working knowledge of C++ but want to go deeper into its nuances
    and mysteries. It could also appeal to curious learners and computer science students
    who are intrigued by the language’s reputation for both power and complexity.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书以破除神话、半幽默的方式，非常适合那些已经具备C++基本知识但希望深入了解其细微之处和奥秘的程序员。它也可能吸引那些对C++语言既强大又复杂的声誉感到好奇的学习者和计算机科学学生。
- en: This audience includes those who appreciate the artistic and philosophical sides
    of programming – developers who don’t just want to use C++ but also understand
    why it works as it does, and the lore behind its most famous (and infamous) features.
    It’s for those who see programming not just as a skill but as a craft, one shaped
    by history, quirks, and even a bit of legend.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这个受众包括那些欣赏编程的艺术和哲学方面的人——那些不仅想使用C++，还想理解为什么它如此运作，以及其最著名（和臭名昭著）的功能背后的传说的开发者。这是为那些将编程不仅仅视为一项技能，而视为一种工艺的人准备的，这种工艺由历史、怪癖甚至一点传奇所塑造。
- en: What this book covers
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[*Chapter 1*](B22235_01.xhtml#_idTextAnchor013) , *C++ Is Very Difficult to
    Learn* , looks at why this is the case: is it the language or is it the teaching
    method? Should we start with low-level features such as pointers and memory management
    first, or would it perhaps be better to start with working examples or with the
    OOP features? Also, does every C++ programmer need to know the same C++? The chapter
    discusses different approaches to learning a language, with a focus on C++, and
    decides whether C++ is still difficult to learn today ... with the right method.
    **[Alex]**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第一章*](B22235_01.xhtml#_idTextAnchor013) ，*C++ 非常难学*，探讨了为什么会出现这种情况：是语言本身还是教学方法的问题？我们应该先从指针和内存管理等低级特性开始，还是或许从工作示例或面向对象（OOP）特性开始会更好？此外，每个
    C++ 程序员都需要了解相同的 C++ 吗？本章讨论了学习语言的不同方法，重点关注 C++，并决定 C++ 是否在今天仍然难以学习……使用正确的方法。**[亚历克斯]**'
- en: '[*Chapter 2*](B22235_02.xhtml#_idTextAnchor026) , *Every C++ Program Is Standard-Compliant*
    , covers the question that the title suggests. In an ideal world, maybe they would
    be! In reality, every C++ program should be compliant. However, as we discover
    in this chapter, when they stray a little to the left or right, using an obscure
    compiler extension, dabbling in undefined behavior, or relying on a particular
    platform’s quirks, you instantly might find yourself in a tangle of errors only
    decipherable by ancient mystics. So, sure, every C++ program is “compliant” ...
    until it’s not! **[Ferenc]**'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第二章*](B22235_02.xhtml#_idTextAnchor026) ，*每个 C++ 程序都符合标准*，探讨了标题所暗示的问题。在一个理想的世界里，也许它们会是！在现实中，每个
    C++ 程序都应该符合标准。然而，正如我们在本章中发现的那样，当它们稍微偏离左右，使用晦涩的编译器扩展、涉足未定义行为或依赖于特定平台的怪癖时，你可能会发现自己陷入只有古代神秘主义者才能解读的错误之中。所以，当然，每个
    C++ 程序都是“符合”标准的……直到它不再符合！**[费伦茨]**'
- en: '[*Chapter 3*](B22235_03.xhtml#_idTextAnchor037) , *There’s a Single C++, and
    It Is Object-Oriented* , examines different paradigms of organizing code, including
    functional programming, meta programming, and the lesser-known extreme polymorphism.
    **[Alex]**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第三章*](B22235_03.xhtml#_idTextAnchor037) ，*只有一个 C++，它是面向对象的*，考察了组织代码的不同范例，包括函数式编程、元编程和不太为人所知的极端多态。**[亚历克斯]**'
- en: '[*Chapter 4*](B22235_04.xhtml#_idTextAnchor050) , *The Main() Function is the
    Entry Point to Your Application* , covers the topic mentioned in the title. In
    practice, as we will present in the chapter, the **main()** function is like the
    front door of your application: it’s where everything begins, but if you peek
    behind it, you’ll often find an intricate web of dependencies, libraries, and
    OS-dependent system calls that make reaching it feel more like navigating a maze
    than walking a straightforward path. **[Ferenc]**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第四章*](B22235_04.xhtml#_idTextAnchor050) ，*`main()` 函数是应用程序的入口点*，涵盖了标题中提到的主题。在实践中，正如我们将在本章中展示的，`main()`
    函数就像应用程序的前门：它是一切开始的地方，但如果你窥视其后，你通常会发现一个错综复杂的依赖关系网、库和与操作系统相关的系统调用，这使得到达它感觉更像是在迷宫中导航而不是沿着一条直路行走。**[费伦茨]**'
- en: '[*Chapter 5*](B22235_05.xhtml#_idTextAnchor061) , *In a C++ Class, Order Must
    There Be* , explores the fact that, sure enough, there must be order in a C++
    class, since problems arise without it! Methods, data members, constructors, a
    place each must find! Yes, flexibility is, but ignored structure cannot be. Respect
    not the ordered members’ order request and crumble the class will! Freedom too
    much, and behavior, undefined, comes, errors, bugs, crashes! Disorder, C++ does
    not tolerate. With sequence respect, harmony reigns! The most important rules,
    this chapter presents, where the specified order of C++ concepts matters. Or it
    might not be specified at all, but still matters. [ **Ferenc** ]'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第五章*](B22235_05.xhtml#_idTextAnchor061) ，*在 C++ 类中，必须有秩序*，探讨了确实，在 C++ 类中必须有秩序，因为没有秩序会出现问题！方法、数据成员、构造函数，每个都必须找到自己的位置！是的，灵活性很重要，但忽视结构是不行的。不尊重有序成员的顺序请求，类就会崩溃！自由过度，行为未定义，随之而来的是错误、bug
    和崩溃！混乱，C++ 不能容忍。尊重顺序，和谐才会统治！本章提出的最重要的规则是，C++ 概念的指定顺序很重要。或者它可能根本未指定，但仍然很重要。[ **费伦茨**
    ]'
- en: '[*Chapter 6*](B22235_06.xhtml#_idTextAnchor070) , *C++ Is Not Memory-Safe*
    , explores the challenges of memory management in C++, the promise of modern language
    constructs, and their failures, in the context of increased awareness of the general
    public on software reliability. **[Alex]**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第六章*](B22235_06.xhtml#_idTextAnchor070) ，*C++ 并非内存安全*，探讨了在 C++ 中内存管理的挑战，现代语言构造的承诺及其失败，以及随着公众对软件可靠性的认识提高。**[亚历克斯]**'
- en: '[*Chapter 7*](B22235_07.xhtml#_idTextAnchor079) , *There’s No Simple Way to
    Do Parallelism and Concurrency in C++,* looks at the need for parallelism and
    concurrency, how modern C++ proposes to deal with them, and how the actor model
    can help design parallelism in your products. **[Alex]**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](B22235_07.xhtml#_idTextAnchor079) ，*在C++中做并行和并发没有简单的方法*，探讨了并行和并行的需求，现代C++如何处理它们，以及actor模型如何帮助设计产品中的并行性。**[Alex]** '
- en: '[*Chapter 8*](B22235_08.xhtml#_idTextAnchor088) , *The Fastest C++ Code Is
    Inline Assembly* , covers a fact we were taught three decades ago. While assembly
    does indeed offer low-level control, modern compilers are highly optimized and
    often generate more efficient code than hand-written assembly, as we will demonstrate
    in the chapter. Indeed, inline assembly can improve performance in some cases,
    but it sacrifices readability and portability, so use it sparingly and only when
    absolutely necessary. **[Ferenc]**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B22235_08.xhtml#_idTextAnchor088) ，*最快的C++代码是内联汇编*，涵盖了一个我们三十年前就学到的事实。虽然汇编确实提供了低级控制，但现代编译器高度优化，通常生成的代码比手写的汇编更高效，正如我们将在本章中展示的。确实，内联汇编在某些情况下可以提高性能，但它牺牲了可读性和可移植性，因此应谨慎使用，并且只有在绝对必要时才使用。**[Ferenc]**'
- en: '[*Chapter 9*](B22235_09.xhtml#_idTextAnchor096) , *C++ Is Beautiful* , asserts
    that C++ is indeed beautiful because where else can you find a language so gracefully
    tangled in angle brackets, semicolons, curly braces, and periods? It’s a poetic
    dance of keywords, templates, ancient macros, and overloaded operators, all elegantly
    arranged to make even the most seasoned programmers question their life choices.
    Truly, as the chapter will showcase, C++ syntax is the epitome of beauty, if beauty
    means a riddle wrapped in an enigma, with just a hint of confusion after preprocessing
    again the unpreprocessable. **[Ferenc]**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B22235_09.xhtml#_idTextAnchor096) ，*C++之美*，断言C++确实很美，因为你在哪里还能找到一个如此优雅地交织着尖括号、分号、花括号和句点的语言？这是一个关键词、模板、古老宏和重载运算符的诗意舞蹈，它们被巧妙地排列，甚至让经验丰富的程序员都会质疑自己的生活选择。确实，正如本章将展示的，如果美意味着一个谜题包裹在谜团之中，那么在预处理后再处理那些无法处理的代码后，只会留下一点困惑。**[Ferenc]** '
- en: '[*Chapter 10*](B22235_10.xhtml#_idTextAnchor104) , *There Are No Libraries
    For Modern Programming in C++* , evaluates the need and availability of libraries
    for C++, the challenges of package management, the difficulties in finding libraries
    for your target version and architecture, and the increasing problem of supply
    chain attacks. **[Alex]**'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B22235_10.xhtml#_idTextAnchor104) ，*C++中没有现代编程的库*，评估了C++库的需求和可用性，包管理的挑战，寻找目标版本和架构的库的困难，以及供应链攻击日益严重的问题。**[Alex]** '
- en: '[*Chapter 11*](B22235_11.xhtml#_idTextAnchor112) , *C++ Is Backward Compatible
    ... Even With C* , explores backward compatibility because, as we will present
    in the chapter, C++ inherits the family heirloom: a messy pile of global variables,
    pointy pointers, and undefined behavior. C++ dutifully keeps these relics alive,
    allowing the two languages to coexist in an awkward, yet somehow functional, embrace.
    Compatibility, indeed, because who doesn’t want the thrill of mixing decades-old
    C code with modern C++? Or with not-so-modern C++? We mean, hey, tradition is
    important, and we must clamber for a living! **[Ferenc]**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第11章*](B22235_11.xhtml#_idTextAnchor112) ，*C++与C向后兼容...甚至与C*，探讨了向后兼容性，因为正如我们将在本章中展示的，C++继承了家族的传家宝：一堆混乱的全局变量、尖锐的指针和未定义的行为。C++尽职尽责地让这些遗物保持活力，使得两种语言能够在尴尬但
    somehow 功能性的拥抱中共存。兼容性，的确，因为谁不想体验将几十年前的C代码与现代C++混合的刺激？或者与不那么现代的C++混合？我们的意思是，嘿，传统很重要，我们必须为了生计而奋斗！**[Ferenc]** '
- en: '[*Chapter 12*](B22235_12.xhtml#_idTextAnchor120) , *Rust Will Replace C++*
    , looks at why we have so many programming languages, how Rust fits into the ecosystem
    and what it does well, C++’s answer, and the conditions under which Rust might
    replace C++. **[Alex]**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第12章*](B22235_12.xhtml#_idTextAnchor120) ，*Rust将取代C++*，探讨了为什么我们有这么多编程语言，Rust如何融入生态系统，它做得好的地方，C++的回应，以及Rust可能取代C++的条件。**[Alex]** '
- en: To get the most out of this book
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 要充分发挥这本书的效用
- en: The ideal audience for this book would be intermediate to experienced C++ developers
    and scholastic learners who already have a solid understanding of programming
    fundamentals and are eager to dive deeper into the intricacies of C++.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书的理想读者是中级到高级的C++开发者和已经对编程基础有扎实理解并渴望深入了解C++复杂性的学术学习者。
- en: Professionals working with C++ in real-world applications, those interested
    in optimizing performance through assembly language or advanced compiler techniques,
    and enthusiasts who appreciate the language’s quirks and complexity might find
    the book enjoyable.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际应用中使用 C++ 的专业人士，对通过汇编语言或高级编译技术优化性能感兴趣的人，以及欣赏语言怪癖和复杂性的爱好者可能会觉得这本书很有趣。
- en: Computer science students seeking a more thorough introduction to C++, academics
    in the pursuit of a showcase of the latest modern C++ techniques, or programmers
    who are in the process of learning the language, please consider that this book
    does not cover the beginnings of C++, nor does it include the topic of how to
    learn it. There are books that are definitely much better suited for this task,
    such as *Programming -- Principles and Practice Using C++ (3rd Edition)* by Bjarne
    Stroustrup, the creator of the language (or, well, any other book that works for
    you).
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 寻求对 C++ 有更深入介绍的大学生，追求展示最新现代 C++ 技术的学者，或正在学习该语言的程序员，请考虑本书不涵盖 C++ 的基础知识，也不包括如何学习它的主题。有其他书籍肯定更适合这项任务，例如
    Bjarne Stroustrup（该语言的创造者）所著的 *《C++ 编程：原理与实践》（第 3 版）*（或者，好吧，任何对你有用的书籍）。
- en: Seasoned C++ developers who want to have an overview of the latest C++ standard,
    language lawyers, or those of you without a sense of humor, or if you are reading
    this book to get an answer to a burning question ... well, there are chances that
    you might not find this book enjoyable at all, since it might not have answers
    to any of your questions. It might not have answers at all. Instead, you might
    discover that after reading it, you end up having even more questions than before.
    For you, I recommend reading through the C++ standard, all your questions have
    an answer there. You have been warned.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 经验丰富的 C++ 开发者想要了解最新的 C++ 标准概述，语言律师，或者那些没有幽默感的人，或者如果你阅读这本书是为了得到一个迫切问题的答案……好吧，你可能根本不会觉得这本书有趣，因为它可能无法回答你的任何问题。可能根本就没有答案。相反，你可能发现阅读后，你比之前有更多的问题。对你来说，我建议阅读
    C++ 标准，你所有的疑问都有答案在那里。你已经得到了警告。
- en: '| **Software/hardware covered in** **the book** | **Operating** **system requirements**
    |'
  id: totrans-25
  prefs: []
  type: TYPE_TB
  zh: '| **本书涵盖的软件/硬件** | **操作系统要求** |'
- en: '| Various C++ compilers, which are relevant or not in 2025 | Windows, macOS,
    Linux, or no operating system at all |'
  id: totrans-26
  prefs: []
  type: TYPE_TB
  zh: '| 2025 年相关的各种 C++ 编译器 | Windows、macOS、Linux 或没有任何操作系统 |'
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code from the book’s GitHub repository (a link
    is available in the next section). Doing so will help you avoid any potential
    errors related to the copying and pasting** **of code.**'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您使用的是本书的数字版，我们建议您亲自输入代码或从本书的 GitHub 仓库（下一节中有一个链接）获取代码。这样做将帮助您避免与代码的复制和粘贴相关的任何潜在错误。**'
- en: Download the example code files
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Debunking-CPP-Myths](https://github.com/PacktPublishing/Debunking-CPP-Myths)
    . If there’s an update to the code, it will be updated in the GitHub repository.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从 GitHub 下载本书的示例代码文件，网址为 [https://github.com/PacktPublishing/Debunking-CPP-Myths](https://github.com/PacktPublishing/Debunking-CPP-Myths)。如果代码有更新，它将在
    GitHub 仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)
    . Check them out!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他来自我们丰富的书籍和视频目录的代码包，可在 [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)
    获取。查看它们！
- en: Conventions used
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '**Code in text** : Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “The **execve()** system call, after several iterations
    where it leaves the confines of userspace, will end up in the Linux kernel and
    create a **linux_binprm** structure.”'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**文本中的代码**：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟 URL、用户输入和 Twitter 用户名。以下是一个示例：“在经过几次迭代后，**execve()**
    系统调用将离开用户空间，最终进入 Linux 内核并创建一个 **linux_binprm** 结构。”'
- en: 'A block of code is set as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置为以下格式：
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都按以下方式编写：
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Tips or important notes
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 提示或重要注意事项
- en: Appear like this.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来像这样。
- en: Get in touch
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: '**General feedback** : If you have questions about any aspect of this book,
    email us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and
    mention the book title in the subject of your message.'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：如果您对本书的任何方面有疑问，请通过 [customercare@packtpub.com](mailto:customercare@packtpub.com)
    发送电子邮件，并在邮件主题中提及书名。'
- en: '**Errata** : Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误**：尽管我们已经尽一切努力确保内容的准确性，但错误仍然可能发生。如果您在此书中发现错误，我们将不胜感激，如果您能向我们报告，我们将不胜感激。请访问
    [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata) 并填写表格。'
- en: '**Piracy** : If you come across any illegal copies of our works in any form
    on the internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**：如果您在互联网上以任何形式发现我们作品的非法副本，我们将不胜感激，如果您能提供位置地址或网站名称，我们将不胜感激。请通过 [copyright@packt.com](mailto:copyright@packt.com)
    与我们联系，并提供材料的链接。'
- en: '**If you are interested in becoming an author** : If there is a topic that
    you have expertise in and you are interested in either writing or contributing
    to a book, please visit [authors.packtpub.com](http://authors.packtpub.com) .'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**：如果您在某个领域有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问 [authors.packtpub.com](http://authors.packtpub.com)。'
- en: Share Your Thoughts
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享您的想法
- en: Once you’ve read *Debunking C++ Myths* , we’d love to hear your thoughts! Please
    [click here to go straight to the Amazon review page](https://packt.link/r/1835884792)
    for this book and share your feedback.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您阅读了 *Debunking C++ Myths*，我们很乐意听听您的想法！请 [点击此处直接转到此书的亚马逊评论页面](https://packt.link/r/1835884792)
    并分享您的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 您的评论对我们和科技社区都很重要，并将帮助我们确保我们提供高质量的内容。
- en: Download a free PDF copy of this book
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载此书的免费PDF副本
- en: Thanks for purchasing this book!
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您购买此书！
- en: Do you like to read on the go but are unable to carry your print books everywhere?
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 您喜欢在移动中阅读，但无法携带您的印刷书籍到任何地方吗？
- en: Is your eBook purchase not compatible with the device of your choice?
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 您选择的设备是否与您的电子书购买不兼容？
- en: Don’t worry, now with every Packt book you get a DRM-free PDF version of that
    book at no cost.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 不要担心，现在，随着每本Packt书籍，您都可以免费获得该书的DRM免费PDF版本。
- en: Read anywhere, any place, on any device. Search, copy, and paste code from your
    favorite technical books directly into your application.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在任何地方、任何设备上阅读。直接从您最喜欢的技术书籍中搜索、复制和粘贴代码到您的应用程序中。
- en: The perks don’t stop there, you can get exclusive access to discounts, newsletters,
    and great free content in your inbox daily
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 优惠远不止于此，您还可以获得独家折扣、时事通讯和每日免费内容的每日访问权限。
- en: 'Follow these simple steps to get the benefits:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 按照以下简单步骤获取好处：
- en: Scan the QR code or visit the link below
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 扫描二维码或访问以下链接
- en: '[![img](img/B22235_QR_Free_PDF.jpg)](https://packt.link/free-ebook/9781835884782)'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '[![img](img/B22235_QR_Free_PDF.jpg)](https://packt.link/free-ebook/9781835884782)'
- en: '[https://packt.link/free-ebook/9781835884782](https://packt.link/free-ebook/9781835884782)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '[https://packt.link/free-ebook/9781835884782](https://packt.link/free-ebook/9781835884782)'
- en: Submit your proof of purchase
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提交您的购买证明
- en: That’s it! We’ll send your free PDF and other benefits to your email directly
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就这样！我们将直接将您的免费PDF和其他好处发送到您的电子邮件。
