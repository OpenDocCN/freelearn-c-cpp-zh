["```cpp\nint x = 1; \nwhile( x <= 5 ) // may only enter the body of the while when x<=5 \n{ \n  cout << \"x is \" << x << endl; \n  x++; \n} \ncout << \"Finished\" << endl; \n```", "```cpp\nx is 1 \nx is 2 \nx is 3 \nx is 4 \nx is 5 \nFinished \n```", "```cpp\nint x = 1; \nif( x <= 5 ) // you may only enter the block below when x<=5 \n{ \n  cout << \"x is \" << x << endl; \n  x = x + 1; \n} \ncout << \"End of program\" << endl; \n```", "```cpp\nint x = 1; \nwhile( x <= 5 ) // may only enter the body of the while when x<=5 \n{ \n  cout << \"x is \" << x << endl; \n} \ncout << \"End of program\" << endl; \n```", "```cpp\nx is 1 \nx is 1 \nx is 1 \n. \n. \n. \n(repeats forever) \n```", "```cpp\nint x = 1; \nwhile( x <= 10 ) \n{ \n  cout << x << endl; \n  x++; \n}\n```", "```cpp\nint x = 10; // start x high \nwhile( x >= 1 ) // go until x becomes 0 or less \n{ \n  cout << x << endl; \n  x--; // take x down by 1 \n} \n```", "```cpp\nint x = 2; \nwhile( x <= 20 ) \n{ \n  cout << x << endl; \n  x+=2; // increase x by 2's \n} \n```", "```cpp\nint x = 1; \nwhile( x <= 16 ) \n{ \n  cout << x << \"   \" << x*x << endl; // print x and it's  \n   square \n  x++; \n} \n```", "```cpp\nint x = 1; \ndo \n{ \n  cout << \"x is \" << x << endl; \n  x++; \n} while( x <= 5 ); // may only loop back when x<=5 \ncout << \"End of program\" << endl; \n```", "```cpp\nint val = 5;\nwhile (val < 5)\n{\n    cout << \"This will not print.\" << endl;\n}\ndo {\n    cout << \"This will print once.\" << endl;\n} while (val < 5);\n```", "```cpp\nint sum = 0; \nfor( int x = 1; x <= 10; x++ ) \n{ \n  sum += x; \n} \ncout << sum << endl; \n```", "```cpp\nfor( int x = 6; x <= 30; x += 6 ) \n{ \n  cout << x << endl; \n} \n```", "```cpp\nfor( int x = 2; x <= 100; x += 2 ) \n{ \n  cout << x << endl; \n}\n```", "```cpp\nfor( int x = 1; x <= 16; x++ ) \n{ \n  cout << x << \" \" << x*x << endl; \n} \n```", "```cpp\nvoid APuzzleBlockGrid::BeginPlay() \n```", "```cpp\n// Loop to spawn each block \nfor( int32 BlockIndex=0; BlockIndex < NumBlocks; BlockIndex++ ) \n{ \n  // ... \n} \n```"]