["```cpp\npublic User FindBySurname(string name)\n{\n\u00a0\u00a0\u00a0\u00a0foreach(var user in _users)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (user.Surname == name)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return user;\n\u00a0\u00a0\u00a0\u00a0return null;\n}\n```", "```cpp\npublic User FindByLoginName(string name)\n{\n\u00a0\u00a0\u00a0\u00a0foreach(var user in _users)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (user.LoginName == name)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return user;\n\u00a0\u00a0\u00a0\u00a0return null;\n}\n```", "```cpp\npublic User FindByLocation(string name)\n{\n\u00a0\u00a0\u00a0\u00a0foreach(var user in _users)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 if (user.Location == name)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return user;\n\u00a0\u00a0\u00a0\u00a0return null;\n}\n```", "```cpp\npublic void DoSearch()\n{\n\u00a0\u00a0var user1 = FindBySurname(\"Wright\");\n\u00a0\u00a0var user2 = FindByLoginName(\"JamesR\");\n\u00a0\u00a0var user3 = FindByLocation(\"Scotland\"); \n}\n```", "```cpp\nprivate delegate bool FindUser(User user);\nprivate User Find(FindUser predicate)\n{\n\u00a0\u00a0foreach (var user in _users)\n\u00a0\u00a0\u00a0\u00a0if (predicate(user))\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return user;\n\u00a0\u00a0return null;\n}\npublic void DoSearch()\n{\n\u00a0\u00a0var user4 = Find(user => user.Surname == \"Wright\");\n\u00a0\u00a0var user5 = Find(user => user.LoginName == \"JamesR\");\n\u00a0\u00a0var user6 = Find(user => user.Location == \"Scotland\");\n}\n```", "```cpp\npublic class Point\n{\n\u00a0\u00a0public double X { get; set; } \n\u00a0\u00a0public double Y { get; set; }\n}\npublic interface ITransform\n{\n\u00a0\u00a0Point Move(double height, double width);\n}\n```", "```cpp\npublic class RotateTransform : ITransform\n{\n\u00a0\u00a0\u00a0\u00a0public Point Move(double height, double width)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// do stuff\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return new Point();\n\u00a0\u00a0\u00a0\u00a0}\n}\npublic class ZoomTransform : ITransform\n{\n\u00a0\u00a0\u00a0\u00a0public Point Move(double height, double width)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// do stuff\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return new Point();\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\npublic class Transformer\n{\n\u00a0\u00a0\u00a0\u00a0public void Transform()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var rotatePoint = Calculate(new RotateTransform(), 100, 20);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var zoomPoint = Calculate(new ZoomTransform(), 5, 5);\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0private Point Calculate(ITransform transformer, double height, double width)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var point = transformer.Move(height, width);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//do stuff to point\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return point;\n\u00a0\u00a0\u00a0\u00a0}\n}\n```", "```cpp\n\u00a0\u00a0\u00a0\u00a0private delegate Point TransformPoint(double height, double width);\n\u00a0\u00a0\u00a0\u00a0private Point Calculate(TransformPoint transformer, double height, double width)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var point = transformer(height, width);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//do stuff to point\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return point;\n\u00a0\u00a0\u00a0\u00a0}\n```", "```cpp\n\u00a0\u00a0\u00a0\u00a0private Point Rotate(double height, double width)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return new Point();\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0private Point Zoom(double height, double width)\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return new Point();\n\u00a0\u00a0\u00a0\u00a0}\n```", "```cpp\n\u00a0\u00a0\u00a0\u00a0public void Transform()\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var rotatePoint1 = Calculate(Rotate, 100, 20);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var zoomPoint1 = Calculate(Zoom, 5, 5);\n\u00a0\u00a0\u00a0\u00a0}\n```", "```cpp\nMouseEventArgs args = new MouseEventArgs(100,200)\nforeach(subscription in subscriptionList)\n{\n\u00a0\u00a0\u00a0subscription.OnMouseMoved(args)\n} \n```", "```cpp\npublic delegate void MessageReceivedHandler(string message, int size);\n```", "```cpp\n    source\\Chapter03>dotnet new console -o Exercise01\n    ```", "```cpp\nThe template \"Console Application\" was created successfully.\nProcessing post-creation actions...\nRunning 'dotnet restore' on Exercise01\\Exercise01.csproj...\n\u00a0\u00a0Determining projects to restore...\n\u00a0\u00a0Restored source\\Chapter03\\Exercise01\\Exercise01.csproj (in 191 ms).\nRestore succeeded.\n```", "```cpp\n    <Project Sdk=\"Microsoft.NET.Sdk\">\n    \u00a0\u00a0<PropertyGroup>\n    \u00a0\u00a0\u00a0\u00a0<OutputType>Exe</OutputType>\n    \u00a0\u00a0\u00a0\u00a0<TargetFramework>net6.0</TargetFramework>\n      </PropertyGroup>\n    </Project>\n    ```", "```cpp\nusing System;\nnamespace Chapter03.Exercise01 \n{\n\u00a0\u00a0\u00a0\u00a0public delegate bool DateValidationHandler(DateTime dateTime);\n}\n```", "```cpp\n    \u00a0\u00a0\u00a0public class Order\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private readonly DateValidationHandler _orderDateValidator;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private readonly DateValidationHandler _deliveryDateValidator;\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public Order(DateValidationHandler orderDateValidator,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0DateValidationHandler deliveryDateValidator)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_orderDateValidator = orderDateValidator;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_deliveryDateValidator = deliveryDateValidator;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}  \n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public DateTime OrderDate { get; set; }\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public DateTime DeliveryDate { get; set; }\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public bool IsValid() => \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_orderDateValidator(OrderDate) &&\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_deliveryDateValidator(DeliveryDate);\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0public static class Program\n    \u00a0\u00a0\u00a0\u00a0{\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private static bool IsWeekendDate(DateTime date)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"Called IsWeekendDate\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return date.DayOfWeek == DayOfWeek.Saturday ||\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0date.DayOfWeek == DayOfWeek.Sunday;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private static bool IsPastDate(DateTime date)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"Called IsPastDate\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return date < DateTime.Today;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public static void Main()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var orderValidator = new DateValidationHandler(IsPastDate);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var deliverValidator = new DateValidationHandler(IsWeekendDate);\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var order = new Order(orderValidator, deliverValidator)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0OrderDate = DateTime.Today.AddDays(-10), \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0DeliveryDate = new DateTime(2020, 12, 31)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"Ordered: {order.OrderDate:dd-MMM-yy}\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"Delivered: {order.DeliveryDate:dd-MMM-yy }\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"IsValid: {order.IsValid()}\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```cpp\n    Ordered: 07-May-22\n    Delivered: 31-Dec-20\n    Called IsPastDate\n    Called IsWeekendDate\n    IsValid: False\n    ```", "```cpp\npublic delegate string DoStuff(string name, int age);\npublic delegate string DoMoreStuff(string name, int age);\n```", "```cpp\npublic static void Main()\n{\n\u00a0\u00a0\u00a0\u00a0DoStuff stuff = new DoStuff(MyMethod);\n\u00a0\u00a0\u00a0\u00a0DoMoreStuff moreStuff = new DoMoreStuff(MyMethod);\n\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"Stuff: {stuff(\"Louis\", 2)}\");\n\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"MoreStuff: {moreStuff(\"Louis\", 2)}\");\n}\nprivate static string MyMethod(string name, int age)\n{\n\u00a0\u00a0\u00a0\u00a0return $\"{name}@{age}\";\n}\n```", "```cpp\nStuff: Louis@2\nMoreStuff: Louis@2\n```", "```cpp\nFunc<string, int, string> funcStuff = MyMethod;\nConsole.WriteLine($\"FuncStuff: {funcStuff(\"Louis\", 2)}\");\n```", "```cpp\nFuncStuff: Louis@2\n```", "```cpp\npublic delegate void Action()\n```", "```cpp\npublic delegate void Action<T>(T obj)\n```", "```cpp\nAction<string> actionA;\n```", "```cpp\nAction<int> actionB;\n```", "```cpp\nAction<int, string> actionC;\n```", "```cpp\nAction<string, int> actionD;\n```", "```cpp\npublic delegate T Func<T>()\n```", "```cpp\nFunc<bool> funcE;\n```", "```cpp\nFunc<bool, int, int, DateTime, string> funcF;\n```", "```cpp\npublic static class DateValidators\n{\n\u00a0\u00a0\u00a0\u00a0public static bool IsWeekend(DateTime dateTime)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=> dateTime.DayOfWeek == DayOfWeek.Saturday ||\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 dateTime.DayOfWeek == DayOfWeek.Sunday;\n\u00a0\u00a0\u00a0\u00a0public static bool IsFuture(DateTime dateTime) \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=> dateTime.Date > DateTime.Today;\n}\n```", "```cpp\nvar futureValidator = new Func<DateTime, bool>(DateValidators.IsFuture);\nvar weekendValidator = new Func<DateTime, bool>(DateValidators.IsWeekend);\n```", "```cpp\nvar futureValidator = DateValidation.IsFuture;\n```", "```cpp\nCannot assign method group to an implicitly - typed variable\n```", "```cpp\nvar futureValidator = new Func<DateTime, bool>(DateValidators.IsFuture);\n```", "```cpp\n    var isFuture1 = futureValidator?.Invoke(new DateTime(2000, 12, 31));\n    ```", "```cpp\nvar isFuture1 = futureValidator.Invoke(new DateTime(2000, 12, 31));\n```", "```cpp\nvar isFuture2 = futureValidator(new DateTime(2050, 1, 20));\n```", "```cpp\n    source\\Chapter03>dotnet new console -o Exercise02\n    ```", "```cpp\n    <Project Sdk=\"Microsoft.NET.Sdk\">\n    \u00a0\u00a0<PropertyGroup>\n    \u00a0\u00a0\u00a0\u00a0<OutputType>Exe</OutputType>\n    \u00a0\u00a0\u00a0\u00a0<TargetFramework>net6.0</TargetFramework>\n    \u00a0\u00a0</PropertyGroup>\n    </Project>\n    ```", "```cpp\n    using System;\n    using System.Globalization;\n    namespace Chapter03.Exercise02\n    {\n    \u00a0\u00a0\u00a0\u00a0public record Car\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public double Distance { get; init; }\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public double JourneyTime { get; init; }\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0public class Comparison\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private readonly Func<Car, double> _valueSelector;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public Comparison(Func<Car, double> valueSelector)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_valueSelector = valueSelector;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} \n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public double Yesterday { get; private set; }\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public double Today { get; private set; }\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public double Difference { get; private set; }\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public void Compare(Car yesterdayCar, Car todayCar)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Yesterday = _valueSelector(yesterdayCar);\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Today = _valueSelector(todayCar);\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Difference = Yesterday - Today;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0 }\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0public class JourneyComparer\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public JourneyComparer()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Distance = new Comparison(GetCarDistance);\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0JourneyTime = new Comparison(GetCarJourneyTime);\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0AverageSpeed = new Comparison(GetCarAverageSpeed);\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static double GetCarDistance(Car car) => car.Distance; \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static double GetCarJourneyTime(Car car) => car.JourneyTime;\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static double GetCarAverageSpeed(Car car) \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=> car.Distance / car.JourneyTime;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public Comparison Distance { get; }\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public Comparison JourneyTime { get; }\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public Comparison AverageSpeed { get; }\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public void Compare(Car yesterday, Car today)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Distance.Compare(yesterday, today);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0JourneyTime.Compare(yesterday, today);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0AverageSpeed.Compare(yesterday, today);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0public class Program\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public static void Main()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var random = new Random();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0string input;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0do\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.Write(\"Yesterday's distance: \");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0input = Console.ReadLine();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0double.TryParse(input, NumberStyles.Any, \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 CultureInfo.CurrentCulture, out var distanceYesterday);\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var carYesterday = new Car\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Distance = distanceYesterday,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0JourneyTime = random.NextDouble() * 10D\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.Write(\"\u00a0\u00a0\u00a0\u00a0Today's distance: \");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0input = Console.ReadLine();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0double.TryParse(input, NumberStyles.Any, \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 CultureInfo.CurrentCulture, out var distanceToday);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var carToday = new Car\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Distance = distanceToday,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0JourneyTime = random.NextDouble() * 10D\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var comparer = new JourneyComparer();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0comparer.Compare(carYesterday, carToday);\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"Journey Details\u00a0\u00a0\u00a0Distance\\tTime\\tAvg Speed\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"-------------------------------------------------\");\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.Write($\"Yesterday\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {comparer.Distance.Yesterday:N0}\u00a0\u00a0\u00a0\\t\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"{comparer.JourneyTime.Yesterday:N0}\\t {comparer.AverageSpeed.Yesterday:N0}\");\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.Write($\"Today\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {comparer.Distance.Today:N0}\u00a0\u00a0\u00a0\u00a0 \\t\"); \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"{comparer.JourneyTime.Today:N0}\\t {comparer.AverageSpeed.Today:N0}\");\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"=================================================\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.Write($\"Difference\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 {comparer.Distance.Difference:N0}\u00a0\u00a0\u00a0\u00a0 \\t\");\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"{comparer.JourneyTime.Difference:N0} \\t{comparer.AverageSpeed.Difference:N0}\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"=================================================\");\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0while (!string.IsNullOrEmpty(input));\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```cpp\nYesterday's distance: 1000\n\u00a0\u00a0\u00a0\u00a0Today's distance: 900\nJourney Details\u00a0\u00a0\u00a0Distance\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Time\u00a0\u00a0\u00a0\u00a0Avg Speed\n-------------------------------------------------\nYesterday\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 1,000\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 8\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 132\nToday\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 900\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 242\n=================================================\nDifference\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0100\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 4\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 -109\n```", "```cpp\nAction<string> logger = LogToConsole;\nlogger(\"1\\. Calculating bill\");  \n```", "```cpp\nlogger(\"1\\. Calculating bill\")\n--> LogToConsole(\"1\\. Calculating bill\")\n```", "```cpp\nlogger += LogToFile;\n```", "```cpp\nlogger(\"2\\. Saving order\"); \n```", "```cpp\nlogger(\"2\\. Saving order\")\n--> LogToConsole(\"2\\. Saving order\")\n--> LogToFile(\"2\\. Saving order\")\n```", "```cpp\nlogger += LogToDataBase\n```", "```cpp\nlogger(\"3\\. Closing order\"); \n```", "```cpp\nlogger(\"3\\. Closing order\")\n--> LogToConsole(\"3\\. Closing order\")\n--> LogToFile(\"3\\. Closing order\")\n--> LogToDataBase(\"3\\. Closing order\")\n```", "```cpp\nlogger -= LogToFile\n```", "```cpp\nlogger(\"4\\. Closing customer\"); \n```", "```cpp\nlogger(\"4\\. Closing customer\")\n--> LogToConsole(\"4\\. Closing customer\")\n--> LogToDataBase(\"4\\. Closing customer\")\n```", "```cpp\n    source\\Chapter03>dotnet new console -o Exercise03\n    ```", "```cpp\n    <Project Sdk=\"Microsoft.NET.Sdk\">\n      <PropertyGroup>\n    \u00a0\u00a0\u00a0\u00a0<OutputType>Exe</OutputType>\n    \u00a0\u00a0\u00a0\u00a0<TargetFramework>net6.0</TargetFramework>\n      </PropertyGroup>\n    </Project>\n    ```", "```cpp\n    using System;\n    using System.IO;\n    namespace Chapter03.Exercise03\n    {\n    \u00a0\u00a0\u00a0\u00a0public class CashMachine\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private readonly Action<string> _logger;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public CashMachine(Action<string> logger)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0_logger = logger;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} \n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private void Log(string message)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=> _logger?.Invoke(message);\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public void VerifyPin(string pin) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=> Log($\"VerifyPin called: PIN={pin}\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public void ShowBalance() \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=> Log(\"ShowBalance called: Balance=999\");\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0public static class Program\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private const string OutputFile = \"activity.txt\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public static void Main()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (File.Exists(OutputFile))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0File.Delete(OutputFile);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Action<string> logger = LogToConsole;\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logger += LogToFile;\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var cashMachine = new CashMachine(logger);\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.Write(\"Enter your PIN:\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var pin = Console.ReadLine();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (string.IsNullOrEmpty(pin))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"No PIN entered\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cashMachine.VerifyPin(pin);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine();\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.Write(\"Press Enter to show balance\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.ReadLine();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cashMachine.ShowBalance();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.Write(\"Press Enter to quit\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.ReadLine();\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static void LogToConsole(string message)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=> Console.WriteLine(message);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static void LogToFile(string message)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=> File.AppendAllText(OutputFile, message);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0 }\n    }\n    ```", "```cpp\n    Enter your PIN:12345\n    VerifyPin called: PIN=12345\n    Press Enter to show balance\n    ShowBalance called: Balance=999\n    ```", "```cpp\n    VerifyPin called: PIN=12345ShowBalance called: Balance=999\n    ```", "```cpp\nMulticastDelegatesAddRemoveExample.cs\nusing System;\nnamespace Chapter03Examples\n{\n\u00a0\u00a0\u00a0\u00a0class MulticastDelegatesAddRemoveExample\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public static void Main()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Action<string> logger = LogToConsole;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"Logger1 #={logger.GetHashCode()}\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logger += LogToConsole;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"Logger2 #={logger.GetHashCode()}\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logger += LogToConsole;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"Logger3 #={logger.GetHashCode()}\");\nYou can find the complete code here: https://packt.link/vqZMF.\n```", "```cpp\nLogger1 #=46104728\nLogger2 #=1567560752\nLogger3 #=236001992\n```", "```cpp\nMulticastDelegatesExample.cs\nusing System;\nnamespace Chapter03Examples\n{\n\u00a0\u00a0\u00a0\u00a0class MulticastDelegatesExample\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public static void Main()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Action<string> logger = LogToConsole;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logger += LogToConsole;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logger(\"Console x 2\");\n\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logger -= LogToConsole;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logger(\"Console x 1\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logger -= LogToConsole;\nYou can find the complete code here: https://packt.link/Xe0Ct.\n```", "```cpp\nConsole x 2\nConsole x 2\nConsole x 1\n```", "```cpp\nSystem.NullReferenceException\n\u00a0\u00a0HResult=0x80004003\n\u00a0\u00a0Message=Object reference not set to an instance of an object.\n\u00a0\u00a0Source=Examples\n\u00a0\u00a0StackTrace:\n\u00a0\u00a0\u00a0at Chapter03Examples.MulticastDelegatesExample.Main() in Chapter03\\MulticastDelegatesExample.cs:line 16\n```", "```cpp\nusing System;\nnamespace Chapter03Examples\n{\n\u00a0\u00a0\u00a0\u00a0class FuncExample\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public static void Main()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n```", "```cpp\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Func<string, string> emailFormatter = RemoveDots;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const string Address = \"admin@google.com\";\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var first = emailFormatter(Address);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"First={first}\");\n```", "```cpp\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0emailFormatter += RemoveAtSign;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var second = emailFormatter(Address);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"Second={second}\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.ReadLine();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static string RemoveAtSign(string address)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=> address.Replace(\"@\", \"\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static string RemoveDots(string address)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=> address.Replace(\".\", \"\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n} \n```", "```cpp\nFirst=admin@googlecom\nSecond=admingoogle.com\n```", "```cpp\nMulticastWithErrorsExample.cs\nusing System;\nusing System.Diagnostics;\nnamespace Chapter03Examples\n{\n\u00a0\u00a0\u00a0\u00a0class MulticastWithErrorsExample\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public static void Main()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Action<string> logger = LogToConsole;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logger += LogToError;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logger += LogToDebug;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logger(\"try log this\");\nYou can find the complete code here: https://packt.link/Ti3Nh.\n```", "```cpp\nConsole: try log this\nCaught oops!\nAll done\n```", "```cpp\npublic abstract class MulticastDelegate : Delegate {\n\u00a0\u00a0public sealed override Delegate[] GetInvocationList();\n}\n```", "```cpp\n    source\\Chapter03>dotnet new console -o Exercise04\n    ```", "```cpp\n    <Project Sdk=\"Microsoft.NET.Sdk\">\n    \u00a0\u00a0<PropertyGroup>\n    \u00a0\u00a0\u00a0\u00a0<OutputType>Exe</OutputType>\n    \u00a0\u00a0\u00a0\u00a0<TargetFramework>net6.0</TargetFramework>\n    \u00a0\u00a0</PropertyGroup>\n    </Project>\n    ```", "```cpp\n    using System;\n    using System.IO;\n    namespace Chapter03.Exercise04\n    {\n    \u00a0\u00a0\u00a0\u00a0public static class Program\n    \u00a0\u00a0\u00a0\u00a0{\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private const string OutputFile = \"Exercise04.txt\";\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public static void Main()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (File.Exists(OutputFile))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0File.Delete(OutputFile);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Action<string> logger = LogToConsole;\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0InvokeAll(logger, \"First call\"); \n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logger += LogToConsole;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logger += LogToDatabase;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0logger += LogToFile; \n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0InvokeAll(logger, \"Second call\"); \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.ReadLine();\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static void LogToConsole(string message)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=> Console.WriteLine($\"LogToConsole: {message}\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static void LogToDatabase(string message)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=> throw new ApplicationException(\"bad thing happened!\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static void LogToFile(string message)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=> File.AppendAllText(OutputFile, message);\n\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static void InvokeAll(Action<string> logger, string arg)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (logger == null)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return;\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var delegateList = logger.GetInvocationList();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"Found {delegateList.Length} items in {logger}\"); \n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0foreach (var del in delegateList)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0try\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var action = del as Action<string>; \n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (del is Action<string> action)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"Invoking '{action.Method.Name}' with '{arg}'\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0action(arg);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0else\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"Skipped null\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0} \n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0catch (Exception e)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"Error: {e.Message}\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    }\n    ```", "```cpp\n    Found 1 items in System.Action`1[System.String]\n    Invoking '<Main>g__LogToConsole|1_0' with 'First call'\n    LogToConsole: First call\n    Found 4 items in System.Action`1[System.String]\n    Invoking '<Main>g__LogToConsole|1_0' with 'Second call'\n    LogToConsole: Second call\n    Invoking '<Main>g__LogToConsole|1_0' with 'Second call'\n    LogToConsole: Second call\n    Invoking '<Main>g__LogToDatabase|1_1' with 'Second call'\n    Error: bad thing happened!\n    Invoking '<Main>g__LogToFile|1_2' with 'Second call'\n    ```", "```cpp\npublic event EventHandler MouseDoubleClicked\n```", "```cpp\npublic delegate void EventHandler(object sender, EventArgs e); \n```", "```cpp\npublic delegate void EventHandler<T>(object sender, T e); \n```", "```cpp\npublic event EventHandler<MouseEventArgs> MouseDoubleClicked = delegate {};\n```", "```cpp\n    using System;\n    namespace Chapter03Examples\n    {\n    \u00a0\u00a0\u00a0\u00a0public class MouseClickedEventArgs \n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public MouseClickedEventArgs(int clicks)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Clicks = clicks;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public int Clicks { get; }\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0public class MouseClickPublisher\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0public event EventHandler<MouseClickedEventArgs> MouseClicked = delegate { };\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0protected virtual void OnMouseClicked( MouseClickedEventArgs e)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var evt = MouseClicked;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0evt?.Invoke(this, e);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0private void TrackMouseClicks()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0OnMouseClicked(new MouseClickedEventArgs(2));\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0} \n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0public class MouseSingleClickPublisher : MouseClickPublisher\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0protected override void OnMouseClicked(MouseClickedEventArgs e)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (e.Clicks == 1)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0OnMouseClicked(e);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    } \n    ```", "```cpp\n    dotnet new console -o Exercise05\n    ```", "```cpp\n    <Project Sdk=\"Microsoft.NET.Sdk\">\n      <PropertyGroup>\n    \u00a0\u00a0\u00a0\u00a0<OutputType>Exe</OutputType>\n    \u00a0\u00a0\u00a0\u00a0<TargetFramework>net6.0</TargetFramework>\n    \u00a0\u00a0</PropertyGroup>\n    </Project>\n    ```", "```cpp\n    using System;\n    namespace Chapter03.Exercise05\n    {\n    \u00a0\u00a0\u00a0\u00a0public class AlarmClock\n    \u00a0\u00a0\u00a0\u00a0{\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public event EventHandler WakeUp = delegate {};\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public event EventHandler<DateTime> Ticked = delegate {};\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0protected void OnWakeUp()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0WakeUp.Invoke(this, EventArgs.Empty);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public DateTime AlarmTime { get; set; }\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public DateTime ClockTime { get; set; }\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public void Start()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Run for 24 hours\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const int MinutesInADay = 60 * 24;\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0for (var i = 0; i < MinutesInADay; i++)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0ClockTime = ClockTime.AddMinutes(1);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Ticked.Invoke(this, ClockTime);\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var timeRemaining = ClockTime \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.Subtract(AlarmTime)\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.TotalMinutes;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (IsTimeToWakeUp(timeRemaining))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0OnWakeUp();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static bool IsTimeToWakeUp(double timeRemaining) \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=> timeRemaining is (>= -1.0 and <= 1.0);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\u00a0\u00a0\u00a0\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public static class Program\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public static void Main()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var clock = new AlarmClock();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0clock.Ticked += ClockTicked;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0clock.WakeUp += ClockWakeUp; \n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0clock.ClockTime = DateTime.Now;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0clock.AlarmTime = DateTime.Now.AddMinutes(120);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"ClockTime={clock.ClockTime:t}\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"AlarmTime={clock.AlarmTime:t}\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0clock.Start(); \n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"Press ENTER\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.ReadLine();\n\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static void ClockWakeUp(object sender, EventArgs e)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"Wake up\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0static void ClockTicked(object sender, DateTime e)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0=> Console.Write($\"{e:t}...\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0}\n    } \n    ```", "```cpp\n    ClockTime=14:59\n    AlarmTime=16:59\n    15:00...15:01...15:02...15:03...15:04...15:05...15:06...15:07...15:08...15:09...15:10...15:11...15:12...15:13...15:14...15:15...15:16...15:17...15:18...15:19...15:20...15:21...15:22...15:23...15:24...15:25...15:26...15:27...15:28...15:29...15:30...15:31...15:32...15:33...15:34...15:35...15:36...15:37...15:38...15:39...15:40...15:41...15:42...15:43...15:44...15:45...15:46...15:47...15:48...15:49...15:50...15:51...15:52...15:53...15:54...15:55...15:56...15:57...15:58...15:59...16:00...16:01...16:02...16:03...16:04...16:05...16:06...16:07...16:08...16:09...16:10...16:11...16:12...16:13...16:14...16:15...16:16...16:17...16:18...16:19...16:20...16:21...16:22...16:23...16:24...16:25...16:26...16:27...16:28...16:29...16:30...16:31...16:32...16:33...16:34...16:35...16:36...16:37...16:38...16:39...16:40...16:41...16:42...16:43...16:44...16:45...16:46...16:47...16:48...16:49...16:50...16:51...16:52...16:53...16:54...16:55...16:56...16:57...16:58...16:59...\n    Wake up\n    Press ENTER\n    ```", "```cpp\nvar clock = new AlarmClock();\nclock.Ticked += ClockTicked;\nclock.WakeUp += ClockWakeUp;\nstatic void ClockTicked(object sender, DateTime e)\n  => Console.Write($\"{e:t}...\");\n\nstatic void ClockWakeUp(object sender, EventArgs e)\n{\n\u00a0\u00a0\u00a0\u00a0Console.WriteLine();\n\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"Wake up\");\n}\n```", "```cpp\nclock.Ticked += (sender, e) =>\n{\n\u00a0\u00a0\u00a0\u00a0Console.Write($\"{e:t}...\"); \n};  \nclock.WakeUp += (sender, e) =>\n{\n\u00a0\u00a0\u00a0\u00a0Console.WriteLine();\n\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"Wake up\");\n}; \n```", "```cpp\n(parameters) => expression-or-block\n```", "```cpp\nusing System;\nusing System.Collections.Generic;\nnamespace Chapter03Examples\n{\n\u00a0\u00a0\u00a0\u00a0class LambdaExample\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public static void Main()\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var names = new List<string>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"The A-Team\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Blade Runner\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"There's Something About Mary\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"Batman Begins\",\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\"The Crow\"\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};\n```", "```cpp\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0names.Sort();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(\"Sorted names:\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0foreach (var name in names)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(name);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine();\n```", "```cpp\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const string Noise = \"The \";\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0names.Sort( (x, y) =>\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (x.StartsWith(Noise))\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0x = x.Substring(Noise.Length);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (y.StartsWith(Noise))\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0y = x.Substring(Noise.Length);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return string.Compare(x , y);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0});\n```", "```cpp\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"Sorted excluding leading '{Noise}':\");\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0foreach (var name in names)\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine(name);\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.ReadLine();\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0\u00a0}\n} \n```", "```cpp\nSorted names:\nBatman Begins\nBlade Runner\nThe A-Team\nThe Crow\nThere's Something About Mary\nSorted excluding leading 'The ':\nThe A-Team\nBatman Begins\nBlade Runner\nThe Crow\nThere's Something About Mary \n```", "```cpp\n    source\\Chapter03>dotnet new console -o Exercise06\n    ```", "```cpp\n    <Project Sdk=\"Microsoft.NET.Sdk\">\n    \u00a0\u00a0<PropertyGroup>\n    \u00a0\u00a0\u00a0\u00a0<OutputType>Exe</OutputType>\n    \u00a0\u00a0\u00a0\u00a0<TargetFramework>net6.0</TargetFramework>\n    \u00a0\u00a0</PropertyGroup>\n    </Project>\n    ```", "```cpp\n    using System;\n    using System.Linq;\n    namespace Chapter03.Exercise06\n    {\n    \u00a0\u00a0\u00a0\u00a0public static class WordUtilities\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public static string ReverseWords(string sentence)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Func<string, string> swapWords = \n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0phrase =>\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 \u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const char Delimit = ' ';\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var words = phrase\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.Split(Delimit)\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0.Reverse();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return string.Join(Delimit, words);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return swapWords(sentence);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 }\n    \u00a0\u00a0\u00a0\u00a0}\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0public static class Program\n    \u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0public static void Main()\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0do\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.Write(\"Enter a sentence:\");\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var input = Console.ReadLine();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (string.IsNullOrEmpty(input))\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0break;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var result = WordUtilities.ReverseWords(input);\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0Console.WriteLine($\"Reversed: {result}\")\n    ```", "```cpp\nEnter a sentence:welcome to c#\nReversed: c# to welcome\nEnter a sentence:visual studio by microsoft\nReversed: microsoft by studio visual\n```", "```cpp\nvar word = \"hello\";\nFunc<int, string> joiner = \n\u00a0\u00a0\u00a0\u00a0input =>\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return string.Join(\",\", Enumerable.Repeat(word, input));\n\u00a0\u00a0\u00a0\u00a0};  \nConsole.WriteLine($\"Outer Variables: {joiner(2)}\"); \n```", "```cpp\nOuter Variables: hello,hello\n```", "```cpp\nword = \"goodbye\";\nConsole.WriteLine($\"Outer Variables Part2: {joiner(3)}\");\n```", "```cpp\nOuter Variables Part2: goodbye,goodbye,goodbye\n```", "```cpp\nFunc<int, string> joinerLocal =\n\u00a0\u00a0\u00a0\u00a0input =>\n\u00a0\u00a0\u00a0\u00a0{\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0var word = \"local\";\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return string.Join(\",\", Enumerable.Repeat(word, input));\n\u00a0\u00a0\u00a0\u00a0};\nConsole.WriteLine($\"JoinerLocal: {joinerLocal(2)}\");\nConsole.WriteLine($\"JoinerLocal: word={word}\");\u00a0\u00a0\u00a0\n```", "```cpp\nJoinerLocal: local,local\nJoinerLocal: word=goodbye\n```", "```cpp\nvar actions = new List<Action>();\nfor (var i = 0; i < 5; i++)\n{\n\u00a0\u00a0\u00a0\u00a0actions.Add( () => Console.WriteLine($\"MyAction: i={i}\")) ;\n}\nforeach (var action in actions)\n{\n\u00a0\u00a0\u00a0\u00a0action();\n}\n```", "```cpp\nMyAction: i=5\nMyAction: i=5\nMyAction: i=5\nMyAction: i=5\nMyAction: i=5\n```", "```cpp\nvar actionsSafe = new List<Action>();\nfor (var i = 0; i < 5; i++)\n{\n\u00a0\u00a0\u00a0\u00a0var closurei = i;\n\u00a0\u00a0\u00a0\u00a0actionsSafe.Add(() => Console.WriteLine($\"MyAction: closurei={closurei}\"));\n}\nforeach (var action in actionsSafe)\n{\n\u00a0\u00a0\u00a0\u00a0action();\n}\n```", "```cpp\nMyAction: closurei=0\nMyAction: closurei=1\nMyAction: closurei=2\nMyAction: closurei=3\nMyAction: closurei=4\n```", "```cpp\nusing (IDisposable) { statement_block }\n```", "```cpp\n    Enter a URL:\n    https://www1.ncdc.noaa.gov/pub/data/swdi/stormevents/csvfiles/StormEvents_details-ftp_v1.0_d1950_c20170120.csv.gz\n    Downloading https://www1.ncdc.noaa.gov/pub/data/swdi/stormevents/csvfiles/StormEvents_details-ftp_v1.0_d1950_c20170120.csv.gz...\n    Downloading...73% complete (7,758 bytes)\n    Downloading...77% complete (8,192 bytes)\n    Downloading...100% complete (10,597 bytes)\n    Downloaded to C:\\Temp\\StormEvents_details-ftp_v1.0_d1950_c20170120.csv.gz\n    Enter a URL:\n    https://www1.ncdc.noaa.gov/pub/data/swdi/stormevents/csvfiles/StormEvents_details-ftp_v1.0_d1954_c20160223.csv.gz\n    Downloading https://www1.ncdc.noaa.gov/pub/data/swdi/stormevents/csvfiles/StormEvents_details-ftp_v1.0_d1954_c20160223.csv.gz...\n    Downloading...29% complete (7,758 bytes)\n    Downloading...31% complete (8,192 bytes)\n    Downloading...54% complete (14,238 bytes)\n    Downloading...62% complete (16,384 bytes)\n    Downloading...84% complete (22,238 bytes)\n    Downloading...93% complete (24,576 bytes)\n    Downloading...100% complete (26,220 bytes)\n    Downloaded to C:\\Temp\\StormEvents_details-ftp_v1.0_d1954_c20160223.csv.gz\n    ```"]