- en: '*Chapter 11*'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第11章*'
- en: Critical Analysis
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 批判性分析
- en: Introduction
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 引言
- en: During your professional career, people will tell you things that aren't true.
    Sometimes they're lies, intended to manipulate or deceive; sometimes they're things
    that the speaker believes (or perhaps wants to believe), but on closer inspection
    don't pass muster; sometimes people will tell you things that *are* true, but
    irrelevant or of limited use, to persuade you of their position.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在你的职业生涯中，人们会告诉你一些不真实的事情。有时它们是谎言，旨在操纵或欺骗；有时它们是说话者相信（或可能希望相信）的事情，但在仔细检查后并不符合标准；有时人们会告诉你一些确实是真实的事情，但与他们的立场无关或用途有限，以说服你接受他们的立场。
- en: Who will be telling you these things? You've probably already thought of marketing
    and salespeople, desperate to get you or your company to take their product and
    win the commission. Speakers at conferences could do it too, trying to convince
    you that the technique, style, or strategy they're promoting is applicable to
    your situation in addition to theirs. The website for that new language you want
    to try out may be making exaggerated claims. Your manager or teammates may be
    trying a little too hard to sell you on their way of thinking.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 谁会告诉你这些事情？你可能已经想到了营销人员和销售人员，他们急于让你或你的公司购买他们的产品并赢得佣金。会议上的演讲者也可能这么做，试图说服你认为他们推广的技术、风格或策略不仅适用于他们的情况，也适用于你的情况。你想要尝试的新语言网站可能正在做出夸张的声明。你的经理或队友可能过于努力地试图说服你接受他们的思维方式。
- en: There will also be plenty of occasions on which people tell you things that
    *are* true. Some of these could be surprising, especially if **common sense**—[http://rationalwiki.org/wiki/Common_sense](http://rationalwiki.org/wiki/Common_sense)
    tells you the opposite is true; some of these could be suspicious; some you might
    be willing to accept without debate. Though there's no harm in questioning the
    **truthiness**—[http://en.wikipedia.org/wiki/Truthiness](http://en.wikipedia.org/wiki/Truthiness)
    of things, even when they are indeed true.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 也会有很多人告诉你一些确实是真实的事情。其中一些可能会令人惊讶，特别是如果常识——[http://rationalwiki.org/wiki/Common_sense](http://rationalwiki.org/wiki/Common_sense)告诉你情况相反；其中一些可能会令人怀疑；有些你可能愿意不经过辩论就接受。尽管质疑事情的真实性——[http://en.wikipedia.org/wiki/Truthiness](http://en.wikipedia.org/wiki/Truthiness)没有害处，即使它们确实是真实的。
- en: 'Critical analysis is about studying arguments to determine their well-formedness.
    In this context, an "argument" is a collection of statements affirming a particular
    position; it isn''t a verbal sparring match between two people. An argument is
    well-formed if it contains some premises and reaches a conclusion logically derivable
    from those premises. Notice that such an argument is *well-formed*, not *correct*:
    the argument could rely on contested knowledge or the premises could be unsound
    for some other reason. Nonetheless, uncovering the rhetorical techniques and fallacies,
    if any, present in an argument can help you to understand the arguer''s position
    and why they want you to agree with their conclusion, in addition to helping you
    decide whether you can agree with that conclusion.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 批判性分析是关于研究论证以确定其良好形成的过程。在这个背景下，“论证”是一系列陈述，它们肯定了某个特定的立场；它不是两个人之间的口头对抗。一个论证如果包含一些前提并通过这些前提逻辑地得出结论，就是良好形成的。请注意，这样的论证是“良好形成的”，而不是“正确的”：论证可能依赖于有争议的知识，或者前提可能因为其他原因而不合理。尽管如此，揭示论证中存在的修辞技巧和谬误（如果有），可以帮助你理解论者的立场以及他们为什么想要你同意他们的结论，同时也有助于你决定你是否可以同意那个结论。
- en: Criticism Is Often Uncritical
  id: totrans-7
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 批判性分析往往缺乏批判性
- en: '"You''re wrong." I hope that even without the information presented in the
    rest of this chapter, it''s clear that the statement at the beginning of this
    chapter is not a well-formed argument. A fragment of a conclusion is presented
    (I''m wrong, but about what? This argument? Everything? Something in between?
    Is it my position that''s wrong, or am I ethically abhorrent?), with no premises
    or deduction.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: “你错了。”我希望即使没有本章其余部分提供的信息，也能清楚地看出本章开头的那句话不是一个很好的论证。一个结论的片段被提出（我错了，但错在哪里？这个论证？一切？两者之间？是我的立场错了，还是我在道德上令人厌恶？），但没有前提或推理。
- en: Criticism has come to mean expressing a negative opinion on some matter, but
    that's not the sense in which it's used here. The phrase "critical analysis" uses
    a more academic definition of the word critical. In this context, to be critical
    means to analyze both the pros and cons of an argument, to understand it in terms
    of the particular rules of argument formation, and to *discover* whether you find
    the conclusion to be agreeable. Many online discussions can be found that are
    entirely uncritical; the people taking part have decided on their positions in
    advance and are trying to find ways to more forcefully present their case and
    undermine the other.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 批评通常意味着对某个问题表达负面意见，但在这里它并不是这个意思。短语“批判性分析”使用了更学术性的“批判”一词的定义。在这个语境中，批判意味着分析论点的利弊，从论点形成的特定规则来理解它，并*发现*你是否认为结论是令人满意的。可以在网上找到许多完全缺乏批判性的讨论；参与者在事先已经决定了自己的立场，并试图找到更有效地展示自己观点和削弱对方观点的方法。
- en: Being faced with this sort of response can be frustrating. There's no value
    to be had from reading the counter argument; it's not critical, so it doesn't
    tell you *why* the other person disagrees with you. It's easy to take such responses
    personally though (on which, more later), and to get upset or angry at the person
    (or imagined person behind an online pseudonym). It's these factors that have
    led a minority of bloggers to switch off comments on their sites. It's easier
    to present an uninformed or uncritical argument than a well-thought-out one, therefore
    a large number of comments on the internet are of this unhelpful type.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 面对这种回应可能会感到沮丧。阅读反论点没有任何价值；它不是批判性的，所以它没有告诉你为什么对方不同意你。尽管如此，人们很容易将这样的回应个人化（关于这一点，稍后还会讨论），并对这个人（或想象中的网络化名背后的人）感到沮丧或愤怒。正是这些因素导致少数博客作者关闭了他们网站的评论功能。提出一个没有经过深思熟虑或缺乏批判性的论点比提出一个经过深思熟虑的论点要容易，因此，互联网上大量的评论都是这种无益的类型。
- en: Please do not be part of that problem. Read to understand, not to reply. If
    you're left with problems, try to formulate a rational explanation of why the
    argument presented did not discuss those problems. If it's still unclear after
    doing that, then by all means post your explanation. Both of you can probably
    learn from it.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 请不要成为那个问题的参与者。阅读是为了理解，而不是为了回应。如果你还有问题，试着用理性的解释来阐述为什么所提出的论点没有讨论这些问题。如果在这样做之后仍然不清楚，那么请毫不犹豫地发布你的解释。你们两个人都可能从中学习到东西。
- en: How to Form an Argument?
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何构建一个论点？
- en: Rather than describe how to analyze an argument, I'll explain how to construct
    one. It follows that critical analysis is the exploration of whether an argument
    contains high-quality versions of the features described here, linked coherently
    to support the conclusion or conclusions of the argument.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我不会描述如何分析一个论点，而是解释如何构建一个论点。因此，批判性分析是探索论点是否包含这里描述的高质量特征，并且这些特征能够连贯地支持论点的结论或结论。
- en: Though they need not be presented at the beginning of an argument (and indeed
    may not be explicit at all), any argument depends on a collection of assumptions
    or premises. These are statements accepted as true for the purpose of exploring
    the subject of the argument. The validity of any assumption depends on the context;
    in any field, some things are considered uncontested knowledge while others are
    contested. An example of uncontested knowledge in computing could be the features
    and operation of a universal Turing machine; the facts were documented and proven
    mathematically in the 1930s and are generally agreed to represent a sound base
    on which the rest of computer science is built. The assumption "Java is a useful
    language to teach beginners" would be considered contested knowledge, being far
    from universally accepted.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然它们不必在论点的开头提出（实际上可能根本不明确），但任何论点都依赖于一系列的假设或前提。这些是为了探索论点主题而接受为真的陈述。任何假设的有效性取决于上下文；在任何领域，有些事情被认为是无可争议的知识，而其他则是有争议的。计算机领域无可争议的知识的一个例子可能是通用图灵机的特性和操作；这些事实在20世纪30年代被记录并数学上证明，并被普遍认为是在计算机科学其他部分建立的一个坚实的基础。假设“Java是一种教授初学者的有用语言”将被视为有争议的知识，因为它远未得到普遍接受。
- en: Such a contested assumption would need to be supported by external evidence
    that readers or listeners could evaluate to decide the validity of the assumption.
    In academic fields, acceptable evidence is usually restricted to reviewed literature.
    Indeed, it's possible to find papers that support the Java assertion made in the
    previous paragraph. In an academic argument, uncontested knowledge is roughly
    equivalent to "statements that are found in textbooks."
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的有争议的假设需要由读者或听众可以评估的外部证据来支持，以决定假设的有效性。在学术领域，可接受的证据通常限于经过审查的文献。确实，可以找到支持前一段中提出的Java断言的论文。在学术论证中，无争议的知识大致等同于“在教科书中找到的陈述。”
- en: 'Almost tautologically, software creation practiced outside universities is
    not an academic discipline. There''s little dependence on the formalities of academia
    and great reliance on personal or shared experiences. As a result, argument based
    on authority ("Martin Fowler says…") or on personal opinion ("I have found…")
    is often used to justify contested knowledge. In the latter case, the assumption
    could be presented as an intermediate conclusion: it follows from its own set
    of premises and is then used as input into a successive argument. Arguments outside
    those used in critical analysis textbooks are frequently built on chains of intermediate
    conclusions, combined with other premises to reach the eventual goal.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎是同义反复，大学以外的软件创作不是一个学术学科。对学术的正式性依赖很小，而对个人或共享经验的依赖很大。因此，基于权威（“马丁·福勒说...”）或个人意见（“我发现...”）的论点常被用来证明有争议的知识。在后一种情况下，假设可以作为一个中间结论来提出：它遵循其自身的一套前提，然后被用作后续论证的输入。在批判性分析教科书中未使用的论点通常建立在一系列中间结论的基础上，结合其他前提以达到最终目标。
- en: Arguments based on opinion or experience are easily, though not particularly
    usefully, undermined by the existence of people with differing opinions and experiences.
    Where these bases are used, the scope of the experience and the reasons for drawing
    particular opinions should be given as justification for reaching the stated conclusion.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 基于意见或经验的论点很容易被持有不同意见和经验的人削弱，尽管这并不特别有用。在这些基础被使用的地方，经验的范围和形成特定意见的原因应该作为达到所陈述结论的正当理由。
- en: The conclusion itself should be a position taken as a result of reasoning from
    the assumptions and intermediate conclusions. That is to say, it should be related
    to the premises; if you feel the need to confuse matters by introducing unrelated
    facts, then your argument is not particularly strong. The logical process of going
    from the premises to the conclusion, though potentially complex, should ideally
    be mechanistic; a "leap of faith" is inappropriate, and any lateral or otherwise
    devious steps should be explicit. Essay-style arguments are usually expected to
    reach their conclusions via deductive rather than inductive reasoning; appeals
    to analogy for example would be considered inappropriate. Practically speaking,
    as a programmer, you're more likely to be examining a sales pitch or a request
    from a customer than an academic essay, so the "rules" will be a lot looser.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 结论本身应该是基于从假设和中间结论进行推理后所采取的立场。也就是说，它应该与前提相关；如果你觉得需要通过引入无关的事实来混淆问题，那么你的论点就不是很强。从前提到结论的逻辑过程，尽管可能很复杂，但理想情况下应该是机械化的；信仰跳跃是不恰当的，任何横向或其他的狡猾步骤都应该明确。论文风格的论点通常期望通过演绎推理而不是归纳推理得出结论；例如，诉诸类比会被认为是不恰当的。从实际的角度来看，作为一个程序员，你更有可能检查的是一个销售提案或客户的请求，而不是学术论文，所以“规则”将会更加宽松。
- en: The conclusion doesn't need to be the final part of the argument's presentation.
    Some writers open with the conclusion, to challenge the readers and get them thinking
    about how the argument might proceed, a technique also used in oral presentations
    of arguments. Occasionally, the conclusion comes after a bare-bones form of the
    argument, then further support is given to make the conclusion more compelling.
    In any case, the conclusion is often reiterated at the end of the argument; after
    all, it's the part you want to stick most in the minds of the readers or listeners.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 结论不一定是论证展示的最后一部分。一些作家以结论开头，以挑战读者并让他们思考论证可能如何进行，这种技巧也用于口头论证的展示。偶尔，结论在论证的裸骨形式之后出现，然后提供进一步的支持以使结论更具说服力。在任何情况下，结论通常在论证的末尾被重申；毕竟，这是你希望读者或听众印象最深刻的部分。
- en: Forms Of Fallacy
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 谬误的形式
- en: This section takes the form of a catalog, of sorts. It's not going to be complete
    and won't take a formal approach to describing the catalog in the same way that,
    for example, *Design Patterns* deals with its catalogue; a complete catalogue
    of fallacies would be at least as long as the rest of this book. A formal and
    consistent catalog would require planning.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本节以某种目录的形式呈现。它不会是完整的，也不会采用正式的方法来描述目录，就像例如*设计模式*处理其目录那样；一个完整的谬误目录至少会与本书的其余部分一样长。一个正式且一致的目录需要规划。
- en: Post Hoc, Ergo Propter Hoc
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 后果论，因此原因论
- en: 'Translated, this means "After this, therefore because of this." Given two events,
    X and Y, the argument goes:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 翻译过来就是“在这之后，因此因为这个。”给定两个事件，X和Y，论点是这样的：
- en: First X, then Y. Y was therefore caused by X.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 先是X，然后是Y。因此，Y是由X引起的。
- en: 'This is a form of inductive reasoning that does not necessarily hold. Here''s
    an absurd example:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一种不一定成立的归纳推理形式。这里有一个荒谬的例子：
- en: '*The light turned red, and the car came to a halt. Red photons exert a strong
    retarding effect on cars.*'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '*红灯亮了，车停了下来。红光子对汽车有很强的制动作用。*'
- en: In this case, there *could be* a causative relationship, but it is not as direct
    as the argument proposes.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，可能存在因果关系，但它并不像论点所提出的那么直接。
- en: Fundamental Attribution Error
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 基本归因错误
- en: '*Person P did X. Therefore, P is a moron.*'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*人P做了X。因此，P是个傻瓜。*'
- en: 'This is also called correspondence bias. People often understand the situational
    basis for actions they take, but ascribe actions taken by others to their innate
    personalities. Here''s a good example for coders to consider: if *I* take a shortcut,
    I''m being pragmatic, because of the pressures of the current project/iteration/whatever.
    If *you* were to take the same shortcut, it''s because you don''t understand sound
    software development principles.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这也被称为对应偏差。人们通常理解他们采取行动的情境基础，但将他人的行动归因于他们的固有性格。这里有一个对程序员来说很好的例子：如果我*我*走捷径，那是因为我务实，因为当前项目/迭代/什么的压力。如果你*你*要走同样的捷径，那是因为你不理解良好的软件开发原则。
- en: Argument from Fallacy
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从谬误中论证
- en: 'This is a subtle one, but one that''s quite easy to find in online discussions
    once you know about it:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个微妙但很容易在网上讨论中找到的谬误：
- en: '*Argument A says that X follows Y. Argument A is fallacious. Therefore, X does
    not follow Y.*'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '*论点A说X跟随Y。论点A是谬误的。因此，X不跟随Y。*'
- en: 'Just because an argument contains a fallacy, it does not necessarily follow
    that its conclusion is incorrect. Consider this concrete example:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 仅仅因为一个论点包含谬误，并不意味着其结论一定是错误的。考虑以下具体例子：
- en: '*Isaac Newton''s law of gravitation says that when I drop an object, it will
    fall to Earth because of a force called gravity. Einstein showed that gravity
    is in fact caused by the curvature of space-time. Newton was incorrect; therefore,
    the object will not fall to Earth when I drop it.*'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*艾萨克·牛顿的万有引力定律表明，当我扔下一个物体时，它将因为重力这种力的作用而落到地球上。爱因斯坦表明，实际上重力是由时空的弯曲引起的。牛顿是错误的；因此，当我扔下物体时，物体不会落到地球上。*'
- en: In fact, for pretty much every situation where Newton's law of gravity would
    predict that an object would fall to earth, so would Einstein's general relativity;
    and the object would indeed fall to Earth. Neither of these models would be in
    use if their predictions were not valid in certain scenarios, even though the
    *reasons* they give for the results they predict may not be what *actually* happens.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，在牛顿的万有引力定律预测物体将落到地球上的几乎所有情况下，爱因斯坦的广义相对论也会预测；物体确实会落到地球上。即使它们预测的结果在某些情况下可能不成立，这两个模型也不会被使用，尽管它们给出结果的原因可能并不是实际发生的事情。
- en: Continuum Fallacy
  id: totrans-37
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 连续谬误
- en: The continuum fallacy is one of the more frequently encountered fallacies in
    online arguments, particularly on media like Twitter, where the length of any
    statement is limited. The fallacy is to declare an argument incorrect because
    it is not satisfied in a particular condition. Going back to the example of gravitational
    theories, a continuum fallacy counterargument to Newton would be "Newton's **Law
    of Gravitation** does not predict the precession of Mercury's perihelion, therefore
    no result of Newton's Law has any value." In fact, within human-scale interactions,
    Newton's Law is very valuable; it gives reasonably accurate answers that are easy
    to compute. Einstein's theory is more general, giving answers consistent with
    Newton (and observation) at human scales *and* successfully predicting Mercury's
    motion. But Newton's significant baby need not be thrown out with the bathwater.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 连续谬误是在在线辩论中经常遇到的谬误之一，尤其是在像Twitter这样的媒体上，任何陈述的长度都是有限的。这种谬误是断言一个论点不正确，因为它没有满足某种特定条件。回到万有引力理论的例子，对牛顿的连续谬误反论可能是：“牛顿的**万有引力定律**不能预测水星近日点的进动，因此牛顿定律的任何结果都没有价值。”实际上，在人类尺度的相互作用中，牛顿定律非常有价值；它给出了易于计算的合理准确的答案。爱因斯坦的理论更普遍，在人类尺度上与牛顿（和观察）一致，并且成功地预测了水星的运动。但牛顿的显著成就并不需要与洗澡水一起倒掉。
- en: 'Here''s a theory I have on the prevalence of the continuum fallacy in programmer
    discussions: our programming activities *train* us to look for and cover edge
    cases. Computers are, in the ways that most programmers use them most of the time,
    incapable of inductive reasoning. When dealing with a computer, then, a programmer
    must look for any situation that has not been discussed and explicitly state the
    results of meeting that situation. This training can lead to continuum fallacies
    in human interactions, where the programmer applies the same keen sense of edge-case
    detection to statements made by other people that were implicitly scoped or otherwise
    depended on induction in their correctness.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我有一个关于连续谬误在程序员讨论中普遍存在的理论：我们的编程活动*训练*我们寻找和覆盖边缘情况。计算机在程序员大多数时候使用它们的方式上，无法进行归纳推理。当与计算机打交道时，程序员必须寻找任何未讨论的情况，并明确陈述遇到这种情况的结果。这种训练可能导致人类互动中的连续谬误，其中程序员将同样的敏锐的边缘情况检测意识应用到其他人做出的陈述上，这些陈述隐含地限制了范围或依赖于归纳的正确性。
- en: Slippery Slope
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 滑坡谬误
- en: '*If X, then Y. Y, then Z. Z, then dogs and cats living together, mass hysteria.*'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '*如果X，那么Y。Y，那么Z。Z，那么狗和猫住在一起，大规模歇斯底里。*'
- en: A slippery slope retort is a popular rhetorical device for undermining an argument.
    If it's well-constructed, then the individual steps will each look plausible,
    though they actually represent successive continuum fallacies, or subtle straw-man
    variants on what was actually proposed. The end result will be absurd or, to the
    arguer's mind anyway, highly undesirable.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 滑坡谬误是一种常见的修辞手法，用于削弱论点。如果构建得当，每个步骤看起来都似乎合理，尽管它们实际上代表了连续的连续谬误，或者是对实际提出的观点的微妙稻草人变体。最终结果将是荒谬的，或者至少在论者的心目中是高度不希望的。
- en: Begging the Question
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 循环论证
- en: 'This term has a specific meaning in the jargon of critical thinking, which
    is separate from its casual use as "an argument that raises an obvious question."
    Formally, an argument begs the question if it is made valid by accepting the conclusion
    as an implicit assumption: X, therefore X. Theological arguments sometimes beg
    the question; consider **this argument**—[http://rationalwiki.org/wiki/Begging_the_question](http://rationalwiki.org/wiki/Begging_the_question)):'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这个术语在批判性思维的术语中有特定的含义，与它作为“提出一个明显问题的论点”的日常用法是分开的。正式来说，如果一个论点通过接受结论作为隐含的假设而变得有效：X，因此X，那么这个论点就是循环论证。神学论证有时会循环论证；考虑以下论证——[http://rationalwiki.org/wiki/Begging_the_question](http://rationalwiki.org/wiki/Begging_the_question))：
- en: '*The order and magnificence of the world is evidence of God''s Creation. Therefore,
    God exists.*'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '*世界的秩序和宏伟是上帝创造的证据。因此，上帝存在。*'
- en: The first statement is only true if you assume that God exists to have created
    the "order and magnificence of the world"; so, the argument is simply "God exists
    because God exists."
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 第一句话只有在假设上帝存在以创造“世界的秩序和宏伟”的情况下才是真实的；因此，这个论点仅仅是“上帝存在，因为上帝存在。”
- en: Appeal to Novelty
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 倡导新奇
- en: 'This is also called "argumentum ad novitatem" and says that something that''s
    newer is better just because of its novelty. It''s common to see in discussions
    of which technology is "better," particularly in vendor marketing material: our
    product is newer than the competitor''s product, which means it must be better
    (This fallacy underpins the *completely rewritten from the ground up*—[http://blog.securemacprogramming.com/2013/04/on-rewriting-your-application/](http://blog.securemacprogramming.com/2013/04/on-rewriting-your-application/)
    software product marketing position).'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这也被称为“以新为奇”谬误，它认为新事物仅仅因为其新颖性就更好。在讨论哪种技术“更好”的讨论中，尤其是在供应商营销材料中，这是常见的：我们的产品比竞争对手的产品更新，这意味着它必须更好（这种谬误是*从头到尾完全重写*——[http://blog.securemacprogramming.com/2013/04/on-rewriting-your-application/](http://blog.securemacprogramming.com/2013/04/on-rewriting-your-application/)
    软件产品营销立场）。
- en: 'It doesn''t take more than a few seconds of thought to construct questions
    that circumvent ad novitatem fallacies: just think about what would *actually*
    make one of the options a better choice. If you need relational, table-based storage,
    then a new NoSQL database would be worse than an RDBMS, despite being newer, for
    example.'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 构建绕过“以新为奇”谬误的问题不需要超过几秒钟的思考：只需想想什么实际上会使一个选项成为更好的选择。如果你需要关系型、基于表的存储，那么一个新的NoSQL数据库可能比RDBMS更差，尽管它更新，例如。
- en: Appeal to the Person
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 诉诸个人
- en: 'More commonly known by its Latin name, argumentum ad hominem, this fallacy
    takes the following form:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 更常见的是以其拉丁文名称为“argumentum ad hominem”，这种谬误采取以下形式：
- en: '*P says X. P is [an idiot, a communist, a fascist, smelly, or some other undesirable
    property]. Therefore, not X.*'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '*P说X。P是[一个白痴、共产主义者、法西斯主义者、臭的，或者一些其他不受欢迎的特性]。因此，不是X。*'
- en: Leaving aside interpersonal arguments, it's common to see ad hominem arguments
    deployed in software architecture justifications. "We're not using that, because
    it's from [Google, Apple, Microsoft, Apache, and so on]" is the tech-industry
    version.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 除了人际间的争论，在软件架构的论证中，也常见到诉诸个人的论证。 “我们不使用那个，因为它来自[谷歌、苹果、微软、Apache等等]”是科技行业的版本。
- en: Is there any substance underlying this position? "We're not using that, because
    it's from Apple and Apple don't offer the support terms we need" could be a good
    argument. "We're not using that, because it's from Apple and I don't like them"
    might not be.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这个立场背后是否有实质内容？“我们不使用那个，因为它来自苹果，而苹果没有提供我们需要的支持条款”可能是一个好的论据。“我们不使用那个，因为它来自苹果，我不喜欢他们”可能就不是。
- en: Further Reading on Arguments
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于论据的进一步阅读
- en: This has been a brief overview of the critical analysis of arguments, telling
    you first why I think it's important, then giving a little information about what's
    involved. Many more eloquent writers than I have bent themselves to this task,
    so there are good resources to recommend for exploring this topic further.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这是对论据批判性分析的一个简要概述，首先告诉你为什么我认为它很重要，然后提供一些关于涉及内容的信息。比我更有口才的作家们已经致力于这项任务，因此有很好的资源可以推荐，以进一步探索这个主题。
- en: '**Rational Wiki**—[http://rationalwiki.org/wiki/Main_Page](http://rationalwiki.org/wiki/Main_Page)
    is mainly a website for debunking pseudoscience, crank claims, and biased presentation
    of the news. It has a comprehensive section on logic, argument, and fallacies.
    **Less Wrong**—[http://lesswrong.com](http://lesswrong.com) has a similar scope,
    and finally, the Skeptics Stack Exchange—[http://skeptics.stackexchange.com](http://skeptics.stackexchange.com)
    Q&A site features community-scored arguments in support or refutation of a wide
    variety of positions on different topics. (Refutation means constructing an argument
    against a presented point of view; *repudiation* means to deny the truth of an
    opposing argument without justification. However, both words are commonly used
    to mean repudiation, and depending on the historical meanings of words this is
    itself *a form of equivocation*—[http://en.wikipedia.org/wiki/Etymological_fallacy](http://en.wikipedia.org/wiki/Etymological_fallacy).)'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**理性维基百科**——[http://rationalwiki.org/wiki/Main_Page](http://rationalwiki.org/wiki/Main_Page)
    主要是一个用于揭露伪科学、怪异主张和新闻偏见展示的网站。它有一个关于逻辑、论据和谬误的全面部分。**Less Wrong**——[http://lesswrong.com](http://lesswrong.com)
    有类似的范围，最后，怀疑论者Stack Exchange——[http://skeptics.stackexchange.com](http://skeptics.stackexchange.com)
    Q&A网站展示了社区评分的论据，支持或反驳了不同主题的广泛立场。（反驳意味着构建一个针对提出的观点的论据；*否认*意味着在没有正当理由的情况下否认对立论据的真实性。然而，这两个词通常都用来表示否认，并且根据词语的历史意义，这本身也是一种*偷换概念*——[http://en.wikipedia.org/wiki/Etymological_fallacy](http://en.wikipedia.org/wiki/Etymological_fallacy)。)'
- en: Debates and Programmers
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 辩论与程序员
- en: Having just concluded the previous section with a footnote on the dangers of
    the etymological fallacy, it's time for another "there's a specific meaning to
    this word" section. While debating is commonly taken to mean two or more people
    expressing different views on the same topic, debates usually have rules dictating
    the forms in which arguments are presented and either a way of choosing a "winner"
    or of reaching a consensus view on the topic.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一个部分结束时，我们提到了词源谬误的危险，现在是时候再进行一个“这个词有特定含义”的部分了。虽然辩论通常被理解为两个人或更多人就同一主题表达不同观点，但辩论通常有规则来规定论点的呈现形式，以及选择“胜者”或就主题达成共识的方法。
- en: A specific example of a debating system with rules (which also has the benefit
    that I'm familiar with it) is the Oxford-style debate. The debate's topic is defined
    by a motion, in the form "this house moves to [X]." The audience votes on whether
    they are for or against the motion (or they can abstain). Two speakers, or teams
    of speakers, then present arguments, one in favor of and one in opposition of
    the motion. Unlike essay-style arguments, rhetoric and appeal to emotion are important
    parts of the presentations.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 一个具有规则（而且我也熟悉）的辩论系统例子是牛津风格的辩论。辩论的主题由一个动议定义，形式为“本议院提议[X]”。观众投票决定他们是支持还是反对动议（或者他们可以选择弃权）。然后，两位演讲者或演讲团队分别提出论点，一个支持动议，一个反对动议。与论文风格的论点不同，修辞和情感诉求是演讲的重要组成部分。
- en: After the two presentations, a moderator directs a question-and-answer session
    with questions asked by the audience. After this, speakers give short closing
    presentations, then the audience votes again. The debate is "won" by the side
    that swings the vote in its favor (so, if 5% of the audience opposed the motion
    before the debate and 7% opposed it afterward, the opposition could win despite
    the majority either abstaining or being for the motion).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在两个演讲之后，主持人引导观众提问的问答环节。之后，演讲者进行简短的总结演讲，然后观众再次投票。辩论“获胜”的一方是能够将投票转向有利于自己的一方（因此，如果辩论前5%的观众反对动议，辩论后7%的观众反对动议，尽管大多数观众弃权或支持动议，反对派仍可能获胜）。
- en: The skills practiced in a competitive debate are of course mainly the construction
    of persuasive arguments, with the interesting twist that you could be required
    to debate the position you don't agree with. That's not easy, but it does lead
    to a deep exploration of the topic and questioning the reasons that you disagree
    with the assigned position.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在竞争性辩论中练习的技能当然是主要构建有说服力的论点，有趣的是，你可能需要辩论你不同意立场。这并不容易，但它确实导致了主题的深入探讨和对你不同意指定立场的原因的质疑。
- en: As explored in **The Leprechauns of Software Engineering**—[https://leanpub.com/leprechauns](https://leanpub.com/leprechauns),
    a lot of programming practice is based on folk knowledge (or common sense) that
    turns out to have a shaky evidential basis. Now, we know from research in human-computer
    interaction that a **satisficient**—[http://www.interaction-design.org/encyclopedia/satisficing.html](http://www.interaction-design.org/encyclopedia/satisficing.html)
    solution—one that isn't optimal but is "good enough" to get by—allows us to get
    our work done. Isn't it worth questioning these satisficing approaches to building
    software, and trying to find optimal approaches instead?
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 如在**《软件工程的幸运小矮人》**——[https://leanpub.com/leprechauns](https://leanpub.com/leprechauns)中所探讨的，许多编程实践基于民间知识（或常识），而这些知识最终证明其证据基础并不稳固。现在，我们知道从人机交互的研究中，一个**足够满意**——[http://www.interaction-design.org/encyclopedia/satisficing.html](http://www.interaction-design.org/encyclopedia/satisficing.html)的解决方案——一个不是最优但“足够好”以完成任务的方法——使我们能够完成我们的工作。质疑这些满足需求的软件构建方法，并尝试找到最优方法，难道不值得吗？
- en: Debates would be good vehicles for such questioning, because of the equal weight
    given to supporting and countering a motion. Someone would be responsible for
    identifying problems or weaknesses in the folk knowledge and presenting a compelling
    argument to knock it down. As a *gedankenexperiment*, could you construct an argument
    opposing the motion "this house moves to make **version control mandatory**—[http://www.neverworkintheory.org/?p=457](http://www.neverworkintheory.org/?p=457)
    on all software projects"?
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 辩论会是这种质疑的良好载体，因为辩论中支持与反对动议的权重是相等的。有人将负责识别民间知识中的问题或弱点，并提出有力的论据来推翻它。作为一个**思想实验**，你能构建一个反对动议“本议院提议对所有软件项目强制实施**版本控制**——[http://www.neverworkintheory.org/?p=457](http://www.neverworkintheory.org/?p=457)”的论点吗？
- en: Software as Essays
  id: totrans-65
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 软件作为文章
- en: Remember, in *Chapter 8, Documentation*, that I said code only tells you *what*
    the software is doing; it's hard to use it to interpret *how* it's doing it and
    impossible to discover *why* without some supporting material. You also have to
    think about *who* is doing the interpreting; understanding the written word, executable,
    or otherwise, is a subjective process that depends on the skills and experiences
    of the reader.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，在**第8章，文档**中，我说过代码只能告诉你软件正在做什么；很难用它来解释它是如何做到的，而且没有一些辅助材料，就无法发现它是为什么这样做。你还得考虑**谁**在进行解释；理解书面文字、可执行代码或其他，是一个主观的过程，这取决于读者的技能和经验。
- en: 'You could imagine an interpretation in the form of an appeal to satisfaction:
    who was the author writing for, and how does the work achieve the aim of satisfying
    those people? What themes was the author exploring, and how does the work achieve
    the goal of conveying those themes? These questions were, until the modern rise
    of literary theory, keyways in which literary criticism analyzed texts.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以想象一种解释形式，即对满足感的诉求：作者为谁写作，作品又是如何达到满足这些人的目的的？作者探索了哪些主题，作品又是如何达到传达这些主题的目标的？这些问题，直到现代文学理论的兴起，一直是文学批评分析文本的关键途径。
- en: Let's take these ideas and apply them to programming. We find that we ask of
    our programmers not "can you please write readable code?" but "can you consider
    what the themes and audience of this code are, and write in a way that promotes
    the themes among members of that audience?" The themes are the problems you're
    trying to solve, and the constraints on solving them. The audience is, well, it's
    the audience; it's the collection of people who will subsequently have to read
    and understand the code. This group can be considered to be somewhat exclusive;
    just as there's no point writing code for features you don't need, there's no
    point writing it for an audience who won't read it.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们把这些想法应用到编程中。我们发现，我们不是问我们的程序员“你能请写可读的代码吗？”而是问“你能考虑这段代码的主题和受众是什么，并以一种促进该受众中成员的主题的方式编写代码吗？”主题是你试图解决的问题，以及解决这些问题的限制。受众，嗯，就是受众；是那些随后必须阅读和理解代码的人的集合。这个群体可以被认为是有一定局限性的；正如编写不需要的功能的代码没有意义一样，为不会阅读的受众编写代码也没有意义。
- en: We also find that we can no longer ask the objective-sounding question "did
    this coder write good code?" Nor can we ask, "is this code readable?" Instead,
    we ask "how does this code convey its themes to its audience?" The mark of readable
    code is not merely how the code is structured; it's how the code is interpreted
    by the reader. It's whether the code convinces the reader of the author's implicit
    argument, "this is what the code should do."
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还发现，我们不能再问这种听起来客观的问题：“这位程序员写的代码好吗？”也不能问：“这段代码可读吗？”相反，我们问：“这段代码是如何向其受众传达其主题的？”可读代码的标志不仅仅是代码的结构；它是代码被读者如何解释。这是否让读者信服作者的隐含论点：“这就是代码应该做的。”
- en: In conclusion, then, a sound approach to writing readable code requires authors
    and readers to meet in the middle. Authors must decide who will read the code,
    and how to convey the important information to those readers. Readers must analyze
    the code in terms of how it satisfies this goal of conveyance, not whether they
    enjoyed the indentation strategy or dislike dots in principle.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在结论中，一个合理的编写可读代码的方法要求作者和读者达成共识。作者必须决定谁会阅读代码，以及如何将这些重要信息传达给这些读者。读者必须从代码如何满足传达目标的角度来分析代码，而不是他们是否喜欢缩进策略或原则上不喜欢点。
- en: Source code is not software written in a human-readable notation. It's an essay,
    written in executable notation. The argument is that the code as presented is
    the solution to its problem. But the code must both *solve* this problem and *justify*
    the solution with coherent and rational explanations.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 源代码不是用人类可读的符号编写的软件。它是一篇用可执行符号写的文章。论点是，展示的代码是其问题的解决方案。但代码必须**解决**这个问题，并用连贯合理的解释**证明**这个解决方案是合理的。
