- en: Using LCD Displays
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用LCD显示屏
- en: There are times that we would like to have the ability to display data from
    the Arduino to the user. For this, we can use an LCD display. There are numerous
    types of LCD displays that we can use and probably the most popular is the 1602
    display. Because they are so popular, you can find numerous tutorials on how to
    use them on the internet. While these displays are easy to use, you are limited
    by what you can do with them.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候我们希望有能力将Arduino的数据显示给用户。为此，我们可以使用LCD显示屏。我们可以使用多种类型的LCD显示屏，其中最流行的是1602显示屏。由于它们非常流行，你可以在互联网上找到大量关于如何使用它们的教程。虽然这些显示屏易于使用，但你在使用它们时受到的限制。
- en: In this chapter, we will look at a display that we can do a lot more with. This
    display is the **Nokia 5110 LCD display**.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将探讨一个我们可以做更多事情的显示屏。这个显示屏是**诺基亚5110 LCD显示屏**。
- en: 'In this chapter, you will learn:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习：
- en: How to connect a Nokia 5110 LCD to an Arduino
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何将诺基亚5110 LCD连接到Arduino
- en: How to print text to an LCD
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何将文本打印到LCD上
- en: How to draw circles on an LCD
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在LCD上绘制圆形
- en: How to draw rectangles on an LCD
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在LCD上绘制矩形
- en: How to draw rounded rectangles on an LCD
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何在LCD上绘制圆角矩形
- en: Introduction
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: The Nokia 5110 LCD display is a basic monochrome graphics LCD screen that can
    be used in numerous projects. Nokia originally developed this display for use
    with cell phones in the late 1990's. This display uses the **PCD8544 LCD controller/driver**.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 诺基亚5110 LCD显示屏是一种基本的单色图形LCD显示屏，可用于众多项目。诺基亚最初在20世纪90年代末为手机开发此显示屏。此显示屏使用**PCD8544
    LCD控制器/驱动器**。
- en: Having an LCD display greatly improves the user interface of any project because
    we have the ability to display messages directly to the user letting them know
    what is happening or giving them specific error messages if something goes wrong.
    The 5110 LCD allows us to display both text and graphics.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有LCD显示屏可以极大地提升任何项目的用户界面，因为我们有能力直接向用户显示消息，让他们知道正在发生什么，或者在出现问题时提供特定的错误消息。5110
    LCD允许我们显示文本和图形。
- en: 'The 5110 LCD has a display area of approximately 4.2 cm with 84 × 48 individual
    pixels. The display is inexpensive and very easy to use with the Adafruit 5110
    LCD library that we will be using in this chapter. The 5110 LCD that we will be
    using in this chapter looks like the following:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 5110 LCD的显示区域大约为4.2厘米，有84 × 48个单独的像素。该显示屏价格低廉，使用Adafruit 5110 LCD库（本章将使用）非常容易。本章中我们将使用的5110
    LCD看起来如下：
- en: '![](img/d52c7991-1a40-45b8-931e-b2ada86559ec.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](img/d52c7991-1a40-45b8-931e-b2ada86559ec.png)'
- en: 'The 5110 LCD display comes mounted on a PCB board and has eight pins that are
    used to power the display and interface with it. These pins are, from left to
    right:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 5110 LCD显示屏安装在PCB板上，有八个引脚用于为显示屏供电并与之接口。这些引脚从左到右分别是：
- en: '**RST**: Reset – Active low'
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**RST**: 重置 – 低电平有效'
- en: '**CE**: Chip Select – Active low'
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**CE**: 芯片选择 – 低电平有效'
- en: '**DC**: Mode (data/instruction) selection – Select between command mode (low)
    or data mode (high)'
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**DC**: 模式（数据/指令）选择 – 选择命令模式（低）或数据模式（高）'
- en: '**DIN**: Serial Data Inline'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**DIN**: 串行数据线'
- en: '**CLK**: Serial Clock Line'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**CLK**: 串行时钟线'
- en: '**VCC**: Power input 3.3V'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**VCC**: 电源输入 3.3V'
- en: '**BL**: Backlight LED control – 3.3V'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**BL**: 背光LED控制 – 3.3V'
- en: '**GND**: Ground'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**GND**: 地'
- en: The reset pin will reset the 5110 LCD module and is active low, which means
    that the reset will be triggered if the pin goes to 0V. The chip select pin is
    used when more than one SPI peripheral is connected. The pin is also active low.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 重置引脚将重置5110 LCD模块，其为低电平有效，意味着当引脚降至0V时将触发重置。当连接多个SPI外围设备时使用芯片选择引脚。该引脚也是低电平有效。
- en: The DC pin is used to select between data or command mode. When the pin is high
    data mode is used, and when the pin is low command mode is used.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: DC引脚用于在数据模式或命令模式之间选择。当引脚为高时使用数据模式，当引脚为低时使用命令模式。
- en: The DIN pin is the input pin where serial instructions are sent.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: DIN引脚是串行指令发送的输入引脚。
- en: The CLK pin is the common clock used for the SPI modules. The clock source is
    supplied to the pin.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: CLK引脚是SPI模块共用的时钟引脚。时钟源连接到该引脚。
- en: The BL pin powers the backlight display. This pin should never be above 3.3V.
    If the pin is low, then the backlight will be off.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: BL引脚为背光显示屏供电。此引脚的电压不应超过3.3V。如果引脚为低，则背光将关闭。
- en: VCC and GND are power and ground respectively. Power should never be above 3.3V.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: VCC和GND分别是电源和地。电源的电压不应超过3.3V。
- en: Let's see what parts we will need for this chapter's project.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看本章项目需要哪些部件。
- en: Components needed
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 需要的组件
- en: One Arduino Uno or compatible board
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Arduino Uno或兼容板
- en: One Nokia 5110 LCD
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个诺基亚5110 LCD
- en: Four 10K ohm resistors
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 四个10K欧姆电阻
- en: One 1K ohm resistor
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个1K欧姆电阻
- en: Jumper wires
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 跳线
- en: One breadboard
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个面包板
- en: Circuit diagrams
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电路图
- en: 'The following diagram shows the circuit diagram for this chapter''s project:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了本章项目的电路图：
- en: '![](img/9b28f7ed-05cf-44cf-a980-7ea63e42fa13.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/9b28f7ed-05cf-44cf-a980-7ea63e42fa13.png)'
- en: The Nokia 5110 LCD should use the 3.3V power out from the Arduino and not the
    5V that we have used in the earlier projects. We use inline resistors to protect
    the 3.3V input lines on the LCD. The CE line uses a 1K ohm resistor and the remainder
    use 10K ohm resistors.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 诺基亚5110 LCD应使用Arduino的3.3V电源输出，而不是我们在早期项目中使用的5V。我们使用内联电阻来保护LCD上的3.3V输入线。CE线使用1K欧姆电阻，其余使用10K欧姆电阻。
- en: 'The following chart shows what pins on the 5110 LCD module are connected to
    what pins on the Arduino:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图表显示了5110 LCD模块上的哪些引脚连接到Arduino上的哪些引脚：
- en: '| **5110** | **Arduino** |'
  id: totrans-42
  prefs: []
  type: TYPE_TB
  zh: '| **5110** | **Arduino** |'
- en: '| RST | 3 |'
  id: totrans-43
  prefs: []
  type: TYPE_TB
  zh: '| RST | 3 |'
- en: '| CE | 4 |'
  id: totrans-44
  prefs: []
  type: TYPE_TB
  zh: '| CE | 4 |'
- en: '| DC | 5 |'
  id: totrans-45
  prefs: []
  type: TYPE_TB
  zh: '| DC | 5 |'
- en: '| DIN | 11 |'
  id: totrans-46
  prefs: []
  type: TYPE_TB
  zh: '| DIN | 11 |'
- en: '| CLK | 13 |'
  id: totrans-47
  prefs: []
  type: TYPE_TB
  zh: '| CLK | 13 |'
- en: '| VCC | 3.3V out |'
  id: totrans-48
  prefs: []
  type: TYPE_TB
  zh: '| VCC | 3.3V out |'
- en: '| BL | GND |'
  id: totrans-49
  prefs: []
  type: TYPE_TB
  zh: '| BL | GND |'
- en: '| GND | GND |'
  id: totrans-50
  prefs: []
  type: TYPE_TB
  zh: '| GND | GND |'
- en: The backlight is set to ground to turn it off. If you wish to use the backlight,
    you can connect the pin to the 3.3V power out that was used for the VCC pin.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 背光设置为接地以关闭。如果您想使用背光，可以将引脚连接到用于VCC引脚的3.3V电源输出。
- en: Now let's see how we can display items on the LCD.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看如何在LCD上显示项目。
- en: Code
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代码
- en: 'We will need to start off by installing two Adafruit libraries. These are the
    **Adafruit GFX Library** and the **Adafruit PCD8544 Nokia 5110 LCD library**.
    These libraries are installed as we will need to include them and the SPI library.
    We can do this by adding the following `include` statements at the beginning of
    the sketch:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要首先安装两个Adafruit库。这些是**Adafruit GFX库**和**Adafruit PCD8544诺基亚5110 LCD库**。这些库需要安装，因为我们需要包含它们和SPI库。我们可以通过在代码开头添加以下`include`语句来实现：
- en: '[PRE0]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'We will not want to initiate an instance of the `Adafruit_PCD8544` type using
    the following code:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不希望使用以下代码来初始化`Adafruit_PCD8544`类型的一个实例：
- en: '[PRE1]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The parameters are the Arduino pin numbers that the CLK, DIN, DC, CE and RST
    pins respectively are connected too.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 参数是Arduino引脚号，CLK、DIN、DC、CE和RST引脚分别连接到这些引脚。
- en: 'In the `setup()` function, we will want to add the following code to set up
    the `Adafruit_PCD8544` instance:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在`setup()`函数中，我们希望添加以下代码来设置`Adafruit_PCD8544`实例：
- en: '[PRE2]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now the rest of the code can go in the `setup()` function for test purposes
    or in the `loop()` function. Let''s start off by seeing how to light up a single
    pixel on the display. This can be accomplished by using the `drawPixel()` function
    as shown in the following code:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在可以将其余的代码放入`setup()`函数中进行测试，或者放入`loop()`函数中。让我们首先看看如何点亮显示屏上的单个像素。这可以通过使用以下代码中的`drawPixel()`函数来实现：
- en: '[PRE3]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Before we draw anything to the screen, we will want to clear the display and
    buffer. We do this with the `clearDisplay()` function. Next, we use the `drawPixel()`
    function to light up a single pixel located at the *X* coordinate 10 and the *Y*
    coordinate 10\. Before anything is displayed on the LCD, we need to run the `display()`
    function as shown in the preceding code. It is important to remember to run the
    `clearDisplay()` function before we draw anything to the LCD, and we run the `display()`
    function after we draw everything to the screen to display it.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们在屏幕上绘制任何内容之前，我们希望清除显示屏和缓冲区。我们使用`clearDisplay()`函数来完成此操作。接下来，我们使用`drawPixel()`函数来点亮位于*X*坐标10和*Y*坐标10的单个像素。在LCD上显示任何内容之前，我们需要运行`display()`函数，如前述代码所示。重要的是要记住在向LCD绘制任何内容之前运行`clearDisplay()`函数，并在屏幕上绘制所有内容后运行`display()`函数以显示它们。
- en: Drawing a line
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 绘制一条线
- en: 'We could put several of the `drawPixel()` function calls together to draw a
    line, but it would be a lot easier to use the `drawLine()` function as shown in
    the following code:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以将几个`drawPixel()`函数调用组合起来来绘制一条线，但使用以下代码中的`drawLine()`函数会更容易：
- en: '[PRE4]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The `drawLine()` function takes five parameters. The first two parameters are
    the *X*/*Y* coordinates of the starting point for the line. The next two parameters
    are the *X*/*Y* coordinates for the ending point of the line, and the final parameter
    is the color to draw the line. Since the Nokia 5110 LCD is a monochrome display,
    the only options here are `BLACK` or `WHITE`.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '`drawLine()` 函数接受五个参数。前两个参数是线的起始点的 *X*/*Y* 坐标。接下来的两个参数是线的结束点的 *X*/*Y* 坐标，最后一个参数是绘制线的颜色。由于诺基亚
    5110 LCD 是单色显示屏，这里的选项只有 `BLACK` 或 `WHITE`。'
- en: 'If we ran this code, we would see a line on the display like the one seen in
    the following photograph:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们运行此代码，显示屏上会出现一条线，如下照片所示：
- en: '![](img/1e3d6003-54d4-4ab2-8aa3-be7ae4c97fee.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1e3d6003-54d4-4ab2-8aa3-be7ae4c97fee.png)'
- en: Displaying text
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示文本
- en: 'The Adafruit library also makes it very easy to display text to the Nokia 5110
    LCD. The following code shows how we can display text:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: Adafruit 库还使得在诺基亚 5110 LCD 上显示文本变得非常简单。以下代码展示了我们如何显示文本：
- en: '[PRE5]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The `setTextSize()` function sets the size of the text. In the first example,
    the text size is set to `1`. The `setTextColor()` function will set the color
    of the text. Once again, since the Nokia 5110 LCD is a monochrome display, the
    two options are `BLACK` or `WHITE`. The `setCursor()` function sets the position
    of the cursor to the position on the screen to write the text too. In this case,
    the cursor is set to the upper left corner of the screen. Finally, the `println()`
    function is used to print the `Hello World!` message to the screen.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`setTextSize()` 函数设置文本的大小。在第一个例子中，文本大小设置为 `1`。`setTextColor()` 函数将设置文本的颜色。同样，由于诺基亚
    5110 LCD 是单色显示屏，这里的选项是 `BLACK` 或 `WHITE`。`setCursor()` 函数设置光标的位置，以便在屏幕上写入文本。在这种情况下，光标被设置为屏幕的左上角。最后，使用
    `println()` 函数将 `Hello World!` 消息打印到屏幕上。'
- en: In the next example, we use the `setTextColor()` function to set the foreground
    color to `WHITE` and the background color to `BLACK` to reverse the text and then
    use the `println()` function to print the value of PI to the screen. Since we
    did not call the `setTextSize()` function, the text stays at the previously defined
    size, which is `1`.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一个例子中，我们使用 `setTextColor()` 函数将前景色设置为 `WHITE`，背景色设置为 `BLACK` 以反转文本，然后使用 `println()`
    函数将 PI 的值打印到屏幕上。由于我们没有调用 `setTextSize()` 函数，文本保持之前定义的大小，即 `1`。
- en: 'In the last example, the text size is set to `2`, and the text color is set
    back to black. The following image shows what the screen will display when this
    code is run:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后一个例子中，文本大小设置为 `2`，文本颜色恢复为黑色。以下图片展示了运行此代码后屏幕的显示效果：
- en: '![](img/a3519eda-f2f0-4e8d-929b-4af212fe47bb.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a3519eda-f2f0-4e8d-929b-4af212fe47bb.png)'
- en: Rotating text
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 旋转文本
- en: 'We can also rotate text. The following code shows how to do this:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以旋转文本。以下代码展示了如何进行操作：
- en: '[PRE6]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'The `setRotation()` function will rotate the text counterclockwise. A value
    of 1 will rotate the text 90 degrees counterclockwise. Values of 2 and 3 can also
    be used to rotate the text at 180 and 270 degrees. The following photograph shows
    how the text will look when this code is run:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '`setRotation()` 函数将文本逆时针旋转。值为 1 将文本逆时针旋转 90 度。值 2 和 3 也可以用来将文本旋转 180 度和 270
    度。以下照片展示了运行此代码后文本的显示效果：'
- en: '![](img/1a8bca0e-b645-4efc-8487-16ae5408d4c4.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/1a8bca0e-b645-4efc-8487-16ae5408d4c4.png)'
- en: Notice that the text will wrap to a new line if it is longer than what can be
    displayed on a single line.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 注意，如果文本长度超过单行可显示的长度，文本将自动换行。
- en: Basic shapes
  id: totrans-83
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本形状
- en: 'The Adafruit library also enables us to create basic shapes on the LCD. These
    include circles, rectangles and rounded rectangles. There are also functions that
    enable us to create these shapes and fill them in. The following code and screenshots
    show how to use the circle functions:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: Adafruit 库还允许我们在 LCD 上创建基本形状。这些包括圆形、矩形和圆角矩形。还有一些函数可以用来创建这些形状并填充它们。以下代码和截图展示了如何使用圆形函数：
- en: '[PRE7]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](img/e18481b3-e029-4322-9c44-c89a8f4a7342.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e18481b3-e029-4322-9c44-c89a8f4a7342.png)'
- en: Filled shape
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 填充形状
- en: '[PRE8]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](img/d16f8195-efdd-4952-9087-92c6a8012ef3.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d16f8195-efdd-4952-9087-92c6a8012ef3.png)'
- en: The circle functions take four parameters. The first two parameters are the
    *X*/*Y* coordinates for the center of the circle. In these two examples, the center
    of the circle is the center of the screen. The third parameter is the radius of
    the circle, and the last parameter is the color for the circle and also the color
    to fill the circle in the case of the `fillCircle()` function.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 圆形函数需要四个参数。前两个参数是圆心的X/Y坐标。在这两个示例中，圆心的位置是屏幕的中心。第三个参数是圆的半径，最后一个参数是圆的颜色，以及在`fillCircle()`函数中填充圆的颜色。
- en: Rectangle
  id: totrans-91
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 矩形
- en: 'The next two examples show how to draw a rectangle and also a filled rectangle:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 下两个示例展示了如何绘制矩形和填充矩形：
- en: '[PRE9]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](img/d43d4e35-1433-4f50-a1f0-4465809cd95a.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d43d4e35-1433-4f50-a1f0-4465809cd95a.png)'
- en: Filled rectangle
  id: totrans-95
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 填充矩形
- en: '[PRE10]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](img/84c7bc13-d2cf-469d-9bce-cae618e22e0d.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/84c7bc13-d2cf-469d-9bce-cae618e22e0d.png)'
- en: Rounded rectangle
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 圆角矩形
- en: The rectangle functions take five parameters. The first two are the *X*/*Y*
    coordinates of the upper left corner of the rectangle. The next two parameters
    are the *X*/*Y* coordinates of the lower right-hand corner of the rectangle, and
    the last parameter is the color to draw the rectangle and the color to fill the
    rectangle for the `fillRect()` function.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 矩形函数需要五个参数。前两个参数是矩形左上角的X/Y坐标。接下来的两个参数是矩形右下角的X/Y坐标，最后一个参数是绘制矩形的颜色以及`fillRect()`函数填充矩形的颜色。
- en: 'The next two examples show how we can draw rounded rectangles with the Adafruit
    library:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 下两个示例展示了如何使用Adafruit库绘制圆角矩形：
- en: '[PRE11]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '![](img/980bd3b2-a0da-47a2-9093-3dd99ac64142.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/980bd3b2-a0da-47a2-9093-3dd99ac64142.png)'
- en: Filled rounded rectangle
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 填充圆角矩形
- en: '[PRE12]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](img/a2741c8b-6bb9-48e2-bb18-e14606607272.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/a2741c8b-6bb9-48e2-bb18-e14606607272.png)'
- en: The first four parameters for the round rectangle functions are the same as
    the regular rectangle functions, which are the coordinates for the upper left
    and lower right corners of the rectangle. The next parameter is how much to round
    the corners, and the last parameter is the color to draw the rounded rectangle
    and the color to fill it.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 圆角矩形函数的前四个参数与常规矩形函数相同，即矩形左上角和右下角的坐标。下一个参数是圆角的大小，最后一个参数是绘制圆角矩形及其填充的颜色。
- en: As we can see from the examples in this chapter, we can do a lot more than text
    with the Nokia 5110 LCD display, and the Adafruit library makes it very easy to
    use.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 从本章的示例中我们可以看到，使用诺基亚5110 LCD显示屏，我们可以做很多不仅仅是文本的事情，Adafruit库使得使用它变得非常简单。
- en: Challenge
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 挑战
- en: For the challenge, take any of the previous projects in this book and add the
    Nokia 5110 LCD display to it. Then, rather than displaying the output to the serial
    console, display the output to the LCD display. An example would be to add the
    LCD display to the rangefinder project from [Chapter 10](52e8daa7-b58a-4c75-ac23-13795fc1279d.xhtml),
    *Obstacle Avoidance and Collision Detection*, and use the LCD to display the distance.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 对于挑战，选择本书中之前的任何项目，并添加诺基亚5110 LCD显示屏。然后，而不是将输出显示到串行控制台，将输出显示到LCD显示屏。一个例子是将LCD显示屏添加到第10章的测距仪项目，*避障和碰撞检测*，并使用LCD显示距离。
- en: Summary
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 概述
- en: In this chapter, we saw how we could add a Nokia 5110 LCD monochrome display
    to our projects. These displays can greatly enhance the user experience of almost
    any project because we are able to tell the users what is happening and what is
    wrong if there is an issue.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们看到了如何将诺基亚5110 LCD单色显示屏添加到我们的项目中。这些显示屏可以极大地增强几乎所有项目的用户体验，因为我们能够告诉用户正在发生什么，如果出现问题，是什么问题。
- en: In the next chapter, we will see how we can add a voice synthesizer and voice
    recognition to our projects.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将看到如何将语音合成器和语音识别添加到我们的项目中。
