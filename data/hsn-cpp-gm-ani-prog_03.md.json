["```cpp\n    struct mat4 {\n    \u00a0\u00a0\u00a0\u00a0union {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0float v[16];\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0struct {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vec4 right;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vec4 up;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vec4 forward;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0vec4 position;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0struct { \n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0//\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 row 1\u00a0\u00a0\u00a0\u00a0row 2\u00a0\u00a0\u00a0\u00a0row 3\u00a0\u00a0\u00a0\u00a0row 4\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/*col 1*/float xx;float xy;float xz;float xw;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/*col 2*/float yx;float yy;float yz;float yw;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/*col 3*/float zx;float zy;float zz;float zw;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0/*col 4*/float tx;float ty;float tz;float tw;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0struct {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float c0r0;float c0r1;float c0r2;float c0r3;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float c1r0;float c1r1;float c1r2;float c1r3;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float c2r0;float c2r1;float c2r2;float c2r3;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float c3r0;float c3r1;float c3r2;float c3r3;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0struct {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float r0c0;float r1c0;float r2c0;float r3c0;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float r0c1;float r1c1;float r2c1;float r3c1;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float r0c2;float r1c2;float r2c2;float r3c2;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float r0c3;float r1c3;float r2c3;float r3c3;\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0};\n    \u00a0\u00a0\u00a0\u00a0}; // End union\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0inline mat4() :\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 xx(1), xy(0), xz(0), xw(0),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 yx(0), yy(1), yz(0), yw(0),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 zx(0), zy(0), zz(1), zw(0),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 tx(0), ty(0), tz(0), tw(1) {}\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0inline mat4(float *fv) :\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 xx( fv[0]), xy( fv[1]), xz( fv[2]), xw( fv[3]),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 yx( fv[4]), yy( fv[5]), yz( fv[6]), yw( fv[7]),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 zx( fv[8]), zy( fv[9]), zz(fv[10]), zw(fv[11]),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 tx(fv[12]), ty(fv[13]), tz(fv[14]), tw(fv[15]) { }\n    ```", "```cpp\n    \u00a0\u00a0\u00a0\u00a0inline mat4(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0float _00, float _01, float _02, float _03,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0float _10, float _11, float _12, float _13,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0float _20, float _21, float _22, float _23,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0float _30, float _31, float _32, float _33) :\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0xx(_00), xy(_01), xz(_02), xw(_03),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0yx(_10), yy(_11), yz(_12), yw(_13),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0zx(_20), zy(_21), zz(_22), zw(_23),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0tx(_30), ty(_31), tz(_32), tw(_33) { }\n    }; // end mat4 struct\n    ```", "```cpp\nbool operator==(const mat4& a, const mat4& b) {\n\u00a0\u00a0\u00a0\u00a0for (int i = 0; i < 16; ++i) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0if (fabsf(a.v[i] - b.v[i]) > MAT4_EPSILON) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return false;\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0return true;\n}\nbool operator!=(const mat4& a, const mat4& b) {\n\u00a0\u00a0\u00a0\u00a0return !(a == b);\n}\n```", "```cpp\nmat4 operator+(const mat4& a, const mat4& b) {\n\u00a0\u00a0\u00a0\u00a0return mat4(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0a.xx+b.xx, a.xy+b.xy, a.xz+b.xz, a.xw+b.xw,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0a.yx+b.yx, a.yy+b.yy, a.yz+b.yz, a.yw+b.yw,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0a.zx+b.zx, a.zy+b.zy, a.zz+b.zz, a.zw+b.zw,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0a.tx+b.tx, a.ty+b.ty, a.tz+b.tz, a.tw+b.tw\n\u00a0\u00a0\u00a0\u00a0);\n}\n```", "```cpp\nmat4 operator*(const mat4& m, float f) {\n\u00a0\u00a0\u00a0\u00a0return mat4(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0m.xx * f, m.xy * f, m.xz * f, m.xw * f,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0m.yx * f, m.yy * f, m.yz * f, m.yw * f,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0m.zx * f, m.zy * f, m.zz * f, m.zw * f,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0m.tx * f, m.ty * f, m.tz * f, m.tw * f\n\u00a0\u00a0\u00a0\u00a0);\n}\n```", "```cpp\n    #define M4D(aRow, bCol) \\\n    \u00a0\u00a0\u00a0\u00a0a.v[0 * 4 + aRow] * b.v[bCol * 4 + 0] + \\\n    \u00a0\u00a0\u00a0\u00a0a.v[1 * 4 + aRow] * b.v[bCol * 4 + 1] + \\\n    \u00a0\u00a0\u00a0\u00a0a.v[2 * 4 + aRow] * b.v[bCol * 4 + 2] + \\\n    \u00a0\u00a0\u00a0\u00a0a.v[3 * 4 + aRow] * b.v[bCol * 4 + 3]\n    ```", "```cpp\n    mat4 operator*(const mat4 &a, const mat4 &b) {\n    \u00a0\u00a0 return mat4(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4D(0,0), M4D(1,0), M4D(2,0), M4D(3,0),//Col 0\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4D(0,1), M4D(1,1), M4D(2,1), M4D(3,1),//Col 1\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4D(0,2), M4D(1,2), M4D(2,2), M4D(3,2),//Col 2\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4D(0,3), M4D(1,3), M4D(2,3), M4D(3,3) //Col 3\n    \u00a0\u00a0 );\n    }\n    ```", "```cpp\n    #define M4V4D(mRow, x, y, z, w) \\\n    \u00a0\u00a0\u00a0\u00a0x * m.v[0 * 4 + mRow] + \\\n    \u00a0\u00a0\u00a0\u00a0y * m.v[1 * 4 + mRow] + \\\n    \u00a0\u00a0\u00a0\u00a0z * m.v[2 * 4 + mRow] + \\\n    \u00a0\u00a0\u00a0\u00a0w * m.v[3 * 4 + mRow]\n    ```", "```cpp\n    vec4 operator*(const mat4& m, const vec4& v) {\n    \u00a0\u00a0\u00a0\u00a0return vec4(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4V4D(0, v.x, v.y, v.z, v.w),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4V4D(1, v.x, v.y, v.z, v.w),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4V4D(2, v.x, v.y, v.z, v.w),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4V4D(3, v.x, v.y, v.z, v.w) \n    \u00a0\u00a0\u00a0\u00a0);\n    }\n    ```", "```cpp\n    vec3 transformVector(const mat4& m, const vec3& v) {\n    \u00a0\u00a0\u00a0\u00a0return vec3(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4V4D(0, v.x, v.y, v.z, 0.0f),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4V4D(1, v.x, v.y, v.z, 0.0f),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4V4D(2, v.x, v.y, v.z, 0.0f) \n    \u00a0\u00a0\u00a0\u00a0);\n    }\n    ```", "```cpp\n    vec3 transformPoint(const mat4& m, const vec3& v) {\n    \u00a0\u00a0\u00a0\u00a0return vec3(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4V4D(0, v.x, v.y, v.z, 1.0f),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4V4D(1, v.x, v.y, v.z, 1.0f),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4V4D(2, v.x, v.y, v.z, 1.0f)\n    \u00a0\u00a0\u00a0\u00a0);\n    }\n    ```", "```cpp\n    vec3 transformPoint(const mat4& m, const vec3& v, float& w) {\n    \u00a0\u00a0\u00a0\u00a0float _w = w;\n    \u00a0\u00a0\u00a0\u00a0w = M4V4D(3, v.x, v.y, v.z, _w);\n    \u00a0\u00a0\u00a0\u00a0return vec3(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4V4D(0, v.x, v.y, v.z, _w),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4V4D(1, v.x, v.y, v.z, _w),\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0M4V4D(2, v.x, v.y, v.z, _w)\n    \u00a0\u00a0\u00a0\u00a0);\n    }\n    ```", "```cpp\n    #define M4SWAP(x, y) \\\n    \u00a0\u00a0\u00a0\u00a0{float t = x; x = y; y = t; }\n    void transpose(mat4 &m) {\n    \u00a0\u00a0\u00a0\u00a0M4SWAP(m.yx, m.xy);\n    \u00a0\u00a0\u00a0\u00a0M4SWAP(m.zx, m.xz);\n    \u00a0\u00a0\u00a0\u00a0M4SWAP(m.tx, m.xw);\n    \u00a0\u00a0\u00a0\u00a0M4SWAP(m.zy, m.yz);\n    \u00a0\u00a0\u00a0\u00a0M4SWAP(m.ty, m.yw);\n    \u00a0\u00a0\u00a0\u00a0M4SWAP(m.tz, m.zw);\n    }\n    ```", "```cpp\n    mat4 transposed(const mat4 &m) {\n    \u00a0\u00a0\u00a0\u00a0return mat4(\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0m.xx, m.yx, m.zx, m.tx,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0m.xy, m.yy, m.zy, m.ty,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0m.xz, m.yz, m.zz, m.tz,\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0m.xw, m.yw, m.zw, m.tw\n    \u00a0\u00a0\u00a0\u00a0);\n    }\n    ```", "```cpp\n    #define M4_3X3MINOR(x, c0, c1, c2, r0, r1, r2) \\\n    \u00a0\u00a0 (x[c0*4+r0]*(x[c1*4+r1]*x[c2*4+r2]-x[c1*4+r2]* \\\n    \u00a0\u00a0 x[c2*4+r1])-x[c1*4+r0]*(x[c0*4+r1]*x[c2*4+r2]- \\\n    \u00a0\u00a0 x[c0*4+r2]*x[c2*4+r1])+x[c2*4+r0]*(x[c0*4+r1]* \\\n    \u00a0\u00a0 x[c1*4+r2]-x[c0*4+r2]*x[c1*4+r1]))\n    ```", "```cpp\n    float determinant(const mat4& m) {\n    \u00a0\u00a0 return\u00a0\u00a0m.v[0] *M4_3X3MINOR(m.v, 1, 2, 3, 1, 2, 3)\u00a0\u00a0\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 - m.v[4] *M4_3X3MINOR(m.v, 0, 2, 3, 1, 2, 3)\u00a0\u00a0\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 + m.v[8] *M4_3X3MINOR(m.v, 0, 1, 3, 1, 2, 3)\u00a0\u00a0\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 - m.v[12]*M4_3X3MINOR(m.v, 0, 1, 2, 1, 2, 3); \n    }\n    ```", "```cpp\n    mat4 adjugate(const mat4& m) {\n    \u00a0\u00a0 //Cof (M[i, j]) = Minor(M[i, j]] * pow(-1, i + j)\n    \u00a0\u00a0 mat4 cofactor;\n    \u00a0\u00a0 cofactor.v[0] = M4_3X3MINOR(m.v, 1, 2, 3, 1, 2, 3);\n    \u00a0\u00a0 cofactor.v[1] =-M4_3X3MINOR(m.v, 1, 2, 3, 0, 2, 3);\n    \u00a0\u00a0 cofactor.v[2] = M4_3X3MINOR(m.v, 1, 2, 3, 0, 1, 3);\n    \u00a0\u00a0 cofactor.v[3] =-M4_3X3MINOR(m.v, 1, 2, 3, 0, 1, 2);\n    \u00a0\u00a0 cofactor.v[4] =-M4_3X3MINOR(m.v, 0, 2, 3, 1, 2, 3);\n    \u00a0\u00a0 cofactor.v[5] = M4_3X3MINOR(m.v, 0, 2, 3, 0, 2, 3);\n    \u00a0\u00a0 cofactor.v[6] =-M4_3X3MINOR(m.v, 0, 2, 3, 0, 1, 3);\n    \u00a0\u00a0 cofactor.v[7] = M4_3X3MINOR(m.v, 0, 2, 3, 0, 1, 2);\n    \u00a0\u00a0 cofactor.v[8] = M4_3X3MINOR(m.v, 0, 1, 3, 1, 2, 3);\n    \u00a0\u00a0 cofactor.v[9] =-M4_3X3MINOR(m.v, 0, 1, 3, 0, 2, 3);\n    \u00a0\u00a0 cofactor.v[10]= M4_3X3MINOR(m.v, 0, 1, 3, 0, 1, 3);\n    \u00a0\u00a0 cofactor.v[11]=-M4_3X3MINOR(m.v, 0, 1, 3, 0, 1, 2);\n    \u00a0\u00a0 cofactor.v[12]=-M4_3X3MINOR(m.v, 0, 1, 2, 1, 2, 3);\n    \u00a0\u00a0 cofactor.v[13]= M4_3X3MINOR(m.v, 0, 1, 2, 0, 2, 3);\n    \u00a0\u00a0 cofactor.v[14]=-M4_3X3MINOR(m.v, 0, 1, 2, 0, 1, 3);\n    \u00a0\u00a0 cofactor.v[15]= M4_3X3MINOR(m.v, 0, 1, 2, 0, 1, 2);\n    \u00a0\u00a0 return transposed(cofactor);\n    }\n    ```", "```cpp\n    mat4 inverse(const mat4& m) {\n    \u00a0\u00a0\u00a0\u00a0float det = determinant(m);\n\n    \u00a0\u00a0\u00a0\u00a0if (det == 0.0f) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0cout << \" Matrix determinant is 0\\n\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return mat4();\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0mat4 adj = adjugate(m);\n    \u00a0\u00a0\u00a0\u00a0return adj * (1.0f / det);\n    }\n    ```", "```cpp\n    void invert(mat4& m) {\n    \u00a0\u00a0\u00a0\u00a0float det = determinant(m);\n    \u00a0\u00a0\u00a0\u00a0if (det == 0.0f) {\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0std::cout << \"Matrix determinant is 0\\n\";\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0m = mat4();\n    \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return;\n    \u00a0\u00a0\u00a0\u00a0}\n    \u00a0\u00a0\u00a0\u00a0m = adjugate(m) * (1.0f / det);\n    }\n    ```", "```cpp\nmat4 frustum(float l, float r, float b, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float t, float n, float f) {\n\u00a0\u00a0\u00a0\u00a0if (l == r || t == b || n == f) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0std::cout << \"Invalid frustum\\n\";\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return mat4(); // Error\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0return mat4(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(2.0f * n) / (r - l),0, 0, 0,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00,\u00a0\u00a0(2.0f * n) / (t - b), 0, 0,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0(r+l)/(r-l), (t+b)/(t-b), (-(f+n))/(f-n), -1,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00, 0, (-2 * f * n) / (f - n), 0\n\u00a0\u00a0\u00a0\u00a0);\n}\n```", "```cpp\nmat4 perspective(float fov, float aspect, float n,float f){\n\u00a0\u00a0\u00a0\u00a0float ymax = n * tanf(fov * 3.14159265359f / 360.0f);\n\u00a0\u00a0\u00a0\u00a0float xmax = ymax * aspect;\n\u00a0\u00a0\u00a0\u00a0return frustum(-xmax, xmax, -ymax, ymax, n, f);\n}\n```", "```cpp\nmat4 ortho(float l, float r, float b, float t, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 float n, float f) {\n\u00a0\u00a0\u00a0\u00a0if (l == r || t == b || n == f) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return mat4(); // Error\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0return mat4(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a02.0f / (r - l), 0, 0, 0,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00, 2.0f / (t - b), 0, 0,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a00, 0, -2.0f / (f - n), 0,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-((r+l)/(r-l)),-((t+b)/(t-b)),-((f+n)/(f-n)), 1\n\u00a0\u00a0\u00a0\u00a0);\n}\n```", "```cpp\nmat4 lookAt(const vec3& position, const vec3& target, \n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0const vec3& up) {\n\u00a0\u00a0\u00a0\u00a0vec3 f = normalized(target - position) * -1.0f;\n\u00a0\u00a0\u00a0\u00a0vec3 r = cross(up, f); // Right handed\n\u00a0\u00a0\u00a0\u00a0if (r == vec3(0, 0, 0)) {\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0return mat4(); // Error\n\u00a0\u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0normalize(r);\n\u00a0\u00a0\u00a0\u00a0vec3 u = normalized(cross(f, r)); // Right handed\n\u00a0\u00a0\u00a0\u00a0vec3 t = vec3(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-dot(r, position),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-dot(u, position),\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0-dot(f, position)\n\u00a0\u00a0\u00a0\u00a0);\n\u00a0\u00a0\u00a0\u00a0return mat4(\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0// Transpose upper 3x3 matrix to invert it\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0r.x, u.x, f.x, 0,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0r.y, u.y, f.y, 0,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0r.z, u.z, f.z, 0,\n\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0t.x, t.y, t.z, 1\n\u00a0\u00a0\u00a0\u00a0);\n}\n```"]