["```cpp\nint main(int argc, char *argv[]) \n{ \n   QGuiApplication app(argc, argv); \n\n   QQmlApplicationEngine engine; \n   engine.load(QUrl(QStringLiteral(\"qrc:/main.qml\"))); \n   if (engine.rootObjects().isEmpty()) \n         return -1; \n\n   return app.exec(); \n} \n```", "```cpp\nimport QtQuick 2.6 \n```", "```cpp\n    Rectangle { \n       property alias mouseArea: mouseArea \n       property alias textEdit: textEdit \n\n       width: 360 \n       height: 360 \n       ... \n```", "```cpp\n    MouseArea { \n        id: mouseArea \n        anchors.fill: parent \n    } \n\n    TextEdit { \n        id: textEdit \n        text: qsTr(\"Enter some text...\") \n        verticalAlignment: Text.AlignVCenter \n        anchors.top: parent.top \n        anchors.horizontalCenter: parent.horizontalCenter \n        anchors.topMargin: 20 \n        Rectangle { \n            anchors.fill: parent \n            anchors.margins: -10 \n            color: \"transparent\" \n            border.width: 1 \n        } \n    } \n```", "```cpp\nimport QtQuick 2.6 \nimport QtQuick.Window 2.2 \n\nWindow { \n    visible: true \n    width: 640 \n    height: 480 \n    title: qsTr(\"Hello World\") \n\n    MainForm { \n        anchors.fill: parent \n        mouseArea.onClicked: { \n            console.log(qsTr('Clicked on background. Text: \"' + \n            textEdit.text + '\"')) \n        } \n    } \n} \n```", "```cpp\nimport QtQuick.Controls 2.2\n```", "```cpp\nimport QtQuick 2.6 \nimport QtQuick.Window 2.2 \n\nWindow { \n    id: window \n    visible: true \n    width: 800 \n    height: 600 \n    title: qsTr(\"My App\") \n} \n```", "```cpp\nWindow { \n    id: window \n    visible: true \n    width: 800 \n    height: 600 \n    title: qsTr(\"My App\") \n\n    MainForm \n    { \n        anchors.fill: parent \n\n        loginMouseArea.onClicked: \n        { \n            console.log(\"Login pressed\"); \n        } \n    } \n} \n```", "```cpp\nemailTouch.onClicked: \n{ \n    emailDisplay.visible = false;      // Hide emailDisplay \n    emailInput.forceActiveFocus();     // Focus emailInput \n    Qt.inputMethod.show();       // Activate virtual keyboard \n} \n\nemailInput.onFocusChanged: \n{ \n    if (emailInput.focus == false && emailInput.text == \"\") \n    { \n        emailDisplay.visible = true;   // Show emailDisplay if \n        emailInput is empty when loses focus \n    } \n} \n```", "```cpp\npasswordTouch.onClicked: \n{ \n    passwordDisplay.visible = false;   // Hide passwordDisplay \n    passwordInput.forceActiveFocus();  // Focus passwordInput \n    Qt.inputMethod.show();       // Activate virtual keyboard \n} \n\npasswordInput.onFocusChanged: \n{ \n    if (passwordInput.focus == false && passwordInput.text == \"\") \n    { \n        passwordDisplay.visible = true;      // Show passwordDisplay if  \n        passwordInput is empty when loses focus \n    } \n} \n```"]