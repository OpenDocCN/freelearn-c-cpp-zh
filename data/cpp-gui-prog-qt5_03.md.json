["```cpp\nSELECT * FROM user;\n```", "```cpp\nSELECT username FROM user;\n```", "```cpp\nSELECT username, password FROM user WHERE id = 1;\n```", "```cpp\nINSERT INTO user (username, password) VALUES (\"test2\", \"123456\");\n```", "```cpp\nUPDATE user SET username = \"test1\", password = \"1234321\" WHERE id = 1;\n```", "```cpp\nDELETE FROM user WHERE id = 1;\n```", "```cpp\nSELECT my_user.username, department.name FROM (SELECT * FROM user WHERE deptID = 1) AS my_user INNER JOIN department ON department.id = my_user.deptID AND my_user.status = 0 \n```", "```cpp\nSELECT * FROM user WHERE deptID = 1 \n```", "```cpp\n(SELECT * FROM user WHERE deptID = 1) AS my_user INNER JOIN department ON department.id = my_user.deptID AND my_user.status = 0 \n```", "```cpp\nSELECT my_user.username, department.name FROM  \n```", "```cpp\nQT += core sql \n```", "```cpp\n#include <QCoreApplication> \nint main(int argc, char *argv[]) \n{ \n   QCoreApplication a(argc, argv); \n   return a.exec(); \n} \n```", "```cpp\n#include <QCoreApplication> \n#include <QtSql> \n#include <QSqlDatabase> \n#include <QSqlQuery> \n#include <QDebug> \nint main(int argc, char *argv[]) \n{ \n   QCoreApplication a(argc, argv); \n   return a.exec(); \n} \n```", "```cpp\nint main(int argc, char *argv[]) \n{ \n   QCoreApplication a(argc, argv); \n   QSqlDatabase db = QSqlDatabase::addDatabase(\"QMYSQL\"); \n   db.setHostName(\"127.0.0.1\"); \n   db.setPort(3306); \n   db.setDatabaseName(\"test\"); \n   db.setUserName(\"testuser\"); \n   db.setPassword(\"testpass\"); \n   if (db.open()) \n   { \n         qDebug() << \"Connected!\"; \n   } \n   else \n   { \n         qDebug() << \"Failed to connect.\"; \n         return 0; \n   } \n   return a.exec(); \n} \n```", "```cpp\nQString command = \"SELECT name FROM department\"; \nQSqlQuery query(db); \nif (query.exec(command)) \n{ \n   while(query.next()) \n   { \n         QString name = query.value(\"name\").toString(); \n         qDebug() << name; \n   } \n} \n```", "```cpp\nQString command = \"SELECT my_user.username, department.name AS deptname FROM (SELECT * FROM user WHERE status = 0) AS my_user INNER JOIN department ON department.id = my_user.deptID\"; \nQSqlQuery query(db); \nif (query.exec(command)) \n{ \n   while(query.next()) \n   { \n         QString username = query.value(\"username\").toString(); \n         QString department = query.value(\"deptname\").toString(); \n         qDebug() << username << department; \n   } \n} \n```", "```cpp\n#ifndef MAINWINDOW_H \n#define MAINWINDOW_H \n\n#include <QMainWindow> \n\n#include <QtSql> \n#include <QSqlDatabase> \n#include <QSqlQuery> \n#include <QDebug> \n#include <QMessageBox> \n```", "```cpp\nvoid MainWindow::on_loginButton_clicked() \n{ \n   QString username = ui->userInput->text(); \n   QString password = ui->passwordInput->text(); \n   qDebug() << username << password; \n} \n```", "```cpp\nMainWindow::MainWindow(QWidget *parent) : \n   QMainWindow(parent), \n   ui(new Ui::MainWindow) \n{ \n   ui->setupUi(this); \n\n   db = QSqlDatabase::addDatabase(\"QMYSQL\"); \n   db.setHostName(\"127.0.0.1\"); \n   db.setPort(3306); \n   db.setDatabaseName(\"test\"); \n   db.setUserName(\"testuser\"); \n   db.setPassword(\"testpass\"); \n\n   if (db.open()) \n   { \n         qDebug() << \"Connected!\"; \n   } \n   else \n   { \n         qDebug() << \"Failed to connect.\"; \n   } \n}\n```", "```cpp\nprivate: \n   Ui::MainWindow *ui; \n QSqlDatabase db; \n```", "```cpp\nvoid MainWindow::on_loginButton_clicked() \n{ \n   QString username = ui->userInput->text(); \n   QString password = ui->passwordInput->text(); \n\n   qDebug() << username << password; \n\n   QString command = \"SELECT * FROM user WHERE username = '\" + username \n   + \"' AND password = '\" + password + \"' AND status = 0\"; \n   QSqlQuery query(db); \n   if (query.exec(command)) \n   { \n         if (query.size() > 0) \n         { \n               QMessageBox::information(this, \"Login success.\", \"You \n               have successfully logged in!\"); \n         } \n         else \n         { \n               QMessageBox::information(this, \"Login failed.\", \"Login \n               failed. Please try again...\"); \n         } \n   } \n} \n```"]