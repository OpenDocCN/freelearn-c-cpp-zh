["```cpp\n#include <iostream>\n#include <thread>\n#include <mutex>\n#include <vector>\n#include <random>\n\nusing namespace std;\n\n// --- Globals\nmutex values_mtx;\nmutex cout_mtx;\nvector<int> values;\n```", "```cpp\nint main() {\n    values.push_back(42);\n```", "```cpp\n    thread tr1(threadFnc, 1);\n    thread tr2(threadFnc, 2);\n    thread tr3(threadFnc, 3);\n    thread tr4(threadFnc, 4);\n```", "```cpp\n\n    tr1.join();\n    tr2.join();\n    tr3.join();\n    tr4.join();\n```", "```cpp\n\n    cout << \"Input: \" << values[0] << \", Result 1: \" << values[1] << \", Result 2: \" << values[2] << \", Result 3: \" << values[3] << \", Result 4: \" << values[4] << \"n\";\n\n    return 1;\n}\n```", "```cpp\nvoid threadFnc(int tid) {\n    cout_mtx.lock();\n    cout << \"Starting thread \" << tid << \".n\";\n    cout_mtx.unlock();\n```", "```cpp\n    values_mtx.lock();\n    int val = values[0];\n    values_mtx.unlock();\n```", "```cpp\n    int rval = randGen(0, 10);\n    val += rval;\n```", "```cpp\n\n    cout_mtx.lock();\n    cout << \"Thread \" << tid << \" adding \" << rval << \". New value: \" << val << \".n\";\n    cout_mtx.unlock();\n\n    values_mtx.lock();\n    values.push_back(val);\n    values_mtx.unlock();\n}\n```", "```cpp\nint randGen(const int& min, const int& max) {\n    static thread_local mt19937 generator(hash<thread::id>()(this_thread::get_id()));\n    uniform_int_distribution<int> distribution(min, max);\n    return distribution(generator)\n}\n```", "```cpp\nGCC := g++\n\nOUTPUT := ch01_mt_example\nSOURCES := $(wildcard *.cpp)\nCCFLAGS := -std=c++11 -pthread\n\nall: $(OUTPUT)\n\n$(OUTPUT):\n    $(GCC) -o $(OUTPUT) $(CCFLAGS) $(SOURCES)\n\nclean:\n    rm $(OUTPUT)\n\n.PHONY: all\n```", "```cpp\n$ make\ng++ -o ch01_mt_example -std=c++11 ch01_mt_example.cpp\n```", "```cpp\n$ ./ch01_mt_example.exe\n\nStarting thread 1.\n\nThread 1 adding 8\\. New value: 50.\n\nStarting thread 2.\n\nThread 2 adding 2\\. New value: 44.\n\nStarting thread 3.\n\nStarting thread 4.\n\nThread 3 adding 0\\. New value: 42.\n\nThread 4 adding 8\\. New value: 50.\n\nInput: 42, Result 1: 50, Result 2: 44, Result 3: 42, Result 4: 50\n```", "```cpp\nstruct result {\n    int tid;\n    int result;\n};\n```"]