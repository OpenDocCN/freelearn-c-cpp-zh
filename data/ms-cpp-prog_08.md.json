["```cpp\ngit clone https://github.com/cucumber/cucumber-cpp.git\n```", "```cpp\nsudo apt install ruby\n```", "```cpp\nruby --version\n```", "```cpp\nsudo apt install ruby-dev\n```", "```cpp\nsudo gem install bundler\nbundle install\n```", "```cpp\ngit submodule init\ngit submodule update\n```", "```cpp\nsudo apt install ninja-build\nsudo apt-get install libboost-all-dev\n```", "```cpp\nsudo ./travis.sh\n```", "```cpp\ngit submodule init\ngit submodule update\ncmake -E make_directory build\ncmake -E chdir build cmake --DCUKE_ENABLE_EXAMPLES=on ..\ncmake --build build\ncmake --build build --target test\ncmake --build build --target features\n```", "```cpp\n1   # language: en\n2\n3   Feature: The Facebook application should authenticate user login.\n4\n5     Scenario: Successful Login\n6        Given I navigate to Facebook login page https://www.facebook.com\n7        And I type jegan@tektutor.org as Email\n8        And I type mysecretpassword as Password\n9        When I click the Login button\n10       Then I expect Facebook Home Page after Successful Login\n```", "```cpp\n1   # language: en\n```", "```cpp\ncucumber -i18n help\n```", "```cpp\ncucumber --init\n```", "```cpp\nmkdir src\ncd HelloBDD\ntouch CMakeLists.txt\ntouch features/hello.feature\ntouch features/step_definitions/cucumber.wire\ntouch features/step_definitions/HelloBDDSteps.cpp\ntouch src/Hello.h\ntouch src/Hello.cpp\n```", "```cpp\n# language: en\n\nFeature: Application should be able to print greeting message Hello BDD!\n\n   Scenario: Should be able to greet with Hello BDD! message\n      Given an instance of Hello class is created\n      When the sayHello method is invoked\n      Then it should return \"Hello BDD!\"\n```", "```cpp\nhost: localhost\nport: 3902\n```", "```cpp\n#include <gtest/gtest.h>\n#include <cucumber-cpp/autodetect.hpp>\n```", "```cpp\nstruct HelloCtx {\n     Hello *ptrHello;\n     string actualResponse;\n};\n```", "```cpp\nGiven an instance of Hello class is created\n```", "```cpp\nGIVEN(\"^an instance of Hello class is created$\")\n{\n       ScenarioScope<HelloCtx> context;\n       context->ptrHello = new Hello();\n}\n```", "```cpp\nWhen the sayHello method is invoked\n```", "```cpp\nWHEN(\"^the sayHello method is invoked$\")\n{\n       ScenarioScope<HelloCtx> context;\n       context->actualResponse = context->ptrHello->sayHello();\n}\n```", "```cpp\n#include <iostream>\n#include <string>\nusing namespace std;\n\nclass Hello {\npublic:\n       string sayHello();\n};\n```", "```cpp\n#include \"Hello.h\"\n\nstring Hello::sayHello() {\n     return \"Hello BDD!\";\n}\n```", "```cpp\ncmake --build  build\n```", "```cpp\ncmake --build build\nbuild/HelloBDD/HelloBDDSteps > /dev/null &\ncucumber HelloBDD\n```", "```cpp\nbuild/HelloBDD/HelloBDDSteps > /dev/null &\n```", "```cpp\ncucumber --dry-run \n```", "```cpp\nmkdir RPNCalculator\ncd RPNCalculator\ncucumber --init\ntree\nmkdir src\ntree\n```", "```cpp\ntouch features/rpncalculator.feature\ntouch features/step_definitions/RPNCalculatorSteps.cpp\ntouch features/step_definitions/cucumber.wire\ntouch src/RPNCalculator.h\ntouch src/RPNCalculator.cpp\ntouch CMakeLists.txt\n```", "```cpp\nhost: localhost\nport: 3902\n```", "```cpp\ncmake --build build\n```", "```cpp\nbuild/RPNCalculator/RPNCalculatorSteps &\n\ncucumber RPNCalculator\n```", "```cpp\nThen(/^the actualResult should match the (d+).(d+)$/) do |arg1, arg2|\n pending # Write code here that turns the phrase above into concrete actions\nend \n```", "```cpp\ncmake --build  build\n```", "```cpp\ncmake --build build\n build/RPNCalculator/RPNCalculatorSteps &\n\ncucumber RPNCalculator\n```", "```cpp\ncmake --build build\n build/RPNCalculator/RPNCalculatorSteps &\n\ncucumber RPNCalculator\n```", "```cpp\nelse if ( *token == \"/\" ) {\n      secondNumber = numberStack.top();\n      numberStack.pop();\n      firstNumber = numberStack.top();\n      numberStack.pop();\n\n      result = firstNumber / secondNumber;\n\n      numberStack.push ( result );\n}\n\n```", "```cpp\ncmake --build build\nbuild/RPNCalculator/RPNCalculatorSteps &\ncucumber RPNCalculator\n```", "```cpp\nbuild/RPNCalculator/RPNCalculatorSteps &\ncucumber RPNCalculator\n```"]