- en: 'Section 2: Implementing Object-Oriented Concepts in C++'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2节：在C++中实现面向对象的概念
- en: The goal of this section is to understand how to implement OO designs using
    both C++ language features and proven programming techniques. C++ can be used
    for many paradigms of coding; programmers must strive to program in an OO fashion
    in C++ (it's not automatic). This is the largest section of the book, as understanding
    how to map language features and implementation techniques to OO concepts is paramount.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的目标是了解如何使用C++语言特性和成熟的编程技术来实现OO设计。C++可以用于许多编码范式；程序员必须努力以OO方式编程（这不是自动的）。这是本书最大的部分，因为理解如何将语言特性和实现技术映射到OO概念是至关重要的。
- en: The first chapter in this section explores classes in great detail, beginning
    by describing the OO concepts of encapsulation and information hiding. Language
    features such as member functions, the this pointer, access regions in detail,
    constructors in detail (including the copy constructor), destructor, qualifiers
    on member functions (const, static, inline), and qualifiers on data members (const,
    static) are reviewed in depth.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的第一章详细探讨了类，首先描述了封装和信息隐藏的面向对象概念。语言特性，如成员函数、this指针、详细访问区域、详细构造函数（包括复制构造函数）、析构函数、成员函数的限定符（const、static、inline）以及数据成员的限定符（const、static）都得到了深入审查。
- en: The next chapter in this section tackles single inheritance basics with the
    OO concepts of generalization and specialization, detailing inherited constructors
    through the member initialization list, the order of construction and destruction,
    and understanding inherited access regions. This chapter pushes deeper by exploring
    public versus protected and private base classes and how these language features
    change the OO meaning of inheritance.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的下一章介绍了单一继承的基础知识，涉及泛化和特化的OO概念，详细介绍了通过成员初始化列表继承的构造函数、构造和析构的顺序，以及理解继承的访问区域。本章通过探讨公共与受保护和私有基类以及这些语言特性如何改变继承的OO含义，深入挖掘了这一主题。
- en: The subsequent chapter delves into the OO concept of polymorphism with respect
    to understanding the concept as well as its implementation in C++ using virtual
    functions. Dynamic binding of method to operation is examined. The virtual function
    table is explored to explain runtime binding. The next chapter explains abstract
    classes in detail, pairing the OO concept with its implementation using pure virtual
    functions. The OO concept of an interface (not explicitly in C++) is introduced
    and a method for implementation is reviewed. Casting up and down the inheritance
    hierarchy completes this chapter.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的章节深入探讨了关于多态性的OO概念，以及在C++中使用虚函数实现该概念。方法的动态绑定被审查。虚函数表被探讨以解释运行时绑定。下一章详细解释了抽象类，将OO概念与使用纯虚函数的实现配对。介绍了接口的OO概念（在C++中没有明确表示），并审查了一种实现方法。向上和向下继承层次的转换完成了本章。
- en: The next chapter explores multiple inheritance and the potential issues that
    may arise from using this feature. Virtual base classes are detailed as well as
    the OO concept of a discriminator to help determine if multiple inheritance is
    the best design for a given scenario or if another may exist.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的一章探讨了多重继承以及可能出现的问题。虚基类以及判别器的OO概念也被详细介绍，以帮助确定多重继承是否是给定场景的最佳设计，或者是否存在其他设计。
- en: The final chapter in this section introduces the concepts of association, aggregation
    and composition and how to implement these common object relationships using pointers
    or references, sets of pointers, or embedded objects.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的最后一章介绍了关联、聚合和组合的概念，以及如何使用指针或引用、指针集或嵌入对象来实现这些常见的对象关系。
- en: 'This section includes the following chapters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本节包括以下章节：
- en: '[*Chapter 5*](B15702_05_Final_NM_ePub.xhtml#_idTextAnchor199)*, Exploring Classes
    in Detail*'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第5章*]，详细探讨类'
- en: '[*Chapter 6*](B15702_06_Final_NM_ePub.xhtml#_idTextAnchor262)*, Implementing
    Hierarchies with Single Inheritance*'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第6章*]，使用单一继承实现层次结构'
- en: '[*Chapter 7*](B15702_07_Final_NM_ePub.xhtml#_idTextAnchor298)*, Utilizing Dynamic
    Binding through Polymorphism*'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第7章*]，通过多态性利用动态绑定'
- en: '[*Chapter 8*](B15702_08_Final_NM_ePub.xhtml#_idTextAnchor335)*, Mastering Abstract
    Classes*'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第8章*]，掌握抽象类'
- en: '[*Chapter 9*](B15702_09_Final_NM_ePub.xhtml#_idTextAnchor361)*, Exploring Multiple
    Inheritance*'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第9章*]，探索多重继承'
- en: '[*Chapter 10*](B15702_10_Final_NM_ePub.xhtml#_idTextAnchor386)*, Implementing
    Association, Aggregation and Composition*'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第10章*]，实现关联、聚合和组合'
