- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Functional programming is a style of constructing the elements and structure
    of a computer program by composing pure functions, avoiding shared state, mutable
    data, and side-effects, like we usually see in mathematics. The variable in the
    code function represents the value of the function parameter, and it is similar
    to the mathematical function. The idea is that a programmer defines the functions
    that contain the expression, definition, and the parameters that can be expressed
    by a variable to solve problems.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 函数式编程是一种通过组合纯函数构建计算机程序的元素和结构的风格，避免共享状态、可变数据和副作用，就像我们通常在数学中看到的那样。代码函数中的变量表示函数参数的值，并且类似于数学函数。这个想法是程序员定义包含表达式、定义和可以用变量表示的参数的函数来解决问题。
- en: Functional programming is declarative rather than imperative, which means programming
    is done with expressions or declarations instead of statements. The application
    state of functional programming flows through pure functions, so it avoids the
    side effect. In contrast to imperative programming, the application state is usually
    shared and collocated with methods in objects. In imperative programming, the
    expressions are evaluated, and the resulting value is assigned to variables. For
    instance, when we group a series of expressions into a function, the resulting
    value depends upon the state of variables at that point in time. Because of the
    continuous changes in state, the order of evaluation matters. In functional programming,
    destructive assignment is forbidden, and each time an assignment happens, a new
    variable is induced. Best of all, functional code tends to be more concise and
    predictable, and easier to test than imperative or object-oriented code.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 函数式编程是声明式的而不是命令式的，这意味着编程是通过表达式或声明而不是语句完成的。函数式编程的应用状态通过纯函数流动，因此它避免了副作用。与命令式编程相比，应用状态通常与对象中的方法共享和共存。在命令式编程中，表达式被评估，并且结果值被赋给变量。例如，当我们将一系列表达式组合成一个函数时，结果值取决于该时刻变量的状态。由于状态不断变化，评估的顺序很重要。在函数式编程中，禁止破坏性赋值，每次赋值发生时，都会引入一个新变量。最重要的是，函数式代码往往更简洁、可预测，比命令式或面向对象的代码更容易测试。
- en: Although there are some specifically designed languages for functional programming,
    such as Haskell and Scala, we can also use C++ to accomplish designing functional
    programming, as we will discuss throughout this book.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管有一些专门设计用于函数式编程的语言，比如Haskell和Scala，我们也可以使用C++来完成函数式编程的设计，正如我们将在本书中讨论的那样。
- en: What this book covers
  id: totrans-4
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书内容
- en: '[Chapter 1](58c8c3cc-432a-4664-be4d-a78917b16f15.xhtml), *Diving into Modern
    C++*, provides an overview of modern C++, including the implementation of several
    new features in modern C++, such as the auto keyword, decltype keyword, null pointer,
    range-based for loop, standard template library, Lambda expressions, smart pointer,
    and tuple.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 《第1章》《现代C++的深入探讨》概述了现代C++，包括现代C++中几个新特性的实现，比如auto关键字、decltype关键字、空指针、基于范围的for循环、标准模板库、Lambda表达式、智能指针和元组。
- en: '[Chapter 2](a1baf007-8f40-4616-8718-9887f95120b0.xhtml), *Manipulating Functions
    in Functional Programming*, covers the essential techniques in functional programming
    to manipulate a function; they are the first-class function technique, pure function,
    and currying technique. By applying the first-class function, we can treat our
    function as a data, which means it can be assigned to any variable instead of
    only being invoked as function. We also will apply the pure function technique
    so the function won''t produce the side effect anymore. Moreover, to simplify
    the function, we can apply currying techniques, which will reduce the multiple
    arguments function by evaluating a sequence of functions with a single argument
    in each function.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 《第2章》《在函数式编程中操作函数》介绍了函数式编程中操作函数的基本技术；它们是第一类函数技术、纯函数和柯里化技术。通过应用第一类函数，我们可以将函数视为数据，这意味着它可以分配给任何变量，而不仅仅是作为函数调用。我们还将应用纯函数技术，使函数不再产生副作用。此外，为了简化函数，我们可以应用柯里化技术，通过在每个函数中评估一系列带有单个参数的函数来减少多参数函数。
- en: '[Chapter 3](cca47631-1705-473f-a0b6-77edc30e8161.xhtml), *Applying Immutable
    State to the Function*, explains how we implement the immutable object for the
    mutable object. We will also delve into first-class functions and pure functions,
    which we discussed in the previous chapter, to produce an immutable object.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 《第3章》《将不可变状态应用于函数》解释了我们如何为可变对象实现不可变对象。我们还将深入研究第一类函数和纯函数，这些内容在上一章中讨论过，以产生一个不可变对象。
- en: '[Chapter 4](7c3fb034-5951-4003-905f-48dd745a1c6f.xhtml), *Repeating Method
    Invocation Using Recursive Algorithm*, discusses the difference between iteration
    and recursion and why recursion techniques are better for functional programming.
    We will also enumerate the three kinds of recursion: functional, procedural, and
    backtracking recursion.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 《第4章》《使用递归算法重复方法调用》讨论了迭代和递归的区别，以及为什么递归技术对函数式编程更好。我们还将列举三种递归：函数式、过程式和回溯递归。
- en: '[Chapter 5](aaf78dc0-36c9-41f9-bf10-efcbd979c096.xhtml), *Procrastinating the
    Execution Process Using Lazy Evaluation*, explains how to delay the process of
    execution to get more efficient code. We will also implement caching and memoization
    techniques to make our code run faster.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 《第5章》《使用惰性求值延迟执行过程》解释了如何延迟执行过程以获得更高效的代码。我们还将实现缓存和记忆化技术，使我们的代码运行更快。
- en: '[Chapter 6](ba59fb8e-d739-4a1b-a0f9-628ece9833e3.xhtml), *Optimizing Code with
    Metaprogramming*, talks about running code with compile-time execution by using
    metaprogramming to optimize code. We will also discuss how to refactor flow control
    into template metaprogramming.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[第6章](ba59fb8e-d739-4a1b-a0f9-628ece9833e3.xhtml)，*使用元编程优化代码*，讨论了使用元编程在编译时执行代码以优化代码。我们还将讨论如何将流程控制重构为模板元编程。'
- en: '[Chapter 7](2093af96-36ce-46a4-b90f-ee9876987290.xhtml), *Running Parallel
    Execution Using Concurrency*, walks us through running multiple threads in C++
    programming, as well as synchronizing threads to avoid deadlocks. We will also
    apply thread processing in a Windows operating system.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[第7章](2093af96-36ce-46a4-b90f-ee9876987290.xhtml)，*使用并发运行并行执行*，向我们展示了如何在C++编程中运行多个线程，以及如何同步线程以避免死锁。我们还将在Windows操作系统中应用线程处理。'
- en: '[Chapter 8](7017df08-5f1c-403e-b85c-b3869cd1866c.xhtml), *Creating and Debugging
    Application in Functional Approach*, elaborates all the techniques we discussed
    in the previous chapters to design a functional programming. Also, we will try
    to debug code to find a solution if there are unexpected results or the program
    crashes in the middle of execution.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[第8章](7017df08-5f1c-403e-b85c-b3869cd1866c.xhtml)，*使用函数式方法创建和调试应用程序*，详细介绍了我们在前几章中讨论的所有技术，以设计函数式编程。此外，我们将尝试调试代码，以找到解决方案，如果出现意外结果或程序在执行中崩溃。'
- en: What you need for this book
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 您需要什么来阅读本书
- en: 'To walk through this book and successfully compile all the source code examples,
    you will require a personal computer that runs Microsoft Windows 8.1 (or later)
    and contains the following software:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要阅读本书并成功编译所有源代码示例，您需要一台运行Microsoft Windows 8.1（或更高版本）的个人电脑，并包含以下软件：
- en: The latest version of GCC, which supports C++11, C++14, and C++17 (during the
    writing of this book, the latest version was GCC v7.1.0)
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GCC的最新版本，支持C++11、C++14和C++17（在撰写本书时，最新版本是GCC v7.1.0）
- en: The Microsoft C++ compiler provided in Microsoft Visual Studio 2017 for supporting
    C++11, C++14, and C++17 (for [Chapter 7](2093af96-36ce-46a4-b90f-ee9876987290.xhtml),
    *Running Parallel Execution Using Concurrency*)
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Microsoft Visual Studio 2017提供的Microsoft C++编译器，支持C++11、C++14和C++17（适用于[第7章](2093af96-36ce-46a4-b90f-ee9876987290.xhtml)，*使用并发运行并行执行*）
- en: Code::Blocks v16.01 (all sample code is written using the Code::Blocks IDE;
    however, it's optional to use this IDE)
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Code::Blocks v16.01（所有示例代码均使用Code::Blocks IDE编写；但是，使用此IDE是可选的）
- en: Who this book is for
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书适合谁
- en: This book is for C++ developers comfortable with OOP who are interested in learning
    how to apply the functional paradigm to create robust and testable apps.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本书适用于熟悉面向对象编程的C++开发人员，他们有兴趣学习如何应用函数式范式来创建健壮且可测试的应用程序。
- en: Conventions
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 约定
- en: In this book, you will find a number of text styles that distinguish between
    different kinds of information. Here are some examples of these styles and an
    explanation of their meaning.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书中，您将找到一些文本样式，用于区分不同类型的信息。以下是一些这些样式的示例及其含义的解释。
- en: 'Code words in text, database table names, folder names, filenames, file extensions,
    pathnames, dummy URLs, and user input are shown as follows: "the `auto` keyword
    can also be applied to a function to deduce a function''s return type automatically."'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 文本中的代码词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL和用户输入显示如下："`auto`关键字也可以应用于函数，以自动推断函数的返回类型。"
- en: 'A block of code is set as follows:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块设置如下：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望引起您对代码块的特定部分的注意时，相关行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**New terms** and **important words** are shown in bold.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**新术语**和**重要单词**以粗体显示。'
- en: Warnings or important notes appear like this.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 警告或重要提示会出现在这样的形式。
- en: Tips and tricks appear like this.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 提示和技巧会出现在这样的形式。
- en: Reader feedback
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读者反馈
- en: Feedback from our readers is always welcome. Let us know what you think about
    this book--what you liked or disliked. Reader feedback is important for us as
    it helps us develop titles that you will really get the most out of.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。请告诉我们您对本书的看法--您喜欢或不喜欢的地方。读者的反馈对我们很重要，因为它有助于我们开发出您真正能够充分利用的标题。
- en: To send us general feedback, simply e-mail [feedback@packtpub.com](mailto:feedback@packtpub.com),
    and mention the book's title in the subject of your message.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 要向我们发送一般反馈，只需发送电子邮件至[feedback@packtpub.com](mailto:feedback@packtpub.com)，并在消息主题中提及书名。
- en: If there is a topic that you have expertise in and you are interested in either
    writing or contributing to a book, see our author guide at [www.packtpub.com/authors](http://www.packtpub.com/authors).
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您在某个专题上有专业知识，并且有兴趣撰写或为书籍做出贡献，请参阅我们的作者指南[www.packtpub.com/authors](http://www.packtpub.com/authors)。
- en: Customer support
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 客户支持
- en: Now that you are the proud owner of a Packt book, we have a number of things
    to help you to get the most from your purchase.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 现在您是Packt书籍的自豪所有者，我们有一些东西可以帮助您充分利用您的购买。
- en: Downloading the example code
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码
- en: You can download the example code files for this book from your account at [http://www.packtpub.com](http://www.packtpub.com).
    If you purchased this book elsewhere, you can visit [http://www.packtpub.com/support](http://www.packtpub.com/support)
    and register to have the files e-mailed directly to you.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从[http://www.packtpub.com](http://www.packtpub.com)的帐户中下载本书的示例代码文件。如果您在其他地方购买了本书，您可以访问[http://www.packtpub.com/support](http://www.packtpub.com/support)并注册，以便直接通过电子邮件接收文件。
- en: 'You can download the code files by following these steps:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以按照以下步骤下载代码文件：
- en: Log in or register to our website using your e-mail address and password.
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用您的电子邮件地址和密码登录或注册到我们的网站。
- en: Hover the mouse pointer on the SUPPORT tab at the top.
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将鼠标指针悬停在顶部的SUPPORT标签上。
- en: Click on Code Downloads & Errata.
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 单击“代码下载和勘误”。
- en: Enter the name of the book in the Search box.
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在搜索框中输入书名。
- en: Select the book for which you're looking to download the code files.
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择要下载代码文件的书籍。
- en: Choose from the drop-down menu where you purchased this book from.
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从下拉菜单中选择您购买本书的地点。
- en: Click on Code Download.
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“代码下载”。
- en: 'Once the file is downloaded, please make sure that you unzip or extract the
    folder using the latest version of:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 文件下载后，请确保使用最新版本的以下软件解压缩文件夹：
- en: WinRAR / 7-Zip for Windows
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Windows的WinRAR / 7-Zip
- en: Zipeg / iZip / UnRarX for Mac
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Mac的Zipeg / iZip / UnRarX
- en: 7-Zip / PeaZip for Linux
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Linux的7-Zip / PeaZip
- en: The code bundle for the book is also hosted on GitHub at [https://github.com/PacktPublishing/LearningCPPFunctionalProgramming](https://github.com/PacktPublishing/LearningCPPFunctionalProgramming).
    We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 该书的代码包也托管在GitHub上，网址为[https://github.com/PacktPublishing/LearningCPPFunctionalProgramming](https://github.com/PacktPublishing/LearningCPPFunctionalProgramming)。我们还有来自丰富书籍和视频目录的其他代码包可供使用，网址为[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)。欢迎查看！
- en: Downloading the color images of this book
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载本书的彩色图像
- en: We also provide you with a PDF file that has color images of the screenshots/diagrams
    used in this book. The color images will help you better understand the changes
    in the output. You can download this file from [https://www.packtpub.com/sites/default/files/downloads/LearningCPPFunctionalProgramming_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/LearningCPPFunctionalProgramming_ColorImages.pdf).
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还为您提供了一个PDF文件，其中包含本书中使用的屏幕截图/图表的彩色图像。彩色图像将帮助您更好地理解输出的变化。您可以从[https://www.packtpub.com/sites/default/files/downloads/LearningCPPFunctionalProgramming_ColorImages.pdf](https://www.packtpub.com/sites/default/files/downloads/LearningCPPFunctionalProgramming_ColorImages.pdf)下载此文件。
- en: Errata
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 勘误
- en: Although we have taken every care to ensure the accuracy of our content, mistakes
    do happen. If you find a mistake in one of our books--maybe a mistake in the text
    or the code--we would be grateful if you could report this to us. By doing so,
    you can save other readers from frustration and help us improve subsequent versions
    of this book. If you find any errata, please report them by visiting [http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details of your errata. Once your errata are verified, your submission will
    be accepted and the errata will be uploaded to our website or added to any list
    of existing errata under the Errata section of that title.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们已经尽一切努力确保内容的准确性，但错误还是会发生。如果您在我们的书中发现错误——可能是文本或代码中的错误——我们将不胜感激地希望您能向我们报告。通过这样做，您可以帮助其他读者避免挫败感，并帮助我们改进本书的后续版本。如果您发现任何勘误，请访问[http://www.packtpub.com/submit-errata](http://www.packtpub.com/submit-errata)报告，选择您的书，点击勘误提交表格链接，并输入您的勘误详情。一旦您的勘误经过验证，您的提交将被接受，并且勘误将被上传到我们的网站或添加到该标题的勘误部分下的任何现有勘误列表中。
- en: To view the previously submitted errata, go to [https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)
    and enter the name of the book in the search field. The required information will
    appear under the Errata section.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看先前提交的勘误，请访问[https://www.packtpub.com/books/content/support](https://www.packtpub.com/books/content/support)，并在搜索框中输入书名。所需信息将出现在勘误部分下。
- en: Piracy
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 盗版
- en: Piracy of copyrighted material on the Internet is an ongoing problem across
    all media. At Packt, we take the protection of our copyright and licenses very
    seriously. If you come across any illegal copies of our works in any form on the
    Internet, please provide us with the location address or website name immediately
    so that we can pursue a remedy.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 互联网上侵犯版权的行为是各种媒体的持续问题。在Packt，我们非常重视版权和许可的保护。如果您在互联网上发现我们作品的任何非法副本，请立即向我们提供位置地址或网站名称，以便我们采取补救措施。
- en: Please contact us at [copyright@packtpub.com](mailto:copyright@packtpub.com)
    with a link to the suspected pirated material.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 请通过链接[copyright@packtpub.com](mailto:copyright@packtpub.com)向我们提供涉嫌盗版材料的链接。
- en: We appreciate your help in protecting our authors and our ability to bring you
    valuable content.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 我们感谢您帮助保护我们的作者和我们提供有价值内容的能力。
- en: Questions
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: If you have a problem with any aspect of this book, you can contact us at [questions@packtpub.com](mailto:questions@packtpub.com),
    and we will do our best to address the problem.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您对本书的任何方面有问题，可以通过[questions@packtpub.com](mailto:questions@packtpub.com)与我们联系，我们将尽力解决问题。
