- en: Cloud Storage
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 云存储
- en: In the previous chapter, we learned how to draw images on-screen using Qt. In
    this chapter, however, we are going learn something totally different, which is
    setting up our own file server and linking it to our Qt application.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一章中，我们学习了如何使用Qt在屏幕上绘制图像。然而，在本章中，我们将学习完全不同的东西，即设置我们自己的文件服务器并将其链接到我们的Qt应用程序。
- en: 'In this chapter, we will cover the following topics:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主题：
- en: Setting up the FTP server
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置FTP服务器
- en: Displaying the file list on the list view
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在列表视图上显示文件列表
- en: Uploading files to the FTP server
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将文件上传到FTP服务器
- en: Downloading files from the FTP server
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从FTP服务器下载文件
- en: Let's get started!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: Setting up the FTP server
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置FTP服务器
- en: In the following section, we will learn how to set up an FTP server, which stores
    all the files uploaded by a user and allows them to download them at any time.
    This section is not related to Qt, so if you already have a running FTP server,
    please skip this part and proceed to the next section of this chapter.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将学习如何设置FTP服务器，该服务器存储用户上传的所有文件，并允许他们随时下载。这一部分与Qt无关，因此如果您已经运行了FTP服务器，请跳过此部分并继续本章的下一部分。
- en: Introducing FTP
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍FTP
- en: '**FTP **is an acronym for **File Transfer Protocol**. FTP is used to transfer
    files from one computer to another on a network, usually over the internet. FTP
    is just one of the many different forms of cloud storage technology, but it is
    also a simple one that you can easily set up on your own computer.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**FTP**是**文件传输协议**的缩写。FTP用于在网络上从一台计算机传输文件到另一台计算机，通常是通过互联网。FTP只是云存储技术的众多形式之一，但它也是一种简单的形式，您可以轻松地在自己的计算机上设置。'
- en: There are many different FTP servers that have been developed by different groups
    of people for a specific operating system. In this section of the chapter, we
    will learn how to set up a FileZilla server, which runs on the Windows operating
    system. If you're running other operating systems such as GNU, Linux, or macOS,
    there are many other FTP server programs that you can use, such as VSFTP and Pure-FTPd.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多不同的FTP服务器是由不同的人群为特定操作系统开发的。在本章的这一部分，我们将学习如何设置运行在Windows操作系统上的FileZilla服务器。如果您运行其他操作系统，如GNU、Linux或macOS，还有许多其他FTP服务器程序可供使用，如VSFTP和Pure-FTPd。
- en: On Debian, Ubuntu, or other similar variants of Linux, running `sudo apt-get
    install vsftpd` on the Terminal will install and configure an FTP server. On macOS,
    open System Preferences from the Apple menu and select Sharing. Then, click on
    the Service tab and select FTP access. Finally, click the Start button to start
    running the FTP server.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在Debian、Ubuntu或其他类似的Linux变体上，在终端上运行`sudo apt-get install vsftpd`将安装和配置FTP服务器。在macOS上，从苹果菜单中打开“系统偏好设置”，然后选择“共享”。然后，点击“服务”选项卡，选择FTP访问。最后，点击“启动”按钮启动FTP服务器。
- en: If you already have a running FTP server, please skip to the next section, in
    which we'll start learning about C++ programming.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您已经运行了FTP服务器，请跳过到下一节，我们将开始学习C++编程。
- en: Downloading FileZilla
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载FileZilla
- en: 'FileZilla is really easy to set up and configure. It provides a fully functional
    and easy-to-use user interface and doesn''t require any prior experience to operate
    it. The first thing we need to do is download FileZilla. We will do it as follows:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: FileZilla真的很容易设置和配置。它提供了一个完全功能的、易于使用的用户界面，不需要任何先前的操作经验。我们需要做的第一件事是下载FileZilla。我们将按照以下步骤进行：
- en: Open up your browser and hop over to [https://filezilla-project.org](https://filezilla-project.org).
    You will see two download buttons located at the Home page.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开浏览器，跳转到[https://filezilla-project.org](https://filezilla-project.org)。您将在主页上看到两个下载按钮。
- en: 'Click on Download FileZilla Server and it will bring us to the download page:'
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击“下载FileZilla服务器”，它将带我们到下载页面：
- en: '![](img/4bfbf211-e454-4edf-bc21-d4658021c8eb.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](img/4bfbf211-e454-4edf-bc21-d4658021c8eb.png)'
- en: Once you're at the download page, click on the Download FileZilla Server button
    and start downloading the software. We're not going to use the FileZilla Client,
    so you don't have to download that. Once everything is ready, let's proceed to
    install the software.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦您到达下载页面，点击“下载FileZilla服务器”按钮并开始下载软件。我们不会使用FileZilla客户端，所以您不需要下载它。一切准备就绪后，让我们继续安装软件。
- en: Like most Windows software, the installation process is very straightforward.
    Keep everything as default and click Next all the way until the installation process
    begins. It will take a couple of minutes at most for the installation to complete.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 像大多数Windows软件一样，安装过程非常简单。保持一切默认，然后一直点击下一步，直到安装过程开始。安装过程最多只需要几分钟。
- en: 'Once it''s completed, click on the Close button and we''re done!:'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 完成后，点击“关闭”按钮，我们完成了！：
- en: '![](img/1f2e50ce-e947-4859-9cb8-7b4325f307d9.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1f2e50ce-e947-4859-9cb8-7b4325f307d9.png)'
- en: Setting up FileZilla
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置FileZilla
- en: Once you have installed FileZilla, the control panel will most likely open by
    itself.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 安装完FileZilla后，控制面板很可能会自动打开。
- en: Since this is the first time you have launched FileZilla, it will ask you to
    set up the server. Keep the server IP address as `127.0.0.1` (which means **localhost**)
    and the admin port to `14147`.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于这是您第一次启动FileZilla，它将要求您设置服务器。将服务器IP地址保持为`127.0.0.1`（即**localhost**），将管理员端口设置为`14147`。
- en: 'Key in your desired password for administrating the server and check on the
    Always connect to this server option. Press Connect and the FTP server will now
    start up! This is shown in the following screenshot:'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入您想要的服务器管理密码，并勾选“始终连接到此服务器”选项。点击连接，FTP服务器现在将启动！如下截图所示：
- en: '![](img/6c47f55c-7b14-4f7e-bb5f-43c5af4b817c.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](img/6c47f55c-7b14-4f7e-bb5f-43c5af4b817c.png)'
- en: 'After the FTP server has started running, we need to create a user account.
    Click on the fourth icon from the left to open up the Users dialog:'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: FTP服务器启动后，我们需要创建一个用户帐户。点击左侧的第四个图标打开“用户”对话框：
- en: '![](img/90d51fc3-b15a-43fd-afc2-b99511c8b1f6.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](img/90d51fc3-b15a-43fd-afc2-b99511c8b1f6.png)'
- en: Then, under the General page, click on the Add button located at the right side
    of the window. Create an account by setting a username and press OK.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在常规页面下，单击窗口右侧的添加按钮。通过设置用户名创建一个帐户，然后单击确定。
- en: 'We don''t have to set the user to any group for now, as user groups are only
    useful when you have many users that have the same privilege settings since it
    is easier to change all users settings at once or move users to different groups.
    Once you have created the user, check on the Password option and key in your desired
    password. It is always a good practice to put the password on your FTP account:'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们现在不必为用户设置任何组，因为用户组仅在您有许多具有相同特权设置的用户时才有用，因为这样可以更容易地一次更改所有用户的设置或将用户移动到不同的组中。创建用户后，选中密码选项并输入所需的密码。将密码放在您的FTP帐户上始终是一个好习惯：
- en: '![](img/93277ddc-baa0-4121-a281-25dcef5ebd9e.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/93277ddc-baa0-4121-a281-25dcef5ebd9e.png)'
- en: After that, we will proceed to the Shared folders page and add a shared directory
    for our newly created user.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，我们将继续到共享文件夹页面，并为我们新创建的用户添加一个共享目录。
- en: 'Make sure the Delete and Append options are checked so that files that have
    the same name can be replaced. We will be using that for updating our file list
    in a moment:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 确保删除和追加选项已选中，以便可以替换具有相同名称的文件。我们将在稍后使用它来更新我们的文件列表：
- en: '![](img/51573cbf-7f90-4144-8677-cba2ec6bad13.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](img/51573cbf-7f90-4144-8677-cba2ec6bad13.png)'
- en: 'If you click on the third icon from the left, the FileZilla Server options
    dialog will appear. You can basically configure everything here to suit your needs.
    For instance, if you don''t want to use the default port number `21`, you can
    simply change it on the options window, under the General settings page:'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果单击从左起的第三个图标，将出现FileZilla服务器选项对话框。您基本上可以在这里配置一切以满足您的需求。例如，如果您不想使用默认端口号`21`，您可以在选项窗口中简单地更改它，在常规设置页面下：
- en: '![](img/697d6dcd-114e-4477-bc2e-7437b0905d2a.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](img/697d6dcd-114e-4477-bc2e-7437b0905d2a.png)'
- en: 'You can also set the speed limit for all users or a specific user under the
    Speed Limits page. This can prevent your server from becoming low performance
    when many users are downloading huge files at the same time:'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您还可以在速度限制页面为所有用户或特定用户设置速度限制。这可以防止您的服务器在许多用户同时下载大文件时性能下降：
- en: '![](img/1868a1d7-c12b-482b-9536-b844f2e7d50c.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1868a1d7-c12b-482b-9536-b844f2e7d50c.png)'
- en: Next, let's proceed to create our Qt project!
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，让我们继续创建我们的Qt项目！
- en: Displaying the file list on the list view
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在列表视图上显示文件列表
- en: In the previous section, we successfully set up a FTP server and kept it running.
    In the following section, we will learn how to create an FTP client program that
    displays the file list, uploads files to the FTP server, and finally downloads
    files from it.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们成功地设置了一个FTP服务器并使其保持运行。在接下来的部分中，我们将学习如何创建一个FTP客户端程序，该程序显示文件列表，将文件上传到FTP服务器，最后从中下载文件。
- en: Setting up a project
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置项目
- en: 'As usual, let''s create a new project using **Qt Creator**. The following steps
    will help:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 像往常一样，让我们使用**Qt Creator**创建一个新项目。以下步骤将有所帮助：
- en: We can create a new project by going to File | New File or Project and selecting Qt
    Widgets Application.
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以通过转到文件|新文件或项目并选择Qt小部件应用程序来创建一个新项目。
- en: 'Once your project has been created, open your project (`.pro`) file and add
    the `network` keyword so that Qt knows that you need the Networking module in
    your project:'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建项目后，打开您的项目（`.pro`）文件，并添加`network`关键字，以便Qt知道您的项目需要网络模块：
- en: '[PRE0]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Setting up user interface
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置用户界面
- en: 'After that, open up `mainwindow.ui` and perform the following steps to design
    the upper part of our user interface for uploading files:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，打开`mainwindow.ui`并执行以下步骤来设计用户界面的上半部分以上传文件：
- en: 'Place a Labelthat says Upload File: on top of every other widget.'
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 放置一个标签，上面写着上传文件：放在其他小部件的顶部。
- en: Put a horizontal layout and two Push Buttons alongside it that say Open and
    Upload, under the Label respectively.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在标签下方放置一个水平布局和两个按钮，分别写着打开和上传。
- en: Place a Progress Bar under the Horizontal Layout.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在水平布局下放置一个进度条。
- en: 'Put a Horizontal Line followed by a Vertical Spacer at the bottom:'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在底部放置一个水平线，然后是垂直间隔器：
- en: '![](img/8a026044-0639-4540-af80-4de768b78ffa.jpg)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8a026044-0639-4540-af80-4de768b78ffa.jpg)'
- en: 'Next, we''re going to construct the bottom part of the user interface that
    is used for downloading files:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将构建用户界面的底部部分，用于下载文件：
- en: '![](img/3130468f-e520-4536-8be3-2b8c472857ee.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](img/3130468f-e520-4536-8be3-2b8c472857ee.jpg)'
- en: This time, our user interface is very similar to the upper part, except we have
    added a List View before the second Progress Barfor displaying the file list.
    We put everything on the same page for this example program so that it's simpler
    and less confusing to explain.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，我们的用户界面与上半部分非常相似，只是我们在第二个进度条之前添加了一个列表视图来显示文件列表。我们将所有内容放在同一页上，以便更简单和不易混淆地解释这个示例程序。
- en: Displaying the file list
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 显示文件列表
- en: Next, we will learn how to save and display the file list on the FTP server.
    Actually, the FTP server does provide the file list by default, and Qt was able
    to display it using the `qtftp` module back in older versions. However, since
    Version 5, Qt has completely dropped the `qtftp` module and this feature no longer
    exists.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将学习如何保存并显示FTP服务器上的文件列表。实际上，FTP服务器默认提供文件列表，并且Qt能够在旧版本中使用`qtftp`模块显示它。但是，自从版本5以来，Qt已经完全放弃了`qtftp`模块，这个功能不再存在。
- en: If you're still interested in the old `qtftp` module, you can still obtain its
    source code on GitHub by visiting the following link: [https://github.com/qt/qtftp](https://github.com/qt/qtftp)
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您仍然对旧的`qtftp`模块感兴趣，您仍然可以通过访问以下链接在GitHub上获取其源代码：[https://github.com/qt/qtftp](https://github.com/qt/qtftp)
- en: In Qt, we use the `QNetworkAccessManager` class to communicate with our FTP
    server so features that are specifically designed for FTP no longer work. But,
    don't worry, we will look into some other alternative methods to achieve the same
    result.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在Qt中，我们使用`QNetworkAccessManager`类与我们的FTP服务器通信，因此不再使用专门为FTP设计的功能。但是，不用担心，我们将研究一些其他替代方法来实现相同的结果。
- en: The best method, in my opinion, is using an online database to store the file
    list and its information (file size, format, status, and so on). If you're interested
    in learning how to connect your Qt application to a database, please refer to
    [Chapter 3](f726e000-7f3b-4631-9df1-ed2819ed5f9b.xhtml), *Database Connection*.
    However, for the sake of simplicity, we will use another method that works just
    fine but is less secure—by saving the file names directly on a text file and storing
    it on the FTP server.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，最好的方法是使用在线数据库来存储文件列表及其信息（文件大小、格式、状态等）。如果您有兴趣学习如何将Qt应用程序连接到数据库，请参阅[第3章](f726e000-7f3b-4631-9df1-ed2819ed5f9b.xhtml)，*数据库连接*。然而，为了简单起见，我们将使用另一种方法，它可以正常工作，但不够安全——直接将文件名保存在文本文件中，并将其存储在FTP服务器上。
- en: If you're doing a serious project for your client or company, please do not
    use this method. Check out [Chapter 3](f726e000-7f3b-4631-9df1-ed2819ed5f9b.xhtml), *Database
    Connection*, and learn to use an actual database instead.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在为客户或公司做一个严肃的项目，请不要使用这种方法。查看[第3章](f726e000-7f3b-4631-9df1-ed2819ed5f9b.xhtml)，*数据库连接*，并学习使用实际数据库。
- en: 'Alright, just assume that there is no other way but to use the text file; how
    are we going to do that? It''s very simple: create a text file called `files.txt`
    and place it into the FTP directory we just created at the very beginning of this
    chapter.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，假设除了使用文本文件之外没有其他办法；我们该怎么做呢？很简单：创建一个名为`files.txt`的文本文件，并将其放入我们在本章开头创建的FTP目录中。
- en: Writing the code
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写代码
- en: 'Next, open up `mainwindow.h` and add the following headers:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，打开`mainwindow.h`并添加以下头文件：
- en: '[PRE1]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'After that, add in the following variables and functions:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，添加以下变量和函数：
- en: '[PRE2]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Once you are done with the previous step, open up `mainwindow.cpp` and add
    the following code to the class constructor:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 完成上一步后，打开`mainwindow.cpp`并将以下代码添加到类构造函数中：
- en: '[PRE3]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'What we did was basically initialize the `QNetworkAccessManager` object and
    set up the variables that store our FTP server''s information, since we will be
    repeated using it many times in later steps. After that, we will call the `getFileList()`
    function to start downloading `files.txt` from our FTP server. The `getFileList()`
    function looks like the following:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 我们所做的基本上是初始化`QNetworkAccessManager`对象并设置存储我们的FTP服务器信息的变量，因为我们将在后续步骤中多次使用它。之后，我们将调用`getFileList()`函数开始从FTP服务器下载`files.txt`。`getFileList()`函数如下所示：
- en: '[PRE4]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: We used a `QUrl` object to store the information about our server and the location
    of the file we're trying to download, and then fed it to a `QNetworkRequest` object
    before sending it off by calling `QNetworkAccessManager::get()`. Since we have
    no idea when all the files will get downloaded completely, we make use of Qt's
    `SIGNAL` and `SLOT` mechanisms.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用`QUrl`对象来存储有关我们的服务器和我们试图下载的文件位置的信息，然后将其提供给`QNetworkRequest`对象，然后通过调用`QNetworkAccessManager::get()`将其发送出去。由于我们不知道何时所有文件将完全下载，因此我们利用了Qt的`SIGNAL`和`SLOT`机制。
- en: 'We connected the `finished()` signal that comes from our `downloadFileListReply` pointer
    (which points to a `QNetworkReply` object in `mainwindow.h`) and linked it to
    the `slot` function `downloadFileListFinished()`, which we defined as follows:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我们连接了来自`downloadFileListReply`指针（指向`mainwindow.h`中的`QNetworkReply`对象）的`finished()`信号，并将其链接到`slot`函数`downloadFileListFinished()`，如下所示：
- en: '[PRE5]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The code is a bit long, so I have broken down the function into the following
    steps:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 代码有点长，所以我将函数分解为以下步骤：
- en: If any problems occur during the download, display a message box that tells
    us the nature of the problem.
  id: totrans-79
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果在下载过程中出现任何问题，请显示一个消息框，告诉我们问题的性质。
- en: If everything went nicely and the download has completed, we will try and read
    the data by calling `downloadFileListReply` | `readAll()`.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果一切顺利并且下载已经完成，我们将尝试通过调用`downloadFileListReply` | `readAll()`来读取数据。
- en: 'Then, clear the List Widget and start parsing the content of the text file.
    The format we used here is very simple; we only used a comma symbol to separate
    each file name: `filename1,filename2,filename,...` It is important that we do
    not do this in the actual project.'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，清空列表窗口并开始解析文本文件的内容。我们在这里使用的格式非常简单；我们只使用逗号符号来分隔每个文件名：`filename1,filename2,filename,...`。重要的是我们不要在实际项目中这样做。
- en: Once we have called `split(",")` to split the string into a string list, do
    a `for` loop and display each file name on the List Widget.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦我们调用`split(",")`将字符串拆分为字符串列表，就进行`for`循环并在列表窗口中显示每个文件名。
- en: 'To test whether the preceding code works or not, create a text file called
    `files.txt` and add the following text to the file:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 测试前面的代码是否有效，创建一个名为`files.txt`的文本文件，并将以下文本添加到文件中：
- en: '[PRE6]'
  id: totrans-84
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Then, place the text file to your FTP directory and run your project. You should
    be able to see it appear like this on the application:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，将文本文件放到FTP目录中并运行项目。您应该能够在应用程序中看到它出现如下：
- en: '![](img/515e1c2d-015e-4fd2-88e6-9588304c21a9.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](img/515e1c2d-015e-4fd2-88e6-9588304c21a9.png)'
- en: Once it is working, we can clear away the content of the text file and proceed
    to our next section.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦它工作正常，我们可以清空文本文件的内容并继续下一节。
- en: Uploading files to the FTP server
  id: totrans-88
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将文件上传到FTP服务器
- en: Since we don't have any files in our FTP directory yet (except the file list),
    let's write the code to allow us to upload our first file.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们的FTP目录中还没有任何文件（除了文件列表），让我们编写代码以允许我们上传我们的第一个文件。
- en: 'First, open `mainwindow.ui` and right click on the Open button. Then, select
    Go to slot and select the clicked() option:'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，打开`mainwindow.ui`，右键单击“打开”按钮。然后，选择“转到槽”并选择“clicked()”选项：
- en: '![](img/9101a98a-64cd-4902-b2ea-d463509b03d9.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9101a98a-64cd-4902-b2ea-d463509b03d9.png)'
- en: 'A `slot` function will be automatically created for you. Then, add the following
    code to the function to open up the file selector window for our users to select
    their desired file for upload:'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将自动为您创建一个`slot`函数。然后，将以下代码添加到函数中，以打开文件选择器窗口，让用户选择要上传的文件：
- en: '[PRE7]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'After that, repeat this step and do the same for the Upload button. This time,
    the code for its `slot` function looks something like the following:'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，重复此步骤，并对“上传”按钮执行相同操作。这次，其`slot`函数的代码看起来像下面这样：
- en: '[PRE8]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The code looks a bit long, so let''s break it down:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 代码看起来有点长，所以让我们分解一下：
- en: We used the `QFile` class for opening the file that we want to upload (the file
    path is taken from `ui->uploadFileInput->text()`). If the file doesn't exist,
    display a message box to inform the user.
  id: totrans-97
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用`QFile`类打开我们要上传的文件（文件路径取自`ui->uploadFileInput->text()`）。如果文件不存在，显示一个消息框通知用户。
- en: Then, we fill in the information of our FTP server and the upload destination
    into a `QUrl` object before feeding it to a `QNetworkRequest` object.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，我们将FTP服务器和上传目的地的信息填入一个`QUrl`对象中，然后将其提供给`QNetworkRequest`对象。
- en: After that, we start reading the content of our file and provide it to the `QNetworkAccessManager::put()`
    function.
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，我们开始读取文件的内容，并将其提供给`QNetworkAccessManager::put()`函数。
- en: Since we have no idea when the file will get uploaded completely, we used the
    `SIGNAL` and `SLOT` mechanisms provided by Qt. We linked the `uploadProgress()`
    and `finished()` signals to our two custom `slot` function called `uploadFileProgress()`
    and `uploadFileFinised()`, respectively.
  id: totrans-100
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于我们不知道文件何时会完全上传，我们使用了Qt提供的`SIGNAL`和`SLOT`机制。我们将`uploadProgress()`和`finished()`信号链接到我们的两个自定义`slot`函数`uploadFileProgress()`和`uploadFileFinised()`。
- en: 'The `slot` function `uploadFileProgress()` will tell us the current progress
    of our upload, and therefore we can use it to set the progress bar:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '`slot`函数`uploadFileProgress()`将告诉我们上传的当前进度，因此我们可以用它来设置进度条：'
- en: '[PRE9]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Meanwhile, the `uploadFileFinished()` function will be triggered when the file
    has been completely uploaded:'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，当文件完全上传时，`uploadFileFinished()`函数将被触发：
- en: '[PRE10]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: We are not done with the preceding function yet. Since a new file has been added
    to the FTP server, we must update the existing file list and replace the `files.txt`
    file stored within the FTP directory. Since the code is slightly longer, we will
    break the code into several parts, which all are occurring before showing the
    File successfully uploaded message box.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还没有完成前面的函数。由于已向FTP服务器添加了新文件，我们必须更新现有文件列表，并替换存储在FTP目录中的`files.txt`文件。由于代码稍微长一些，我们将把代码分成几个部分，这些部分都发生在显示文件成功上传消息框之前。
- en: 'First, let''s check whether the newly uploaded file has already existed within
    our file list (replacing an old file on the FTP server). If it does, then we can
    skip the entire thing; otherwise, append the filename to our `fileList` string
    list, as shown in the following code:'
  id: totrans-106
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，让我们检查新上传的文件是否已经存在于我们的文件列表中（替换FTP服务器上的旧文件）。如果存在，我们可以跳过整个过程；否则，将文件名追加到我们的`fileList`字符串列表中，如下所示：
- en: '[PRE11]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'After that, create a temporary text file (`files.txt`) in our application''s
    directory and save the new file list in the text file:'
  id: totrans-108
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 之后，在我们应用程序的目录中创建一个临时文本文件（`files.txt`），并将新文件列表保存在文本文件中：
- en: '[PRE12]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'Finally, we use the `QFile` class to open the text file we just created, and
    we upload it again to the FTP server to replace the old file list:'
  id: totrans-110
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们使用`QFile`类打开我们刚创建的文本文件，并将其再次上传到FTP服务器以替换旧的文件列表：
- en: '[PRE13]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: 'Again, we use the `SIGNAL` and `SLOT` mechanisms so that we are notified when
    the file list has been uploaded. The `slot` function `uploadFileListFinished()` looks
    something like the following:'
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 再次使用`SIGNAL`和`SLOT`机制，以便在文件列表上传完成时得到通知。`slot`函数`uploadFileListFinished()`看起来像下面这样：
- en: '[PRE14]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: We basically just call `getFileList()` again after we have updated the file
    list into the FTP server. If you build and run the project now, you should be
    able to upload your first file to your local FTP server, hooray!
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们基本上只是在更新文件列表到FTP服务器后再次调用`getFileList()`。如果现在构建和运行项目，您应该能够将第一个文件上传到本地FTP服务器，万岁！
- en: '![](img/9f62c8f3-6cf9-42aa-8a69-8d79ea69d13b.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9f62c8f3-6cf9-42aa-8a69-8d79ea69d13b.png)'
- en: Downloading files from the FTP server
  id: totrans-116
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从FTP服务器下载文件
- en: Now that we have successfully uploaded our first file to the FTP server, let's
    create the feature for downloading the file back onto our computer!
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经成功将第一个文件上传到FTP服务器，让我们创建一个功能，将文件下载回我们的计算机！
- en: 'First, open `mainwindow.ui` again and right-click on the Set Folder button.
    Select Go to slot... and pick the clicked() signal to create a `slot` function.
    The `slot` function is very simple; it will just open up a file selection dialog,
    but this time it will only let the user select a folder instead since we provided
    it with a `QFileDialog::ShowDirsOnly` flag:'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 首先，再次打开`mainwindow.ui`，右键单击“设置文件夹”按钮。选择转到槽... 并选择clicked()信号以创建一个`slot`函数。`slot`函数非常简单；它只会打开一个文件选择对话框，但这次它只允许用户选择一个文件夹，因为我们为其提供了一个`QFileDialog::ShowDirsOnly`标志：
- en: '[PRE15]'
  id: totrans-119
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'Then, right click on the List Widget and select Go to slot... This time around,
    we will pick the `itemDoubleClicked(QListWidgetItem*)` option instead:'
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，在列表窗口上右键单击并选择转到槽... 这一次，我们将选择`itemDoubleClicked(QListWidgetItem*)`选项：
- en: '![](img/ccd5fed6-24d3-4345-a7b5-06be7331f314.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](img/ccd5fed6-24d3-4345-a7b5-06be7331f314.png)'
- en: 'When the user double-clicks on an item in the List Widget, the following function
    will be triggered, which kick-starts the download. The file name can be obtained
    from the `QListWidgetItem` object by calling `item->text()`:'
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当用户在列表窗口中双击项目时，将触发以下函数，启动下载。文件名可以通过调用`item->text()`从`QListWidgetItem`对象中获取：
- en: '[PRE16]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Just like what we did in the `upload` function, we also used the `SIGNAL` and
    `SLOT` mechanisms here to obtain the progression of the download process as well
    as the completed signal. The `slot` function `downloadFileProgress()` will be
    called during the download process, and we used that to set the value of our second
    progress bar:'
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 就像我们在`upload`函数中所做的那样，我们在这里也使用了`SIGNAL`和`SLOT`机制来获取下载过程的进展以及完成信号。`slot`函数`downloadFileProgress()`将在下载过程中被调用，我们用它来设置第二个进度条的值：
- en: '[PRE17]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'Then, the `slot` function `downloadFileFinished()` will be called when the
    file has been completely downloaded. What we''re going to do after that is read
    all the data of the file and save it to our desired directory:'
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，当文件完全下载时，`slot`函数`downloadFileFinished()`将被调用。之后，我们将读取文件的所有数据并将其保存到我们想要的目录中：
- en: '[PRE18]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Build the program now and you should be able to download any files listed on
    the file list!:'
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在构建程序，你应该能够下载文件列表上列出的任何文件！
- en: '![](img/9b76d2da-fc18-4ff7-9e3f-1a559ee1d2cf.png)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![](img/9b76d2da-fc18-4ff7-9e3f-1a559ee1d2cf.png)'
- en: Summary
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this chapter, we learned how to create our own cloud storage client using
    Qt's Networking module. In the following chapter, we will learn more about the
    multimedia module and create our own multimedia player from scratch using Qt.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何使用Qt的网络模块创建自己的云存储客户端。在接下来的章节中，我们将学习更多关于多媒体模块，并使用Qt从头开始创建自己的多媒体播放器。
