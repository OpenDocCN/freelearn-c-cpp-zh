["```cpp\n+ActionMappings=(ActionName=\"Jump\",bShift=False,bCtrl=False,  bAlt=False,bCmd=False,Key=SpaceBar)\n+ActionMappings=(ActionName=\"Jump\",bShift=False,bCtrl=False,  bAlt=False,bCmd=False,Key=Gamepad_FaceButton_Bottom)\n```", "```cpp\n+AxisMappings=(AxisName=\"MoveRight\",Scale=1.000000,  Key=Gamepad_LeftX)\n+AxisMappings=(AxisName=\"MoveRight\",Scale=1.000000,Key=D)\n+AxisMappings=(AxisName=\"MoveRight\",Scale=-1.000000,Key=A)\n```", "```cpp\n    virtual void SetupPlayerInputComponent(class UInputComponent*   PlayerInputComponent) override;\n    ```", "```cpp\n    void AMyThirdPersonChar::SetupPlayerInputComponent(class   UInputComponent* PlayerInputComponent)\n    {\n    }\n    ```", "```cpp\n        PlayerInputComponent->BindAction(\"Jump\", IE_Pressed, this,   &ACharacter::Jump);\n        ```", "```cpp\n    PlayerInputComponent->BindAction(\"Jump\", IE_Released, this,   &ACharacter::StopJumping);\n    ```", "```cpp\n    #include \"Components/InputComponent.h\"\n    ```", "```cpp\n    void MoveRight(float Value);\n    ```", "```cpp\n    void AMyThirdPersonChar::MoveRight(float Value)\n    {\n    \u00a0\u00a0if (Controller != nullptr && Value != 0.0f)\n    \u00a0\u00a0{\n    \u00a0\u00a0}\n    }\n    ```", "```cpp\n        const FRotator YawRotation(0, Controller->  GetControlRotation().Yaw, 0);\n        const FVector Direction =   UKismetMathLibrary::GetRightVector(YawRotation);\n        ```", "```cpp\n        AddMovementInput(Direction, Value);\n        ```", "```cpp\n    #include \"Kismet/KismetMathLibrary.h\"\n    #include \"GameFramework/Controller.h\"\n    ```", "```cpp\n    PlayerInputComponent->BindAxis(\"MoveRight\", this,   &AMyThirdPersonChar::MoveRight);\n    ```", "```cpp\n    void MoveForward(float Value);\n    ```", "```cpp\n    void AMyThirdPersonChar::MoveForward(float Value)\n    {\n    \u00a0\u00a0if (Controller != nullptr && Value != 0.0f)\n    \u00a0\u00a0{\n    \u00a0\u00a0\u00a0\u00a0const FRotator YawRotation(0, Controller->  GetControlRotation().Yaw, 0);\n    \u00a0\u00a0\u00a0\u00a0const FVector Direction = UKismetMathLibrary::GetForwardVector(YawRotation);\n    \u00a0\u00a0\u00a0\u00a0AddMovementInput(Direction, Value);\n    \u00a0\u00a0}\n    }\n    ```", "```cpp\n    PlayerInputComponent->BindAxis(\"MoveForward\", this,   &AMyThirdPersonChar::MoveForward);\n    ```", "```cpp\nPlayerInputComponent->BindAxis(\"Turn\", this,   &APawn::AddControllerYawInput);\nPlayerInputComponent->BindAxis(\"LookUp\", this,   &APawn::AddControllerPitchInput);\n```", "```cpp\n    void TouchBegin(ETouchIndex::Type FingerIndex, FVector Location);\n    void TouchEnd(ETouchIndex::Type FingerIndex, FVector Location);\n    ```", "```cpp\n    void AMyThirdPersonChar::TouchBegin(ETouchIndex::Type   FingerIndex, FVector Location)\n    {\n    \u00a0\u00a0Jump();\n    }\n    void AMyThirdPersonChar::TouchEnd(ETouchIndex::Type   FingerIndex, FVector Location)\n    {\n    \u00a0\u00a0StopJumping();\n    }\n    ```", "```cpp\n    PlayerInputComponent->BindTouch(IE_Pressed, this,   &AMyThirdPersonChar::TouchBegin);\n    PlayerInputComponent->BindTouch(IE_Released, this,   &AMyThirdPersonChar::TouchEnd);\n    ```"]