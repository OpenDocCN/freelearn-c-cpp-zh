- en: '*Chapter 8*: Gas Sensor'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第8章*：气体传感器'
- en: An indoor environment with good air quality is essential to guarantee a healthy
    environment (Marques and Pitarma, 2017). The **MQ-2 gas sensor** can be an excellent
    way to measure the quality parameters of indoor air or as an early fire detection
    system. In this chapter, you will learn how to build a practical system for detecting
    gases in the environment (which we will call a **gas sensor**) and connect the
    MQ-2 gas sensor to a **Blue Pill microcontroller card**.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 良好的室内空气质量对于保证健康的环境至关重要（Marques和Pitarma，2017）。MQ-2气体传感器可以是一种测量室内空气质量参数或作为早期火灾探测系统的极好方式。在本章中，你将学习如何构建一个用于检测环境中气体的实用系统（我们将其称为**气体传感器**）并将MQ-2气体传感器连接到**蓝色药丸微控制器卡**。
- en: 'The following main topics will be covered in this chapter:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本章将涵盖以下主要内容：
- en: Introducing the MQ-2 gas sensor
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍MQ-2气体传感器
- en: Connecting a gas sensor to the STM32 microcontroller board
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将气体传感器连接到STM32微控制器板
- en: Writing a program to read the gas concentration over the sensor board
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写程序读取传感器板上的气体浓度
- en: Testing the system
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 测试系统
- en: At the end of this chapter, you will know about the operation of an MQ-2 gas
    sensor, and you will be able to connect it correctly to the STM32 microcontroller
    card and view the data obtained from the sensor. You will be able to apply what
    you have learned in projects that require the use of sensors to detect substances
    such as flammable gases or alcohol or measure air quality.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章结束时，你将了解MQ-2气体传感器的操作，并能够正确将其连接到STM32微控制器卡并查看从传感器获得的数据。你将能够在需要使用传感器检测易燃气体或酒精或测量空气质量的项目中应用你所学的知识。
- en: Technical requirements
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The hardware components that will be needed to develop the gas sensor are as
    follows:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 开发气体传感器所需的硬件组件如下：
- en: One solderless breadboard
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个无焊面包板
- en: One Blue Pill board
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一块蓝色药丸板
- en: ST-Link/V2
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ST-Link/V2
- en: One MQ-2 breakout module
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个MQ-2分线模块
- en: Seven male-to-male jumper wires
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 七根公对公跳线
- en: One LED 8x8 matrix
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个8x8 LED矩阵
- en: One 7219 breakout board
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一块7219分线板
- en: A 5 V power source
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个5V电源
- en: 'These components are widespread, and there will be no problems in getting them
    easily. On the software side, you will require the Arduino IDE and the GitHub
    repository for this chapter: [https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter08](https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter08)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这些组件很常见，很容易就能买到。在软件方面，你需要Arduino IDE和本章的GitHub仓库：[https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter08](https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter08)
- en: 'The Code in Action video for this chapter can be found here: [https://bit.ly/2UpGDGs](https://bit.ly/2UpGDGs)'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的“代码在行动”视频可以在此找到：[https://bit.ly/2UpGDGs](https://bit.ly/2UpGDGs)
- en: Let's first start by describing the characteristics of the MQ-2 gas sensor.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们先描述一下MQ-2气体传感器的特性。
- en: Introducing the MQ-2 gas sensor
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍MQ-2气体传感器
- en: 'In this section, we will get to know the details of the main hardware component
    to build our gas sensor: the **MQ-2 sensor**. This sensor is recommended to detect
    LPG, propane, alcohol, and smoke, mainly with concentrations between 300 and 10,000
    **parts per million** (**ppm**). So, we can say that it is a sensor to detect
    smoke and flammable gases.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将了解构建我们的气体传感器的主要硬件组件的详细信息：**MQ-2传感器**。该传感器推荐用于检测LPG、丙烷、酒精和烟雾，主要浓度在300到10,000
    **百万分之一**（**ppm**）之间。因此，我们可以称它为检测烟雾和易燃气体的传感器。
- en: Concentration refers to the amount of gas in the air and is measured in ppm.
    That is, if you have 2,000 ppm of LPG, it means that in a million gas molecules,
    only 2,000 ppm would be LPG and 998,000 ppm other gases.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 浓度指的是空气中的气体量，以ppm（百万分之一）为单位。也就是说，如果你有2,000 ppm的LPG，这意味着在一百万个气体分子中，只有2,000 ppm是LPG，其余998,000
    ppm是其他气体。
- en: The MQ-2 gas sensor is an electrochemical sensor that varies its resistance
    when exposed to certain gasses. It includes a small heater to raise the circuit's
    internal temperature, which provides the necessary conditions for the detection
    of substances. With the 5 V connection on the pins, the sensor is kept warm enough
    to function correctly.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: MQ-2气体传感器是一种电化学传感器，当暴露于某些气体时，其电阻会发生变化。它包括一个小加热器，用于提高电路的内部温度，这为检测物质提供了必要的条件。通过引脚上的5V连接，传感器保持足够的热量以正确工作。
- en: Important note
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 重要提示
- en: The sensor can get very hot, so it should not be touched during operation.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 传感器可能会非常热，因此在操作过程中不应触摸。
- en: 'The MQ series gas sensors are analog, making them easy to implement with any
    microcontroller card, such as the STM32 Blue Pill. It is very common to find the
    MQ-2 sensor in breakout modules, which facilitates connection and use since it
    will only be necessary to power it up and start reading its data. These breakout
    modules have a **digital output** (**DO**) that we can interpret as the presence
    (*LOW*) or absence (*HIGH*) of any gas detected by the sensor. *Figure 8.1* shows
    the MQ-2 gas sensor with a breakout board:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: MQ 系列气体传感器是模拟的，这使得它们很容易与任何微控制器卡（如 STM32 Blue Pill）实现。在扩展模块中找到 MQ-2 传感器非常常见，这有助于连接和使用，因为它只需要供电并开始读取其数据。这些扩展模块有一个
    **数字输出**（**DO**），我们可以将其解释为传感器检测到的任何气体的存在（*低电平*）或不存在（*高电平*）。*图 8.1* 显示了带有扩展板的 MQ-2
    气体传感器：
- en: '![Figure 8.1 – MQ-2 gas sensor with a breakout board](img/B16413_Figure_8.1.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.1 – 带有扩展板的 MQ-2 气体传感器](img/B16413_Figure_8.1.jpg)'
- en: Figure 8.1 – MQ-2 gas sensor with a breakout board
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.1 – 带有扩展板的 MQ-2 气体传感器
- en: In the next section, we will learn how to connect the MQ-2 sensor to our solderless
    breadboard to obtain its reading data through digital and analog means.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将学习如何通过数字和模拟方式将 MQ-2 传感器连接到我们的无焊面包板，以获取其读数数据。
- en: Connecting a gas sensor to the STM32 microcontroller board
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将气体传感器连接到 STM32 微控制器板
- en: 'In this section, we will build a gas sensor device utilizing the **STM32 Blue
    Pill** microcontroller board and a gas sensor module using the hardware components
    listed in the *Technical requirements* section. The gas sensor breakout board
    connects to the STM32 Blue Pill with four pins:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将构建一个使用 STM32 Blue Pill 微控制器板和气体传感器模块的气体传感器设备，该设备使用 *技术要求* 部分中列出的硬件组件。气体传感器扩展板通过四个引脚连接到
    STM32 Blue Pill：
- en: '**Analog output** (**AO**): This pin generates an analog signal and must be
    connected to an analog input of the microcontroller.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**模拟输出**（**AO**）：此引脚生成模拟信号，必须连接到微控制器的模拟输入。'
- en: '**DO**: This pin generates a digital signal and must be connected to a digital
    input of the microcontroller.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DO**：此引脚生成数字信号，必须连接到微控制器的数字输入。'
- en: '**VCC**: Pin to supply power to the sensor (5 V).'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VCC**：为传感器供电的引脚（5 V）。'
- en: '**GND**: Ground connection.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GND**：接地连接。'
- en: For this project, you will learn how to interface the MQ-2 module with the STM32
    board to acquire data in a digital and analog way. Let's start with the digital
    option.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这个项目，您将学习如何将 MQ-2 模块与 STM32 板进行接口连接，以数字和模拟方式获取数据。让我们从数字选项开始。
- en: Interfacing for digital reading
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数字读取接口
- en: 'Now we are going to connect the electronic components to the breadboard, do
    the wiring, and finally connect everything to the STM32 Blue Pill:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将电子元件连接到面包板上，进行布线，并将所有东西连接到 STM32 Blue Pill 上：
- en: In connecting the components, place the sensor module and the STM32 Blue Pill
    on a solderless breadboard with enough space to add the wiring layer, as shown
    in *Figure 8.2*. The hardware connections for this project are exceptionally effortless:![Figure
    8.2 – Components on the breadboard](img/B16413_Figure_8.2.jpg)
  id: totrans-40
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在连接元件时，将传感器模块和 STM32 Blue Pill 放在足够空间添加布线层的无焊面包板上，如图 *图 8.2* 所示。本项目的硬件连接非常简单：![图
    8.2 – 面包板上的元件](img/B16413_Figure_8.2.jpg)
- en: Figure 8.2 – Components on the breadboard
  id: totrans-41
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.2 – 面包板上的元件
- en: Next, power up the Blue Pill with an external power source. Connect the **5
    V pin** to the red rail on the breadboard and a **G pin** to the blue track, as
    shown in *Figure 8.3*:![Figure 8.3 – Connections to the power supply](img/B16413_Figure_8.3.jpg)
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，使用外部电源为 Blue Pill 提供电力。将 **5 V 引脚**连接到面包板上的红色轨道，并将一个 **G 引脚**连接到蓝色轨道，如图
    *图 8.3* 所示：![图 8.3 – 与电源的连接](img/B16413_Figure_8.3.jpg)
- en: Figure 8.3 – Connections to the power supply
  id: totrans-43
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.3 – 与电源的连接
- en: 'Connect the **GND pin** of the MQ-2 sensor to a GND terminal of the SMT32 Blue
    Pill. Next, you need to connect the **VCC pin** to the 5 V bus of the Blue Pill,
    as shown in the following figure. In this section, we will read the DO, so it
    must be connected to a digital input on the Blue Pill card. Connect the DO of
    the MQ-2 sensor to pin B12 of the Blue Pill, as shown in *Figure 8.4*:'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将 MQ-2 传感器的 **GND 引脚**连接到 STM32 Blue Pill 的 GND 端口。接下来，您需要将 **VCC 引脚**连接到 Blue
    Pill 的 5 V 总线，如图所示。在本节中，我们将读取 DO，因此它必须连接到 Blue Pill 卡上的一个数字输入。将 MQ-2 传感器的 DO 连接到
    Blue Pill 的 B12 引脚，如图 *图 8.4* 所示：
- en: '![Figure 8.4 – MQ-2 sensor connection for digital reading](img/B16413_Figure_8.4.jpg)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图8.4 – 用于数字读取的MQ-2传感器连接](img/B16413_Figure_8.4.jpg)'
- en: Figure 8.4 – MQ-2 sensor connection for digital reading
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.4 – 用于数字读取的MQ-2传感器连接
- en: 'Finally, you need to use a power source such as batteries to power up the board.
    *Figure 8.5* summarizes all the hardware connections:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你需要使用电池等电源来为电路板供电。*图8.5*总结了所有硬件连接：
- en: '![Figure 8.5 – Circuit for the MQ-2 sensor connection for digital reading](img/B16413_Figure_8.5.jpg)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![图8.5 – 用于数字读取的MQ-2传感器连接电路](img/B16413_Figure_8.5.jpg)'
- en: Figure 8.5 – Circuit for the MQ-2 sensor connection for digital reading
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.5 – 用于数字读取的MQ-2传感器连接电路
- en: 'The preceding figure shows all the connections between the STM32 Blue Pill
    and the electronic parts. *Figure 8.6* presents the schematics for this project:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的图示显示了STM32 Blue Pill和电子部件之间的所有连接。*图8.6*展示了本项目的原理图：
- en: '![Figure 8.6 – Schematics for the MQ-2 sensor connection for digital reading](img/B16413_Figure_8.6.jpg)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![图8.6 – 用于数字读取的MQ-2传感器连接图](img/B16413_Figure_8.6.jpg)'
- en: Figure 8.6 – Schematics for the MQ-2 sensor connection for digital reading
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.6 – 用于数字读取的MQ-2传感器连接图
- en: '*Figure 8.7* shows how everything must be connected in our DIY gas sensor device:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '*图8.7*展示了我们的DIY气体传感器设备中所有部件的连接方式：'
- en: '![Figure 8.7 – Gas sensor device for digital reading](img/B16413_Figure_8.7.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图8.7 – DIY气体传感器设备用于数字读取](img/B16413_Figure_8.7.jpg)'
- en: Figure 8.7 – Gas sensor device for digital reading
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.7 – 数字读取的气体传感器设备
- en: In this subsection, we learned how to connect the electronics to create our
    gas sensor device with digital reading. Next, we will see how to connect it so
    that the reading is analog.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在本小节中，我们学习了如何连接电子设备以创建具有数字读取功能的气体传感器设备。接下来，我们将看到如何将其连接为模拟读取。
- en: Interfacing for analog reading
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模拟读取接口
- en: 'Only one step will be necessary to change how our hardware device reads data
    from the sensor to be an analog reading instead of a digital one:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 只需要一步就可以将我们的硬件设备从读取传感器的数字数据改为模拟读取：
- en: 'Disconnect the jumper wire from the DO pin and connect it to the AO pin of
    the MQ-2 sensor. Also, instead of connecting to pin B12, connect to pin AO of
    the Blue Pill, as shown in *Figure 8.8*:'
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将跳线从DO引脚断开，并将其连接到MQ-2传感器的AO引脚。此外，不要连接到B12引脚，而是连接到Blue Pill的AO引脚，如图*图8.8*所示：
- en: '![Figure 8.8 – MQ-2 sensor connection for analog reading](img/B16413_Figure_8.8.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图8.8 – 用于模拟读取的MQ-2传感器连接](img/B16413_Figure_8.8.jpg)'
- en: Figure 8.8 – MQ-2 sensor connection for analog reading
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.8 – 用于模拟读取的MQ-2传感器连接
- en: '*Figure 8.9* summarizes all the hardware connections:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '*图8.9*总结了所有硬件连接：'
- en: '![Figure 8.9 – Circuit for the MQ-2 sensor connection for analog reading](img/B16413_Figure_8.9.jpg)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![图8.9 – 用于模拟读取的MQ-2传感器连接电路](img/B16413_Figure_8.9.jpg)'
- en: Figure 8.9 – Circuit for the MQ-2 sensor connection for analog reading
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.9 – 用于模拟读取的MQ-2传感器连接电路
- en: '*Figure 8.10* presents the schematics for the analog reading device:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '*图8.10*展示了模拟读取设备的原理图：'
- en: '![Figure 8.10 – Schematics for the MQ-2 sensor connection for analog reading](img/B16413_Figure_8.10.jpg)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![图8.10 – 用于模拟读取的MQ-2传感器连接图](img/B16413_Figure_8.10.jpg)'
- en: Figure 8.10 – Schematics for the MQ-2 sensor connection for analog reading
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.10 – 用于模拟读取的MQ-2传感器连接图
- en: 'Let''s recap. In this section, we learned how to connect the hardware components
    to create our gas sensor device. You learned how to connect the MQ-2 sensor to
    the STM32 Blue Pill microcontroller board to obtain its data in two ways: digitally
    and in analog form.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下。在本节中，我们学习了如何连接硬件组件以创建我们的气体传感器设备。你学习了如何将MQ-2传感器连接到STM32 Blue Pill微控制器板，以两种方式获取其数据：数字形式和模拟形式。
- en: In the next section, we will create the C code that obtains the MQ-2 sensor
    data from the STM32 Blue Pill microcontroller.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一节中，我们将创建C代码，从STM32 Blue Pill微控制器获取MQ-2传感器数据。
- en: Writing a program to read the gas concentration over the sensor board
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写读取传感器板上气体浓度的程序
- en: In this section, we will learn how to code a program to read data from our gas
    sensor and show it on the serial monitor if gas is present in the environment.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将学习如何编写程序从我们的气体传感器读取数据，并在环境中检测到气体时在串行监视器上显示它。
- en: As in the previous section, we'll first learn how to read data digitally and
    also in analog form.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，我们首先学习如何以数字和模拟形式读取数据。
- en: Coding for digital reading
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数字读取的编码
- en: 'Let''s start writing the code:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始编写代码：
- en: 'Define which pin of the STM32 Blue Pill microcontroller will be used as input
    for reading the data from the sensor. Here''s the code that shows how to do that:'
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 定义STM32 Blue Pill微控制器哪个引脚将用作从传感器读取数据的输入。以下是展示如何做到这一点的代码：
- en: '[PRE0]'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The selected pin was `PB12` (labeled B12 on the Blue Pill board). A Boolean
    variable was declared and initialized to `true`. This variable will be used for
    storing the sensor data.
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 选定的引脚是`PB12`（在Blue Pill板上标记为B12）。声明并初始化了一个布尔变量为`true`。这个变量将用于存储传感器数据。
- en: 'Next, in the `setup()` part, we need to start the serial data transmission
    and assign the speed of the transfer (`9600` bps as a standard value):'
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在`setup()`部分，我们需要启动串行数据传输并分配传输速度（以`9600` bps作为标准值）：
- en: '[PRE1]'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Indicate to the microcontroller the type of pin assigned to `PB12`:'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 向微控制器指示分配给`PB12`的引脚类型：
- en: '[PRE2]'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Now comes `loop()` with the rest of the sketch. The first lines read the input
    pin''s data sensor and display its value in the serial console:'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在是`loop()`部分，其余的代码。前几行读取输入引脚的数据传感器，并在串行控制台中显示其值：
- en: '[PRE3]'
  id: totrans-83
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The value read from the sensor could be `TRUE` or `FALSE`; remember, we are
    reading a digital value. If the value is `TRUE`, then gas is not present in the
    environment; otherwise, gas was detected. This behavior occurs because the MQ-2
    sensor has a negated output; the module's LED must also light up in this state
    since it is internally with a 5 V resistance. When there is no presence of gas,
    the LED turns off, and the output is logic 1 (5 V).
  id: totrans-84
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 从传感器读取的值可以是`TRUE`或`FALSE`；记住，我们正在读取一个数字值。如果值为`TRUE`，则环境中没有气体存在；否则，检测到气体。这种行为发生是因为MQ-2传感器的输出是取反的；在此状态下，模块的LED也必须点亮，因为它是内部带有5
    V电阻的。当没有气体存在时，LED熄灭，输出是逻辑1（5 V）。
- en: The code for digital reading is now complete. You can find the complete sketch
    available in the `Chapter8/gas_digital` folder in the GitHub repository.
  id: totrans-85
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 数字读取的代码现在已完成。您可以在GitHub仓库的`Chapter8/gas_digital`文件夹中找到完整的草图。
- en: 'Now we have the complete code for reading the DO of the MQ-2 sensor. You can
    upload it to the STM32 microcontroller. You can now see, in the **serial monitor**,
    the sensor readings as shown in *Figure 8.11*. The most normal thing is for the
    reading to indicate no presence of any gas:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们有了读取MQ-2传感器DO的完整代码。您可以将其上传到STM32微控制器。现在您可以在**串行监控器**中看到如图*图8.11*所示的传感器读数。最正常的情况是读数指示没有气体存在：
- en: '![Figure 8.11 – Serial monitor reading the DO of the sensor with no gas presence](img/B16413_Figure_8.11.jpg)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![图8.11 – 无气体存在的传感器DO的串行监控读取](img/B16413_Figure_8.11.jpg)'
- en: Figure 8.11 – Serial monitor reading the DO of the sensor with no gas presence
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.11 – 无气体存在的传感器DO的串行监控读取
- en: 'Now, **being very careful about fire safety**, bring a lit match to the sensor
    and put it out when close to the sensor to generate smoke. The serial monitor
    will change as soon as the smoke impregnates the sensor (as shown in *Figure 8.12*):'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，**非常注意防火安全**，将点燃的火柴拿到传感器旁，并在靠近传感器时吹灭以产生烟雾。当烟雾浸入传感器时，串行监控器会立即改变（如图*图8.12*所示）：
- en: '![Figure 8.12 – Serial monitor reading the DO of the sensor with the presence
    of gas](img/B16413_Figure_8.12.jpg)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![图8.12 – 有气体存在的传感器DO的串行监控读取](img/B16413_Figure_8.12.jpg)'
- en: Figure 8.12 – Serial monitor reading the DO of the sensor with the presence
    of gas
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.12 – 有气体存在的传感器DO的串行监控读取
- en: As we can see, it is like reading any digital input. The sensitivity of the
    sensor is configured through the variable resistance included in the breakout
    module. Turning to the right becomes more sensitive, and we need less gas present
    to activate the output. In the same way, if we turn it to the left, a more significant
    presence of gas will be needed to activate the output.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，它就像读取任何数字输入一样。传感器的灵敏度是通过断出模块中包含的可变电阻来配置的。向右转动使其更加敏感，并且需要更少的气体存在来激活输出。同样，如果我们向左转动，则需要更多的气体存在来激活输出。
- en: So far, we have learned how to read the gas sensor in digital form. In the following
    subsection, we are going to obtain its reading from the AO.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经学会了如何以数字形式读取气体传感器。在接下来的小节中，我们将从AO获取其读数。
- en: Coding for analog reading
  id: totrans-94
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编码模拟读取
- en: When using the AO, different levels of gas presence are obtained. The module
    has a heating chamber in which the gas enters. This gas will continue to be detected
    until the chamber is empty. The sensor's voltage output will be proportional to
    the gas concentration in the chamber.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 当使用 AO 时，可以获得不同水平的气体存在。该模块有一个加热室，气体进入其中。这种气体将继续被检测，直到室空。传感器的电压输出将与室内的气体浓度成正比。
- en: In Short, the higher the gas concentration, the higher the voltage output, and
    the lower the gas concentration, the lower the voltage output.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，气体浓度越高，电压输出越高，气体浓度越低，电压输出越低。
- en: 'Let''s get started with the code:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从代码开始：
- en: Create a copy of the `Chapter8/gas_digital` project and change the name to `Chapter8``/gas_analog`.
    Remember to rename the folder and the INO file.
  id: totrans-98
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 复制 `Chapter8/gas_digital` 项目并重命名为 `Chapter8/gas_analog`。请记住重命名文件夹和 INO 文件。
- en: 'Change the sensor pin to `0` (labeled A0 on the Blue Pill), remove the Boolean
    variable, and assign a threshold level for the sensor readings. We will use a
    value of `800`, to be sure the sensor has gas in its chamber:'
  id: totrans-99
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将传感器引脚改为 `0`（在 Blue Pill 上标记为 A0），移除布尔变量，并为传感器读取分配一个阈值级别。我们将使用 `800` 的值，以确保传感器在其室内有气体：
- en: '[PRE4]'
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Keep `setup()` without modifications:'
  id: totrans-101
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 保持 `setup()` 不做修改：
- en: '[PRE5]'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The code in `loop()` will be using the same logic but with a few changes:'
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`loop()` 中的代码将使用相同的逻辑，但有一些变化：'
- en: '[PRE6]'
  id: totrans-104
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: To read the sensor value, we use the `analogRead()` function. The value read
    is stored in the `sensorValue` variable; the next step will be to compare its
    value with the threshold. If the sensor value is higher than the threshold, this
    means gas was detected.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要读取传感器值，我们使用 `analogRead()` 函数。读取的值存储在 `sensorValue` 变量中；下一步将是将其值与阈值进行比较。如果传感器值高于阈值，这意味着检测到了气体。
- en: 'Now that our sketch is complete, upload it to the Blue Pill board. To test
    that our project works, just like the digital reading version, bring a lit match
    to the sensor and put it out when close to the sensor to generate smoke. Please,
    do not forget to be very careful about fire safety. *Figure 8.13* shows the serial
    monitor when smoke starts to be detected:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了草图，请将其上传到 Blue Pill 板上。为了测试我们的项目是否工作，就像数字读取版本一样，只需将点燃的火柴拿到传感器旁，当靠近传感器时吹灭以产生烟雾。请务必非常小心地注意防火安全。*图
    8.13* 展示了当开始检测到烟雾时的串行监视器：
- en: '![Figure 8.13 – Serial monitor reading the AO of the sensor with gas present](img/B16413_Figure_8.13.jpg)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.13 – 有气体存在的传感器 AO 串行监视器读取](img/B16413_Figure_8.13.jpg)'
- en: Figure 8.13 – Serial monitor reading the AO of the sensor with gas present
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.13 – 有气体存在的传感器 AO 串行监视器读取
- en: This section helped us to learn how to create code in C to read the data from
    the MQ-2 sensor to know if there is a concentration of gas or smoke in the environment.
    In addition, the skills to read the sensor value in both analog and digital form
    were acquired. In the next section, we will create a simple way of knowing directly
    in the hardware device if there is gas or smoke concentration without seeing the
    serial monitor on a computer.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 这一部分帮助我们学习如何用 C 语言编写代码来读取 MQ-2 传感器的数据，以了解环境中是否有气体或烟雾浓度。此外，还掌握了读取模拟和数字形式的传感器值的技术。在下一节中，我们将创建一种简单的方法，直接在硬件设备上知道是否有气体或烟雾浓度，而无需在计算机上的串行监视器中查看。
- en: Testing the system
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 系统测试
- en: In this last section of the chapter, we will connect an **8x8 LED matrix** to
    display an alert if the sensor detects the presence of gas in the environment.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章的最后部分，我们将连接一个 **8x8 LED 矩阵**，如果传感器检测到环境中存在气体，则显示警报。
- en: An LED matrix is a set of LEDs grouped into rows and columns. By turning on
    these LEDs, you can create graphics or text, which are widely used for billboards
    and traffic signs.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: LED 矩阵是一组按行和列分组排列的 LED。通过打开这些 LED，可以创建图形或文本，这些在广告牌和交通标志中得到了广泛应用。
- en: 'There is an electronic component for small-scale projects called an 8x8 LED
    matrix. It is composed of 64 LEDs arranged in eight rows and eight columns (see
    *Figure 8.14*):'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 有一种用于小型项目的电子组件，称为 8x8 LED 矩阵。它由 64 个 LED 组成，排列成八行八列（见 *图 8.14*）：
- en: '![Figure 8.14 – LED matrix 8x8](img/B16413_Figure_8.14.jpg)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.14 – 8x8 LED 矩阵](img/B16413_Figure_8.14.jpg)'
- en: Figure 8.14 – LED matrix 8x8
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.14 – 8x8 LED 矩阵
- en: As you can see in the previous figure, the 8x8 LED matrix has pins to control
    the rows and columns, so it is impossible to control each LED independently.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 如前图所示，8x8 LED 矩阵有控制行和列的引脚，因此不可能独立控制每个 LED。
- en: This limitation implies having to use 16 digital signals and refreshes the image
    or text continuously. Therefore, the integrated MAX7219 and MAX7221 circuits have
    been created to facilitate this task; the circuits are almost identical and interchangeable
    using the same code.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 这种限制意味着必须使用 16 个数字信号并持续刷新图像或文本。因此，已经创建了集成的 MAX7219 和 MAX7221 电路来简化这项任务；这些电路几乎相同且可使用相同的代码互换。
- en: 'In addition to these integrated circuits, breakout modules have been created
    integrating the 8x8 LED matrix and the MAX7219 circuit, in addition to having
    output connectors to put several modules in a cascade. *Figure 8.15* shows the
    8x8 LED matrix breakout module:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 除了这些集成电路之外，还创建了集成 8x8 LED 矩阵和 MAX7219 电路的开关模块，此外还提供了输出连接器，可以将多个模块级联。*图 8.15*
    展示了 8x8 LED 矩阵开关模块：
- en: '![Figure 8.15 – LED matrix 8x8 breakout module](img/B16413_Figure_8.15.jpg)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.15 – LED 矩阵 8x8 开关模块](img/B16413_Figure_8.15.jpg)'
- en: Figure 8.15 – LED matrix 8x8 breakout module
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.15 – LED 矩阵 8x8 开关模块
- en: 'The input pins of the module are as follows:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 模块的输入引脚如下：
- en: '**VCC**: Module power supply'
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**VCC**: 模块电源'
- en: '**GND**: Ground connection'
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**GND**: 地线连接'
- en: '**DIN**: Serial data input'
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**DIN**: 串行数据输入'
- en: '**CS**: Chip select input'
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CS**: 芯片选择输入'
- en: '**CLK**: Serial clock input'
  id: totrans-126
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**CLK**: 串行时钟输入'
- en: The output pins are almost identical, only instead of **DIN** there is **DOUT**,
    which will allow cascading with other modules, but we will not learn about this
    functionality in this chapter.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 输出引脚几乎相同，只是 **DIN** 被替换为 **DOUT**，这将允许与其他模块级联，但我们在本章中不会学习这个功能。
- en: '*Figure 8.16* shows how to connect the MAX7219 8x8 LED matrix module to our
    STM32 Blue Pill board:'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '*图 8.16* 展示了如何将 MAX7219 8x8 LED 矩阵模块连接到我们的 STM32 Blue Pill 板上：'
- en: '![Figure 8.16 – LED matrix 8x8 breakout module interfacing to the STM32 Blue
    Pill](img/B16413_Figure_8.16.jpg)'
  id: totrans-129
  prefs: []
  type: TYPE_IMG
  zh: '![图 8.16 – LED 矩阵 8x8 开关模块与 STM32 Blue Pill 的接口](img/B16413_Figure_8.16.jpg)'
- en: Figure 8.16 – LED matrix 8x8 breakout module interfacing to the STM32 Blue Pill
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 图 8.16 – LED 矩阵 8x8 开关模块与 STM32 Blue Pill 的接口
- en: Now it is time to create the code to display an alert on our LED matrix. We
    will update the `Chapter8/gas_digital` sketch. Let's start coding!
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候创建代码来在我们的 LED 矩阵上显示警报了。我们将更新 `Chapter8/gas_digital` 草图。让我们开始编码！
- en: 'To make the process easier, we will use a library called `LedControlMS` that
    facilitates the use of the 8x8 LED matrix module. To start with the installation,
    download the library from our GitHub: `Chapter8/library`.'
  id: totrans-132
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为了使过程更容易，我们将使用名为 `LedControlMS` 的库，该库简化了 8x8 LED 矩阵模块的使用。要开始安装，请从我们的 GitHub
    下载库：`Chapter8/library`。
- en: To install, go to the **Sketch** menu | **Include Library** | **Add .ZIP Library…**
    (see *Figure 8.17*) and select the downloaded file, and it is ready to be used:![Figure
    8.17 – Adding the LedControlMS library](img/B16413_Figure_8.17.jpg)
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装时，请转到**草图**菜单 | **包含库** | **添加 .ZIP 库…**（见 *图 8.17*）并选择下载的文件，然后它就准备好使用了：![图
    8.17 – 添加 LedControlMS 库](img/B16413_Figure_8.17.jpg)
- en: Figure 8.17 – Adding the LedControlMS library
  id: totrans-134
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 8.17 – 添加 LedControlMS 库
- en: 'In our script, we are going to add the library:'
  id: totrans-135
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在我们的脚本中，我们将添加库：
- en: '[PRE7]'
  id: totrans-136
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We must indicate the number of display modules that we are using; in our case,
    it is one. We will initialize the library, pointing out the pins of the STM32
    Blue Pill board to which the module will be connected, as well as the variable
    with the number of modules:'
  id: totrans-137
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们必须指出我们正在使用的显示模块数量；在我们的情况下，是一个。我们将初始化库，指出模块将连接到 STM32 Blue Pill 板上的引脚，以及带有模块数量的变量：
- en: '[PRE8]'
  id: totrans-138
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'By default, the matrix is in power-saving mode, so it is necessary to wake
    it up. If it were more than one module, a loop would be required, but in this
    case, it is only one, so we will do it directly:'
  id: totrans-139
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 默认情况下，矩阵处于省电模式，因此需要唤醒它。如果有多个模块，则需要一个循环，但在这个例子中只有一个，所以我们直接操作：
- en: '[PRE9]'
  id: totrans-140
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Finally, we write the character we want to show. We will use the `writeString()`
    function in the `else` statement to indicate in the LED matrix that there is gas;
    we will show a letter `A` representing an alert:'
  id: totrans-141
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，我们写入我们想要显示的字符。我们将使用 `writeString()` 函数在 `else` 语句中指示 LED 矩阵中有气体；我们将显示字母 `A`
    来表示警报：
- en: '[PRE10]'
  id: totrans-142
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'We are ready to upload our script to the microcontroller and test that the
    system works. As in the previous section, to test it, bring a lit match to the
    sensor and put it out when close to the sensor to generate smoke. Again, do not
    forget to be very careful about fire safety. *Figure 8.18* shows the complete
    gas sensing device, including the sensor and LED matrix module connected to the
    STM32 microcontroller:'
  id: totrans-143
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 我们准备将我们的脚本上传到微控制器并测试系统是否正常工作。与上一节类似，为了测试它，将点燃的火柴拿到传感器旁，当接近传感器时吹灭以产生烟雾。再次提醒，不要忘记非常注意消防安全。*图8.18*显示了完整的气体感应装置，包括传感器和连接到STM32微控制器的LED矩阵模块：
- en: '![Figure 8.18 – Gas sensor device](img/B16413_Figure_8.18.jpg)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![图8.18 – 气体感应装置](img/B16413_Figure_8.18.jpg)'
- en: Figure 8.18 – Gas sensor device
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 图8.18 – 气体感应装置
- en: Until now, in this section, we have learned how to handle an 8x8 LED matrix
    and use it to have a visual alert on our gas sensor device.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，在本节中，我们学习了如何处理8x8 LED矩阵并使用它来在我们的气体感应装置上设置视觉警报。
- en: In this chapter, we learned how to read to code programs to read a gas sensor
    in a digital and analog way. This has allowed us to reinforce our knowledge of
    data acquisition from sensors in different forms of outputs. This knowledge will
    empower us to create more complex embedded systems, such as automating homes using
    sensors in the environment.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学习了如何读取代码程序以数字和模拟方式读取气体传感器。这使我们能够加强我们对不同形式输出中传感器数据采集的知识。这些知识将使我们能够创建更复杂的嵌入式系统，例如使用环境中的传感器自动化家庭。
- en: Summary
  id: totrans-148
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We had so much to learn in this chapter! First, we learned how to connect the
    MQ-2 gas sensor to the STM32 Blue Pill microcontroller board, both digitally and
    with an AO reading. We then wrote two pieces of code to read digital and analog
    sensor values. Last, we tested the device to understand its operation, displaying
    the sensor data in the serial console.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们学到了很多！首先，我们学习了如何将MQ-2气体传感器连接到STM32 Blue Pill微控制器板，无论是通过数字方式还是通过AO读取。然后，我们编写了两段代码来读取数字和模拟传感器值。最后，我们测试了设备以了解其操作，在串行控制台中显示传感器数据。
- en: This project gave us the skills to read different kinds of sensor data to use
    this knowledge according to our needs. For instance, you can display some sensors
    in a room to monitor the environment in real-time.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目让我们掌握了读取不同类型传感器数据并根据自己的需求使用这些知识的技能。例如，你可以在房间里显示一些传感器来实时监控环境。
- en: In the next chapter, we will enter the fascinating world of the so-called Internet
    of Things. With the knowledge that we will acquire, we will create projects that
    connect to the internet and access our information remotely.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将进入所谓的物联网的迷人世界。通过我们将获得的知识，我们将创建连接到互联网并远程访问我们信息的项目。
- en: Further reading
  id: totrans-152
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Marques G. & Pitarma R. (2017). *Monitoring Health Factors in Indoor Living
    Environments Using Internet of Things.* In: Rocha Á., Correia A., Adeli H., Reis
    L., & Costanzo S. (eds) Recent Advances in Information Systems and Technologies.
    WorldCIST 2017\. Advances in Intelligent Systems and Computing, vol. 570\. Springer,
    Cham. [https://doi.org/10.1007/978-3-319-56538-5_79](https://doi.org/10.1007/978-3-319-56538-5_79)'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: Marques G. & Pitarma R. (2017). *使用物联网监测室内居住环境中的健康因素.* 见：Rocha Á., Correia A.,
    Adeli H., Reis L., & Costanzo S. (eds) Recent Advances in Information Systems
    and Technologies. WorldCIST 2017\. Advances in Intelligent Systems and Computing,
    vol. 570\. Springer, Cham. [https://doi.org/10.1007/978-3-319-56538-5_79](https://doi.org/10.1007/978-3-319-56538-5_79)
