["```cpp\n $ docker --version\n```", "```cpp\n$ docker pull ubuntu:bionic\n```", "```cpp\n $ mkdir ~/test \n```", "```cpp\n$ docker run -ti -v $HOME/test:/mnt ubuntu:bionic\n```", "```cpp\n# uname -a\n```", "```cpp\n $ mkdir -p $HOME/raspberry\n```", "```cpp\n$ qemu-system-arm -M versatilepb -dtb versatile-pb.dtb -cpu arm1176 -kernel kernel-qemu-4.14.79-stretch -m 256 -drive file=2019-07-10-raspbian-buster-lite.img,format=raw -append \"rw console=ttyAMA0 rootfstype=ext4 root=/dev/sda2 loglevel=8\" -net user,hostfwd=tcp::22023-:22,hostfwd=tcp::9090-:9090 -net nic -serial stdio\n```", "```cpp\n # uname -a\n```", "```cpp\n    #include <iostream>\n\n    int main() {\n     std::cout << \"Hello, world!\" << std::endl;\n     return 0;\n    }\n    ```", "```cpp\n    # apt update -y\n    ```", "```cpp\n     # apt install -y crossbuild-essential-armel\n    ```", "```cpp\n    # arm-linux-gnueabi-g++\n    ```", "```cpp\n    # cd /mnt\n    ```", "```cpp\n     # arm-linux-gnueabi-g++ hello.cpp -o hello\n    ```", "```cpp\n    $ sudo systemctl start ssh\n    ```", "```cpp\n    # apt install -y ssh\n    ```", "```cpp\n    # scp -P22023 /mnt/hello pi@192.168.1.5:~\n    ```", "```cpp\n    $ ls hello\n    hello\n    ```", "```cpp\n    $ ./hello\n    ```", "```cpp\n    # ssh pi@192.168.1.5 -p22023\n    ```", "```cpp\n    $ gdb ./hello\n    ```", "```cpp\n    (gdb) run\n    ```", "```cpp\n    (gdb) q\n    ```", "```cpp\n    # apt install gdb gdb-multiarch\n    ```", "```cpp\n     # sudo apt-get install gdbserver\n    ```", "```cpp\n     $ gdbserver 0.0.0.0:9090 ./hello\n    ```", "```cpp\n     # cd /mnt/hello\n    ```", "```cpp\n     # apt install -y gdb-multiarch\n    ```", "```cpp\n     # gdb-multiarch -q ./hello\n    ```", "```cpp\n     target remote 192.168.1.5:9090\n    ```", "```cpp\n     continue\n    ```", "```cpp\n     # apt install -y cmake\n    ```", "```cpp\n    cmake_minimum_required(VERSION 3.5.1)\n    project(hello)\n    add_executable(hello hello.cpp)\n    ```", "```cpp\n    # cd /mnt/hello\n    ```", "```cpp\n     # mkdir build && cd build && cmake ..\n    ```", "```cpp\n    # make\n    ```", "```cpp\n    # file hello\n    ```", "```cpp\n    set(CMAKE_C_COMPILER /usr/bin/arm-linux-gnueabi-gcc)\n    set(CMAKE_CXX_COMPILER /usr/bin/arm-linux-gnueabi-g++)\n    set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)\n    set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)\n    set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)\n    set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)\n    ```", "```cpp\n    # cmake ..\n    ```", "```cpp\n    # make\n    ```", "```cpp\n    # file hello\n    ```"]