- en: Arduino IDE
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Arduino IDE
- en: I have been programming computers, as a hobby or professionally, for over 37
    years. In that time, I have used many different **Integrated Development Environments**
    (**IDE**) and text editors to write code. I wrote my first Hello World program
    on a teletype that did not use either an IDE or a text editor. When I bought my
    first computer, which was a Commodore VIC-20, I used the BASIC programming language
    in programming mode to write my programs. When you were in programming mode, you
    entered the code line by line and each line went into memory as you entered it,
    there wasn't a nice editor or IDE. I wasn't until I learned to program in the
    C programming language, on an IBM PCjr, that I used my first real IDE. Now I wonder
    how I managed to write anything with one.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经作为爱好或专业程序员编程计算机超过 37 年。在这段时间里，我使用了许多不同的**集成开发环境**（**IDE**）和文本编辑器来编写代码。我在一个既没有
    IDE 也没有文本编辑器的电传打字机上编写了我的第一个 Hello World 程序。当我买了我的第一台电脑，Commodore VIC-20 时，我使用编程模式中的
    BASIC 编程语言来编写我的程序。在编程模式下，你逐行输入代码，每行在你输入时进入内存，没有好的编辑器或 IDE。直到我学会了在 IBM PCjr 上用
    C 编程语言编程，我才使用了我的第一个真正的 IDE。现在我想知道我是如何用那个来写任何东西的。
- en: 'In this chapter, you will learn:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将学习：
- en: What an Arduino Sketch is
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arduino 草图的含义
- en: What the Arduino IDE is
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arduino IDE 的含义
- en: What the Arduino Web Editor is
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Arduino Web 编辑器的含义
- en: How to write your first sketch
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何编写你的第一个草图
- en: Before we look at the Arduino IDE and Web Editor, let's look at what an Arduino
    Sketch is to help us understand why we need these tools.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们查看 Arduino IDE 和 Web 编辑器之前，让我们看看 Arduino 草图的含义，以帮助我们理解为什么我们需要这些工具。
- en: Arduino Sketch
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Arduino 草图
- en: When we program the Arduino, the code is put into a project. These projects
    are called **sketches** and a sketch is stored in a **Sketchbook**. A sketch is
    designed to be as simple and straightforward as possible by abstracting away a
    lot of the technical aspects of programming the Arduino by using the prebuilt
    functions.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们为 Arduino 编程时，代码被放入一个项目中。这些项目被称为**草图**，草图存储在**草图簿**中。草图的设计尽可能简单直接，通过使用预构建的函数来抽象出许多编程
    Arduino 的技术方面。
- en: The coding language used to program the Arduino is very similar to the C programming
    language. We will be looking at how to program the Arduino in [Chapter 6](9262ba23-0d76-417c-86d9-f4d9fba798f7.xhtml),
    *Programming the Arduino – The Basics* and [Chapter 7](97f86abb-08ca-4f9d-b4dd-c6f49c0949a1.xhtml),
    *Programming the Arduino – Beyond the Basics*. This chapter is to get you familiar
    with what sketches are and to look at the tools we can use.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 用于编程 Arduino 的编程语言与 C 编程语言非常相似。我们将在[第 6 章](9262ba23-0d76-417c-86d9-f4d9fba798f7.xhtml)“编程
    Arduino – 基础”和[第 7 章](97f86abb-08ca-4f9d-b4dd-c6f49c0949a1.xhtml)“编程 Arduino –
    超越基础”中探讨如何编程 Arduino。本章的目的是让你熟悉草图是什么，并查看我们可以使用的工具。
- en: Before a sketch can be uploaded to an Arduino, the Arduino IDE or Web Editor
    must go through several steps to build the application. The first step to building
    a sketch is to perform some preprocessing, which turns the sketch into a C++ (see-plus-plus)
    program, which is passed to the compiler to turn this human-readable C++ code
    into machine-readable instructions (object files). These object files are then
    linked against the standard Arduino libraries that provide the basic functionality
    for the Arduino. The results of this linking are a single hex file that can be
    uploaded to the Arduino and ran. The nice thing is the Arduino tools perform all
    of this automatically when we tell them to upload the sketch to the Arduino board.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在草图上传到 Arduino 之前，Arduino IDE 或 Web 编辑器必须经过几个步骤来构建应用程序。构建草图的第一个步骤是进行一些预处理，这会将草图转换为一个
    C++（见加加）程序，然后传递给编译器，将这个可读的 C++ 代码转换为机器可读的指令（目标文件）。然后，这些目标文件与提供 Arduino 基本功能的标准
    Arduino 库进行链接。链接的结果是一个可以上传到 Arduino 并运行的单一十六进制文件。好事是，当我们将草图上传到 Arduino 板时，Arduino
    工具会自动执行所有这些操作。
- en: If we were to put a definition on what an Arduino Sketch is, we would say that
    it is the project that contains the human-readable code that can be built and
    uploaded to an Arduino. Now let's look at two tools that we can use to help us
    write and build these sketches, starting with the Arduino IDE.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们要对 Arduino 草图的定义进行说明，我们会说它是一个包含可构建并上传到 Arduino 的人可读代码的项目。现在让我们看看两个可以帮助我们编写和构建这些草图的工具，首先是
    Arduino IDE。
- en: Arduino IDE
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Arduino IDE
- en: 'The Arduino IDE is an integrated development environment that can be installed
    locally on Windows, macOS and Linux-based computers. The IDE can be downloaded
    from the Arduino software page at this URL: [https://www.arduino.cc/en/Main/Software](https://www.arduino.cc/en/Main/Software).
    At the time this book is written, the latest stable version of the IDE is 1.8.5.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Arduino IDE是一个集成开发环境，可以安装在Windows、macOS和基于Linux的计算机上。IDE可以从以下URL的Arduino软件页面下载：[https://www.arduino.cc/en/Main/Software](https://www.arduino.cc/en/Main/Software)。在本书编写时，IDE的最新稳定版本是1.8.5。
- en: 'The following images show what the IDE will look like when it is first run:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图像显示了首次运行IDE时的样子：
- en: '![](img/574f9b92-624b-4a7a-b941-0873ae38282b.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/574f9b92-624b-4a7a-b941-0873ae38282b.png)'
- en: We will start using the IDE at the end of this chapter where we will build our
    first sketch. We will be using it, as well as the Web Editor extensively throughout
    the rest of this book. For now, let's briefly explore the IDE so we can familiarize
    ourselves with some of its basic functionality.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在本章末尾开始使用IDE，我们将构建我们的第一个草图。我们将在本书的其余部分广泛使用它以及Web编辑器。现在，让我们简要地探索IDE，以便我们熟悉其一些基本功能。
- en: Exploring the IDE
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索IDE
- en: 'There are four areas that make up the main development window of the IDE. The
    following screenshot shows these four areas:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: IDE的主开发窗口由四个区域组成。以下截图显示了这四个区域：
- en: '![](img/458f25e0-3724-4689-a769-7c924eb0a9ca.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/458f25e0-3724-4689-a769-7c924eb0a9ca.png)'
- en: The **menu bar** for the IDE functions like menu bars in other applications,
    where you click on one of the options, and a submenu appears with more options.
    We will look at some of the commonly used menu options as we go through this book.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: IDE的**菜单栏**与其他应用程序中的菜单栏类似，您点击其中一个选项，就会出现一个包含更多选项的下拉菜单。随着我们阅读本书，我们将查看一些常用的菜单选项。
- en: The **command bar** provides quick access to five of the most commonly used
    commands. These commands are, from left to right, verify, upload, new, open and
    save. The verify command will attempt to compile the sketch in order to verify
    that there is nothing wrong with the code. The upload command will attempt to
    build and upload the sketch to the attached Arduino. The new command will create
    a new sketch. The open command will open a sketch. Finally, the save command will
    save the sketch.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**命令栏**提供了对五个最常用命令的快速访问。这些命令从左到右依次是验证、上传、新建、打开和保存。验证命令将尝试编译草图以验证代码中没有任何错误。上传命令将尝试构建并将草图上传到连接的Arduino。新建命令将创建一个新的草图。打开命令将打开一个草图。最后，保存命令将保存草图。'
- en: '**Note**: In order to upload a sketch, you must have an Arduino connected to
    the computer you are working on and configured in the IDE otherwise you will receive
    an error. We will look at how to do this in the *Configuring the Arduino within
    the IDE* section.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意**：为了上传草图，您必须将Arduino连接到您正在工作的计算机，并在IDE中配置它，否则您将收到错误。我们将在“在IDE中配置Arduino”部分查看如何进行此操作。'
- en: The **coding area** is where we write the code for the Arduino. You will notice
    that when we start a new sketch, two functions (setup and loop) are automatically
    created in the main tab. We will be working with these functions a lot in this
    book. We will be looking at what these two functions do at the end of this chapter
    when we create our first sketch.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**编码区域**是我们编写Arduino代码的地方。您会注意到，当我们开始一个新的草图时，主标签页会自动创建两个函数（setup和loop）。在这本书中，我们将大量使用这些函数。当我们在本章末尾创建我们的第一个草图时，我们将查看这两个函数的作用。'
- en: The **status area** is used by the IDE to let us know what is happening when
    the IDE is doing something like compiling, uploading or verifying a sketch.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**状态区域**用于IDE让我们知道当IDE正在执行编译、上传或验证草图等活动时发生了什么。'
- en: In order to upload a sketch to an Arduino, we need to connect the Arduino to
    the computer the IDE is running on with a USB cable and configure it in the IDE.
    Configuring the Arduino within the IDE requires us to tell it what type of Arduino
    we are using and what port it is on. Let's see how to do this.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将草图上传到Arduino，我们需要使用USB线将Arduino连接到IDE运行的计算机，并在IDE中配置它。在IDE中配置Arduino需要我们告诉它我们使用的是哪种类型的Arduino以及它在哪个端口上。让我们看看如何操作。
- en: Configuring the Arduino within the IDE
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在IDE中配置Arduino
- en: 'To connect an Arduino to the IDE the first thing the IDE needs to know is what
    type of Arduino is being used. To do this we click on the Tools option in the
    menu bar and select the Board option as shown in the following screenshot:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 要将Arduino连接到IDE，IDE首先需要知道正在使用哪种类型的Arduino。为此，我们点击菜单栏中的工具选项，然后选择板子选项，如图所示：
- en: '![](img/2a321819-ad0c-43f2-b76f-2a16522e7e99.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/2a321819-ad0c-43f2-b76f-2a16522e7e99.png)'
- en: 'When the Board option is selected the IDE displays a list of compatible boards.
    This list will look similar to the following screenshot:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 当选择板子选项时，IDE显示一系列兼容的板子。这个列表看起来可能类似于以下截图：
- en: '![](img/0ce5a7c9-2143-478e-969f-441a68a16b3a.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/0ce5a7c9-2143-478e-969f-441a68a16b3a.png)'
- en: 'From this list, select the board that you are using for your project. Once
    the board is selected, the next thing that the IDE needs to know is what port
    the Arduino is connected too. To select the port, click on the Tools menu option
    from the menu bar and then select the Port option as shown in the following screenshot:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个列表中，选择你为你的项目使用的板子。一旦选择了板子，IDE接下来需要知道Arduino连接到哪个端口。要选择端口，点击菜单栏中的工具菜单选项，然后选择端口选项，如图所示：
- en: '![](img/be507e70-4ea6-445e-a5c5-d79ad993628e.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/be507e70-4ea6-445e-a5c5-d79ad993628e.png)'
- en: 'When the Port option is selected from this menu, the IDE displays a list of
    the ports it is aware of. This list should look something similar to this:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 当从该菜单选择端口选项时，IDE显示它所知道的端口的列表。这个列表应该看起来类似于以下截图：
- en: '![](img/d0516a59-b8ea-4e82-a710-1ced67949fcf.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/d0516a59-b8ea-4e82-a710-1ced67949fcf.png)'
- en: You will probably have a different list of ports; however, it is usually obvious
    which port should be selected because it displays the name of the board attached
    to a port if it sees the board. Most of the time the IDE will automatically select
    it the correct port for you.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能有一个不同的端口列表；然而，通常很明显应该选择哪个端口，因为如果它看到了板子，它会显示连接到端口的板子的名称。大多数时候，IDE会自动为你选择正确的端口。
- en: Once the board and port are selected, the IDE is ready to upload the compiled
    sketch to the board.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦选择了板子和端口，IDE就准备好将编译好的草图上传到板子。
- en: Now that we have seen how to use the Arduino IDE, let's look at how to set up
    and use the Arduino Web editor.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看到了如何使用Arduino IDE，让我们看看如何设置和使用Arduino Web编辑器。
- en: Arduino web editor
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Arduino web editor
- en: The Arduino Web Editor enables us to create and upload sketches within most
    web browsers. Officially the Web Editor is supported with the Chrome, Firefox,
    Safari and Edge browsers with the installation of a plugin.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Arduino Web编辑器使我们能够在大多数网络浏览器中创建和上传草图。官方上，Web编辑器通过安装插件支持Chrome、Firefox、Safari和Edge浏览器。
- en: 'The Web Editor is part of and can be accessed from the Arduino Create project
    here: [https://create.arduino.cc](https://create.arduino.cc)'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: Web编辑器是Arduino Create项目的一部分，可以从这里访问：[https://create.arduino.cc](https://create.arduino.cc)
- en: 'Before you can install the plugin and use the Web Editor, you will need to
    create a free Arduino account. Once we are logged in to our account, the site
    will walk you through installing the plugin. Once the plugin is installed, you
    should see a page similar to this:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在你能够安装插件并使用Web编辑器之前，你需要创建一个免费的Arduino账户。一旦我们登录到我们的账户，网站将引导你安装插件。一旦插件安装完成，你应该会看到一个类似的页面：
- en: '![](img/6204131c-893c-4c80-8f7b-b2a9aee5af78.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/6204131c-893c-4c80-8f7b-b2a9aee5af78.png)'
- en: Let's explore the Web Editor to see how to use it.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探索Web编辑器，看看如何使用它。
- en: Exploring
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索
- en: 'The four main areas of the Web Editor are shown in the following screenshot:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: Web编辑器的四个主要区域如图所示：
- en: '![](img/fd0294c8-2639-4c97-b985-9051defa143b.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/fd0294c8-2639-4c97-b985-9051defa143b.png)'
- en: The **menu bar** of the web editor enables us to quickly access certain items
    like examples, libraries, and the serial monitor. We will look at these items
    later in this chapter.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: Web编辑器的**菜单栏**使我们能够快速访问某些项目，如示例、库和串行监视器。我们将在本章后面讨论这些项目。
- en: The **command bar** provides quick access to commonly used commands and gives
    us the ability to select the board we are using. The icon with the checkmark will
    verify the sketch while the icon with the arrow compiles and uploads the sketch
    to the Arduino. The icon with the three dots opens up a menu that enables us to
    save, rename, download, and delete the current sketch.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**命令栏**提供了对常用命令的快速访问，并使我们能够选择我们正在使用的板子。带有勾选标记的图标将验证草图，带有箭头的图标将编译并将草图上传到Arduino。带有三个点的图标打开一个菜单，使我们能够保存、重命名、下载和删除当前草图。'
- en: The **coding area** is where we write the code for the Arduino. As with the
    Arduino IDE, you will notice that the `setup()` and `loop()` functions were automatically
    created when a new sketch is started.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**代码区域**是我们编写Arduino代码的地方。与Arduino IDE一样，你会注意到当开始一个新的草图时，`setup()`和`loop()`函数会自动创建。'
- en: The **status area** is used by the IDE to let us know what is happening when
    the IDE is doing something like compiling, uploading or verifying a sketch. Let's
    see how to configure Arduino within the Web Editor so we can upload sketches to
    it.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**状态区域**被IDE用来告诉我们当IDE在进行诸如编译、上传或验证草图等操作时发生了什么。让我们看看如何在Web编辑器中配置Arduino，以便我们可以将其草图上传到它。'
- en: Configuring the Arduino within the IDE
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在IDE中配置Arduino
- en: 'In order to upload a sketch to an Arduino, we need to connect the Arduino to
    the computer the Web Editor is running on with a USB cable. After the Arduino
    is connected to the computer, we can select the Arduino and port within the Web
    Editor by clicking on the Select Board or Port section. If the Web Editor recognizes
    the Arduino board, you should see the Arduino board and port listed in the drop-down
    menu. The listing will look like this screenshot:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将草图上传到Arduino，我们需要用USB线将Arduino连接到Web编辑器运行的计算机。Arduino连接到计算机后，我们可以在Web编辑器中通过点击“选择板或端口”部分来选择Arduino和端口。如果Web编辑器识别到Arduino板，你应该在下拉菜单中看到Arduino板和端口的列表。列表看起来像以下截图：
- en: '![](img/b0f1b8dd-4053-42e0-a52b-95846080724e.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](img/b0f1b8dd-4053-42e0-a52b-95846080724e.png)'
- en: If you see the Arduino, select it and you will then be able to upload compiled
    sketches it. The best way to learn the Arduino IDE or Web Editor is to use it
    and we will be using both extensively throughout this book.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你看到Arduino，请选择它，然后你将能够上传编译后的草图。学习Arduino IDE或Web编辑器最好的方法是使用它们，我们将在整本书中广泛使用它们。
- en: Let's look at some of the features of the Arduino IDE and the Web Editor starting
    with the examples that are included.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看Arduino IDE和Web编辑器的一些功能，从包含的示例开始。
- en: Examples
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例
- en: There are numerous examples that are included with the Arduino IDE and the Web
    Editor. These examples are simple sketches that demonstrate the Arduino commands
    and how to use them. These examples range from the very basic sketches that demonstrate
    how to read and write digital I/O to more advance sketches that show how to use
    sensors. While these examples are designed to demonstrate the Arduino commands
    they can also be used as examples of how to write good code for the Arduino.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: Arduino IDE和Web编辑器中包含了许多示例。这些示例是简单的草图，展示了Arduino命令及其使用方法。这些示例从演示如何读取和写入数字I/O的非常基础的草图到展示如何使用传感器的更高级的草图。虽然这些示例旨在演示Arduino命令，但它们也可以用作编写Arduino良好代码的示例。
- en: 'To access the examples within the Arduino IDE, click on the File option in
    the menu bar and then go to the Examples option. You will see a list of categories
    for the examples that look similar to the following screenshot:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问Arduino IDE中的示例，请点击菜单栏中的“文件”选项，然后转到“示例”选项。你会看到一个与以下截图类似的示例类别列表：
- en: '![](img/8c68930b-dc12-428e-9523-918539689f56.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](img/8c68930b-dc12-428e-9523-918539689f56.png)'
- en: 'If you go to any of the categories, you will see a list of examples for that
    categories. If you select an example, such as the `DigitalReadSerial` example
    under the Basics category, the code for the example will load in a new window
    and the sketch will look similar to the following screenshot:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你进入任何一个类别，你会看到该类别的示例列表。如果你选择一个示例，比如在“基础”类别下的`DigitalReadSerial`示例，示例的代码将在新窗口中加载，草图看起来类似于以下截图：
- en: '![](img/a65fbcd5-7aec-4dd7-ad6f-4bf928524c82.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](img/a65fbcd5-7aec-4dd7-ad6f-4bf928524c82.png)'
- en: 'With the Web Editor, to load an example select the Examples option from the
    menu bar. As with the Arduino IDE we will see the same list of example categories.
    This list will look similar to the following screenshot:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Web编辑器，要加载示例，请从菜单栏中选择“示例”选项。与Arduino IDE一样，我们将看到相同的示例类别列表。这个列表看起来类似于以下截图：
- en: '![](img/1382b4b8-a94d-4b05-8764-e42ab648c6dd.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](img/1382b4b8-a94d-4b05-8764-e42ab648c6dd.png)'
- en: 'We can then select any of the categories to see the list of examples. What
    makes the examples in the Web Editor different from the examples in the Arduino
    IDE is that most of the examples in the Web Editor also include layout (Fritzing)
    and schematic diagrams showing how to create a circuit that can be used with the
    example. For example, if we select the same `DigitalReadSerial` example that we
    select in the Arduino IDE, not only will we see the code for the sketch, but we
    will also see the layout as shown in the following screenshot:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以选择任何类别以查看示例列表。Web Editor中的示例与Arduino IDE中的示例的不同之处在于，Web Editor中的大多数示例还包括布局（Fritzing）和电路图，显示如何创建可以与示例一起使用的电路。例如，如果我们选择与Arduino
    IDE中相同的`DigitalReadSerial`示例，我们不仅会看到草图代码，还会看到以下截图所示的布局：
- en: '![](img/d9c96065-38de-4ce3-a6e2-bf18ee45f531.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/d9c96065-38de-4ce3-a6e2-bf18ee45f531.png)'
- en: The diagrams that are included with the Web Editor are great for beginners because
    they show how to build the circuit without having to fully understand the code
    for the example.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: Web Editor中包含的图表非常适合初学者，因为它们显示了如何构建电路，而无需完全理解示例的代码。
- en: There are numerous external libraries that can be used with the Arduino. Let's
    take a look at what libraries are.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多外部库可以与Arduino一起使用。让我们看看什么是库。
- en: Arduino libraries
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Arduino库
- en: Like most development platforms, the Arduino environment can be extended with
    libraries. These libraries provide extra functionality, that we can use in our
    sketches, such as providing access to specific hardware, manipulating data and
    adding extra features like a task scheduler (Arduino Cron Library). There are
    numerous libraries that are built in to the IDE and Web Editor, but we can also
    download other libraries or build our own.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 与大多数开发平台一样，Arduino环境可以通过库进行扩展。这些库提供了额外的功能，我们可以在我们的草图（sketch）中使用，例如提供对特定硬件的访问、操作数据和添加额外功能，如任务调度器（Arduino
    Cron Library）。IDE和Web Editor中内置了许多库，但我们也可以下载其他库或构建自己的库。
- en: 'To access the libraries in the Arduino IDE, we select the Sketch option from
    the menu bar and then select the Include Library option. This will show another
    menu that lets you load a library or manage libraries. This menu should look similar
    to the following screenshot:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问Arduino IDE中的库，我们从菜单栏中选择Sketch选项，然后选择Include Library选项。这将显示另一个菜单，允许您加载库或管理库。此菜单应类似于以下截图：
- en: '![](img/97593999-d575-4140-a4d2-64385bfd5f87.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/97593999-d575-4140-a4d2-64385bfd5f87.png)'
- en: If you select any of the built-in libraries, the header files will automatically
    be included in your sketch. We will learn more about header files in [Chapter
    6](9262ba23-0d76-417c-86d9-f4d9fba798f7.xhtml), *Programming the Arduino – The
    Basics* and [Chapter 7](97f86abb-08ca-4f9d-b4dd-c6f49c0949a1.xhtml), *Programming
    the Arduino – Beyond the Basics*.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您选择任何内置库，头文件将自动包含在您的草图（sketch）中。我们将在[第6章](9262ba23-0d76-417c-86d9-f4d9fba798f7.xhtml)“编程Arduino
    – 基础”和[第7章](97f86abb-08ca-4f9d-b4dd-c6f49c0949a1.xhtml)“编程Arduino – 超越基础”中了解更多关于头文件的信息。
- en: Selecting the Manage Libraries option enables us to download and install other
    libraries that are not included with the standard installation of the Arduino
    IDE. When a library is downloaded and installed, it will then appear in the quick
    list of Arduino libraries and can be used just like the built-in libraries. A
    number of these libraries also install example code that can be accessed from
    the examples section of the IDE.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 选择Manage Libraries选项使我们能够下载和安装Arduino IDE标准安装中未包含的其他库。当一个库被下载并安装后，它将出现在Arduino库的快速列表中，并且可以像内置库一样使用。这些库中的许多也安装了示例代码，可以从IDE的示例部分访问。
- en: 'To access the libraries in the Web Editor, select the Library option from the
    menu bar and a list of available libraries with a search bar will appear to the
    right of the menu bar. The interface will look like the following screenshot:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 要访问Web Editor中的库，从菜单栏中选择Library选项，菜单栏右侧将出现一个带有搜索栏的可用库列表。界面将类似于以下截图：
- en: '![](img/7a4430dc-79e3-4bc3-835d-55b6e8fbed05.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![截图](img/7a4430dc-79e3-4bc3-835d-55b6e8fbed05.png)'
- en: There are hundreds of libraries included within the Web Editor. This makes accessing
    the libraries easier than with the Arduino IDE because we do not need to install
    them. The Web Editor also makes it easier to share sketches that require libraries.
    When sharing a sketch that was created with the Arduino IDE, the person that receives
    the sketch needs to install the correct versions of the required libraries. This
    can occasionally become complicated and confusing. With the Web Editor, when we
    share a sketch, the Web Editor will ensure that the correct libraries are used
    when the sketch is compiled.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Web编辑器中包含数百个库。这使得访问库比Arduino IDE更容易，因为我们不需要安装它们。Web编辑器还使共享需要库的草图更容易。当共享使用Arduino
    IDE创建的草图时，接收草图的人需要安装所需库的正确版本。这有时可能会变得复杂和令人困惑。使用Web编辑器时，当我们共享草图时，Web编辑器将确保在编译草图时使用正确的库。
- en: 'To add a library to a sketch, search for the library from within the search
    bar and when the library appears in the list, hover the mouse over it and an INCLUDE
    button will appear as shown in the following screenshot:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 要将库添加到草图，请在搜索栏中搜索库，当库出现在列表中时，将鼠标悬停在它上面，就会出现一个包含按钮，如下面的截图所示：
- en: '![](img/8a63c252-3d95-4597-8bde-b81eb42d1c2d.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8a63c252-3d95-4597-8bde-b81eb42d1c2d.png)'
- en: Click on the INCLUDE button and the required headers will appear in the code
    and the library will be included with the sketch.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 点击包含按钮，所需的头文件将出现在代码中，库将与草图一起包含。
- en: Before we create our first sketch, let's look at what the serial monitor is.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们创建第一个草图之前，让我们看看串行监视器是什么。
- en: Serial monitor
  id: totrans-82
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 串行监视器
- en: The serial monitor sends and/or receive text, usually through the USB cable.
    This enables us to receive debug messages or send text from the keyboard within
    the Web Editor or the Arduino IDE. We will see how to do both of these when we
    create our first sketches at the end of this chapter.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 串行监视器发送和/或接收文本，通常通过USB电缆。这使得我们能够在Web编辑器或Arduino IDE中接收调试消息或从键盘发送文本。我们将在本章末尾创建第一个草图时看到如何进行这两者。
- en: To use the serial monitor with the Arduino IDE or with the Web Editor, you must
    first connect an Arduino to the computer and establish communication between the
    Arduino and the IDE or Editor.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Arduino IDE或Web编辑器中的串行监视器，您必须首先将Arduino连接到计算机，并在Arduino和IDE或编辑器之间建立通信。
- en: 'To begin using the serial monitor within the Arduino IDE, click on the serial
    monitor icon in the upper right-hand corner of the IDE. The following screenshot
    highlights the serial monitor icon:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Arduino IDE中使用串行监视器，请点击IDE右上角的串行监视器图标。以下截图突出了串行监视器图标：
- en: '![](img/8941a60b-dbf3-4221-bcf8-41fefd693f00.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/8941a60b-dbf3-4221-bcf8-41fefd693f00.png)'
- en: 'The serial monitor will open up in a separate window, as shown in the following
    screenshot:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 串行监视器将在单独的窗口中打开，如下面的截图所示：
- en: '![](img/e6d9ef1c-ef4b-4671-b0a1-b5fb578575a3.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e6d9ef1c-ef4b-4671-b0a1-b5fb578575a3.png)'
- en: The input section enables us to send text to the Arduino. To do this, type the
    text into the input box and click the Send button or hit enter to send it. The
    text from the Arduino will appear in the output section.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 输入部分使我们能够将文本发送到Arduino。为此，请在输入框中输入文本，然后点击发送按钮或按回车键发送。Arduino的文本将出现在输出部分。
- en: 'To use the serial monitor with the Web Editor, click on the Monitor option
    in the menu bar and the serial monitor will appear to the right of the menu bar.
    The following screenshot shows the serial monitor within the Web Editor:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用Web编辑器中的串行监视器，请点击菜单栏中的监视器选项，串行监视器将出现在菜单栏的右侧。以下截图显示了Web编辑器中的串行监视器：
- en: '![](img/82014a23-b5b1-4619-8393-70d9d595dbf0.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/82014a23-b5b1-4619-8393-70d9d595dbf0.png)'
- en: Just like the serial monitor in the Arduino IDE, to send text to the Arduino
    type in into the input box within the input section and then click on the SEND
    button or press enter to send it. The output from the Arduino will appear in the
    output section.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 就像Arduino IDE中的串行监视器一样，要将文本发送到Arduino，请在输入部分内的输入框中输入文本，然后点击发送按钮或按回车键发送。Arduino的输出将出现在输出部分。
- en: Now that we have a basic understanding of how the Arduino IDE and Web Editor
    works, let's create some sketches.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经对Arduino IDE和Web编辑器的工作原理有了基本的了解，让我们创建一些草图。
- en: Hello World
  id: totrans-94
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Hello World
- en: For our first Sketch, we will create the traditional *Hello World* application
    with the Arduino. This application will output the words "Hello World" to the
    serial monitor; however, before we create this application we need to understand
    what the `setup()` and `loop()` functions do.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的第一个Sketch，我们将使用Arduino创建传统的*Hello World*应用程序。这个应用程序将把“Hello World”这几个字输出到串行监视器；然而，在我们创建这个应用程序之前，我们需要了解`setup()`和`loop()`函数的作用。
- en: The `setup()` function is run once and only once when the application first
    starts. This function enables us to initiate any variables or hardware when the
    application first starts. After the `setup()` function completes, the `loop()`
    function is then called for the first time. When the `loop()` function finishes
    it will be called again and will continue to loop until the Arduino is powered
    down.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '`setup()`函数在应用程序第一次启动时只运行一次。这个函数使我们能够在应用程序第一次启动时初始化任何变量或硬件。`setup()`函数完成后，`loop()`函数将被第一次调用。当`loop()`函数完成后，它将被再次调用，并继续循环，直到Arduino断电。'
- en: Let's demonstrate how these functions work. We will need to start off by creating
    a new sketch in either the Arduino IDE or the Web Editor. To create a new sketch
    with the Arduino IDE we can use the New icon on the command bar or select File
    | New from the menu bar. To create a new sketch with the web IDE, click on the
    Sketchbook option from the menu bar and then click on the NEW SKETCH button.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们演示这些函数是如何工作的。我们需要首先在Arduino IDE或Web Editor中创建一个新的Sketch。要使用Arduino IDE创建一个新的Sketch，我们可以使用命令栏上的新建图标，或者从菜单栏中选择文件
    | 新建。要使用Web IDE创建一个新的Sketch，点击菜单栏上的Sketchbook选项，然后点击NEW SKETCH按钮。
- en: 'Once a new sketch is created, add the following code to the `setup()` function:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦创建了一个新的Sketch，将以下代码添加到`setup()`函数中：
- en: '[PRE0]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We will then need to connect an Arduino to the computer and establish a connection
    between the Arduino and the IDE or Web Editor as described previously in this
    chapter. We can then run the sketch by using the upload button on the command
    bar for both the Arduino IDE and the Web Editor. Once the code is compiled and
    uploaded to the Arduino you should see the words `Hello World` outputted once
    to the serial monitor.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们接下来需要将Arduino连接到计算机，并建立Arduino与IDE或Web Editor之间的连接，如本章前面所述。然后我们可以通过在Arduino
    IDE和Web Editor的命令栏上的上传按钮上传Sketch来运行Sketch。一旦代码编译并上传到Arduino，你应该会在串行监视器中看到一次输出`Hello
    World`。
- en: 'Now let''s remove the `Serial.println("Hello World");` line from the `setup()`
    function and put it in the `loop()` function so our code looks like this:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们从`setup()`函数中移除`Serial.println("Hello World");`这一行，并将其放入`loop()`函数中，使我们的代码看起来像这样：
- en: '[PRE1]'
  id: totrans-102
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: We can then upload the sketch and we should see the worlds `Hello World` is
    printed to the serial monitor over and over again. The text will continue to be
    printed until we unplug the Arduino from the computer.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以上传Sketch，我们应该会看到`Hello World`这个词在串行监视器中反复打印。文本将持续打印，直到我们从计算机上拔掉Arduino。
- en: In the last two examples, we used the `Serial.println()` function to output
    text to the serial monitor. This function will output the text and then add a
    newline at the end. We could also use the `Serial.print()` function, which will
    output the text but will not add a newline at the end.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 在最后两个示例中，我们使用了`Serial.println()`函数将文本输出到串行监视器。这个函数会在文本末尾添加一个换行符。我们也可以使用`Serial.print()`函数，它将输出文本，但不会在末尾添加换行符。
- en: 'The output to the serial monitor should look similar to this:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 输出到串行监视器的输出应该类似于以下内容：
- en: '![](img/0650e7d7-818e-4d30-b239-7fe472843e6f.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](img/0650e7d7-818e-4d30-b239-7fe472843e6f.png)'
- en: Now that we have seen how to output text from the Arduino to the serial console,
    let's see how the Arduino can receive a text from the Serial Monitor by creating
    an echo application.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看到了如何从Arduino输出文本到串行控制台，让我们看看Arduino如何通过创建一个回显应用程序来接收来自串行监视器的文本。
- en: Echo
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 回显
- en: An echo application will read the text in from the Serial Monitor and will then
    output it back.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 一个回显应用程序将读取来自串行监视器的文本，并将其回显出来。
- en: 'The text will be entered into the input field, as shown in the following screenshot:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 文本将被输入到输入字段中，如下面的截图所示：
- en: '![](img/2aeeab9a-277a-4979-9943-38b303c32ea2.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](img/2aeeab9a-277a-4979-9943-38b303c32ea2.png)'
- en: 'And the text will be echoed, as shown in the following screenshot:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 文本将被回显，如下面的截图所示：
- en: '![](img/40aa8939-f351-4dba-9fd1-584b657d34f1.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](img/40aa8939-f351-4dba-9fd1-584b657d34f1.png)'
- en: 'We will start off by creating a new sketch and add the following code to it:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将首先创建一个新的Sketch，并向其中添加以下代码：
- en: '[PRE2]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In this code, we start off by defining a variable named `bytesIn` of the byte
    type. Then within the `setup()` function the data rate for the serial data transmission
    is set to 9600 baud.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 在此代码中，我们首先定义一个名为 `bytesIn` 的字节类型变量。然后在 `setup()` 函数中，将串行数据传输的波特率设置为 9600 波特。
- en: Within the `loop()` function we use the `Serial.available()` function to see
    if there is any data stored in the serial queue. The `Serial.available()` function
    returns the number of bytes available for reading in the serial receive buffer.
    If there are bytes available to read, the code then uses the `read()` function
    to read the bytes and then uses the `write()` function to write the bytes back
    to the Serial Monitor.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 在 `loop()` 函数中，我们使用 `Serial.available()` 函数来查看串行队列中是否有任何数据存储。`Serial.available()`
    函数返回串行接收缓冲区中可用于读取的字节数。如果有可读的字节，代码随后使用 `read()` 函数读取字节，然后使用 `write()` 函数将字节写回串行监视器。
- en: The difference between the `write()` function used in this code and the `println()`
    function used in the previous examples is the `println()` function will print
    the data as human-readable ASCII text while the `write()` function will write
    the data as bytes. In this example, if we used the `println()` function we will
    see the ASCII equivalent of the characters that were entered rather than the characters
    themselves.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在此代码中使用的 `write()` 函数与之前示例中使用的 `println()` 函数之间的区别是，`println()` 函数将数据以人类可读的
    ASCII 文本形式打印，而 `write()` 函数将数据以字节形式写入。在此示例中，如果我们使用 `println()` 函数，我们将看到输入字符的 ASCII
    等价字符，而不是字符本身。
- en: Summary
  id: totrans-119
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we saw how to set up the Arduino IDE and the Web Editor. We
    also learned the basic functionality of both. At the end of this chapter, we saw
    how to use the Serial Monitor to send and receive data to and from the Arduino.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们了解了如何设置 Arduino IDE 和 Web 编辑器，还学习了它们的基本功能。在本章末尾，我们看到了如何使用串行监视器向 Arduino
    发送和接收数据。
- en: In the next chapter, we will begin to learn how to program the Arduino.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将开始学习如何编程 Arduino。
