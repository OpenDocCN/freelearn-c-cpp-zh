["```cpp\n1\\. Let lref be the result of evaluating AdditiveExpression.\n2\\. Let lval be ? GetValue(lref).\n3\\. Let rref be the result of evaluating MultiplicativeExpression.\n4\\. Let rval be ? GetValue(rref).\n5\\. Let lprim be ? ToPrimitive(lval).\n6\\. Let rprim be ? ToPrimitive(rval).\n7\\. If Type(lprim) is String or Type(rprim) is String, then\n   a. Let lstr be ? ToString(lprim).\n   b. Let rstr be ? ToString(rprim).\n   c. Return the string-concatenation of lstr and rstr.\n8\\. Let lnum be ? ToNumber(lprim).\n9\\. Let rnum be ? ToNumber(rprim).\n10.Return the result of applying the addition operation to lnum and      \n   rnum.\n```", "```cpp\nfunction Point( x, y ) {\n    this.x = x;\n    this.y = y;\n}\n\nvar p1 = new Point(1, 100);\nvar p2 = new Point( 10, 20 );\n```", "```cpp\np2.z = 50;\n```", "```cpp\ngit clone https://github.com/emscripten-core/emsdk.git\n```", "```cpp\ncd emsdk\n```", "```cpp\n cd \\emsdk\\emsdk-master\n```", "```cpp\nemsdk install latest\n```", "```cpp\nemsdk activate latest\n```", "```cpp\nemsdk_env.bat\n```", "```cpp\nsudo apt-get install python\n```", "```cpp\nsudo apt-get install git\n```", "```cpp\ngit clone https://github.com/emscripten-core/emsdk.git\n```", "```cpp\ncd emsdk\n```", "```cpp\n./emsdk install latest\n./emsdk activate latest\nsource ./emsdk_env.sh\n```", "```cpp\nemcc --version\n```", "```cpp\n#include <emscripten.h>\n#include <stdlib.h>\n#include <stdio.h>\n\nint main() {\n    printf(\"hello wasm\\n\");\n}\n```", "```cpp\nemcc hello.c --emrun -o hello.html\n```", "```cpp\nemrun --browser firefox hello.html\n```", "```cpp\nemrun --list_browsers\n```"]