["```cpp\nHWND hwndButton = CreateWindow(\n  L\"BUTTON\", // Predefined class; Unicode assumed      \n  L\"OK\", // Button text      \n  WS_TABSTOP | WS_VISIBLE | WS_CHILD | BS_DEFPUSHBUTTON, // Styles      \n  10, // x position      \n  10, // y position      \n  100, // Button width     \n  100, // Button height     \n  m_hwnd, // Parent window     \n  NULL, // No menu.     \n  (HINSTANCE)GetWindowLong(m_hwnd, GWL_HINSTANCE),     \n  NULL); // Pointer not needed.\n```", "```cpp\nGtkWidget* button = gtk_button_new_with_label(\"Linux button\");\n```", "```cpp\nQT += widgets\nQT += network\nSOURCES += test.cpp\nSOURCES += main.cpp\n```", "```cpp\nQT += widgets\nQT += network\nSOURCES += test.cpp\nSOURCES += main.cpp\nwin32 {\n SOURCES += windows_specific.cpp\n}\nunix {\n SOURCES += linux_world.cpp\n}\n```", "```cpp\n#include <QtWidgets>\n\nint main(int argc, char** argv)\n{\n  QApplication app(argc, argv);\n\n  QPushButton btn(\"Click me!\");\n  btn.show();\n\n  return app.exec();\n}\n```", "```cpp\nclass MyAwesomeButton : public QPushButton\n{\n  Q_OBJECT\npublic:\n void keyPressedEvent(QKeyEvent* e) override\n {\n // anything that we need to do when the button is pressed\n }\n};\n```", "```cpp\n#include <QtWidgets>\n\nint main(int argc, char** argv)\n{\n  QApplication app(argc, argv);\n QWidget window;\n window.resize(120, 100);\n window.setWindowTitle(\"Mastering C++\");\n window.show();\n\n  return app.exec();\n}\n```", "```cpp\nbool connect(const QObject* sender, const char* signal, \n  const QObject* receiver, const char* method, \n  Qt::ConnectionType type = Qt::AutoConnect);\n\nbool disconnect(const QObject* sender, const char* signal, \n  const QObject* receiver, const char* method);\n```", "```cpp\nQPushButton btn(\"Click me!\");\nQLabel lbl;\nlbl.setText(\"No signal received\");\nQObject::connect(&btn, SIGNAL(clicked()), &lbl, SLOT(setText(const QString&)));\n```", "```cpp\nclass MyLabel : public QLabel\n{\nQ_OBJECT\npublic slots:\n  void setCustomText() { \n    this->setText(\"received a signal\");\n  }\n};\n```", "```cpp\nclass Example\n{\nQ_OBJECT:\npublic:\n  // member functions\npublic slots:\n  // public slots\nprivate slots:\n  // private slots\nsignals: // no public, private, or protected\n  // signals without any definition, only the prototype\n};\n```", "```cpp\nQPushButton btn(\"Click me!\");\nMyLabel lbl;\nlbl.setText(\"No signal received\");\nQOBject::connect(&btn, SIGNAL(clicked()), &lbl, SLOT(setCustomText()));\n```", "```cpp\n#include <QListWidget>\n\nint main(int argc, char** argv)\n{\n  QApplication app(argc, argv);\n  QListWidget* listWgt{new QListWidget};\n  return app.exec();\n}\n```", "```cpp\nnew QListWidgetItem(\"Amat\", listWgt);\nnew QListWidgetItem(\"Samvel\", listWgt);\nnew QListWidgetItem(\"Leia\", listWgt);\n```", "```cpp\nQListWidgetItem* newName{new QListWidgetItem};\nnewName->setText(\"Sveta\");\nlistWgt->insertItem(0, newName);\n```", "```cpp\nQModelIndex itemAtRow1Col2 = model->index(1, 2);\n```", "```cpp\nQStringList lst;\nlst << \"item 1\" << \"item 2\" << \"item 3\";\n\nQStringListModel model;\nmodel.setStringList(lst);\n\nQListView lview;\nlview.setModel(model);\n```", "```cpp\n#include <QtWidgets>\n\nint main(int argc, char** argv)\n{\n  QApplication app(argc, argv);\n QWidget window;\n window.resize(120, 100);\n window.setWindowTitle(\"Mastering C++\");\n window.show();\n\n  return app.exec();\n}\n```", "```cpp\n#include <QtWidgets>\n\nint main(int argc, char** argv)\n{\n  QApplication app(argc, argv);\nQWidget window;\n  window.resize(120, 100);\n  window.setWindowTitle(\"Mastering C++\");\n  window.show();\n\n QPushButton* btn = new QPushButton(\"Click me!\", &window);\n\n  return app.exec();\n}\n```", "```cpp\nclass MyWidget : public QWidget\n{}; \n```", "```cpp\nclass MyWidget : public QWidget\n{\nQ_OBJECT\npublic:\n  // public section\n\nsignals: \n  // list of signals\n\npublic slots:\n  // list of public slots\n};\n```", "```cpp\nQWidget *window = new QWidget;\nQPushButton *btn1 = new QPushButton(\"Leia\");\nQPushButton *btn2 = new QPushButton(\"Patrick\");\nQPushButton *btn3 = new QPushButton(\"Samo\");\nQPushButton *btn4 = new QPushButton(\"Amat\");\n\nQHBoxLayout *layout = new QHBoxLayout;\nlayout->addWidget(btn1);\nlayout->addWidget(btn2);\nlayout->addWidget(btn3);\nlayout->addWidget(btn4);\n\nwindow->setLayout(layout);\nwindow->show();\n```", "```cpp\nQVBoxLayout* layout = new QVBoxLayout;\n```", "```cpp\nQGridLayout *layout = new QGridLayout;\nlayout->addWidget(btn1, 0, 0);\nlayout->addWidget(btn2, 0, 1);\nlayout->addWidget(btn3, 1, 0);\nlayout->addWidget(btn4, 1, 1);\n```", "```cpp\nQVBoxLayout *vertical = new QVBoxLayout;\nvertical->addWidget(btn1);\nvertical->addWidget(btn2);\n\nQHBoxLayout *horizontal = new QHBoxLayout;\nhorizontal->addWidget(btn3);\nhorizontal->addWidget(btn4);\n\nvertical->addItem(horizontal);\n\n```"]