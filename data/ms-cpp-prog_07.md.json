["```cpp\ngit clone https://github.com/google/googletest.git\n```", "```cpp\ncmake CMakeLists.txt\n```", "```cpp\nsudo make install\n```", "```cpp\ng++ -c googletest/googletest/src/gtest-all.cc googletest/googlemock/src/gmock-all.cc googletest/googlemock/src/gmock_main.cc -I googletest/googletest/ -I googletest/googletest/include -I googletest/googlemock -I googletest/googlemock/include -lpthread -\n```", "```cpp\nar crf libgtest.a gmock-all.o gmock_main.o gtest-all.o\n```", "```cpp\ng++ -c googletest/googletest/src/gtest-all.cc    googletest/googlemock/src/gmock-all.cc googletest/googlemock/src/gmock_main.cc -I googletest/googletest/ -I googletest/googletest/include \n-I googletest/googlemock  -I googletest/googlemock/include -lpthread -std=c++14\n```", "```cpp\n-I googletest/googletest\n-I googletest/googletest/include\n-I googletest/googlemock\n-I googletest/googlemock/include\n```", "```cpp\nar crv libgtest.a gtest-all.o gmock_main.o gmock-all.o\n```", "```cpp\ng++ -o tester.exe src/Math.cpp test/MathTest.cpp -I googletest/googletest \n-I googletest/googletest/include -I googletest/googlemock     \n-I googletest/googlemock/include -I src libgtest.a -lpthread\n\n```", "```cpp\n-I googletest/googletest\n-I googletest/googletest/include\n-I googletest/googlemock\n-I googletest/googlemock/include\n-I src\n```", "```cpp\nC:\\Users\\jegan\\googletest\\googletest\\src\\gtest-all.cc\nC:\\Users\\jegan\\googletest\\googlemock\\src\\gmock-all.cc\nC:\\Users\\jegan\\googletest\\googlemock\\src\\gmock_main.cc\n```", "```cpp\nC:\\Users\\jegan\\googletest\\googletest\nC:\\Users\\jegan\\googletest\\googletest\\include\nC:\\Users\\jegan\\googletest\\googlemock\nC:\\Users\\jegan\\googletest\\googlemock\\include\n```", "```cpp\nC:\\Users\\jegan\\googletest\\googletest\nC:\\Users\\jegan\\googletest\\googletest\\include\nC:\\Users\\jegan\\googletest\\googlemock\nC:\\Users\\jegan\\googletest\\googlemock\\include\nC:\\Projects\\MasteringC++Programming\\MathApp\\MathApp\n```", "```cpp\nTest Case : Test a simple addition\nInput: \"10 15 +\"\nExpected Output: 25.0\n```", "```cpp\ntest/RPNCalculatorTest.cpp\n\nTEST ( RPNCalculatorTest, testSimpleAddition ) { \n         RPNCalculator rpnCalculator; \n         double actualResult = rpnCalculator.evaluate ( \"10 15 +\" ); \n         double expectedResult = 25.0; \n         EXPECT_EQ ( expectedResult, actualResult ); \n}\n```", "```cpp\nsrc/RPNCalculator.h\n\n#include <iostream>\n#include <string>\nusing namespace std;\n\nclass RPNCalculator {\n  public:\n      double evaluate ( string );\n};\n```", "```cpp\nsrc/RPNCalculator.cpp\n\n#include \"RPNCalculator.h\"\n\ndouble RPNCalculator::evaluate ( string rpnMathExpression ) {\n    return 0.0;\n}\n```", "```cpp\nTest Case : Test a simple subtraction\nInput: \"25 10 -\"\nExpected Output: 15.0\n```", "```cpp\ntest/RPNCalculatorTest.cpp\n\nTEST ( RPNCalculatorTest, testSimpleSubtraction ) { \n         RPNCalculator rpnCalculator; \n         double actualResult = rpnCalculator.evaluate ( \"25 10 -\" ); \n         double expectedResult = 15.0; \n         EXPECT_EQ ( expectedResult, actualResult ); \n}\n```", "```cpp\nTest Case : Test a simple multiplication\nInput: \"25 10 *\"\nExpected Output: 250.0\n```", "```cpp\ntest/RPNCalculatorTest.cpp\n\nTEST ( RPNCalculatorTest, testSimpleMultiplication ) { \n         RPNCalculator rpnCalculator; \n         double actualResult = rpnCalculator.evaluate ( \"25 10 *\" ); \n         double expectedResult = 250.0; \n         EXPECT_EQ ( expectedResult, actualResult ); \n}\n```", "```cpp\nTest Case : Test a simple division\nInput: \"250 10 /\"\nExpected Output: 25.0\n```", "```cpp\ntest/RPNCalculatorTest.cpp\n\nTEST ( RPNCalculatorTest, testSimpleDivision ) { \n         RPNCalculator rpnCalculator; \n         double actualResult = rpnCalculator.evaluate ( \"250 10 /\" ); \n         double expectedResult = 25.0; \n         EXPECT_EQ ( expectedResult, actualResult );\n}\n```", "```cpp\nTest Case : Test a complex rpn expression\nInput: \"2  5  *  4  + 7  2 -  1  +  /\"\nExpected Output: 25.0\n```", "```cpp\ntest/RPNCalculatorTest.cpp\n\nTEST ( RPNCalculatorTest, testSimpleDivision ) { \n         RPNCalculator rpnCalculator; \n         double actualResult = rpnCalculator.evaluate ( \"250 10 /\" ); \n         double expectedResult = 25.0; \n         EXPECT_EQ ( expectedResult, actualResult );\n}\n```", "```cpp\ntest/RPNCalculatorTest.cpp\n\nTEST ( RPNCalculatorTest, testComplexExpression ) { \n         RPNCalculator rpnCalculator; \n         double actualResult = rpnCalculator.evaluate ( \"2  5  *  4  +  7  2 - 1 +  /\" ); \n         double expectedResult = 2.33333; \n         ASSERT_NEAR ( expectedResult, actualResult, 4 );\n}\n```", "```cpp\nTEST ( MobileTest, testPowerOnWhenCameraONSucceeds ) {\n\n     Mobile mobile;\n     ASSERT_TRUE ( mobile.powerOn() );\n\n}\n```"]