- en: 'Section 3: Expanding Your C++ Programming Repertoire'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3节：扩展您的C++编程技能
- en: The goal of this section is to expand your C++ programming skills beyond the
    OOP skills, to encompass other critical features of C++.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的目标是扩展您的C++编程技能，超越面向对象编程技能，涵盖C++的其他关键特性。
- en: The initial chapter in this section explores exception handling in C++ through
    understanding the mechanisms of try, throw, and catch, and through examining many
    examples to explore exception mechanics by delving into various exception handling
    scenarios. Additionally, this chapter expands exception class hierarchies with
    new exception classes.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的初始章节通过理解try、throw和catch的机制，并通过检查许多示例来探索异常机制，深入研究各种异常处理场景来探索C++中的异常处理。此外，本章通过引入新的异常类来扩展异常类层次结构。
- en: The next chapter digs into the topics of the proper usage of friend functions
    and friend classes as well as operator overloading (which may sometimes require
    friends) to make operations polymorphic between built-in and user defined types.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章深入探讨了友元函数和友元类的正确使用方式，以及运算符重载（有时可能需要友元）以使内置类型和用户定义类型之间的操作多态化。
- en: The following chapter explores using C++ templates to help make code generic
    and usable for a variety of data types using template functions and template classes.
    Additionally, this chapter explains how operator overloading will assist in making
    template code extensible for virtually any data type.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章探讨了使用C++模板来帮助使代码通用化，并对各种数据类型使用模板函数和模板类。此外，本章解释了运算符重载如何帮助使模板代码对几乎任何数据类型都可扩展。
- en: In the next chapter, the Standard Template Library in C++ is introduced and
    core STL containers such as list, iterator, deque, stack, queue, priority_queue
    and map are examined. Additionally, STL algorithms and functors are introduced.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，将介绍C++中的标准模板库，并检查核心STL容器，如列表、迭代器、双端队列、栈、队列、优先队列和映射。此外，还将介绍STL算法和函数对象。
- en: The final chapter in this section surveys testing OO programs and components
    through exploring the canonical class form, creating drivers for component testing,
    testing classes related through inheritance, association and aggregation, and
    testing exception handling mechanisms.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本节的最后一章通过探索规范类形式、为组件测试创建驱动程序、测试通过继承、关联和聚合相关的类以及测试异常处理机制，对测试OO程序和组件进行了调查。
- en: 'This section includes the following chapters:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本节包括以下章节：
- en: '[*Chapter 11*](B15702_11_Final_NM_ePub.xhtml#_idTextAnchor417)*, Handling Exceptions*'
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第11章*]，处理异常'
- en: '[*Chapter 12*](B15702_12_Final_NM_ePub.xhtml#_idTextAnchor453)*, Friends and
    Operator Overloading*'
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第12章*]，友元和运算符重载'
- en: '[*Chapter 13*](B15702_13_Final_NM_ePub.xhtml#_idTextAnchor486)*, Working with
    Templates*'
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第13章*]，使用模板'
- en: '[*Chapter 14*](B15702_14_Final_NM_ePub.xhtml#_idTextAnchor518)*, Understanding
    STL Basics*'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第14章*]，理解STL基础'
- en: '[*Chapter 15*](B15702_15_Final_NM_ePub.xhtml#_idTextAnchor572)*, Testing Classes
    and Components*'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第15章*]，测试类和组件'
