- en: '4'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '4'
- en: Adjusting Cameras and Lights
  id: totrans-1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调整摄像机和灯光
- en: When you start a new scene, there are default **camera** and **light** objects
    in the **Outliner**. Although they are part of the scene, when you are modeling
    a new object, rotating around it, and looking at a material preview of it, you
    are still using Blender’s internal camera and lighting system. This default behavior
    is good for working fast but doesn’t produce artistic and accurate results.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 当你开始一个新的场景时，在**大纲**中会有默认的**摄像机**和**灯光**对象。尽管它们是场景的一部分，但当你正在建模一个新对象，围绕它旋转，查看其材质预览时，你仍在使用Blender的内部摄像机和照明系统。这种默认行为适合快速工作，但不会产生艺术和准确的结果。
- en: 'In this chapter, you’ll learn what a camera does and how to employ lights to
    get the look you want. The premise is simple: you can’t see anything without a
    light, and you can’t record or capture anything if you have no apparatus to do
    so.'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，你将了解摄像机的作用以及如何使用灯光来达到你想要的效果。前提很简单：没有灯光你什么也看不见，如果没有设备来记录或捕捉，你什么也记录不了。
- en: Although it sounds like we are covering two distinct topics, we’ll talk about
    both cameras and lights in this chapter. Between the two, we’ll prioritize lights
    over cameras; you’ll be provided with an explanation of why.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然听起来我们正在介绍两个不同的主题，但本章我们将讨论摄像机和灯光。在这两者之间，我们将优先考虑灯光；你将得到一个解释为什么的原因。
- en: 'Thus, just like in real life, a camera and light conditions work together,
    and they go a long way to get the best shot you want. To that end, we will cover
    the following topics:'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，就像在现实生活中一样，摄像机和灯光条件是相互协作的，它们对于获得你想要的最佳镜头至关重要。为此，我们将涵盖以下主题：
- en: Rendering a scene
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 渲染场景
- en: Understanding light types
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 理解灯光类型
- en: Introducing MatCap and Ambient Occlusion
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 介绍MatCap和环境遮挡
- en: After reading this chapter, you’ll know how to pick the correct light type and
    capture a shot of your scene. You’ll also know why you may want to postpone setting
    up cameras and lights. However, we’ll offer you a way to attain some semblance
    of visual fidelity.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读本章后，你将知道如何选择正确的灯光类型并捕捉场景的镜头。你还将知道为什么你可能想要推迟设置摄像机和灯光。然而，我们将为你提供一种达到一定视觉真实感的方法。
- en: Technical requirements
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'We’ll be entering new territory in this chapter, so it will be safer for you
    to rely on the files in this book’s GitHub repository: [https://github.com/PacktPublishing/Game-Development-with-Blender-and-Godot](https://github.com/PacktPublishing/Game-Development-with-Blender-and-Godot).'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将进入新的领域，因此，你可以更安全地依赖本书GitHub仓库中的文件：[https://github.com/PacktPublishing/Game-Development-with-Blender-and-Godot](https://github.com/PacktPublishing/Game-Development-with-Blender-and-Godot)。
- en: The appropriate filename will be mentioned when it’s relevant. These files have
    already been set up for you so that you can focus on the material in this chapter.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 当相关时，将提到适当的文件名。这些文件已经为你设置好了，这样你就可以专注于本章的内容。
- en: Rendering a scene
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 渲染场景
- en: In the computing world, the word **render** is similar to its other meanings
    in a dictionary. The rendering process in Blender will take a raw scene and produce
    a refined result. In more advanced cases, where your scene may have a **physics**
    or a **particle** object, this process will be responsible for calculating the
    state of these dynamic objects too. However, for brevity, we’ll only look at what
    role the camera and light objects play in renders.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在计算机领域，“渲染”这个词与词典中的其他含义相似。在Blender中的渲染过程将原始场景转换为精细的结果。在更高级的情况下，如果你的场景可能包含**物理**或**粒子**对象，这个过程还将负责计算这些动态对象的状态。然而，为了简洁起见，我们只关注摄像机和灯光对象在渲染中扮演的角色。
- en: 'Let’s create our first render by doing the following:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过以下步骤创建我们的第一个渲染：
- en: Start a new Blender scene.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 开始一个新的Blender场景。
- en: Press *F12*.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *F12*。
- en: 'Alternatively, you can use the **Render** menu near the application’s title
    at the top. This should give you the following output:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 或者，你可以使用应用顶部附近的**渲染**菜单。这应该会给你以下输出：
- en: '![Figure 4.1 – Your first render of a default cube with Blender’s default camera
    and light options ](img/Figure_4.01_B17473.jpg)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![图4.1 – 使用Blender默认摄像机和灯光选项渲染默认立方体的第一个渲染效果](img/Figure_4.01_B17473.jpg)'
- en: Figure 4.1 – Your first render of a default cube with Blender’s default camera
    and light options
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.1 – 使用Blender默认摄像机和灯光选项渲染默认立方体的第一个渲染效果
- en: This is nothing exciting perhaps since this is pretty much the look you are
    used to seeing while working within Blender. The render is displayed in a separate
    window that covers the Blender window you were just working on. Therefore, you
    can close this window by pressing the operating system’s close button or by pressing
    *Esc* to return to Blender.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能并不令人兴奋，因为当你使用Blender工作时，你通常都会看到这样的外观。渲染显示在一个单独的窗口中，该窗口覆盖了你刚刚工作的Blender窗口。因此，你可以通过按操作系统的关闭按钮或按*Esc*返回Blender来关闭此窗口。
- en: If you take more renders and go back and forth, you’ll notice that the grid
    underneath the cube and other objects, such as the camera and light, are no longer
    part of the render. This is expected. These objects, called **gizmos**, will facilitate
    things for you but won’t be with you at the end of the journey. They work like
    scaffolding during the construction of a building. Although they are helpful while
    doing the work, they are taken away after the job is finished.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你拍摄更多的渲染并来回切换，你会注意到立方体和其他对象（如相机和灯光）下面的网格不再包含在渲染中。这是预期的。这些被称为**辅助工具**的对象将为你提供便利，但最终不会与你在一起。它们就像建筑建造过程中的脚手架。虽然它们在工作时很有帮助，但在工作完成后就会被移走。
- en: 'Let’s repeat the previous exercise by changing one thing. What would happen
    if there were no cameras in the scene? Time to experiment:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过改变一个东西来重复之前的练习。如果场景中没有相机会发生什么？是时候进行实验了：
- en: Right-click **Camera** in the **Outliner**.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**大纲视图**中右键单击**相机**。
- en: Delete this **Camera** object.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除这个**相机**对象。
- en: Press *F12*.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*F12*。
- en: Did you expect to see a pitch-black render? Instead, you got an error stating
    that no camera was found in the scene. No camera means there isn’t any instrument
    to render your scene, so Blender displays an error message.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 你预期会看到一个全黑的渲染吗？相反，你得到了一个错误信息，表明场景中没有找到相机。没有相机意味着没有工具来渲染你的场景，所以Blender显示了一个错误信息。
- en: 'Let’s run a similar experiment by removing the **Light** object. After starting
    a new Blender scene, follow these steps:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过删除**灯光**对象进行一个类似的实验。在启动一个新的Blender场景后，按照以下步骤操作：
- en: Right-click **Light** in the **Outliner**.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**大纲视图**中右键单击**灯光**。
- en: Delete this **Light** object.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 删除这个**灯光**对象。
- en: Press *F12*.
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按*F12*。
- en: 'Let’s speculate about what we expect to see. We have a camera to render the
    scene but no lights. Even though the cube object is part of the scene, we should
    not be able to see it. And yet, if you look at the following render, you will
    see a silhouette of the cube:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们推测一下我们期望看到的内容。我们有一个相机来渲染场景，但没有灯光。尽管立方体对象是场景的一部分，但我们不应该能看到它。然而，如果你查看下面的渲染，你会看到一个立方体的轮廓：
- en: '![Figure 4.2 – An unexpected render when there are no lights in the scene ](img/Figure_4.02_B17473.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![图4.2 – 场景中没有灯光时的意外渲染](img/Figure_4.02_B17473.jpg)'
- en: Figure 4.2 – An unexpected render when there are no lights in the scene
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.2 – 场景中没有灯光时的意外渲染
- en: 'Most software applications come with default settings for the sake of helping
    out the user. In this case, Blender comes with a background color that contributes,
    unfortunately, to the result in the previous render. If you were to change the
    color of this setting to black, for example, then you’d have a completely black
    render. To achieve that, follow these steps:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数软件应用程序都带有默认设置，以便帮助用户。在这种情况下，Blender自带了一个背景色，不幸的是，这个背景色对之前的渲染结果有影响。如果你将这个设置的色调改为黑色，例如，那么你将得到一个完全黑色的渲染。要实现这一点，请按照以下步骤操作：
- en: Switch to the **Shading** workspace, as you did in [*Chapter 3*](B17473_03.xhtml#_idTextAnchor042),
    *Adding and Creating Textures*.
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 切换到**着色**工作区，就像你在[*第3章*](B17473_03.xhtml#_idTextAnchor042)中做的那样，*添加和创建纹理*。
- en: Switch from **Object** to **World** mode in the **Shader Editor** by using the
    dropdown near where the four views meet.
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在**着色器编辑器**中通过使用四个视图交汇处的下拉菜单从**对象**模式切换到**世界**模式。
- en: Change the `000000`.
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将`000000`更改。
- en: 'The following screenshot shows the setup for changing the background color:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了更改背景色的设置：
- en: '![Figure 4.3 – We can also use the Shader Editor to change the scene’s background
    color ](img/Figure_4.03_B17473.jpg)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![图4.3 – 我们也可以使用着色器编辑器来更改场景的背景色](img/Figure_4.03_B17473.jpg)'
- en: Figure 4.3 – We can also use the Shader Editor to change the scene’s background
    color
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.3 – 我们也可以使用着色器编辑器来更改场景的背景色
- en: If you take another render now, you’ll notice that it’s all black. There is
    neither direct nor indirect light or color contributing to the result. So, although
    things are looking rather dark, this is the result we expect to see. When would
    this be useful? If you would like zero surprises, which means you’d rather control
    every single light source and how much they contribute, then picking a black color
    for the background might be a good idea.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你现在再次进行渲染，你会注意到整个画面都是黑色的。没有直接或间接的光或颜色对结果产生影响。所以，尽管东西看起来相当暗，但这正是我们期望看到的结果。这什么时候会有用？如果你希望没有惊喜，这意味着你宁愿控制每一个光源及其贡献的程度，那么选择黑色作为背景颜色可能是个好主意。
- en: However, most Blender users are artists, not scientists. So, they often have
    multiple light sources and adjust these objects’ settings to achieve visual fidelity,
    not scientific accuracy. Therefore, leaving the background color alone might be
    something you’ll do as well.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，大多数Blender用户是艺术家，而不是科学家。因此，他们通常会使用多个光源，并调整这些对象的设置以实现视觉真实感，而不是科学准确性。因此，保留背景颜色可能也是你可能会做的事情。
- en: Speaking of light sources and their settings, this is the right moment to segue
    into learning about the different types of light Blender employs. We’ll light
    things up in the next section.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 说到光源及其设置，这正是学习Blender使用不同类型光的正确时机。我们将在下一节中点亮事物。
- en: Understanding light types
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解光类型
- en: So far, we have seen a render where the light object plays a role and another
    render when the light object was missing. We haven’t discovered what this light
    object is. In this section, we’ll get to know different types of lights. By the
    end of this section, you’ll have a good level of knowledge of each type and why
    they matter.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们已经看到了一个有光源的渲染和一个没有光源的渲染。我们还没有发现这个光源是什么。在本节中，我们将了解不同类型的灯光。到本节结束时，你将对每种类型及其重要性有一个很好的了解。
- en: We’ll do this discovery in the context of the **Eevee** render engine because
    it simulates what game engines will do with your scene well. Since it’s enabled
    by default, you don’t need to make any changes at this point. Hence, you first
    need good knowledge of lighting your scene with the basic types of light. That’s
    what we are going to do next.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将在**Eevee**渲染引擎的背景下进行这一发现，因为它很好地模拟了游戏引擎将如何处理你的场景。由于它默认启用，你在这个阶段不需要做出任何更改。因此，你首先需要了解如何使用基本类型的光来照亮场景。这正是我们接下来要做的。
- en: Types of light
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 光的类型
- en: 'Let’s look at the different types of light that are available:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看可用的不同类型的光：
- en: '**Point**: This is the default light type you get when you start a new Blender
    scene. It’s also called an omni light sometimes, short for omnidirectional, since
    it casts light in all directions. Lightbulbs are a decent real-life example of
    this light. Of course, in reality, lightbulbs don’t cast light through their base
    but it’s a good approximation.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**点光源**：这是当你开始一个新的Blender场景时默认获得的光源类型。有时也称为全向光，简称omni light，因为它向所有方向发射光线。灯泡是这种光的一个不错的现实生活例子。当然，在现实中，灯泡并不是从底部发射光线，但这是一个很好的近似。'
- en: '**Sun**: This type is used when you need a constant intensity of light. In
    other words, the light is so powerful that it doesn’t lose any of its intensity
    along the way. Unlike the other light types, **Sun**, just like the Sun, also
    sends light rays in one direction only. Thus, the light rays are coming from an
    infinitely far away distance without losing their potency.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**太阳光**：当你需要恒定强度的光时，使用这种类型。换句话说，光线如此强大，在传播过程中不会失去任何强度。与其他光类型不同，**太阳光**，就像真正的太阳一样，也只向一个方向发射光线。因此，光线是从无限远的地方发射而来，没有失去其强度。'
- en: '**Spot**: When you need a flashlight-like light source, this is the light type
    you should use. It will emit a cone-shaped beam of light in the direction you
    point it. Most shopping centers and stores have lights of this type, usually hidden
    in the ceiling.'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**聚光灯**：当你需要一个类似手电筒的光源时，你应该使用这种光类型。它会在你指向的方向发射锥形的光束。大多数购物中心和商店都有这种类型的光，通常隐藏在天花板中。'
- en: '**Area**: If you want to have a light source that has a large surface such
    as a window, TV screen, or office lights such as conventional fluorescent tubes,
    then **Area** lights are the way to go. You can also define the shape of the area.
    Since it is a considerably larger source of light in contrast to **Point** lights,
    the result, including the shadows, feels softer.'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**面积**：如果你想有一个具有大表面（如窗户、电视屏幕或办公室灯光，如传统的荧光灯管）的光源，那么 **面积** 灯就是你的选择。你还可以定义面积形状。由于与
    **点光源** 相比，它是一个相当大的光源，因此包括阴影在内的结果感觉更柔和。'
- en: 'To get a much better feeling about what each light type does, you will open
    a file that’s prepared for you so that you can quickly switch between different
    types of light. Follow these steps:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地了解每种灯光类型的作用，你将打开一个为你准备好的文件，这样你可以快速切换到不同类型的灯光。按照以下步骤操作：
- en: Open the `Start` folder inside the `Chapter 4` folder. This can be found in
    this book’s GitHub repository, which was mentioned in the *Technical requirements*
    section.
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `Chapter 4` 文件夹内打开 `Start` 文件夹。这可以在本书提到的 *技术要求* 部分的 GitHub 仓库中找到。
- en: Open the `Lights.blend` file.
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开 `Lights.blend` 文件。
- en: Hold *Z* and then press *8* to switch the visuals to **Rendered** mode.
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按 *Z* 键，然后按 *8* 键切换到 **渲染** 模式。
- en: 'The scene contains a cube and a large plane as a base to hold this cube. The
    four different basic light types are all in the same position, all with their
    default settings. Only the **Spot** light is enabled in the **Outliner** and you
    can see its effect in the following screenshot. By clicking the eye icon next
    to each light type in the **Outliner** back and forth accordingly, you can see
    what each light does. Notice the overall feeling each light creates by illuminating
    a certain spot or changing how the shadows appear:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 场景包含一个立方体和一个大平面作为基础，以支撑这个立方体。四种不同的基本灯光类型都处于相同的位置，所有都使用默认设置。只有 **聚光灯** 在 **大纲视图中**
    被启用，你可以在下面的屏幕截图中看到其效果。通过在 **大纲视图** 中点击每个灯光类型旁边的眼睛图标，相应地来回切换，你可以看到每种灯光的作用。注意每种灯光通过照亮某个特定区域或改变阴影的呈现方式所创造的总体感觉：
- en: '![Figure 4.4 – A light object’s, specifically Spot light’s properties ](img/Figure_4.04_B17473.jpg)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.4 – 一个光源的，特别是聚光灯的属性](img/Figure_4.04_B17473.jpg)'
- en: Figure 4.4 – A light object’s, specifically Spot light’s properties
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.4 – 一个光源的，特别是聚光灯的属性
- en: Now that we have seen what each light does, let’s learn about some of their
    properties.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经看到了每种灯光的作用，让我们来了解一下它们的一些属性。
- en: Basic properties of light
  id: totrans-62
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 光的基本属性
- en: 'The sample file was set up so that when you open it, the **Properties** panel
    should already be switched to the appropriate **Light** tab; this will display
    the five common properties that all the basic lights share:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 样本文件被设置成当你打开它时，**属性** 面板应该已经切换到适当的 **灯光** 选项卡；这将显示所有基本灯光共有的五个常见属性：
- en: '**Color**: This is the tint of the emitted light. If you are designing a fireplace,
    you may want to pick an orange or red tint, for example.'
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**颜色**：这是发出的光的色调。如果你在设计壁炉，你可能想选择橙色或红色色调，例如。'
- en: '**Power/Strength**: This defines how powerful your light source is in **Watts**.
    Thus, the higher the value is, the more powerful the light will be. In the **Sun**
    light’s case, the **Power** property is labeled as **Strength**, but the concept
    is still the same. If you are designing a scene where accuracy is paramount, and
    you would like your lights to be as realistic as possible, then you are in luck.
    The *Power of Lights* section at the following URL lists values for some known
    light sources: [https://docs.blender.org/manual/en/2.93/render/lights/light_object.xhtml](https://docs.blender.org/manual/en/2.93/render/lights/light_object.xhtml).'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**功率/强度**：这定义了你的光源有多强大，以 **瓦特** 为单位。因此，值越高，光源就越强大。在 **日光** 的情况下，**功率** 属性被标记为
    **强度**，但概念仍然是相同的。如果你正在设计一个对准确性至关重要的场景，并且希望你的灯光尽可能真实，那么你很幸运。以下 URL 的 *灯光功率* 部分列出了某些已知光源的值：[https://docs.blender.org/manual/en/2.93/render/lights/light_object.xhtml](https://docs.blender.org/manual/en/2.93/render/lights/light_object.xhtml)。'
- en: '`1.0`, which is the default value, won’t change the perceived color of a material.
    Decreasing it will diminish the color’s effect on a material. In essence, this
    value determines the impact a light source has on a material’s color.'
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`1.0`，这是默认值，不会改变材料的感知颜色。减小它将减少颜色对材料的影响。本质上，这个值决定了光源对材料颜色的影响。'
- en: '**Specular**: This is similar to the **Diffuse** property, except it affects
    the **Specular** quality.'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**镜面反射**：这与 **漫反射** 属性类似，但它影响 **镜面反射** 质量。'
- en: '**Volume**: This is a bit of an advanced topic that involves more sophisticated
    settings when you set up materials. We won’t cover advanced material settings
    in this book. However, like the **Diffuse** and **Specular** properties of lights,
    which work as multipliers, this property determines the light’s contribution over
    a volume.'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**体积**：这是一个相对高级的话题，当设置材料时涉及更复杂的设置。在这本书中，我们不会涵盖高级材料设置。然而，就像灯光的**漫反射**和**镜面反射**属性作为乘数一样，这个属性决定了光在体积中的贡献。'
- en: Out of these five properties, you’ll most likely never touch **Diffuse**, **Specular**,
    and **Volume**. This is because, most of the time, it makes sense to change diffuse
    and specular values in a material. Also, volumetric light is an advanced case
    that can be handled via other means, similar to adjusting it via a material’s
    properties.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 在这五个属性中，你很可能永远不会接触到**漫反射**、**镜面反射**和**体积**。这是因为，大多数情况下，改变材料的漫反射和镜面反射值是有意义的。此外，体积光是一个高级案例，可以通过其他方式处理，类似于通过调整材料的属性来调整它。
- en: More esoteric lights
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 更神秘的灯光
- en: If you are the curious type and read up on lighting, generally within the context
    of 3D applications, you will hear of terms such as **ambient light**, **global
    illumination**, and others. Even though those terms are relevant and important
    when producing a render, we won’t cover them in this book for two reasons. First,
    basic light types are often enough because this will give you a more direct result
    and feeling for your scene. Second, the advanced lighting systems rely on and
    affect basic lights by making tweaks. So, understanding the basic types would
    be a better investment as a beginner.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是一个好奇的人，并且阅读了有关照明的资料，通常在3D应用程序的上下文中，你会听到诸如**环境光**、**全局照明**等术语。尽管这些术语在生成渲染时相关且重要，但我们不会在这本书中涵盖它们，有两个原因。首先，基本灯光类型通常就足够了，因为这会给你一个更直接的结果和场景的感觉。其次，高级照明系统依赖于并影响基本灯光，通过调整来发挥作用。因此，作为初学者，理解基本类型会是一个更好的投资。
- en: Specific properties of each light type
  id: totrans-72
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 每种灯光类型的特定属性
- en: Although you now have basic knowledge of what each light does, we haven’t investigated
    what kind of setting contributes to the uniqueness of these lights. Now, let’s
    look at each light’s settings, which give the light its characteristic look and
    feel.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你现在已经了解了每种灯光的作用，但我们还没有研究什么类型的设置有助于这些灯光的独特性。现在，让我们看看每种灯光的设置，这些设置赋予了灯光其特有的外观和感觉。
- en: Point
  id: totrans-74
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 点
- en: '**Radius** is a setting that’s also used for **Spot** lights, but we’ll cover
    it under this section since there is nothing else going on with **Point** lights.
    We’ve already considered a lightbulb as an analogy to **Point** lights. In reality,
    lightbulbs come in different sizes. So, you can imagine the radius value, measured
    in meters, as a mechanism to determine how big the lightbulb is.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**半径**是一个也用于**聚光灯**的设置，但我们将在这个部分介绍它，因为**点光源**没有其他相关内容。我们已经将灯泡作为**点光源**的类比。实际上，灯泡有不同的尺寸。因此，你可以想象半径值，以米为单位，作为一个确定灯泡大小的机制。'
- en: The effect this value has is in the way the shadows are calculated. The default
    value, `0.1`, will produce a rather sharp shadow. Try to increase this value to
    `1.0`. You’ll notice that there will be multiple shadows overlapping each other,
    following a direction away from the light source.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这个值产生的影响在于阴影的计算方式。默认值`0.1`将产生一个相当锐利的阴影。尝试将此值增加到`1.0`。你会注意到，会有多个阴影相互重叠，沿着远离光源的方向延伸。
- en: If you increase the radius to `10.0`, something interesting will happen. The
    bulb is large enough that it will encompass the cube. It’s so large that it intersects
    with the plane too. The shadows for the cube are no longer following a direction
    strictly away from the light source. The light source is so large it’s as if there
    are multiple tiny point lights scattered inside a sphere with that radius value.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你将半径增加到`10.0`，会发生一些有趣的事情。灯泡足够大，以至于它将包围立方体。它如此之大，以至于它与平面相交。立方体的阴影不再严格沿着远离光源的方向延伸。光源如此之大，以至于它似乎在半径值所对应的球体内部散布着多个微小的点光源。
- en: Sun
  id: totrans-78
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 太阳
- en: In some 3D modeling software and game engines, the **Sun** light is often labeled
    as **directional light**. There is a good reason for that. In real life, the Sun
    is so far away but so powerful that it’s as if all light rays are parallel to
    each other. So, the **Angle** property defines the direction of the rays.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些3D建模软件和游戏引擎中，**太阳光**通常被标记为**方向光**。这有一个很好的原因。在现实生活中，太阳离我们很远，但非常强大，以至于所有光线似乎都是平行的。因此，**角度**属性定义了光线的方向。
- en: What about the position of a **Sun** light? You could try to move its location,
    but the overall effect on the scene won’t change because the light rays are assumed
    to have constant energy, regardless of where they are coming from. So, the angle
    is the only meaningful factor for this light type.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 那么**太阳光**的位置如何呢？您可以尝试移动其位置，但由于光线被认为具有恒定的能量，无论它们来自何方，因此场景的整体效果不会改变。因此，角度是此类灯光类型的唯一有意义的因素。
- en: Spot
  id: totrans-81
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**点**'
- en: A **Spot** light has the same **Radius** property as a **Point** light does.
    So, initially, they start as the same thing, then a **Spot** light sheds its light
    while following a conic shape.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: '**点**灯具有与**点**灯相同的**半径**属性。因此，最初它们是相同的东西，然后**点**灯在跟随圆锥形状的同时散发光线。'
- en: 'There is a collapsed section labeled as **Spot Shape** in the **Properties**
    panel for this light type. This section houses two properties:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在此灯光类型的**属性**面板中有一个标记为**Spot Shape**的折叠部分。该部分包含两个属性：
- en: '**Size**: Measured in degrees, this value is the angle of the cone’s origin.
    The higher the value is, the wider or larger the area will be once the light hits
    a surface. Similarly, lower values will focus the light on a smaller area.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**大小**：以度为单位测量，此值是圆锥原点的角度。值越高，光线击中表面后面积就越宽或越大。类似地，较低的值将使光线集中在更小的区域内。'
- en: '`0.0` and `1.0`, works like a percentage to adjust how smoothly these two contrasting
    zones blend into each other. Lower values will have a sharper transition. So,
    having it as `0` means a very sharp separation.'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`0.0`和`1.0`，就像百分比一样，用于调整这两个对比区域的融合程度。较低的值将产生更尖锐的过渡。因此，将其设置为`0`意味着非常尖锐的分离。'
- en: Area
  id: totrans-86
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '**区域**'
- en: 'For this light type to be more effective, deciding on its **Shape** setting
    is important. Four shapes exist:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使此灯光类型更有效，决定其**形状**设置非常重要。存在四种形状：
- en: '**Rectangle**'
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**矩形**'
- en: '**Square**'
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**正方形**'
- en: '**Disc**'
  id: totrans-90
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**圆盘**'
- en: '**Ellipse**'
  id: totrans-91
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**椭圆**'
- en: For all of these, you can customize the size of the shape. For example, the
    **Rectangle** shape will accept two values, but the **Square** shape will only
    need one dimension. You won’t see much difference in the test scene if you play
    with different values. However, rest assured that they make a real difference
    in a much more complex scene where you distribute **Area** lights with different
    shapes.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 对于所有这些，您都可以自定义形状的大小。例如，**矩形**形状将接受两个值，但**正方形**形状只需要一个维度。如果您在测试场景中调整不同的值，您可能不会看到太大的差异。然而，请放心，它们在分布不同形状的**区域**灯光的更复杂场景中确实会产生实际差异。
- en: Wrapping up
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: Adjusting light settings is only the beginning. Most 3D professionals dedicate
    themselves to certain disciplines. Lighting is one of these disciplines where
    you work on topics such as global illumination, bloom, volumetric effects, and
    many other advanced topics we won’t be covering in this book. With that being
    said, using cameras and lights in Blender may still be useful to get a basic feeling
    about the artistic direction you are taking. For example, if you are designing
    a car, the headlights will most likely house a **Spot** light. If the model were
    a torch, a **Point** light might be appropriate.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 调整灯光设置只是开始。大多数3D专业人士致力于某些学科。灯光是这些学科之一，您将在此领域研究诸如全局照明、光晕、体积效果以及许多其他我们在这本书中不会涉及的高级主题。话虽如此，在Blender中使用相机和灯光仍然可能对了解您所采取的艺术方向有所帮助。例如，如果您正在设计一辆车，前大灯可能包含一个**点**灯。如果模型是火炬，则可能适合使用**点**灯。
- en: Now, you may be thinking that we didn’t cover a lot about lighting, but we also
    covered even less about the camera. This is because this book is about game development.
    In *Part 3*, *Clara’s Fortune – An Adventure Game*, we mentioned that most of
    our work will be done in Godot, so you’ll see that there will be many things we’ll
    set up and fine-tune in Godot. Some of that effort will be for the camera and
    different light objects. Since we’ve been building individual models or constructing
    materials for our models, which will all be imported into the game engine in the
    end, there is no need to do a meticulous amount of work within Blender regarding
    cameras and lights. In other words, it’s practical to set up cameras and lights
    in Godot because the settings in Blender won’t transfer.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可能认为我们并没有详细讲解关于灯光的内容，但我们对于相机的讲解也更为简略。这是因为本书主要讲述游戏开发。在 *第3部分*，*克拉拉的财富 - 一款冒险游戏*
    中，我们提到大部分工作将在 Godot 中完成，所以你会看到我们将在 Godot 中设置和微调许多内容。其中一些努力将用于相机和不同的灯光对象。由于我们一直在构建单个模型或为模型构建材质，这些最终都将导入游戏引擎中，因此没有必要在
    Blender 中对相机和灯光进行细致的工作。换句话说，在 Godot 中设置相机和灯光是实用的，因为 Blender 中的设置无法迁移。
- en: Now that you know why you should generally ignore Blender’s cameras and lights,
    let’s look at two helpful methods that will make your time more pleasant while
    still working in Blender.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 现在你已经知道为什么通常应该忽略 Blender 的相机和灯光，让我们看看两种有助于你在 Blender 中工作更愉快的方法。
- en: Introducing MatCap and Ambient Occlusion
  id: totrans-97
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍材质捕获和环境遮蔽
- en: Since making more investment in a high-fidelity lighting setup in Blender no
    longer makes sense, we should perhaps investigate different ways to make our scenes
    look better. What we’ll do next still means what you see won’t be exported. However,
    it means you can look at models that no longer have the default and boring gray
    look. Why not? Working with things that look nice sometimes feels nicer and increases
    productivity. We’ll look at two techniques that will help you distinguish your
    models’ details.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 由于在 Blender 中对高保真灯光设置进行更多投资已经不再有意义，我们或许应该调查不同的方法来使我们的场景看起来更好。我们接下来要做的事情仍然意味着你所看到的内容不会被导出。然而，这意味着你可以查看那些不再有默认且单调的灰色外观的模型。为什么不呢？与看起来不错的事物一起工作有时会感觉更愉快，并提高生产力。我们将探讨两种有助于你区分模型细节的技术。
- en: MatCap
  id: totrans-99
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 材质捕获
- en: '**MatCap** stands for **material capture**. We won’t get into the technicalities
    of how a **MatCap** is constructed but, suffice it to say, it’s a type of shader
    Blender uses internally to give a different look to the models. Normally, you’d
    need to switch to **Material Preview** mode to see how your materials would look
    on your models.'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: '**材质捕获** 代表 **材质捕获**。我们不会深入讲解 **材质捕获** 的构建技术细节，但简单来说，它是一种 Blender 内部使用的着色器，用于给模型带来不同的外观。通常，你需要切换到
    **材质预览** 模式来查看你的材质在模型上的外观。'
- en: However, during the modeling process, you usually work in **Solid** mode because
    it’s more performant for Blender to show you the changes you are making to your
    models. Thus, while still working in **Solid** mode, if you want to have a better
    visual as if you are in **Material Preview**, you can instruct **Viewport Shading**
    to use **MatCap**. So, it’s the best of both worlds.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在建模过程中，你通常使用 **实体** 模式，因为对于 Blender 来说，以这种方式显示你对模型所做的更改性能更佳。因此，当你仍然在 **实体**
    模式下工作时，如果你想获得类似于 **材质预览** 的更好视觉效果，你可以指示 **视口着色** 使用 **材质捕获**。所以，这是两者的最佳结合。
- en: 'To make sure you are using **Solid** mode, do the following:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 要确保你正在使用 **实体** 模式，请执行以下操作：
- en: Press *Z*.
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按下 *Z* 键。
- en: Then press *6*.
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后按下 *6*。
- en: 'This will switch **Viewport Shading** to **Solid** mode. It’s also represented
    as a disc in the second icon at the top-right corner of the **3D Viewport**. We’ll
    make some changes to **Viewport Shading** so that your models can have more pronounced
    details. If you click the down-looking arrow on the right-hand side of those icons,
    you’ll expand a panel. This panel is shown in the following screenshot:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 这将切换 **视口着色** 到 **实体** 模式。它也在 **3D 视口** 右上角的第二个图标中以一个圆盘的形式表示。我们将对 **视口着色** 进行一些修改，以便你的模型可以拥有更明显的细节。如果你点击那些图标右侧的向下箭头，你会展开一个面板。这个面板在下面的屏幕截图中显示：
- en: '![](img/Figure_4.5.alternative.jpg)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.5 替代](img/Figure_4.5.alternative.jpg)'
- en: Figure 4.5 – The default Viewport Shading options
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.5 – 默认视口着色选项
- en: The settings in that panel let you change the way the models are displayed while
    you are editing them. You can already see a preview of the current settings as
    a sphere in the upper section. Let’s click the second button, **MatCap**, under
    the **Lighting** title. This should already change the look of the preview in
    that panel, as well as the model’s look in the scene.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 那个面板中的设置允许你在编辑模型时更改模型显示的方式。你已经在上方部分看到了当前设置的预览，作为一个球体。让我们点击**光照**标题下的第二个按钮**MatCap**。这应该会改变该面板中预览的外观，以及场景中模型的外观。
- en: We won’t be discovering the **Color** part but try out the **Random** option
    for the barrel from [*Chapter 1*](B17473_01.xhtml#_idTextAnchor013), *Creating
    Low-Poly Models*. You’ll see that different parts of the barrel take random colors.
    This helps to distinguish separate parts in your scene. Similarly, we will leave
    the **Background** setting set to **Theme**.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不会发现**颜色**部分，但尝试从[*第1章*](B17473_01.xhtml#_idTextAnchor013)，*创建低多边形模型*中的桶体使用**随机**选项。你会看到桶体的不同部分采用随机颜色。这有助于区分场景中的不同部分。同样，我们将**背景**设置保留为**主题**。
- en: 'Let’s investigate the **Options** section and focus on the parts that will
    give us a decent result:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们调查**选项**部分，并关注将给我们带来良好结果的部件：
- en: Enable the **Shadow** option.
  id: totrans-111
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用**阴影**选项。
- en: Set its value to `0.5`.
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其值设置为`0.5`。
- en: You won’t normally see the effects of the light sources in **Solid** mode, but
    the last operation will create a shadow effect. It’s a cheap effect that efficiently
    creates depth.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在**实体**模式下，你通常不会看到光源的效果，但最后一步将创建阴影效果。这是一个便宜的效果，可以有效地创建深度。
- en: 'Sometimes, your models will have parts that are away from the center of mass.
    These outer parts may also create areas that would look deeper from your point
    of view. Hence, you’ll have cavities. To mark these areas more clearly, do the
    following:'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，你的模型可能会有远离质量中心的部件。这些外部部件也可能创建出从你的角度看会更深的区域。因此，你会有一些凹槽。为了更清楚地标记这些区域，请执行以下操作：
- en: Enable **Cavity**.
  id: totrans-115
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 启用**凹槽**。
- en: Set its **Type** value to **Both**.
  id: totrans-116
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其**类型**值设置为**两者**。
- en: Set `0.5`
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 设置`0.5`
- en: '`1.0`'
  id: totrans-118
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`1.0`'
- en: Set `0.75`*   `1.0`
  id: totrans-119
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 设置`0.75` `1.0`
- en: This should create a big change in the way your models look. The **Cavity**
    option, with **Type** set to **Both**, will seek parts of your models that are
    at different elevation levels and accentuate them. In a way, if your model was
    laid out like a landscape, the ridges and valleys would be emphasized so that
    they would be more noticeable. The values we picked are a bit arbitrary, so feel
    free to alter them according to your taste or the complexity of the models.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这应该会改变你的模型外观。**凹槽**选项，将**类型**设置为**两者**，将寻找你的模型中处于不同高度水平的部分并突出显示它们。从某种意义上说，如果你的模型布局像景观一样，山脊和山谷将被强调，以便它们更引人注目。我们选择的价值有些任意，所以请根据你的品味或模型的复杂性自由调整它们。
- en: 'Last but not least, in the settings for **MatCap**, if you wish, you can pick
    a different material. After all, we are still looking at a gray cube, even though
    we have improved its perception. For example, you can do the following:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，在**MatCap**的设置中，如果你愿意，你可以选择不同的材质。毕竟，我们仍然在观察一个灰色立方体，尽管我们已经改善了它的感知。例如，你可以做以下操作：
- en: Click the sphere preview under the **MatCap** button in **Viewport Shading**.
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击**视口着色**下的**MatCap**按钮下的球体预览。
- en: Select the third sphere in the second row.
  id: totrans-123
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择第二行的第三个球体。
- en: 'If your version of Blender has the selection interface organized differently,
    we are looking for a sphere that looks like brown clay. This will change the look
    of your cube to, well, muddy clay. The following screenshot shows what we have
    done so far:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的Blender版本中选择的界面组织方式不同，我们正在寻找一个看起来像棕色粘土的球体。这将改变你的立方体的外观，变成泥泞的粘土。以下截图显示了到目前为止我们所做的工作：
- en: '![Figure 4.6 – Viewport Shading offers many ways to create a different look
    for your models ](img/Figure_4.06_B17473.jpg)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![图4.6 – 视口着色为你的模型提供多种不同的外观](img/Figure_4.06_B17473.jpg)'
- en: Figure 4.6 – Viewport Shading offers many ways to create a different look for
    your models
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 图4.6 – 视口着色为你的模型提供多种不同的外观
- en: If the muddy color is too dark, then the second sphere in the first row is a
    nice alternative. However, keep in mind that this is only for you to feel at ease
    while working with your models in **Solid** mode. None of these changes will have
    any impact on the result when you render or export your models to other software.
    These are, in a sense, throw-away materials that will make your experience in
    Blender more pleasant.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果泥泞的颜色太暗，那么第一行第二个球体是一个不错的选择。然而，请记住，这只是为了你在**实体**模式下与模型工作时的舒适感。这些更改对你在渲染或导出模型到其他软件时的结果没有任何影响。从某种意义上说，这些都是可丢弃的材质，可以使你在Blender中的体验更加愉快。
- en: So far, we have treated the **Solid** view as if it was **Material Preview**.
    This is useful when you want a bit more visual clarity without previewing the
    model’s assigned materials since that makes extra calculations by taking into
    account the lights too. Next, we’ll look into a way of doing something similar
    in **Rendered** mode.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们一直将**实体**视图视为**材质预览**。当你想要获得更多视觉清晰度而不预览模型分配的材质时，这很有用，因为那会进行额外的计算，考虑到灯光。接下来，我们将探讨在**渲染**模式下如何做类似的事情。
- en: Ambient Occlusion
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 环境光遮蔽
- en: In this section, we’ll discover another handy visual tool that can help you
    have a bit more visual fidelity. This tool is called **Ambient Occlusion** (**AO**),
    and it’s also a method that’s used in most games to create a more realistic look.
    Let’s explore how and why this works.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将发现另一个实用的视觉工具，它可以帮助你获得更高的视觉保真度。这个工具被称为**环境光遮蔽**（**AO**），它也是一种在大多数游戏中用来创建更逼真外观的方法。让我们来探讨它是如何工作的以及为什么它能起作用。
- en: 'Let’s get the definition out of the way first. We have two names: ambient and
    occlusion. In the context of Blender, as you may have guessed, ambient is a term
    that’s used to describe the overall light conditions. We switched the background
    color to black to modify the ambient light near the end of this chapter’s *Rendering
    a scene* section. So, we are already familiar with this concept.'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们弄清楚定义。我们有两个名称：环境光和遮蔽。在Blender的上下文中，正如你可能猜到的，环境光是一个用来描述整体光照条件的术语。我们在本章的*渲染场景*部分接近结尾时将背景颜色切换为黑色来修改环境光。因此，我们已经熟悉了这个概念。
- en: Occlusion means to obstruct or block something. In our context, it means to
    obstruct light. So, we want some light to be obstructed or occluded. But where
    exactly would we want this?
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 遮蔽意味着阻挡或遮挡某物。在我们的上下文中，这意味着阻挡光线。因此，我们希望有一些光线被阻挡或遮蔽。但具体在哪里呢？
- en: Take a look around wherever you are. You’ll notice that some areas, by having
    a flatter surface, will be exposed to the natural or artificial lights coming
    off the ceiling or windows. Light – more specifically, the photons that make up
    the light – will be bouncing off these surfaces. Wherever these flat surfaces
    meet and make some sharper and some more moderate angles, they will be forcing
    the photons to scatter in a zigzag manner. As a result, it’ll be harder for light
    to reach certain spots, so the geometry of your models is going to occlude some
    of the light.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 无论是哪里，四处看看。你会发现，由于表面较平坦，一些区域会暴露在来自天花板或窗户的自然光或人工光下。光——更具体地说，组成光的光子——会从这些表面上弹跳。当这些平坦的表面相遇并形成一些更尖锐和更缓和的角度时，它们会迫使光子以之字形散射。结果，光线到达某些地方会更困难，因此你的模型几何形状将遮挡一些光线。
- en: 'To see the effect of AO, open any of the following files from this chapter’s
    `Start` folder:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 要看到AO的效果，请从本章的`Start`文件夹中打开以下任何文件：
- en: '`Lights.Area.AO.blend`'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Lights.Area.AO.blend`'
- en: '`Lights.Point.AO.blend`'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Lights.Point.AO.blend`'
- en: '`Lights.Spot.AO.blend`'
  id: totrans-137
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Lights.Spot.AO.blend`'
- en: '`Lights.Sun.AO.blend`'
  id: totrans-138
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Lights.Sun.AO.blend`'
- en: 'Also, remember to switch to **Rendered** mode by pressing *Z* followed by *8*.
    Otherwise, the effect won’t be visible. Do you notice the darker part where the
    cube meets the plane? That’s AO, as shown here:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，记得通过按*Z*然后按*8*切换到**渲染**模式。否则，效果将不可见。你注意到立方体接触平面处的较暗部分了吗？那就是AO，如下所示：
- en: '![Figure 4.7 – Ambient Occlusion visible where the cube touches the plane ](img/Figure_4.07_B17473.jpg)'
  id: totrans-140
  prefs: []
  type: TYPE_IMG
  zh: '![图 4.7 – 环境光遮蔽在立方体接触平面的地方可见](img/Figure_4.07_B17473.jpg)'
- en: Figure 4.7 – Ambient Occlusion visible where the cube touches the plane
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 图 4.7 – 环境光遮蔽在立方体接触平面的地方可见
- en: The example files have been prepared so that the **Ambient Occlusion** option
    should already be visible on the right-hand side in the **Properties** panel.
    By switching it on and off, you can observe the behavior. AO affects the edges
    as if there is an extra volume of shadow, where shadows naturally would occur.
    This makes it look more realistic. We’ll look at how to take advantage of AO as
    a separate effort inside Godot Engine later in this book.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 示例文件已经准备就绪，以便在**属性**面板的右侧应该已经可以看到**环境遮蔽**选项。通过开关它，你可以观察其行为。AO影响边缘，就像有一个额外的阴影体积，在阴影自然发生的地方。这使得它看起来更加逼真。我们将在本书的后面部分单独探讨如何在Godot引擎中利用AO。
- en: Additionally, in the AO settings, if you pick a higher **Distance** value, it
    will sample a larger area from the object’s contact zone. This may help you have
    smoother or sharper AO.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在AO设置中，如果你选择一个更高的**距离**值，它将从对象的接触区域采样更大的区域。这可能会帮助你获得更平滑或更锐利的AO。
- en: We’ve covered a great variety of topics in this chapter. Now, it’s time to summarize
    what we’ve learned.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章中涵盖了大量主题。现在，是时候总结一下我们学到了什么。
- en: Summary
  id: totrans-145
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: We started this chapter by rendering a scene with and without a camera and lights.
    During this effort, we utilized **Shader Editor**, which was introduced in the
    previous chapter to change the background color, also known as ambient color.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在本章的开头通过有和无相机及灯光的场景渲染来开始这一章。在这个过程中，我们使用了上一章中介绍的**着色器编辑器**来改变背景颜色，也称为环境颜色。
- en: Then, we looked at different light types and how each type can be used to simulate
    real-life cases. We did this using the Eevee rendering engine. Should you switch
    to the Cycles render engine, the lights will have additional and more advanced
    properties, but the concepts you learned about in this chapter will hold.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们探讨了不同类型的灯光以及每种类型如何用于模拟现实生活中的案例。我们使用Eevee渲染引擎来完成这项工作。如果你切换到Cycles渲染引擎，灯光将具有更多和更高级的特性，但你在这章中学到的概念将保持不变。
- en: We also discussed the fact that your rendering concerns will be left for later
    when we tackle things in Godot. However, it’d be a much more pleasant experience
    if we could work with better-looking things. To that end, you were introduced
    to two different methods.
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还讨论了当我们在Godot中处理事情时，你的渲染关注点将被留到以后。然而，如果我们能够使用更好看的东西，这将是一个更加愉快的体验。为此，你被介绍了两种不同的方法。
- en: The first method is **MatCap**, which you can use to change the way models look,
    despite not turning on material previewing. The second method, **Ambient Occlusion**,
    involves getting a feeling of where objects meet and how they behave under existing
    light conditions. You can use both methods at the same time if you wish.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 第一种方法是**MatCap**，你可以用它来改变模型的外观，即使没有开启材质预览。第二种方法，**环境遮蔽**，涉及到感受物体相遇的位置以及它们在现有光照条件下的行为。如果你愿意，可以同时使用这两种方法。
- en: In the next chapter, we’ll move things a bit. You’ll be studying and preparing
    a model for animation. For this effort, you’ll utilize a process called **rigging**
    and simulate a skeleton-like structure inside your model so that you can animate
    it.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，我们将做一些改变。你将学习并准备一个用于动画的模型。为此，你将利用一个称为**绑定**的过程，并在你的模型内部模拟一个类似骨骼的结构，以便你可以对其进行动画处理。
- en: Further reading
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Although this chapter covered cameras and lights, such topics are usually covered
    under the *Rendering* title in many publications. That’s because there are different
    rendering engines, and each one treats lights and cameras differently. Also, **post-processing**
    and **color management** might be your concern if you want to take on more advanced
    renders. So, cameras and lights are only a small portion of the rendering process.
    To learn more, Blender’s official documentation page might be a good start: [https://docs.blender.org/manual/en/2.93/render/index.xhtml](https://docs.blender.org/manual/en/2.93/render/index.xhtml).'
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管本章涵盖了相机和灯光，但这类话题通常在许多出版物中被归类在**渲染**标题下。这是因为存在不同的渲染引擎，每个引擎对灯光和相机的处理方式都不同。此外，如果你想要进行更高级的渲染，**后期处理**和**色彩管理**可能会成为你的关注点。因此，相机和灯光只是渲染过程中的一个小部分。要了解更多信息，Blender的官方文档页面可能是一个好的起点：[https://docs.blender.org/manual/en/2.93/render/index.xhtml](https://docs.blender.org/manual/en/2.93/render/index.xhtml)。
- en: 'Also, here are a few online resources that might help you dive deeper:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，这里有一些在线资源可能有助于你更深入地了解：
- en: '[https://cgcookie.com/courses/fundamentals-of-digital-lighting-in-blender](https://cgcookie.com/courses/fundamentals-of-digital-lighting-in-blender).'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Blender数字光照基础课程](https://cgcookie.com/courses/fundamentals-of-digital-lighting-in-blender).'
- en: '[https://cgcookie.com/courses/production-design-with-blender-2-8-and-eevee](https://cgcookie.com/courses/production-design-with-blender-2-8-and-eevee).'
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用Blender 2.8和Eevee进行制作设计的课程](https://cgcookie.com/courses/production-design-with-blender-2-8-and-eevee).'
- en: '[https://cgcookie.com/courses/fundamentals-of-rendering](https://cgcookie.com/courses/fundamentals-of-rendering).'
  id: totrans-156
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Blender渲染基础课程](https://cgcookie.com/courses/fundamentals-of-rendering).'
