["```cpp\n#ifndef IOBJECTFACTORY_H\n#define IOBJECTFACTORY_H\n\n#include <controllers/i-command-controller.h>\n#include <controllers/i-database-controller.h>\n#include <controllers/i-navigation-controller.h>\n#include <models/client.h>\n#include <models/client-search.h>\n#include <networking/i-network-access-manager.h>\n#include <networking/i-web-request.h>\n\nnamespace cm {\nnamespace framework {\n\nclass IObjectFactory\n{\npublic:\n    virtual ~IObjectFactory(){}\n\n    virtual models::Client* createClient(QObject* parent) const = 0;\n    virtual models::ClientSearch* createClientSearch(QObject* parent, controllers::IDatabaseController* databaseController) const = 0;\n    virtual controllers::ICommandController* createCommandController(QObject* parent, controllers::IDatabaseController* databaseController, controllers::INavigationController* navigationController, models::Client* newClient, models::ClientSearch* clientSearch, networking::IWebRequest* rssWebRequest) const = 0;\n    virtual controllers::IDatabaseController* createDatabaseController(QObject* parent) const = 0;\n    virtual controllers::INavigationController* createNavigationController(QObject* parent) const = 0;\n    virtual networking::INetworkAccessManager* createNetworkAccessManager(QObject* parent) const = 0;\n    virtual networking::IWebRequest* createWebRequest(QObject* parent, networking::INetworkAccessManager* networkAccessManager, const QUrl& url) const = 0;\n};\n\n}}\n\n#endif\n```", "```cpp\nMasterController::MasterController(QObject* parent, IObjectFactory* objectFactory)\n    : QObject(parent)\n{\n    implementation.reset(new Implementation(this, objectFactory));\n}\n```", "```cpp\nImplementation(MasterController* _masterController, IObjectFactory* _objectFactory)\n    : masterController(_masterController)\n    , objectFactory(_objectFactory)\n{\n    databaseController = objectFactory->createDatabaseController(masterController);\n    clientSearch = objectFactory->createClientSearch(masterController, databaseController);\n    navigationController = objectFactory->createNavigationController(masterController);\n    networkAccessManager = objectFactory->createNetworkAccessManager(masterController);\n    rssWebRequest = objectFactory->createWebRequest(masterController, networkAccessManager, QUrl(\"http://feeds.bbci.co.uk/news/rss.xml?edition=uk\"));\n    QObject::connect(rssWebRequest, &IWebRequest::requestComplete, masterController, &MasterController::onRssReplyReceived);\n    newClient = objectFactory->createClient(masterController);\n    commandController = objectFactory->createCommandController(masterController, databaseController, navigationController, newClient, clientSearch, rssWebRequest);\n}\n```", "```cpp\nqmlRegisterUncreatableType<cm::controllers::INavigationController>(\"CM\", 1, 0, \"INavigationController\", \"Interface\");\nqmlRegisterUncreatableType<cm::controllers::ICommandController>(\"CM\", 1, 0, \"ICommandController\", \"Interface\");\n```", "```cpp\nreadonly property real widthWindow: 1920\nreadonly property real heightWindow: 1080\n```", "```cpp\nWindow {\n    width: Style.widthWindow\n    height: Style.heightWindow\n    \u2026.\n}\n```", "```cpp\nreadonly property real widthWindowReference: 1920\nreadonly property real heightWindowReference: 1080\n```", "```cpp\nfunction hscale(size) {\n    return Math.round(size * (widthWindow / widthWindowReference))\n}\nfunction vscale(size) {\n    return Math.round(size * (heightWindow / heightWindowReference))\n}\nfunction tscale(size) {\n    return Math.round((hscale(size) + vscale(size)) / 2)\n}\n```", "```cpp\nreadonly property real sizeScreenMargin: tscale(20)\n```", "```cpp\n<file alias=\"packt-logo-500x500\">assets/packt-logo-500x500.jpg</file>\n```", "```cpp\nreadonly property color colourDashboardBackground: \"#f36f24\"\nreadonly property color colourDashboardFont: \"#ffffff\"\nreadonly property int pixelSizeDashboard: tscale(36)\nreadonly property real sizeDashboardLogo: tscale(500)\n```", "```cpp\nItem {\n    Rectangle {\n        anchors.fill: parent\n        color: Style.colourDashboardBackground\n        Image {\n            id: logo\n            source: \"qrc:/assets/packt-logo-500x500\"\n            anchors.centerIn: parent\n            width: Style.sizeDashboardLogo\n            height: Style.sizeDashboardLogo\n        }\n        Text {\n            anchors {\n                top: logo.bottom\n                horizontalCenter: logo.horizontalCenter\n            }\n            text: \"Client Management System\"\n            color: Style.colourDashboardFont\n            font.pixelSize: Style.pixelSizeDashboard\n        }\n    }\n}\n```", "```cpp\n#ifndef DROPDOWNVALUE_H\n#define DROPDOWNVALUE_H\n#include <QObject>\n#include <cm-lib_global.h>\nnamespace cm {\nnamespace data {\nclass CMLIBSHARED_EXPORT DropDownValue : public QObject\n{\n    Q_OBJECT\n    Q_PROPERTY(int ui_key MEMBER key CONSTANT )\n    Q_PROPERTY(QString ui_description MEMBER description CONSTANT)\npublic:\n    DropDownValue(QObject* parent = nullptr, int key = 0, const QString& description = \"\");\n    ~DropDownValue();\npublic:\n    int key{0};\n    QString description{\"\"};\n};\n}}\n#endif\n```", "```cpp\n#include \"dropdown-value.h\"\nnamespace cm {\nnamespace data {\nDropDownValue::DropDownValue(QObject* parent, int _key, const QString& _description)\n        : QObject(parent)\n{\n    key = _key;\n    description = _description;\n}\nDropDownValue::~DropDownValue()\n{\n}\n}}\n```", "```cpp\n#ifndef DROPDOWN_H\n#define DROPDOWN_H\n#include <QObject>\n#include <QtQml/QQmlListProperty>\n#include <cm-lib_global.h>\n#include <data/dropdown-value.h>\nnamespace cm {\nnamespace data {\nclass CMLIBSHARED_EXPORT DropDown : public QObject\n{\n    Q_OBJECT\n    Q_PROPERTY(QQmlListProperty<cm::data::DropDownValue> ui_values READ ui_values CONSTANT)\npublic:\n    explicit DropDown(QObject* _parent = nullptr, const std::map<int, QString>& values = std::map<int, QString>());\n    ~DropDown();\npublic:\n    QQmlListProperty<DropDownValue> ui_values();\npublic slots:\n    QString findDescriptionForDropdownValue(int valueKey) const;\nprivate:\n    class Implementation;\n    QScopedPointer<Implementation> implementation;\n};\n}}\n#endif\n```", "```cpp\n#include \"dropdown.h\"\n\nnamespace cm {\nnamespace data {\nclass DropDown::Implementation\n{\npublic:\n    Implementation(DropDown* _dropdown, const std::map<int, QString>& _values)\n        : dropdown(_dropdown)\n    {\n        for(auto pair : _values) {\n             values.append(new DropDownValue(_dropdown, pair.first, pair.second));\n        }\n    }\n    DropDown* dropdown{nullptr};\n    QList<DropDownValue*> values;\n};\nDropDown::DropDown(QObject* parent, const std::map<int, QString>& values)\n   : QObject(parent)\n{\n    implementation.reset(new DropDown::Implementation(this, values));\n}\nDropDown::~DropDown()\n{\n}\nQString DropDown::findDescriptionForDropdownValue(int valueKey) const\n{\n    for (auto value : implementation->values) {\n        if (value->key == valueKey) {\n            if(!value->description.isEmpty()) {\n                return value->description;\n            }\n            break;\n        }\n    }\n    return \"Select >\";\n}\nQQmlListProperty<DropDownValue> DropDown::ui_values()\n{\n    return QQmlListProperty<DropDownValue>(this, implementation->values);\n}\n}}\n```", "```cpp\nqmlRegisterType<cm::data::DropDown>(\"CM\", 1, 0, \"DropDown\");\nqmlRegisterType<cm::data::DropDownValue>(\"CM\", 1, 0, \"DropDownValue\");\n```", "```cpp\nvoid Client::addContact()\n{\n    contacts->addEntity(new Contact(this));\n    emit contactsChanged();\n}\n```", "```cpp\nreadonly property color colourDataSelectorBackground: \"#131313\"\nreadonly property color colourDataControlsBackgroundSelected: \"#f36f24\"\nreadonly property color colourDataSelectorFont: \"#ffffff\"\nreadonly property int sizeDataControlsRadius: tscale(5)\n```", "```cpp\nimport QtQuick 2.9\nimport QtQuick.Controls 2.2\nimport CM 1.0\nimport assets 1.0\nItem {\n    id: stringSelectorView\n    property DropDown dropDown\n    property EnumeratorDecorator enumeratorDecorator\n    property int selectedValue\n    ScrollView {\n        id: scrollView\n        visible: true\n        anchors.fill: parent\n        anchors {\n            top: parent.bottom\n             left: parent.left\n             right: parent.right\n             bottom: parent.top\n             margins: Style.sizeScreenMargin\n        }\n        Flow {\n            flow: Grid.TopToBottom\n            spacing: Style.sizeControlSpacing\n            height: scrollView.height\n            Repeater {\n                id: repeaterAnswers\n                model: dropDown.ui_values\n                delegate:\n                    Rectangle {\n                        property bool isSelected: modelData.ui_key.ui_value === enumeratorDecorator.ui_value\n                        width: Style.widthDataControls\n                        height: Style.heightDataControls\n                        radius: Style.sizeDataControlsRadius\n                        color: isSelected ? Style.colourDataControlsBackgroundSelected : Style.colourDataSelectorBackground\n                        Text {\n                            anchors {\n                                fill: parent\n                                margins: Style.heightDataControls / 4\n                            }\n                            text: modelData.ui_description\n                            color: Style.colourDataSelectorFont\n                            font.pixelSize: Style.pixelSizeDataControls\n                            verticalAlignment: Qt.AlignVCenter\n                        }\n                        MouseArea {\n                            anchors.fill: parent\n                            onClicked: {\n                                selectedValue = modelData.ui_key;\n                                contentFrame.pop();\n                            }\n                        }\n                    }\n            }\n        }\n    }\n    Binding {\n        target: enumeratorDecorator\n        property: \"ui_value\"\n        value: selectedValue\n    }\n}\n```", "```cpp\nimport QtQuick 2.9\nimport QtQuick.Controls 2.2\nimport CM 1.0\nimport assets 1.0\nItem {\n    property DropDown dropDown\n    property EnumeratorDecorator enumeratorDecorator\n    id: enumeratorSelectorRoot\n    height: width > textLabel.width + textAnswer.width ? \n    Style.heightDataControls : Style.heightDataControls * 2\n    Flow {\n        anchors.fill: parent\n        Rectangle {\n            width: Style.widthDataControls\n            height: Style.heightDataControls\n            Text {\n                id: textLabel\n                anchors {\n                    fill: parent\n                    margins: Style.heightDataControls / 4\n                }\n                text: enumeratorDecorator.ui_label\n                color: Style.colourDataControlsFont\n                font.pixelSize: Style.pixelSizeDataControls\n                verticalAlignment: Qt.AlignVCenter\n            }\n        }\n        Rectangle {\n            id: buttonAnswer\n            width: Style.widthDataControls\n            height: Style.heightDataControls\n            radius: Style.sizeDataControlsRadius\n            enabled: dropDown ? dropDown.ui_values.length > 0 : false\n            color: Style.colourDataSelectorBackground\n            Text {\n                id: textAnswer\n                anchors {\n                    fill: parent\n                    margins: Style.heightDataControls / 4\n                }\n                text: dropDown.findDescriptionForDropdownValue(enumeratorDecorator.ui_value)\n                color: Style.colourDataSelectorFont\n                font.pixelSize: Style.pixelSizeDataControls\n                verticalAlignment: Qt.AlignVCenter\n            }\n            MouseArea {\n                anchors.fill: parent\n                onClicked: contentFrame.push(\"qrc:/components/EnumeratorSelectorView.qml\",\n {dropDown: enumeratorSelectorRoot.dropDown,\n enumeratorDecorator: enumeratorSelectorRoot.enumeratorDecorator})\n            }\n        }\n    }\n}\n```", "```cpp\nreadonly property real widthFormButton: 240\nreadonly property real heightFormButton: 60\nreadonly property color colourFormButtonBackground: \"#f36f24\"\nreadonly property color colourFormButtonFont: \"#ffffff\"\nreadonly property int pixelSizeFormButtonIcon: 32\nreadonly property int pixelSizeFormButtonText: 22\nreadonly property int sizeFormButtonRadius: 5\n```", "```cpp\nimport QtQuick 2.9\nimport CM 1.0\nimport assets 1.0\nItem {\n    property alias iconCharacter: textIcon.text\n    property alias description: textDescription.text\n    signal formButtonClicked()\n    width: Style.widthFormButton\n    height: Style.heightFormButton\n    Rectangle {\n        id: background\n        anchors.fill: parent\n        color: Style.colourFormButtonBackground\n        radius: Style.sizeFormButtonRadius\n        Text {\n            id: textIcon\n            anchors {\n                verticalCenter: parent.verticalCenter\n                left: parent.left\n                margins: Style.heightFormButton / 4\n            }\n            font {\n                family: Style.fontAwesome\n                pixelSize: Style.pixelSizeFormButtonIcon\n            }\n            color: Style.colourFormButtonFont\n            text: \"\\uf11a\"\n            horizontalAlignment: Text.AlignHCenter\n            verticalAlignment: Text.AlignVCenter\n        }\n        Text {\n            id: textDescription\n            anchors {\n                left: textIcon.left\n                bottom: parent.bottom\n                top: parent.top\n                right: parent.right\n            }\n            font.pixelSize: Style.pixelSizeFormButtonText\n            color: Style.colourFormButtonFont\n            text: \"SET ME!!\"\n            horizontalAlignment: Text.AlignHCenter\n            verticalAlignment: Text.AlignVCenter\n        }\n        MouseArea {\n            anchors.fill: parent\n            cursorShape: Qt.PointingHandCursor\n            hoverEnabled: true\n            onEntered: background.state = \"hover\"\n            onExited: background.state = \"\"\n            onClicked: formButtonClicked()\n        }\n        states: [\n            State {\n                name: \"hover\"\n                PropertyChanges {\n                    target: background\n                    color: Qt.darker(Style.colourFormButtonBackground)\n                }\n            }\n        ]\n    }\n}\n```", "```cpp\nimport QtQuick 2.9\nimport CM 1.0\nimport assets 1.0\nItem {\n    property Contact contact\n    implicitWidth: flow.implicitWidth\n    implicitHeight: flow.implicitHeight + borderBottom.implicitHeight + Style.sizeItemMargin\n    height: width > selectorType.width + textAddress.width + Style.sizeScreenMargin\n            ? selectorType.height + borderBottom.height + Style.sizeItemMargin\n            : selectorType.height + textAddress.height + Style.sizeScreenMargin + borderBottom.height + Style.sizeItemMargin\n    Flow {\n        id: flow\n        width: parent.width\n        spacing: Style.sizeScreenMargin\n        EnumeratorSelector {\n            id: selectorType\n            width: Style.widthDataControls\n            dropDown: contact.ui_contactTypeDropDown\n            enumeratorDecorator: contact.ui_contactType\n        }\n        StringEditorSingleLine {\n            id: textAddress\n            width: Style.widthDataControls\n            stringDecorator: contact.ui_address\n        }\n    }\n    Rectangle {\n        id: borderBottom\n        anchors {\n            top: flow.bottom\n            left: parent.left\n            right: parent.right\n            topMargin: Style.sizeItemMargin\n        }\n        height: 1\n        color: Style.colorItemBorder\n    }\n}\n```", "```cpp\nimport QtQuick 2.9\nimport CM 1.0\nimport assets 1.0\nPanel {\n    property Client client\n    id: contactsEditorRoot\n    contentComponent:\n        Column {\n            id: column\n            spacing: Style.sizeControlSpacing\n            Repeater {\n                id: contactsView\n                model: client.ui_contacts\n                delegate:\n                    ContactDelegate {\n                        width: contactsEditorRoot.width\n                        contact: modelData\n                    }\n            }\n            FormButton {\n                iconCharacter: \"\\uf067\"\n                description: \"Add Contact\"\n                onFormButtonClicked: {\n                    client.addContact();\n                }\n            }\n        }\n}\n```", "```cpp\nContactsEditor {\n    width: scrollView.width\n    client: newClient\n    headerText: \"Contact Details\"\n}\n```", "```cpp\nContactsEditor {\n    width: scrollView.width\n    client: selectedClient\n    headerText: \"Contact Details\"\n}\n```", "```cpp\n$ otool -L cm-ui.app/Contents/MacOS/cm-ui\n```", "```cpp\ncm-ui:\nlibcm-lib.1.dylib (compatibility version 1.0.0, current version 1.0.0)\n@rpath/QtQuick.framework/Versions/5/QtQuick (compatibility version 5.9.0, current version 5.9.1)\n@rpath/QtQml.framework/Versions/5/QtQml (compatibility version 5.9.0, current version 5.9.1)\n@rpath/QtNetwork.framework/Versions/5/QtNetwork (compatibility version 5.9.0, current version 5.9.1)\n@rpath/QtCore.framework/Versions/5/QtCore (compatibility version 5.9.0, current version 5.9.1)\n/System/Library/Frameworks/DiskArbitration.framework/Versions/A/DiskArbitration (compatibility version 1.0.0, current version 1.0.0)\n/System/Library/Frameworks/IOKit.framework/Versions/A/IOKit (compatibility version 1.0.0, current version 275.0.0)\n@rpath/QtGui.framework/Versions/5/QtGui (compatibility version 5.9.0, current version 5.9.1)\n@rpath/QtXml.framework/Versions/5/QtXml (compatibility version 5.9.0, current version 5.9.1)\n/System/Library/Frameworks/OpenGL.framework/Versions/A/OpenGL (compatibility version 1.0.0, current version 1.0.0)\n/System/Library/Frameworks/AGL.framework/Versions/A/AGL (compatibility version 1.0.0, current version 1.0.0)\n/usr/lib/libc++.1.dylib (compatibility version 1.0.0, current version 307.5.0)\n/usr/lib/libSystem.B.dylib (compatibility version 1.0.0, current version 1238.50.2)\n```", "```cpp\n$ mkdir cm-ui.app/Contents/Frameworks\n```", "```cpp\n$ cp -R /Users/<Your Username>  /Qt5.9.1 /5.9.1/clang_64 /lib/ QtQuick.framework cm-ui.app/Contents/Frameworks\n```", "```cpp\n$ install_name_tool -id @executable_path /../Frameworks / QtQuick.framework/Versions/5/QtQuick cm-ui.app /Contents /Frameworks / QtQuick.framework/Versions/5/QtQuick\n```", "```cpp\n$ install_name_tool -change @rpath/QtQuick.framework/Versions/5/QtQuick @executable_path/../Frameworks/QtQuick.framework/Versions/5/QtQuick cm-ui.app/Contents/MacOs/cm-ui\n```", "```cpp\n$ <Path to bin>/macdeployqt cm-ui.app -qmldir=<Qt Projects>/cm/cm-ui -libpath=<Qt Projects>/cm/binaries/osx/clang/x64/release\n```", "```cpp\nFile exists, skip copy: \"cm-ui.app/Contents/PlugIns/quick/libqtquick2plugin.dylib\"\nFile exists, skip copy: \"cm-ui.app/Contents/PlugIns/quick/libqtquickcontrols2plugin.dylib\"\nFile exists, skip copy: \"cm-ui.app/Contents/PlugIns/quick/libqtquickcontrols2materialstyleplugin.dylib\"\nFile exists, skip copy: \"cm-ui.app/Contents/PlugIns/quick/libqtquickcontrols2universalstyleplugin.dylib\"\nFile exists, skip copy: \"cm-ui.app/Contents/PlugIns/quick/libwindowplugin.dylib\"\nFile exists, skip copy: \"cm-ui.app/Contents/PlugIns/quick/libqtquicktemplates2plugin.dylib\"\nFile exists, skip copy: \"cm-ui.app/Contents/PlugIns/quick/libqtquickcontrols2materialstyleplugin.dylib\"\nFile exists, skip copy: \"cm-ui.app/Contents/PlugIns/quick/libqtquickcontrols2materialstyleplugin.dylib\"\nFile exists, skip copy: \"cm-ui.app/Contents/PlugIns/quick/libqtquickcontrols2universalstyleplugin.dylib\"\nFile exists, skip copy: \"cm-ui.app/Contents/PlugIns/quick/libqtquickcontrols2universalstyleplugin.dylib\"\nWARNING: Plugin \"libqsqlodbc.dylib\" uses private API and is not Mac App store compliant.\nWARNING: Plugin \"libqsqlpsql.dylib\" uses private API and is not Mac App store compliant.\nERROR: no file at \"/opt/local/lib/mysql55/mysql/libmysqlclient.18.dylib\"\nERROR: no file at \"/usr/local/lib/libpq.5.dylib\"\n```", "```cpp\n$ ldd <Qt Projects>/cm/binaries/linux/gcc/x64/release/cm-ui\n```", "```cpp\nlinux-vdso.so.1 => (0x00007ffdeb1c2000)\nlibcm-lib.so.1 => /usr/lib/libcm-lib.so.1 (0x00007f624243d000)\nlibQt5Gui.so.5 => /home/nick/Qt/5.9.1/gcc_64/lib/libQt5Gui.so.5 (0x00007f6241c8f000)\nlibQt5Qml.so.5 => /home/nick/Qt/5.9.1/gcc_64/lib/libQt5Qml.so.5 (0x00007f6241698000)\nlibQt5Xml.so.5 => /home/nick/Qt/5.9.1/gcc_64/lib/libQt5Xml.so.5 (0x00007f624145e000)\nlibQt5Core.so.5 => /home/nick/Qt/5.9.1/gcc_64/lib/libQt5Core.so.5 (0x00007f6240d24000)\nlibstdc++.so.6 => /usr/lib/x86_64-linux-gnu/libstdc++.so.6 (0x00007f62409a1000)\nlibgcc_s.so.1 => /lib/x86_64-linux-gnu/libgcc_s.so.1 (0x00007f624078b000)\nlibc.so.6 => /lib/x86_64-linux-gnu/libc.so.6 (0x00007f62403c1000)\nlibQt5Sql.so.5 => /home/nick/Qt/5.9.1/gcc_64/lib/libQt5Sql.so.5 (0x00007f6240179000)\nlibQt5Network.so.5 => /home/nick/Qt/5.9.1/gcc_64/lib/libQt5Network.so.5 (0x00007f623fde8000)\nlibpthread.so.0 => /lib/x86_64-linux-gnu/libpthread.so.0 (0x00007f623fbcb000)\nlibGL.so.1 => /usr/lib/x86_64-linux-gnu/mesa/libGL.so.1 (0x00007f623f958000)\nlibz.so.1 => /lib/x86_64-linux-gnu/libz.so.1 (0x00007f623f73e000)\nlibm.so.6 => /lib/x86_64-linux-gnu/libm.so.6 (0x00007f623f435000)\nlibrt.so.1 => /lib/x86_64-linux-gnu/librt.so.1 (0x00007f623f22c000)\nlibicui18n.so.56 => /home/nick/Qt/5.9.1/gcc_64/lib/libicui18n.so.56 (0x00007f623ed93000)\nlibicuuc.so.56 => /home/nick/Qt/5.9.1/gcc_64/lib/libicuuc.so.56 (0x00007f623e9db000)\nlibicudata.so.56 => /home/nick/Qt/5.9.1/gcc_64/lib/libicudata.so.56 (0x00007f623cff7000)\nlibdl.so.2 => /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f623cdf3000)\nlibgthread-2.0.so.0 => /usr/lib/x86_64-linux-gnu/libgthread-2.0.so.0 (0x00007f623cbf1000)\nlibglib-2.0.so.0 => /lib/x86_64-linux-gnu/libglib-2.0.so.0 (0x00007f623c8df000)\n/lib64/ld-linux-x86-64.so.2 (0x0000562f21a5c000)\nlibexpat.so.1 => /lib/x86_64-linux-gnu/libexpat.so.1 (0x00007f623c6b6000)\nlibxcb-dri3.so.0 => /usr/lib/x86_64-linux-gnu/libxcb-dri3.so.0 (0x00007f623c4b2000)\nlibxcb-present.so.0 => /usr/lib/x86_64-linux-gnu/libxcb-present.so.0 (0x00007f623c2af000)\nlibxcb-sync.so.1 => /usr/lib/x86_64-linux-gnu/libxcb-sync.so.1 (0x00007f623c0a8000)\nlibxshmfence.so.1 => /usr/lib/x86_64-linux-gnu/libxshmfence.so.1 (0x00007f623bea4000)\nlibglapi.so.0 => /usr/lib/x86_64-linux-gnu/libglapi.so.0 (0x00007f623bc75000)\nlibXext.so.6 => /usr/lib/x86_64-linux-gnu/libXext.so.6 (0x00007f623ba63000)\nlibXdamage.so.1 => /usr/lib/x86_64-linux-gnu/libXdamage.so.1 (0x00007f623b85f000)\nlibXfixes.so.3 => /usr/lib/x86_64-linux-gnu/libXfixes.so.3 (0x00007f623b659000)\nlibX11-xcb.so.1 => /usr/lib/x86_64-linux-gnu/libX11-xcb.so.1 (0x00007f623b457000)\nlibX11.so.6 => /usr/lib/x86_64-linux-gnu/libX11.so.6 (0x00007f623b11c000)\nlibxcb-glx.so.0 => /usr/lib/x86_64-linux-gnu/libxcb-glx.so.0 (0x00007f623af03000)\nlibxcb-dri2.so.0 => /usr/lib/x86_64-linux-gnu/libxcb-dri2.so.0 (0x00007f623acfe000)\nlibxcb.so.1 => /usr/lib/x86_64-linux-gnu/libxcb.so.1 (0x00007f623aadb000)\nlibXxf86vm.so.1 => /usr/lib/x86_64-linux-gnu/libXxf86vm.so.1 (0x00007f623a8d5000)\nlibdrm.so.2 => /usr/lib/x86_64-linux-gnu/libdrm.so.2 (0x00007f623a6c4000)\nlibpcre.so.3 => /lib/x86_64-linux-gnu/libpcre.so.3 (0x00007f623a453000)\nlibXau.so.6 => /usr/lib/x86_64-linux-gnu/libXau.so.6 (0x00007f623a24e000)\nlibXdmcp.so.6 => /usr/lib/x86_64-linux-gnu/libXdmcp.so.6 (0x00007f623a048000)\n```", "```cpp\nlibcm-lib.so.1 => /usr/lib/libcm-lib.so.1\n```", "```cpp\n$ sudo cp <Qt Projects>/cm/binaries/linux/gcc/x64/release/libcm-lib.so.1 /usr/lib\n```", "```cpp\n$ chmod a+x <Path to downloaded file>/linuxdeployqt-continuous-x86_64.AppImage\n```", "```cpp\n$ <Path to downloaded file>/linuxdeployqt-continuous-x86_64.AppImage cm-ui -qmldir=<Qt Projects>/cm/cm-ui -appimage\n```", "```cpp\nERROR: Desktop file missing, creating a default one (you will probably want to edit it)\nERROR: Icon file missing, creating a default one (you will probably want to edit it)\nERROR: \"/usr/bin/qmake -query\" exited with 1 : \"qmake: could not exec '/usr/lib/x86_64-linux-gnu/qt4/bin/qmake': No such file or directory\\n\"\nERROR: Qt path could not be determined from qmake on the $PATH\nERROR: Make sure you have the correct Qt on your $PATH\nERROR: You can check this with qmake -v\n```", "```cpp\n$ export PATH=<Qt Path>/5.9.1/gcc_64/bin/:$PATH\n```", "```cpp\n$ qmake -v\n```", "```cpp\nQMake version 3.1\nUsing Qt version 5.9.1 in /home/nick/Qt/5.9.1/gcc_64/lib\n```", "```cpp\nERROR: Desktop file missing, creating a default one (you will probably want to edit it)\nERROR: Icon file missing, creating a default one (you will probably want to edit it)\nERROR: ldd outputLine: \"libmysqlclient.so.18 => not found\"\nERROR: for binary: \"/home/nick/Qt/5.9.1/gcc_64/plugins/sqldrivers/libqsqlmysql.so\"\nERROR: Please ensure that all libraries can be found by ldd. Aborting.\n```", "```cpp\n$ cd <Qt Path>/5.9.1/gcc_64/plugins/sqldrivers\n$ mv libqsqlmysql.so libqsqlmysql.so_ignore\n$ mv libqsqlpsql.so libqsqlpsql.so_ignore\n```", "```cpp\nApp name for filename: Application\ndest_path: Application-x86_64.AppImage\n```", "```cpp\nQXcbIntegration: Cannot create platform OpenGL context, neither GLX nor EGL are enabled\n```", "```cpp\n$ <Path to bin>/windeployqt.exe --qmldir <Qt Projects>/cm/cm-ui <Qt Projects>/cm/installer/windows/packages/com.packtpub.cm/data/cm-ui.exe --compiler-runtime\n```", "```cpp\nWarning: Cannot find GCC installation directory. g++.exe must be in the path.\n```", "```cpp\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Installer>\n    <Name>Client Management</Name>\n    <Version>1.0.0</Version>\n    <Title>Client Management Application Installer</Title>\n    <Publisher>Packt Software Publishing</Publisher>\n    <StartMenuDir>Client Management</StartMenuDir>\n    <TargetDir>@HomeDir@/ClientManagement</TargetDir>\n</Installer>\n```", "```cpp\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<Package>\n    <DisplayName>Client Management application</DisplayName>\n    <Description>Install the Client Management application.</Description>\n    <Version>1.0.0</Version>\n    <ReleaseDate>2017-10-30</ReleaseDate>\n    <Licenses>\n        <License name=\"Fictional Training License Agreement\" file=\"license.txt\" />\n    </Licenses>\n    <Default>true</Default>\n</Package>\n```", "```cpp\n$ <Qt Installation Path> \\Tools \\QtInstallerFramework \\3.0\\ bin\\ binarycreator.exe -c config\\config.xml -p packages ClientManagementInstaller.exe\n```"]