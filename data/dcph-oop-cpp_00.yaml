- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: Companies choose to utilize C++ for its speed; however, object-oriented (OO)
    software design leads to more robust code that is easier to modify and maintain.
    Understanding how to utilize C++ as an object-oriented language is, therefore,
    essential. Programming in C++ won’t guarantee object-oriented programming (OOP)
    – you must understand OO concepts and how they map to C++ language features and
    programming techniques. Additionally, programmers will want to harness additional
    skills beyond OOP to make code more generic and robust, as well as employ well-tested,
    creative solutions that can be found in popular design patterns. It is also critical
    for programmers to understand language features and conventions that can make
    C++ a safer language to use.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 公司选择使用C++是因为其速度；然而，面向对象（OO）的软件设计导致代码更健壮，更容易修改和维护。因此，了解如何将C++用作面向对象（OOP）语言是至关重要的。在C++中编程并不能保证面向对象（OOP）编程（OOP）——您必须理解面向对象（OO）概念以及它们如何映射到C++语言特性和编程技术。此外，程序员还希望掌握超出面向对象（OOP）的额外技能，以使代码更通用和健壮，并采用在流行设计模式中可以找到的经过良好测试的创造性解决方案。对于程序员来说，理解可以使C++成为更安全语言使用的语言特性和约定也是至关重要的。
- en: A programmer who learns how to use C++ as an object-oriented language, following
    safe programming conventions, will become a valuable C++ developer – a developer
    whose code is easy to maintain, modify, and be understood by others.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 一个学会如何按照安全编程约定使用C++作为面向对象（OOP）语言的程序员将成为宝贵的C++开发者——一个代码易于维护、修改且易于他人理解的开发者。
- en: This book has step-by-step explanations of essential OO concepts, paired with
    practical examples in code and often with diagrams so you can truly understand
    how and why things work. Self-assessment questions are available to test your
    skills.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 这本书对必要的面向对象（OO）概念进行了逐步解释，并配以代码中的实际示例，通常还配有图表，以便您真正理解事物是如何以及为什么工作的。书中还提供了自我评估问题，以测试您的技能。
- en: This book first provides necessary building blocks of skills (which may not
    be object-oriented) that provide the essential foundation on which to build OOP
    skills. Next, OO concepts will be described and paired with language features
    as well as coding techniques so that you can understand how to use C++ as an OOP
    language successfully. Additionally, more advanced skills are added to augment
    the programmer’s repertoire, including friend function/classes, operator overloading,
    templates (to build more generic code), exception handling (to build robust code),
    Standard Template Library (STL) basics, as well as design patterns and idioms.
    The book wraps up by re-examining programming constructs presented throughout
    the book, paired with conventions that lead to safer programming in C++. The end
    goal is to enable you to produce robust code that is easy to maintain and understand
    by others.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书首先提供了技能的必要构建块（可能不是面向对象的），这些构建块为构建面向对象（OOP）技能提供了基本的基础。接下来，将描述面向对象（OO）概念，并将其与语言特性以及编码技术相结合，以便您了解如何成功地将C++用作面向对象（OOP）语言。此外，还增加了更多高级技能，以丰富程序员的技能库，包括友元函数/类、运算符重载、模板（构建更通用的代码）、异常处理（构建健壮的代码）、标准模板库（STL）基础，以及设计模式和惯用法。本书通过重新审视书中呈现的编程结构，并配以导致C++更安全编程的约定，来结束全书。最终目标是使您能够生成健壮、易于维护且易于他人理解的代码。
- en: By the end of this book, you will understand both essential and advanced OO
    concepts and how to implement these concepts in C++. You will have a versatile
    toolkit of C++ programming skills. You will additionally understand ways to make
    safer, more robust, and easily maintainable code, as well as understand how to
    employ well-tested design patterns as part of your programming repertoire.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 在本书结束时，您将理解必要的和高级的面向对象（OO）概念，以及如何在C++中实现这些概念。您将拥有一个多功能的C++编程技能工具包。您还将了解如何使代码更安全、更健壮和易于维护，以及如何将经过良好测试的设计模式作为您编程技能的一部分。
- en: Who this book is for?
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 这本书适合谁？
- en: Programmers wanting to utilize C++ for OOP will find this book essential to
    understand how to implement OO designs in C++ through both language features and
    refined programming techniques, while creating robust and easily maintainable
    code. This OOP book assumes prior programming experience; however, if you have
    limited or no prior C++ experience, the early chapters will help you learn essential
    C++ skills to serve as the basis for the many OOP sections, advanced features,
    design patterns, and conventions to promote safe programming in C++.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 想要利用C++进行面向对象编程的程序员会发现这本书对于理解如何在C++中通过语言特性和精炼的编程技术实现面向对象设计至关重要，同时创建健壮且易于维护的代码。这本书假设读者有先前的编程经验；然而，如果你有有限的或没有先前的C++经验，早期章节将帮助你学习必要的C++技能，为许多面向对象部分、高级特性、设计模式和约定打下基础，以促进C++中的安全编程。
- en: What this book covers
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[*Chapter 1*](B19087_01.xhtml#_idTextAnchor016), *Understanding Basic C++ Assumptions*,
    provides a concise review of basic language features that are assumed knowledge
    within the book. Existing programmers can quickly grasp the language basics reviewed
    in this first chapter.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*](B19087_01.xhtml#_idTextAnchor016), *理解基本的C++假设*，对书中假定知识的语言基本特性进行了简要回顾。现有程序员可以快速掌握本第一章中回顾的语言基础。'
- en: '[*Chapter 2*](B19087_02.xhtml#_idTextAnchor072), *Adding Language Necessities*,
    reviews non-OO features that are critical C++ building blocks: `const` qualifiers,
    function prototyping (default values), and function overloading.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*](B19087_02.xhtml#_idTextAnchor072), *添加语言需求*，回顾了关键的C++构建块的非面向对象特性：`const`限定符、函数原型（默认值）和函数重载。'
- en: '[*Chapter 3*](B19087_03.xhtml#_idTextAnchor118), *Indirect Addressing – Pointers*,
    reviews pointers in C++, including memory allocation/deallocation, pointer usage/dereferencing,
    usage in function arguments, void pointers, and introduces the concept of smart
    pointers.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*](B19087_03.xhtml#_idTextAnchor118), *间接寻址 – 指针*，回顾了C++中的指针，包括内存分配/释放、指针使用/解引用、在函数参数中的使用、空指针，并介绍了智能指针的概念。'
- en: '[*Chapter 4*](B19087_04.xhtml#_idTextAnchor188), *Indirect Addressing – References*,
    introduces references as an alternative to pointers, including initialization,
    function arguments/return values, and const qualification.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*](B19087_04.xhtml#_idTextAnchor188), *间接寻址 – 引用*，介绍了引用作为指针的替代方案，包括初始化、函数参数/返回值和`const`限定符。'
- en: '[*Chapter 5*](B19087_05.xhtml#_idTextAnchor222), *Exploring Classes in Detail*,
    introduces OOP by first exploring OO and the concepts of encapsulation and information
    hiding, and then covers class features in detail: member functions, the `this`
    pointer, access labels and regions, constructors, destructor, and qualifiers on
    data members and member functions (`const`, `static`, and `inline`).'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](B19087_05.xhtml#_idTextAnchor222), *详细探索类*，首先通过探索面向对象和封装、信息隐藏的概念来介绍面向对象编程，然后详细介绍了类特性：成员函数、`this`指针、访问标签和区域、构造函数、析构函数以及数据成员和成员函数的限定符（`const`、`static`和`inline`）。'
- en: '[*Chapter 6*](B19087_06.xhtml#_idTextAnchor314), *Implementing Hierarchies
    with Single Inheritance*, details generalization and specialization using single
    inheritance. This chapter covers inheriting members, the use of base class constructors,
    inherited access regions, order of construction/destruction, `final` classes,
    as well as public versus private and protected base classes, and how this changes
    the meaning of inheritance.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*](B19087_06.xhtml#_idTextAnchor314), *使用单一继承实现层次结构*，详细介绍了使用单一继承进行泛化和特殊化。本章涵盖了继承成员、使用基类构造函数、继承访问区域、构造/析构顺序、`final`类，以及公共与私有和受保护的基类，以及这些如何改变继承的含义。'
- en: '[*Chapter 7*](B19087_07.xhtml#_idTextAnchor366), *Utilizing Dynamic Binding
    through Polymorphism*, describes the OO concept of polymorphism and then distinguishes
    operation from method, details virtual functions and runtime binding of methods
    to operations (including how the v-table works), and differentiates the use of
    `virtual`, `override`, and `final`.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](B19087_07.xhtml#_idTextAnchor366), *通过多态利用动态绑定*，描述了面向对象的多态概念，然后区分了操作和方法，详细介绍了虚拟函数和方法的运行时绑定到操作（包括v-table的工作原理），并区分了`virtual`、`override`和`final`的使用。'
- en: '[*Chapter 8*](B19087_08.xhtml#_idTextAnchor399), *Mastering Abstract Classes*,
    explains the OO concept of abstract classes, their implementation using pure virtual
    functions, the OO concept of an interface and how to implement it, as well as
    up and down casting within a public inheritance hierarchy.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B19087_08.xhtml#_idTextAnchor399), *掌握抽象类*，解释了面向对象（OO）中的抽象类概念，以及使用纯虚函数实现抽象类的方法，还介绍了接口的OO概念及其实现方式，以及在一个公有继承层次结构中的向上和向下转换。'
- en: '[*Chapter 9*](B19087_09.xhtml#_idTextAnchor426), *Exploring Multiple Inheritance*,
    details how to use multiple inheritance as well as its controversy in OO designs.
    This chapter covers virtual base classes, diamond-shaped hierarchies, and when
    to consider alternate designs by examining the OO concept of a discriminator.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B19087_09.xhtml#_idTextAnchor426), *探索多重继承*，详细说明了如何使用多重继承以及它在OO设计中的争议。本章涵盖了虚基类、菱形层次结构，以及通过考察判别器的OO概念来确定考虑替代设计的情况。'
- en: '[*Chapter 10*](B19087_10.xhtml#_idTextAnchor454), *Implementing Association*,
    *Aggregation, and Composition*, describes the OO concepts of association, aggregation,
    and composition and how to implement each concept using pointers, sets of pointers,
    containment, and sometimes references.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B19087_10.xhtml#_idTextAnchor454), *实现关联、聚合和组合*，描述了面向对象的关联、聚合和组合概念，以及如何使用指针、指针集合、包含和有时引用来实现每个概念。'
- en: '[*Chapter 11*](B19087_11.xhtml#_idTextAnchor488), *Handling Exceptions*, explains
    how to `try`, `throw`, and `catch` exceptions by considering many exception scenarios.
    This chapter shows how to extend an exception handling hierarchy.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第11章*](B19087_11.xhtml#_idTextAnchor488), *处理异常*，通过考虑许多异常场景来解释如何`try`、`throw`和`catch`异常。本章展示了如何扩展异常处理层次结构。'
- en: '[*Chapter 12*](B19087_12.xhtml#_idTextAnchor526), *Friends and Operator Overloading*,
    explains the proper use of friend functions and classes, and examines operator
    overloading (which may use friends) to allow an operator to work with user defined
    types in the same way it works with standard types.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第12章*](B19087_12.xhtml#_idTextAnchor526), *朋友和运算符重载*，解释了正确使用朋友函数和类的方法，并检查了运算符重载（可能使用朋友）以允许运算符以与标准类型相同的方式与用户定义的类型一起工作。'
- en: '[*Chapter 13*](B19087_13.xhtml#_idTextAnchor561), *Working with Templates*,
    details template functions and classes to genericize certain types of code to
    work with any data type. This chapter also shows how operator overloading can
    make selected code more generic for any type to further support the use of templates.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第13章*](B19087_13.xhtml#_idTextAnchor561), *使用模板*，详细说明了模板函数和类，以泛化某些类型的代码以与任何数据类型一起工作。本章还展示了运算符重载如何使选定的代码对任何类型更通用，从而进一步支持模板的使用。'
- en: '[*Chapter 14*](B19087_14.xhtml#_idTextAnchor595), *Understanding STL Basics*,
    introduces the Standard Template Library in C++ and demonstrates how to use common
    containers, such as `list`, `iterator`, `deque`, `stack`, `queue`, `priority_queue`,
    and `map`. Additionally, STL algorithms and functors are introduced.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第14章*](B19087_14.xhtml#_idTextAnchor595), *理解STL基础*，介绍了C++中的标准模板库（STL），并演示了如何使用常见的容器，如`list`、`iterator`、`deque`、`stack`、`queue`、`priority_queue`和`map`。此外，还介绍了STL算法和函数对象。'
- en: '[*Chapter 15*](B19087_15.xhtml#_idTextAnchor655), *Testing Classes and Components*,
    illustrates OO testing methods using the canonical class form and drivers to test
    classes, and shows how to test classes related through inheritance, association,
    and aggregation. This chapter also shows how to test classes that utilize exception
    handling.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第15章*](B19087_15.xhtml#_idTextAnchor655), *测试类和组件*，展示了使用规范类形式和驱动程序进行OO测试的方法，并展示了如何测试通过继承、关联和聚合相关联的类。本章还展示了如何测试利用异常处理的类。'
- en: '[*Chapter 16*](B19087_16.xhtml#_idTextAnchor711), *Using the Observer Pattern*,
    introduces design patterns overall and then explains the Observer pattern, with
    an in-depth example illustrating the components of the pattern.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第16章*](B19087_16.xhtml#_idTextAnchor711), *使用观察者模式*，介绍了设计模式概述，然后解释了观察者模式，并通过一个深入示例说明了模式的组成部分。'
- en: '[*Chapter 17*](B19087_17.xhtml#_idTextAnchor743), *Applying the Factory Pattern*,
    introduces the Factory Method pattern and showcases its implementation with and
    without an Object Factory. It also compares an Object Factory to an Abstract Factory.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第17章*](B19087_17.xhtml#_idTextAnchor743), *应用工厂模式*，介绍了工厂方法模式，并展示了带和不带对象工厂的实现方式。它还比较了对象工厂与抽象工厂。'
- en: '[*Chapter 18*](B19087_18.xhtml#_idTextAnchor783), *Applying the Adapter Pattern*,
    examines the Adapter pattern, providing strategies and examples utilizing inheritance
    versus association to implement the pattern. Additionally, this chapter demonstrates
    a wrapper class as a simple Adapter.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '[*评估*](B19087_Assessment.xhtml#_idTextAnchor970) 包含了每一章的所有问题的答案。'
- en: '[*Chapter 19*](B19087_19.xhtml#_idTextAnchor829), *Using the Singleton Pattern*,
    examines in detail the Singleton pattern with a sophisticated paired-class implementation.
    Singleton registries are also introduced.'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第19章*](B19087_19.xhtml#_idTextAnchor829)，*使用单例模式*，详细探讨了单例模式，并使用复杂的配对类实现。还介绍了单例注册表。'
- en: '[*Chapter 20*](B19087_20.xhtml#_idTextAnchor876), *Removing Implementation
    Details Using the pImpl Pattern*, describes the pImpl pattern, which is used to
    reduce compile-time dependencies within code. A detailed implementation is explored
    using unique pointers. Performance issues are explored relating to the pattern.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第20章*](B19087_20.xhtml#_idTextAnchor876)，*使用pImpl模式移除实现细节*，描述了pImpl模式，该模式用于减少代码中的编译时依赖。使用唯一指针探讨了详细的实现，并探讨了与该模式相关的性能问题。'
- en: '[*Chapter 21*](B19087_21.xhtml#_idTextAnchor920), *Making C++ Safer*, revisits
    topics covered throughout the book, with the intention of identifying core programming
    guidelines that can be used to make C++ a safer language for the development of
    robust software.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第21章*](B19087_21.xhtml#_idTextAnchor920)，*使C++更安全*，回顾了本书中涵盖的主题，目的是确定可以用来使C++成为开发稳健软件更安全语言的核心理编程指南。'
- en: '[*Assessments*](B19087_Assessment.xhtml#_idTextAnchor970) contains all the
    answers to the questions from every chapter.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[*评估*](B19087_Assessment.xhtml#_idTextAnchor970) 包含了每一章的所有问题的答案。'
- en: To get the most out of this book
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为了充分利用本书
- en: It is assumed that you have a current C++ compiler available. You will want
    to try the many online code examples! You can use any C++ compiler; however, C++17
    or higher is recommended. The code presented will be C++20 compliant. Minimally,
    please download g++ from [https://gcc.gnu.org](https://gcc.gnu.org).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 假设您有一个当前的C++编译器。您将想要尝试许多在线代码示例！您可以使用任何C++编译器；然而，建议使用C++17或更高版本。展示的代码将符合C++20规范。至少，请从[https://gcc.gnu.org](https://gcc.gnu.org)下载g++。
- en: '![](img/B19087_Preface.jpg)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](img/B19087_Preface.jpg)'
- en: Please keep in mind that though there is an ISO standard for C++, some compilers
    vary and interpret the standard with very slight differences.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，尽管C++有一个ISO标准，但一些编译器有所不同，并且对标准的解释有细微的差异。
- en: If you are using the digital version of this book, we advise you to type the
    code yourself or access the code from the book’s GitHub repository (a link is
    available in the next section). Doing so will help you avoid any potential errors
    related to the copying and pasting of code.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您正在使用这本书的数字版，我们建议您亲自输入代码或从书的GitHub仓库（下一节中有一个链接）获取代码。这样做将帮助您避免与代码复制粘贴相关的任何潜在错误。
- en: Trying the coding examples as you read the book is highly recommended. Completing
    the Assessments will further enhance your grasp of each new concept.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在阅读本书时尝试编码示例是高度推荐的。完成评估将进一步增强您对每个新概念的理解。
- en: Download the example code files
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/Deciphering-Object-Oriented-Programming-with-CPP](https://github.com/PacktPublishing/Deciphering-Object-Oriented-Programming-with-CPP).
    If there’s an update to the code, it will be updated in the GitHub repository.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub下载本书的示例代码文件：[https://github.com/PacktPublishing/Deciphering-Object-Oriented-Programming-with-CPP](https://github.com/PacktPublishing/Deciphering-Object-Oriented-Programming-with-CPP)。如果代码有更新，它将在GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他来自我们丰富的图书和视频目录的代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。查看它们吧！
- en: Code in Action
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在行动中的代码
- en: The Code in Action videos for this book can be viewed at [https://bit.ly/3pylFkV](https://bit.ly/3pylFkV).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 本书在行动中的代码视频可在[https://bit.ly/3pylFkV](https://bit.ly/3pylFkV)查看。
- en: Download the color images
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: 'We also provide a PDF file that has color images of the screenshots and diagrams
    used in this book. You can download it here: [https://packt.link/ZvNhC](https://packt.link/ZvNhC).'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一个包含本书中使用的截图和图表彩色图像的PDF文件。您可以从这里下载：[https://packt.link/ZvNhC](https://packt.link/ZvNhC)。
- en: Conventions used
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: “With that in mind, let’s take a look at our Adapter
    class, `Humanoid`.”'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称。以下是一个示例：“考虑到这一点，让我们看看我们的适配器类，`Humanoid`。”'
- en: 'A block of code is set as follows:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块应如下设置：
- en: '[PRE0]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望您注意代码块中的特定部分时，相关的行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出应如下编写：
- en: '[PRE2]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Tips or important notes
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士或重要提示
- en: Appear like this.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来像这样。
- en: Get in touch
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们始终欢迎读者的反馈。
- en: 'General feedback: If you have questions about any aspect of this book, email
    us at [customercare@packtpub.com](mailto:customercare@packtpub.com) and mention
    the book title in the subject of your message.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 一般反馈：如果您对本书的任何方面有疑问，请通过电子邮件发送给我们 [customercare@packtpub.com](mailto:customercare@packtpub.com)，并在邮件主题中提及书名。
- en: 'Errata: Although we have taken every care to ensure the accuracy of our content,
    mistakes do happen. If you have found a mistake in this book, we would be grateful
    if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    and fill in the form.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 错误清单：尽管我们已经尽一切努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，我们将不胜感激，如果您能向我们报告这一点。请访问 [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)
    并填写表格。
- en: 'Piracy: If you come across any illegal copies of our works in any form on the
    internet, we would be grateful if you would provide us with the location address
    or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 侵权：如果您在互联网上以任何形式发现我们作品的非法副本，我们将不胜感激，如果您能提供位置地址或网站名称。请通过电子邮件发送给我们 [copyright@packt.com](mailto:copyright@packt.com)，并提供材料的链接。
- en: 'If you are interested in becoming an author: If there is a topic that you have
    expertise in and you are interested in either writing or contributing to a book,
    please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您有兴趣成为作者：如果您在某个主题上具有专业知识，并且您有兴趣撰写或为本书做出贡献，请访问 [authors.packtpub.com](http://authors.packtpub.com)。
- en: Share Your Thoughts
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 分享您的想法
- en: Once you’ve read Deciphering Object-Oriented Programming with C++, we’d love
    to hear your thoughts! Please [click here to go straight to the Amazon review
    page](https://packt.link/r/1-804-61390-8) for this book and share your feedback.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您阅读了《用C++解码面向对象编程》，我们很乐意听听您的想法！请[点击此处直接访问此书的亚马逊评论页面](https://packt.link/r/1-804-61390-8)并分享您的反馈。
- en: Your review is important to us and the tech community and will help us make
    sure we’re delivering excellent quality content.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 您的评论对我们和科技社区都很重要，并将帮助我们确保我们提供高质量的内容。
- en: 'Part 1: C++ Building Block Essentials'
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第1部分：C++构建块基础
- en: The goal of this part is to ensure that you have a strong background in non-OO
    C++ skills with which to build the forthcoming OOP skills in C++. This is the
    shortest section of the book, designed to quickly get you up to speed in preparation
    for OOP and more advanced book chapters.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分的目标是确保您在非OO C++技能方面有坚实的基础，以便在C++中构建即将到来的OOP技能。这是本书最短的部分，旨在快速让您熟悉OOP和更高级的章节。
- en: 'The first chapter quickly reviews the basic skills that you are assumed to
    have to progress through the book: basic language syntax, looping constructs,
    operators, function usage, user defined type basics (`struct`, `typedef`, `class`
    basics, `using` statement, `enum`, strongly-typed `enum`), and `namespace` basics.
    The next chapter discusses `const` qualified variables, function prototyping,
    prototyping with default values, and function overloading.'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 第一章快速回顾了您在阅读本书时假定具备的基本技能：基本语言语法、循环结构、运算符、函数使用、用户定义类型基础（`struct`、`typedef`、`class`基础、`using`语句、`enum`、强类型`enum`）和`namespace`基础。下一章讨论了`const`限定变量、函数原型、具有默认值的原型和函数重载。
- en: The subsequent chapter covers indirect addressing with pointers by introducing
    `new()` and `delete()` to allocate basic types of data, dynamically allocating
    arrays of 1, 2, and N dimensions, managing memory with `delete`, passing parameters
    as arguments to functions, using void pointers, and an overview of smart pointers.
    This section concludes with a chapter featuring indirect addressing with references
    that will take you through a review of reference basics, references to existing
    objects, and as arguments to functions.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 下一章通过引入`new()`和`delete()`来分配基本数据类型，动态分配1维、2维和N维数组，使用`delete`管理内存，将参数作为函数的参数传递，使用空指针，以及智能指针的概述，来介绍指针的间接寻址。本节以一个章节结束，该章节通过引用的间接寻址，将带您回顾引用的基础知识、对现有对象的引用，以及作为函数的参数。
- en: Although this book will gradually progress to use smart pointers as a preference
    (and recommends smart pointers for safety), gaining proficiency with native C++
    pointers will be an important skill to have. This skill will be crucial for modifying
    and deciphering existing code with native pointers, as well as for clearly understanding
    the potential misuses and pitfalls of native pointers.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这本书会逐渐过渡到优先使用智能指针（并且推荐使用智能指针以确保安全），但熟练掌握原生C++指针将是一项重要的技能。这项技能对于修改和解析使用原生指针的现有代码，以及清晰地理解原生指针的潜在误用和陷阱至关重要。
- en: 'This part comprises the following chapters:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 本部分包括以下章节：
- en: '[*Chapter 1*](B19087_01.xhtml#_idTextAnchor016), *Understanding Basic C++ Assumptions*'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第1章*](B19087_01.xhtml#_idTextAnchor016), *理解基本的C++假设*'
- en: '[*Chapter 2*](B19087_02.xhtml#_idTextAnchor072), *Adding Language Necessities*'
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第2章*](B19087_02.xhtml#_idTextAnchor072), *添加语言需求*'
- en: '[*Chapter 3*](B19087_03.xhtml#_idTextAnchor118), *Indirect Addressing – Pointers*'
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第3章*](B19087_03.xhtml#_idTextAnchor118), *间接寻址 – 指针*'
- en: '[*Chapter 4*](B19087_04.xhtml#_idTextAnchor188), *Indirect Addressing – References*'
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*第4章*](B19087_04.xhtml#_idTextAnchor188), *间接寻址 – 引用*'
- en: 'Part 1: C++ Building Block Essentials'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分：C++构建块基础
