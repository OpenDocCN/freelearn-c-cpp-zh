["```cpp\n    rundll32.exe sysdm.cpl,EditEnvironmentVariables\n\n    ```", "```cpp\n    ;C:\\MinGW-w64\\mingw64\\bin\n    ```", "```cpp\ng++ --version\n\n```", "```cpp\ng++ (x86_64-posix-seh-rev2, Built by MinGW-W64 project) 4.9.2\n\n```", "```cpp\n'g++' is not recognized as an internal or external command, operable program or batch file.\n\n```", "```cpp\n/* rangen.cpp */\n#include <cstdlib>\n#include <iostream>\n#include <ctime>\nint main(void) {\n  int guessNumber;\n  std::cout << \"Select number among 0 to 10:\";\n  std::cin >> guessNumber;\n  if(guessNumber < 0 || guessNumber > 10) {\n    return 1;\n  }\n  std::srand(std::time(0));\n  int randomNumber = (std::rand() % (10 + 1));\n  if(guessNumber == randomNumber) {\n    std::cout << \"Congratulation, \" <<guessNumber<<\" is your lucky number.\\n\";\n  }\n  else {\n    std::cout << \"Sorry, I'm thinking about number \\n\" << randomNumber;\n  }\n  return 0;\n}\n```", "```cpp\ncd C:\\CPP\n\n```", "```cpp\ng++ -Wall rangen.cpp -o rangen\n\n```", "```cpp\nint guessNumber;\nstd::cout << \"Select number among 0 to 10: \";\nstd::cin >> guessNumber;\n\n```", "```cpp\nif(guessNumber < 0 || guessNumber > 10) {\n return 1;\n}\n\n```", "```cpp\nstd::srand(std::time(0));\nint randomNumber = (std::rand() % (10 + 1);\n\n```", "```cpp\nif(guessNumber == randomNumber) {\n std::cout << \"Congratulation ,\"<< guessNumber<<\" is your lucky number.\\n\";\n}\nelse {\n std::cout << \"Sorry, I'm thinking about number \" << randomNumber << \"\\n\";\n}\n\n```", "```cpp\nreturn 0;\n\n```", "```cpp\n#include <cstdlib>\n#include <iostream>\n#include <ctime>\n\n```", "```cpp\n/* pwgen_fn.h */\n#include <string>\n#include <cstdlib>\n#include <ctime>\nclass PasswordGenerator {\n  public:\n    std::string Generate(int);\n};\n```", "```cpp\n/* pwgen_fn.cpp */\n#include \"pwgen_fn.h\"\nstd::string PasswordGenerator::Generate(int passwordLength) {\n  int randomNumber;\n  std::string password;\n  std::srand(std::time(0));\n  for(int i=0; i < passwordLength; i++) {\n    randomNumber = std::rand() % 94 + 33;\n    password += (char) randomNumber;\n  }\n  return password;\n}\n```", "```cpp\n/* passgen.cpp */\n#include <iostream>\n#include \"pwgen_fn.h\"\nint main(void) {\n  int passLen;\n  std::cout << \"Define password length: \";\n  std::cin >> passLen;\n  PasswordGenerator pg;\n  std::string password = pg.Generate(passLen);\n  std::cout << \"Your password: \"<< password << \"\\n\";\n  return 0;\n}\n```", "```cpp\ng++ -Wall passgen.cpp pwgen_fn.cpp -o passgen\n\n```", "```cpp\nstd::string Generate(int);\n\n```", "```cpp\nstd::string PasswordGenerator::Generate(int passwordLength)\n\n```", "```cpp\nint randomNumber;\nstd::string password;\n\n```", "```cpp\nstd::srand(std::time(0));\n\n```", "```cpp\nfor(int i=0; i < passwordLength; i++) {\n randomNumber = std::rand() % 94 + 33;\n password += (char) randomNumber;\n}\nreturn password;\n\n```", "```cpp\n#include \"pwgen_fn.h\"\n\n```", "```cpp\n#include <string>\n#include <cstdlib>\n#include <ctime>\n\n```", "```cpp\nint passLen;\nstd::cout << \"Define password length: \";\nstd::cin >> passLen;\n\n```", "```cpp\nPasswordGenerator pg;\nstd::string password = pg.Generate(passLen);\nstd::cout << \"Your password: \"<< password << \"\\n\";\n\n```", "```cpp\ng++ -Wall -c passgen.cpp pwgen_fn.cpp\ng++ -Wall passgen.o pwgen_fn.o -o passgen\n\n```", "```cpp\ng++ -Wall -c passgen.cpp\n\n```", "```cpp\n/* warning.cpp */\n#include <iostream>\n#include <string>\nint main (void) {\n  std::string name;\n  int age;\n  std::cout << \"Hi \" << name << \", your age is \" << age << \"\\n\";\n}\n```", "```cpp\ng++ -Wall -c warning.cpp\n\n```", "```cpp\nwarning.cpp: In function 'int main()':\nwarning.cpp:7:52: warning: 'age' may be used uninitialized in this function [-Wmaybe-uninitialized]\nstd::cout << \"Hi \" << name << \", your age is \" << age << \"\\n\";]\n\n```", "```cpp\n/* hash.cpp */\n#include <iostream>\n#include <functional>\n#include <string>\nint main(void) {\n  std::string plainText = \"\";\n  std::cout << \"Input string and hit Enter if ready: \";\n  std::cin >> plainText;\n  std::hash<std::string> hashFunc;\n  size_t hashText = hashFunc(plainText);\n  std::cout << \"Hashing: \" << hashText << \"\\n\";\n  return 0;\n}\n```", "```cpp\ng++ -Wall hash.cpp -o hash\ng++ -Wall -ansi hash.cpp -o hash\ng++ -Wall -std=c++98 hash.cpp -o hash\ng++ -Wall -std=c++03 hash.cpp -o hash\ng++ -Wall -std=c++11 hash.cpp -o hash\n\n```", "```cpp\nhash.cpp: In function 'int main()':\nhash.cpp:10:2: error: 'hash' is not a member of 'std'\n std::hash<std::string> hashFunc;\nhash.cpp:10:23: error: expected primary-expression before '>' token\n std::hash<std::string> hashFunc;\nhash.cpp:10:25: error: 'hashFunc' was not declared in this scope\n std::hash<std::string> hashFunc;\n\n```", "```cpp\ng++ --help\n\n```", "```cpp\ng++ -v --help\n\n```", "```cpp\ng++ -v --help 2>&1 | more\n\n```", "```cpp\ng++ --version\n\n```", "```cpp\ng++ (x86_64-posix-seh-rev2, Built by MinGW-W64 project) 4.9.2\n\n```", "```cpp\ng++ -v -Wall rangen.cpp\n\n```", "```cpp\nUsing built-in specs.\nCOLLECT_GCC=g++\nCOLLECT_LTO_WRAPPER=C:/mingw-w64/bin/../libexec/gcc/x86_64-w64-mingw32/4.9.2/lto-wrapper.exe\nTarget: x86_64-w64-mingw32\nConfigured with: ../../../src/gcc-4.9.2/configure \u2013\n...Thread model: posix\ngcc version 4.9.2 (x86_64-posix-seh-rev2, Built by MinGW-W64 project)\n...\n\n```"]