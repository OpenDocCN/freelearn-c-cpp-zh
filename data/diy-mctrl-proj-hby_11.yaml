- en: '*Chapter 11*: IoT Solar Energy (Voltage) Measurement'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '*第11章*：物联网太阳能（电压）测量'
- en: Solar energy is considered one of the most promising **renewable energy sources**
    in the face of global warming challenges. It has been considered one of the best
    alternatives to reduce the dependency on fossil fuels and meet the growing demand
    for electricity (Ryan, 2005). To achieve this, sunlight is converted into electricity,
    and the sunlight is collected through solar panels.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 面对全球变暖的挑战，太阳能被认为是**可再生能源**中最有希望的一种。它被认为是在减少对化石燃料的依赖和满足不断增长的电力需求方面最好的替代品之一（Ryan，2005）。为了实现这一点，阳光被转化为电能，而阳光是通过太阳能板收集的。
- en: In this chapter, you will continue creating IoT software for the STM32 Blue
    Pill microcontroller board using a voltage sensor to measure the solar energy
    collected by a solar panel. The application will send the sensed data to the internet
    using the NodeMCU ESP8266 microcontroller board.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，您将继续为STM32 Blue Pill微控制器板创建物联网软件，使用电压传感器来测量太阳能板收集的太阳能。该应用将通过NodeMCU ESP8266微控制器板将感应数据发送到互联网。
- en: 'In this chapter, we will cover the following main topics:'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将涵盖以下主要主题：
- en: Connecting a solar panel to the Blue Pill board
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将太阳能板连接到Blue Pill板
- en: Reading data from a voltage sensor module
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从电压传感器模块读取数据
- en: Coding a program to send the sensed data to the internet
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 编写程序将感应数据发送到互联网
- en: Showing sensor data results over the internet
  id: totrans-7
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在互联网上显示传感器数据结果
- en: After this chapter, you will have solid skills for developing IoT applications
    and improving your portfolio because it is a core element in Industry 4.0\. The
    first skill you will learn is reading the solar panel voltage from a sensor connected
    to the STM32 Blue Pill. Furthermore, you will learn how to send the information
    read to the internet over the NodeMCU 8266 development board. Finally, you will
    find out how to visualize sensor values on a mobile IoT application.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章之后，您将具备开发物联网应用和提升您的简历的扎实技能，因为它是工业4.0的核心元素。您将学习的第一个技能是从连接到STM32 Blue Pill的传感器读取太阳能板电压。此外，您将学习如何通过NodeMCU
    8266开发板将读取的信息发送到互联网。最后，您将了解如何在移动物联网应用上可视化传感器值。
- en: Technical requirements
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 技术要求
- en: 'The hardware components that will be needed to develop the solar energy measurement
    system are as follows:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 开发太阳能能量测量系统所需的硬件组件如下：
- en: One solderless breadboard.
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个无焊面包板。
- en: One Blue Pill microcontroller board.
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个Blue Pill微控制器板。
- en: One NodeMCU microcontroller.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个NodeMCU微控制器。
- en: One ST-Link/V2 electronic interface for uploading the compiled code to the Blue
    Pill board. Bear in mind that the ST-Link/V2 requires four female-to-female jumper
    wires.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个ST-Link/V2电子接口，用于将编译后的代码上传到Blue Pill板。请注意，ST-Link/V2需要四根公对公跳线。
- en: One B25 voltage sensor.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个B25电压传感器。
- en: One solar panel.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个太阳能板。
- en: Male-to-male jumper wires.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公对公跳线。
- en: Female-to-male jumper wires.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 公对母跳线。
- en: Power source.
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电源。
- en: 'All the components can easily be found at your preferred electronics supplier.
    Remember, you will require the Arduino IDE and the GitHub repository for this
    chapter: [https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter11](https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter11)'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 所有组件都可以在您偏好的电子供应商处轻松找到。记住，您将需要Arduino IDE和GitHub仓库来完成本章：[https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter11](https://github.com/PacktPublishing/DIY-Microcontroller-Projects-for-Hobbyists/tree/master/Chapter11)
- en: 'The Code in Action video for this chapter can be found here: [https://bit.ly/2U4YMsT](https://bit.ly/2U4YMsT)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本章的“代码在行动”视频可以在这里找到：[https://bit.ly/2U4YMsT](https://bit.ly/2U4YMsT)
- en: The next section presents an introduction to the solar panels and the B25 voltage
    measurement sensor and how to interface them to the STM32 Blue Pill microcontroller
    board.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 下一节将介绍太阳能板和B25电压测量传感器，以及如何将它们与STM32 Blue Pill微控制器板接口连接。
- en: Connecting a solar panel to the Blue Pill board
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 将太阳能板连接到Blue Pill板
- en: 'Firstly, we need to learn about two components: the solar panel and the voltage
    measurement sensor. After learning the basics, we can build our solar energy measurement
    system.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们需要了解两个组件：太阳能板和电压测量传感器。在了解基础知识后，我们可以构建我们的太阳能能量测量系统。
- en: Introducing the solar panel
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍太阳能板
- en: Sunlight carries energy. When sunlight collides with a semiconductor, some energy
    is changed into moving electrons, generating current. Solar cells (also known
    as photovoltaic panels or PV panels) were created to take advantage of all the
    sunlight that reaches our planet. When sunlight reflects off a PV panel, the current
    output is constant; this is known as **direct current** (**DC**) electricity.
    This DC can be used to charge batteries and power microcontrollers such as the
    STM32 Blue Pill.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 太阳光携带能量。当阳光与半导体碰撞时，部分能量会转化为移动的电子，从而产生电流。太阳能电池（也称为光伏板或 PV 板）是为了利用到达我们星球的所有阳光而设计的。当阳光反射在
    PV 板上时，电流输出保持恒定；这被称为**直流**（**DC**）电。这种直流电可以用来给电池充电并为微控制器如 STM32 Blue Pill 提供电力。
- en: 'The following screenshot shows a solar panel for use with electronic components,
    such as our solar energy demonstration system:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图显示了用于电子组件（如我们的太阳能演示系统）的太阳能板：
- en: '![Figure 11.1 – Solar panel](img/B16413_Figure_11.1.jpg)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.1 – 太阳能板](img/B16413_Figure_11.1.jpg)'
- en: Figure 11.1 – Solar panel
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.1 – 太阳能板
- en: 'To facilitate the connection and operation with this solar panel, we will solder
    a pin header to the panel so we can directly connect jumper wires to it. The following
    figure shows the pin header and how the PV panel looks after being soldered:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为了方便与该太阳能板连接和操作，我们将焊接一个引脚头到板上，这样我们就可以直接连接跳线到它。以下图显示了引脚头和焊接后的 PV 板的外观：
- en: '![Figure 11.2 – Soldering of pin header to the solar panel](img/B16413_Figure_11.2.jpg)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.2 – 将引脚头焊接至太阳能板](img/B16413_Figure_11.2.jpg)'
- en: Figure 11.2 – Soldering of pin header to the solar panel
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.2 – 将引脚头焊接至太阳能板
- en: 'You can also find solar panels on the market that already have integrated cables
    to facilitate their use, such as the one shown in the following figure:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 您还可以在市场上找到已经集成电缆的太阳能板，以方便使用，如下图所示：
- en: '![Figure 11.3 – Solar panel with integrated wires](img/B16413_Figure_11.3.jpg)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.3 – 带集成线的太阳能板](img/B16413_Figure_11.3.jpg)'
- en: Figure 11.3 – Solar panel with integrated wires
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.3 – 带集成线的太阳能板
- en: With the knowledge of what a solar panel looks like and its functionality, let's
    move on to the following subsection, where we will explore the sensor we will
    use to measure voltage.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解了太阳能板的外观和功能后，让我们继续下一小节，我们将探讨我们将用来测量电压的传感器。
- en: The B25 voltage sensor
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: B25 电压传感器
- en: 'If we need to measure voltage, we can use the analog inputs of our STM32 Blue
    Pill board.These inputs have a limit of 5V, so if it is necessary to measure higher
    voltages, it is necessary to use an external sensor to do it. The **B25 sensor**
    (see *Figure 11.4*) measures voltages in the 5V to 25V range, making it a very
    popular sensor for this task:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们需要测量电压，我们可以使用 STM32 Blue Pill 板的模拟输入。这些输入的电压限制为 5V，因此如果需要测量更高的电压，就必须使用外部传感器来完成。**B25
    传感器**（见 *图 11.4*）测量 5V 至 25V 范围的电压，使其成为这项任务的非常受欢迎的传感器：
- en: '![Figure 11.4 – B25 voltage sensor breakout board](img/B16413_Figure_11.4.jpg)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.4 – B25 电压传感器扩展板](img/B16413_Figure_11.4.jpg)'
- en: Figure 11.4 – B25 voltage sensor breakout board
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.4 – B25 电压传感器扩展板
- en: As can be seen, the module has two terminals to which the external power source
    will be connected, one to GND and the other to VCC, which must be adjusted with
    a screw.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 如所示，该模块有两个终端，外部电源将连接到这两个终端，一个连接到 GND，另一个连接到 VCC，必须用螺丝调整。
- en: 'Additionally, the breakout board connects to the STM32 Blue Pill with 3 header
    pins. They are as follows:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，扩展板通过 3 个引脚头连接到 STM32 Blue Pill。它们如下：
- en: '**S**: This pin generates an analog signal and must be connected to an analog
    input of the microcontroller.'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**S**：此引脚产生模拟信号，必须连接到微控制器的模拟输入。'
- en: '**+**: Not connected.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**+**：未连接。'
- en: '**-**: Ground connection.'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**-**：接地连接。'
- en: With this information in mind, we will learn how to connect the voltage sensor
    to the STM32 Blue Pill board in the next subsection.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个信息的基础上，我们将在下一小节学习如何将电压传感器连接到 STM32 Blue Pill 板上。
- en: Connecting the components
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 连接组件
- en: 'We will use a solderless breadboard to connect the sensor and the STM32 Blue
    Pill microcontroller and finally wire to connect the components. Here''s how we
    wire and connect the components:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用无焊面包板连接传感器和 STM32 Blue Pill 微控制器，并最终用电线连接组件。以下是我们的接线方式和组件连接方法：
- en: Place the voltage sensor and the STM32 Blue Pill on the solderless breadboard.
    Leave some empty space to add the wires.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将电压传感器和 STM32 Blue Pill 放在无焊面包板上。留出一些空位以添加电线。
- en: Connect the **ground** (**GND**) pin of the sensor to a GND terminal of the
    STM32 Blue Pill.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将传感器的**地**（**GND**）引脚连接到STM32 Blue Pill的GND端子。
- en: Next, you need to connect the sensor analog output to an analog input on the
    STM32 Blue Pill card and connect the S of the sensor to pin **A0** of the Blue
    Pill, as shown in *Figure 11.5*:![Figure 11.5 – Voltage sensor connection to the
    Blue Pill](img/B16413_Figure_11.5.jpg)
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，你需要将传感器的模拟输出连接到STM32 Blue Pill卡上的模拟输入，并将传感器的S连接到Blue Pill的**A0**引脚，如图*图11.5*所示：![图11.5
    – 电压传感器连接到Blue Pill](img/B16413_Figure_11.5.jpg)
- en: Figure 11.5 – Voltage sensor connection to the Blue Pill
  id: totrans-52
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图11.5 – 电压传感器连接到Blue Pill
- en: 'Finally, you will need a power connection to connect the solar panel to the
    board. Use the STLink to upload the scripts to the STM32 Blue Pill microcontroller
    board. *Figure 11.6* summarizes all the hardware connections:'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，你需要一个电源连接来将太阳能板连接到板上。使用STLink将脚本上传到STM32 Blue Pill微控制器板。*图11.6*总结了所有硬件连接：
- en: '![Figure 11.6: Circuit for voltage sensor connection](img/B16413_Figure_11.6.jpg)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![图11.6：电压传感器连接电路](img/B16413_Figure_11.6.jpg)'
- en: 'Figure 11.6: Circuit for voltage sensor connection'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.6：电压传感器连接电路
- en: 'The following screenshot presents the schematics for this project:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 以下截图展示了本项目的原理图：
- en: '![Figure 11.7 – Schematics for voltage sensor connection](img/B16413_Figure_11.7.jpg)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![图11.7 – 电压传感器连接的原理图](img/B16413_Figure_11.7.jpg)'
- en: Figure 11.7 – Schematics for voltage sensor connection
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.7 – 电压传感器连接的原理图
- en: 'The schematics diagram shows the electrical connections. The VCC and ground
    terminals of the PV panel were connected to the VCC and GND pins of the sensor.
    To interface the Blue Pill with the sensor, its ground pin was connected to the
    GND bus of the Blue Pill, and finally, the analog output (**S**) of the sensor
    was plugged into the pin A0 of the STM32 microcontroller. *Figure 11.8* shows
    the solar energy measurement system:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 原理图显示了电气连接。光伏板的VCC和地端子连接到传感器的VCC和GND引脚。为了将Blue Pill与传感器接口，其地引脚连接到Blue Pill的GND总线，最后，传感器的模拟输出（**S**）插入到STM32微控制器的A0引脚。*图11.8*显示了太阳能测量系统：
- en: '![Figure 11.8 – Solar energy measurement system](img/B16413_Figure_11.8.jpg)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![图11.8 – 太阳能测量系统](img/B16413_Figure_11.8.jpg)'
- en: Figure 11.8 – Solar energy measurement system
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图11.8 – 太阳能测量系统
- en: Now that we have finished connecting the components, we have created a simple
    circuit for our voltage measurement system, as observed in the previous figure.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经完成了组件的连接，我们创建了一个简单的电路用于我们的电压测量系统，如前图所示。
- en: In this section, we learned about solar panels and met a voltage sensor and
    its components. We also learned how to connect the solar cell to the voltage sensor
    and the voltage sensor to the STM32 Blue Pill.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们了解了太阳能板，并遇到了电压传感器及其组件。我们还学习了如何将太阳能电池连接到电压传感器，以及如何将电压传感器连接到STM32 Blue
    Pill。
- en: It is time to move on to the next section, which will show you how to write
    C code to complete our IoT solar energy monitoring system's first functionality.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候进入下一节了，该节将展示如何编写C代码来完成我们的物联网太阳能监测系统的第一个功能。
- en: Reading data from a voltage sensor module
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从电压传感器模块读取数据
- en: It is time to learn how to code a program that will read the information from
    the voltage sensor and display its reading on the serial monitor.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 是时候学习如何编写一个程序来读取电压传感器的信息并在串行监视器上显示其读数了。
- en: 'Let''s write the program to receive the sensor data from the STM32 Blue Pill:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们编写程序来接收STM32 Blue Pill的传感器数据：
- en: 'Declare which pin of the STM32 Blue Pill card will be used as input of the
    sensor data:'
  id: totrans-68
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 声明STM32 Blue Pill卡上哪个引脚将用作传感器数据的输入：
- en: '[PRE0]'
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'Next, in the `setup()` part, start the serial data transmission and assign
    the speed of the transfer to 9600 bps, and indicate to the microcontroller the
    type of pin assigned to A0:'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接下来，在`setup()`部分，开始串行数据传输，并将传输速度设置为9600 bps，并告知微控制器分配给A0的引脚类型：
- en: '[PRE1]'
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now, in `loop()`, first read the input pin''s data sensor, send its value to
    the serial port, and wait for a second:'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，在`loop()`中，首先读取输入引脚的传感器数据，将其值发送到串行端口，并等待一秒钟：
- en: '[PRE2]'
  id: totrans-73
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE2]'
- en: We are going to load the program to the STM32 board and review the serial plotter
    of the Arduino IDE to know the waveform of the analog signal that we are reading
    from the sensor, and the result can be seen in *Figure 11.9*:![Figure 11.9 – Sensor
    signal waveform in the serial plotter](img/B16413_Figure_11.9.jpg)
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将程序加载到 STM32 板上，并查看 Arduino IDE 的串行绘图器，以了解我们从传感器读取的模拟信号的波形，结果可见于 *图 11.9*：![图
    11.9 – 串行绘图器中的传感器信号波形](img/B16413_Figure_11.9.jpg)
- en: Figure 11.9 – Sensor signal waveform in the serial plotter
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.9 – 串行绘图器中的传感器信号波形
- en: The waveform that forms the sensor signal can take the values from `0` to `1023`.
    Then, it will be necessary to convert this value to voltage.
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 形成传感器信号的波形可以取 `0` 到 `1023` 的值。然后，需要将此值转换为电压。
- en: 'We will add two lines to our script to show the voltage value, and we will
    comment on the one that sends the signal value to the serial port:'
  id: totrans-77
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们将在脚本中添加两行来显示电压值，并对将信号值发送到串行端口的行进行注释：
- en: '[PRE3]'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE3]'
- en: map(value, fromLow, fromHigh, toLow, toHigh)
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: map(value, fromLow, fromHigh, toLow, toHigh)
- en: '[PRE4]'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![Figure 11.10 – Serial monitor readings](img/B16413_Figure_11.10.jpg)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![图 11.10 – 串行监视器读数](img/B16413_Figure_11.10.jpg)'
- en: Figure 11.10 – Serial monitor readings
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 图 11.10 – 串行监视器读数
- en: For the complete sketch, refer to the `Chapter11/voltage` folder in the GitHub
    repository.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 对于完整的草图，请参阅 GitHub 仓库中的 `Chapter11/voltage` 文件夹。
- en: What have we learned so far? We introduced the B25 sensor to measure voltage
    and know about solar panels. We learned to connect them to our STM32 Blue Pill
    microcontroller, write the code to read the sensor data, display it on the serial
    monitor, and graph it in the serial plotter.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 我们到目前为止学到了什么？我们介绍了 B25 传感器来测量电压，并了解了太阳能板。我们学习了如何将它们连接到我们的 STM32 Blue Pill 微控制器，编写代码读取传感器数据，在串行监视器上显示它，并在串行绘图器中绘制它。
- en: Some new skills were acquired in this section, and these skills will help you
    build electronic systems that require monitoring of the voltage level.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们获得了一些新技能，这些技能将帮助您构建需要监测电压水平的电子系统。
- en: Next, we will use the NodeMCU microcontroller to send the sensed data to the
    internet.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将使用 NodeMCU 微控制器将感应数据发送到互联网。
- en: Coding a program to send the sensed data to the internet
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编写程序将感应数据发送到互联网
- en: In this section, we will continue using the NodeMCU development board to receive
    the data from the STM32 and send it to the internet. However, unlike [*Chapter
    10*](B16413_10_Final_NM_ePub.xhtml#_idTextAnchor135), *IoT Plant Pot Moisture
    Sensor*, where a digital value (1 or 0) was sent directly between both microcontrollers,
    we now need to send the voltage value using serial communication between these
    microcontrollers.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在本节中，我们将继续使用 NodeMCU 开发板从 STM32 接收数据并将其发送到互联网。然而，与 [*第 10 章*](B16413_10_Final_NM_ePub.xhtml#_idTextAnchor135)
    中的 *IoT 植物花盆湿度传感器* 不同，其中两个微控制器之间直接发送数字值（1 或 0），我们现在需要在这些微控制器之间使用串行通信发送电压值。
- en: Serial transmission is done by sending the data using the RX/TX pins.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 串行传输是通过使用 RX/TX 引脚发送数据来完成的。
- en: 'Let''s create the program to connect the NodeMCU and the STM32:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建连接 NodeMCU 和 STM32 的程序：
- en: 'In `setup()`, we need to add new serial data transmission to 115200 bps. It
    is the recommended speed for the NodeMCU board:'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 `setup()` 中，我们需要添加新的串行数据传输到 115200 bps。这是 NodeMCU 板的推荐速度：
- en: '[PRE5]'
  id: totrans-92
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The `loop()` instance needs a new line after the sensor reading and voltage
    conversion. The `write()` function sends the data as an integer value:'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`loop()` 实例需要在读取传感器和电压转换后添加新的一行。`write()` 函数将数据作为整数值发送：'
- en: '[PRE6]'
  id: totrans-94
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE6]'
- en: To complete the communication between the NodeMCU and the STM32, it will be
    necessary to add the additional connections shown in *Figure 11.11* and *Figure
    11.12*:![Figure 11.11 – Circuit for microcontroller serial communication](img/B16413_Figure_11.11.jpg)
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要完成 NodeMCU 和 STM32 之间的通信，需要添加 *图 11.11* 和 *图 11.12* 中显示的附加连接：![图 11.11 – 微控制器串行通信电路](img/B16413_Figure_11.11.jpg)
- en: Figure 11.11 – Circuit for microcontroller serial communication
  id: totrans-96
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.11 – 微控制器串行通信电路
- en: '*Figure 11.12* shows the schematics diagram for the circuit interfacing between
    the STM32 and the NodeMCU microcontrollers:'
  id: totrans-97
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图 11.12* 显示了 STM32 和 NodeMCU 微控制器之间电路接口的原理图：'
- en: '![Figure 11.12 – Schematics for microcontroller serial communication](img/B16413_Figure_11.12.jpg)'
  id: totrans-98
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图 11.12 – 微控制器串行通信原理图](img/B16413_Figure_11.12.jpg)'
- en: Figure 11.12 – Schematics for microcontroller serial communication
  id: totrans-99
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.12 – 微控制器串行通信原理图
- en: Connect the RX pin from NodeMCU to the TX pin (B6) of the STM32 and the TX pin
    from NodeMCU to the RX pin (B7) of the STM32.
  id: totrans-100
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 将NodeMCU的RX引脚连接到STM32的TX引脚（B6），并将NodeMCU的TX引脚连接到STM32的RX引脚（B7）。
- en: '*Figure 11.13* shows how everything was connected in the actual system, including
    the voltage sensor:'
  id: totrans-101
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*图11.13*显示了实际系统中所有连接的方式，包括电压传感器：'
- en: '![Figure 11.13 – STM32 and NodeMCU serial connection](img/B16413_Figure_11.13.jpg)'
  id: totrans-102
  prefs:
  - PREF_IND
  type: TYPE_IMG
  zh: '![图11.13 – STM32和NodeMCU串行连接](img/B16413_Figure_11.13.jpg)'
- en: Figure 11.13 – STM32 and NodeMCU serial connection
  id: totrans-103
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图11.13 – STM32和NodeMCU串行连接
- en: Now, to complete the serial connection between the NodeMCU and the STM32, we
    will create a new sketch, `Chapter11/voltage_iot.`
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 现在，为了完成NodeMCU和STM32之间的串行连接，我们将创建一个新的草图，`Chapter11/voltage_iot.`
- en: 'In `setup()`, indicate the serial data transmission:'
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在`setup()`中，指示串行数据传输：
- en: '[PRE7]'
  id: totrans-106
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The final step is `loop()`:'
  id: totrans-107
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后一步是`loop()`：
- en: '[PRE8]'
  id: totrans-108
  prefs:
  - PREF_IND
  type: TYPE_PRE
  zh: '[PRE8]'
- en: With the preceding code, the NodeMCU will receive the sensor value from the
    STM32 and will display it on the serial monitor.
  id: totrans-109
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 使用前面的代码，NodeMCU将从STM32接收传感器值，并将其显示在串行监视器上。
- en: 'The sketch is now complete. Upload it to the NodeMCU board, and reset it after
    completing the upload. Now you can see, in the **serial monitor**, the sensor
    value, as shown in the following screenshot:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 草图现在已完成。将其上传到NodeMCU板，并在上传完成后重置它。现在您可以看到，在**串行监视器**中，传感器值，如下面的截图所示：
- en: It is now time to move on to the next section, which will show you how to visualize
    data over the internet.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 现在是时候进入下一节了，该节将向您展示如何在网上可视化数据。
- en: Showing sensor data results over the internet
  id: totrans-112
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在互联网上显示传感器数据结果
- en: In [*Chapter 9*](B16413_09_Final_NM_ePub.xhtml#_idTextAnchor122), *IoT Temperature-Logging
    System*, and [*Chapter 10*](B16413_10_Final_NM_ePub.xhtml#_idTextAnchor135), *IoT
    Plant Pot Moisture Sensor*, we learned how to program IoT applications within
    our local network. In this section of the chapter, we will learn how to send data
    to the cloud outside of our local network.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第9章*](B16413_09_Final_NM_ePub.xhtml#_idTextAnchor122)，“物联网温度记录系统”，和[*第10章*](B16413_10_Final_NM_ePub.xhtml#_idTextAnchor135)，“物联网植物花盆湿度传感器”中，我们学习了如何在本地网络内编程物联网应用。在本章的这一节中，我们将学习如何将数据发送到本地网络之外的云。
- en: A wide variety of cloud platforms allow us to connect our IoT devices to their
    services. Most allow us to use essential services at no cost. If something more
    complete is desired, there is a charge, generally a monthly payment. This time
    we will use the Blynk platform, which has several free options, and they are the
    ones we will use.
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 众多云平台允许我们将我们的物联网设备连接到它们的服务。大多数平台允许我们免费使用基本服务。如果需要更完整的服务，则可能需要付费，通常是每月支付。这次我们将使用Blynk平台，它有几个免费选项，我们将使用这些选项。
- en: Blynk has an app for both Android and iOS that will allow us to monitor the
    value of the voltage in our solar cell.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: Blynk为Android和iOS都提供了应用程序，这将使我们能够监控太阳能电池板上的电压值。
- en: 'Let''s look at the steps to send and view our information from the internet
    with a mobile app:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何使用移动应用程序从互联网发送和查看我们的信息：
- en: Download the Blynk app.
  id: totrans-117
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 下载Blynk应用程序。
- en: For Android, download it from [https://play.google.com/store/apps/details?id=cc.blynk&hl=en_US](https://play.google.com/store/apps/details?id=cc.blynk&hl=en_US).
  id: totrans-118
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于Android，从[https://play.google.com/store/apps/details?id=cc.blynk&hl=en_US](https://play.google.com/store/apps/details?id=cc.blynk&hl=en_US)下载。
- en: For iOS, download it from [https://apps.apple.com/us/app/blynk-iot-for-arduino-esp32/id808760481](https://apps.apple.com/us/app/blynk-iot-for-arduino-esp32/id808760481).
  id: totrans-119
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于iOS，从[https://apps.apple.com/us/app/blynk-iot-for-arduino-esp32/id808760481](https://apps.apple.com/us/app/blynk-iot-for-arduino-esp32/id808760481)下载。
- en: Create a new account:![Figure 11.14 – Blynk, home screen](img/B16413_Figure_11.14.jpg)
  id: totrans-120
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建一个新账户：![图11.14 – Blynk，主页屏幕](img/B16413_Figure_11.14.jpg)
- en: Figure 11.14 – Blynk, home screen
  id: totrans-121
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图11.14 – Blynk，主页屏幕
- en: Once your account is created, create a new project. Write a name, select ESP8266
    as the device, and set WiFi as the connection type. Then click on **Create Project**:![Figure
    11.15 – Blynk, creating a new account](img/B16413_Figure_11.15.jpg)
  id: totrans-122
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦创建账户，创建一个新的项目。输入名称，选择ESP8266作为设备，并将WiFi设置为连接类型。然后点击**创建项目**：![图11.15 – Blynk，创建新账户](img/B16413_Figure_11.15.jpg)
- en: Figure 11.15 – Blynk, creating a new account
  id: totrans-123
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图11.15 – Blynk，创建新账户
- en: You will receive an email with the necessary token for the app, which you can
    also find in **Settings**:![Figure 11.16 – Blynk, menu screen](img/B16413_Figure_11.16.jpg)
  id: totrans-124
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您将收到一封包含应用程序所需令牌的电子邮件，您也可以在**设置**中找到：![图11.16 – Blynk，菜单屏幕](img/B16413_Figure_11.16.jpg)
- en: Figure 11.16 – Blynk, menu screen
  id: totrans-125
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图11.16 – Blynk，菜单屏幕
- en: Write a name, select **ESP8266** as the device, and **WiFi** as connection type.
    Click on **Create Project**:![Figure 11.17 – Blynk, creating a new project](img/B16413_Figure_11.17.jpg)
  id: totrans-126
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入一个名称，选择**ESP8266**作为设备，并选择**WiFi**作为连接类型。点击**创建项目**：![图 11.17 – Blynk，创建新项目](img/B16413_Figure_11.17.jpg)
- en: Figure 11.17 – Blynk, creating a new project
  id: totrans-127
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.17 – Blynk，创建新项目
- en: You will receive an email with the necessary token for the app, which you can
    also find in **Settings**.
  id: totrans-128
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 你将收到一封包含应用程序所需令牌的电子邮件，你也可以在**设置**中找到它。
- en: Press the screen and the Widget toolbox will appear:![Figure 11.18 – Blynk,
    widgets box](img/B16413_Figure_11.18.jpg)
  id: totrans-129
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按压屏幕，Widget 工具箱将出现：![图 11.18 – Blynk，小部件框](img/B16413_Figure_11.18.jpg)
- en: Figure 11.18 – Blynk, widgets box
  id: totrans-130
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.18 – Blynk，小部件框
- en: Add a **Gauge** component. Configure it and press the **OK** button:![Figure
    11.19 – Solar energy app in Blynk](img/B16413_Figure_11.19.jpg)
  id: totrans-131
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 添加一个**仪表**组件。配置它并按下**确定**按钮：![图 11.19 – Blynk，太阳能应用](img/B16413_Figure_11.19.jpg)
- en: Figure 11.19 – Solar energy app in Blynk
  id: totrans-132
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 图 11.19 – Blynk，太阳能应用
- en: Finally, upload the `Chapter11/voltage_iot` program to the NodeMCU and execute
    it.
  id: totrans-133
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最后，将 `Chapter11/voltage_iot` 程序上传到 NodeMCU 并执行它。
- en: We have reached the end of [*Chapter 11*](B16413_11_Final_NM_ePub.xhtml#_idTextAnchor145)*,
    IoT Solar Energy (Voltage) Measurement*. Congratulations!
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经到达了 [*第 11 章*](B16413_11_Final_NM_ePub.xhtml#_idTextAnchor145) 的结尾，“物联网太阳能（电压）测量”。恭喜！
- en: Summary
  id: totrans-135
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter dedicated to IoT, we have learned some essential topics. First,
    we got to know the solar cells used to power small electronic devices. Next, we
    learned about the B25 voltage sensor and how to connect it to the STM32.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章专门介绍物联网的章节中，我们学习了一些基本主题。首先，我们了解了用于为小型电子设备供电的太阳能电池。接下来，我们学习了 B25 电压传感器以及如何将其连接到
    STM32。
- en: Later, we learned how to create a program to read data from the voltage sensor.
    With the voltage reading, we connect our STM32 to a NodeMCU board through serial
    communication. We create a program to send the voltage value between microcontrollers.
    Finally, we use an app to visualize the sensor data from the cloud.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，我们学习了如何创建一个程序来读取电压传感器的数据。有了电压读数，我们通过串行通信将 STM32 连接到 NodeMCU 板。我们创建了一个程序，在微控制器之间发送电压值。最后，我们使用一个应用程序在云端可视化传感器数据。
- en: At the end of the IoT topics, you have solid skills to create applications and
    devices connected to the internet and intranets. Your portfolio of projects has
    been strengthened to enable you to more easily find a job opportunity in this
    growth area.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 在物联网主题的结尾，你拥有了创建连接到互联网和内网的程序和设备的扎实技能。你的项目组合得到了加强，这将使你更容易在这个增长领域找到工作机会。
- en: In the next chapter, you will start developing projects that will help you create
    electronic support devices to assist with the COVID-19 pandemic.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一章中，你将开始开发项目，这些项目将帮助你创建电子支持设备，以协助应对 COVID-19 大流行。
- en: Further reading
  id: totrans-140
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: 'Ryan, V., *What Is Solar Energy?* Technology Student, 2005: [https://technologystudent.com/energy1/solar1.htm](https://technologystudent.com/energy1/solar1.htm)'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 'Ryan, V., *什么是太阳能？* 技术学生，2005: [https://technologystudent.com/energy1/solar1.htm](https://technologystudent.com/energy1/solar1.htm)'
