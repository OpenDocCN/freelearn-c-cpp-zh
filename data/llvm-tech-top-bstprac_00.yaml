- en: Preface
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前言
- en: A compiler is one of the most prevailing tools used by programmers. The majority
    of programmers have compilers – or some form of compilation technique – in their
    development flow. A modern compiler not only transforms high-level programming
    languages into low-level machine code, but also plays a key role in optimizing
    the speed, size, or even the memory footprint of the program it compiles. With
    these characteristics, building a production-ready compiler has always been a
    challenging task.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 编译器是程序员最常用的工具之一。大多数程序员在其开发流程中都有编译器——或某种形式的编译技术。现代编译器不仅将高级编程语言转换为低级机器代码，而且在优化编译的程序的速度、大小甚至内存占用方面也发挥着关键作用。具有这些特性，构建一个生产就绪的编译器一直是一项具有挑战性的任务。
- en: LLVM is a framework for compiler optimization and code generation. It provides
    building blocks that significantly reduce the efforts of developers to create
    high-quality optimizing compilers and programming language tools. One of its most
    famous products is Clang – the C-family language compiler that builds thousands
    of pieces of widely-used software including the Google Chrome browser and iOS
    apps. LLVM is also used in compilers for many different programming languages,
    such as the famous Swift programming language. It is not an exaggeration to say
    that LLVM is one of the hottest topics when it comes to creating a new programming
    language.
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: LLVM是一个用于编译器优化和代码生成的框架。它提供了构建块，可以显著减少开发者创建高质量优化编译器和编程语言工具的努力。它最著名的产物之一是Clang——一个C系列语言的编译器，构建了包括Google
    Chrome浏览器和iOS应用在内的数千个广泛使用的软件。LLVM也被用于许多不同编程语言的编译器中，如著名的Swift编程语言。当谈到创建新的编程语言时，说LLVM是最热门的话题之一并不过分。
- en: With hundreds of libraries and thousands of different APIs, LLVM provides a
    wide range of features, from key functionalities for optimizing a program to more
    general utilities. In this book, we provide a complete and thorough developer
    guide to two of the most important sub-systems in LLVM – Clang and the middle-end.
    We start with introductions to several components and development best practices
    that can benefit your general development experiences with LLVM. Then, we will
    show you how to develop with Clang. More specifically, we will focus on the topics
    that help you augment and customize the functionalities in Clang. In the last
    part of this book, you will learn crucial knowledge about LLVM IR development.
    This includes how to write an LLVM Pass with the latest syntax and mastering processing
    different IR constructions. We also show you several utilities that can greatly
    improve your productivity in LLVM development. Last but not least, we don't assume
    any particular LLVM version in this book – we try to keep up to date and include
    the latest features from the LLVM source tree.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 随着数百个库和数千种不同的API，LLVM提供了广泛的功能，从优化程序的关键功能到更通用的实用工具。在这本书中，我们为LLVM中最重要两个子系统——Clang和中间端——提供了全面而详尽的开发者指南。我们首先介绍了一些组件和开发最佳实践，这些都可以提高您使用LLVM的总体开发体验。然后，我们将向您展示如何使用Clang进行开发。更具体地说，我们将重点关注帮助您增强和定制Clang功能的话题。本书的最后部分，您将学习关于LLVM
    IR开发的关键知识。这包括如何使用最新语法编写LLVM Pass，以及掌握处理不同的IR结构。我们还向您展示了几个可以极大地提高您在LLVM开发中生产力的实用工具。最后但同样重要的是，本书不假设任何特定的LLVM版本——我们努力保持最新，并包括LLVM源树中的最新功能。
- en: This book provides a handful of code snippets and sample projects in every chapter.
    You are encouraged to download them from the GitHub repository of this book and
    play around with your own customizations.
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: 本书在每一章都提供了一些代码片段和示例项目。我们鼓励您从本书的GitHub仓库下载它们，并尝试您自己的定制。
- en: Who this book is for
  id: totrans-5
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书面向的对象
- en: This book is for people of all LLVM experience levels, with a basic understanding
    of compilers. If you are a compiler engineer who uses LLVM in your daily work,
    this book provides concise development guidelines and references. If you are an
    academic researcher, this book will help you learn useful LLVM skills and build
    your prototypes and projects in a short time. Programming language enthusiasts
    will also find this book useful when it comes to building a new programming language
    with the help of LLVM.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本书面向所有LLVM经验水平的人，需要具备对编译器的基本理解。如果您是使用LLVM进行日常工作的编译器工程师，本书提供了简洁的开发指南和参考。如果您是学术研究人员，本书将帮助您快速学习有用的LLVM技能，并构建原型和项目。编程语言爱好者在利用LLVM构建新的编程语言时，也会发现本书很有用。
- en: What this book covers
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本书涵盖的内容
- en: '[*Chapter 1*](B14590_01_Final_JC_ePub.xhtml#_idTextAnchor014), *Saving Resources
    When Building LLVM*, gives a brief introduction to the LLVM project, before showing
    you how to build LLVM without draining your CPU, memory resources, and disk space.
    This paves the road to shorter development cycles and smoother experiences for
    later chapters.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第1章*](B14590_01_Final_JC_ePub.xhtml#_idTextAnchor014), *构建 LLVM 时节省资源*，简要介绍了
    LLVM 项目，然后向您展示如何构建 LLVM 而不会耗尽您的 CPU、内存资源和磁盘空间。这为后续章节的更短的开发周期和更流畅的体验铺平了道路。'
- en: '[*Chapter 2*](B14590_02_Final_JC_ePub.xhtml#_idTextAnchor029), *Exploring LLVM''s
    Build System Features*, shows you how to write CMake build scripts for both in-tree
    and out-of-tree LLVM development. You will learn crucial skills to leverage LLVM''s
    custom build system features to write more expressive and robust build scripts.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第2章*](B14590_02_Final_JC_ePub.xhtml#_idTextAnchor029), *探索 LLVM 的构建系统功能*，展示了如何编写用于树内和树外
    LLVM 开发的 CMake 构建脚本。您将学习到利用 LLVM 的自定义构建系统功能编写更表达性和健壮的构建脚本的关键技能。'
- en: '[*Chapter 3*](B14590_03_Final_JC_ePub.xhtml#_idTextAnchor037), *Testing with
    LLVM LIT*, shows you the way to run testing with LLVM''s LIT infrastructure. The
    chapter not only gives you a better understanding of how testing works in LLVM''s
    source tree but also enables you to integrate this intuitive, scalable testing
    infrastructure into any project.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第3章*](B14590_03_Final_JC_ePub.xhtml#_idTextAnchor037), *使用 LLVM LIT 进行测试*，展示了如何使用
    LLVM 的 LIT 基础设施运行测试。本章不仅使您更好地理解测试在 LLVM 源树中的工作方式，还使您能够将这种直观、可扩展的测试基础设施集成到任何项目中。'
- en: '[*Chapter 4*](B14590_04_Final_JC_ePub.xhtml#_idTextAnchor052), *TableGen Development*,
    shows you how to write TableGen – a special **Domain Specific Language (DSL)**
    invented by LLVM. We especially focus on using TableGen as a general tool for
    processing structural data, giving you flexible skills to use TableGen outside
    LLVM.'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第4章*](B14590_04_Final_JC_ePub.xhtml#_idTextAnchor052), *TableGen 开发*，展示了如何编写
    TableGen – 由 LLVM 发明的特殊**领域特定语言 (DSL)**。我们特别关注将 TableGen 作为处理结构数据的通用工具，为您提供灵活的技能，以便在
    LLVM 之外使用 TableGen。'
- en: '[*Chapter 5*](B14590_05_Final_JC_ePub.xhtml#_idTextAnchor067), *Exploring Clang''s
    Architecture*, marks the start of our topics on Clang. This chapter gives you
    an overview of Clang, especially its compilation flow, and presents to you the
    role of individual components in Clang''s compilation flow.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第5章*](B14590_05_Final_JC_ePub.xhtml#_idTextAnchor067), *探索 Clang 的架构*，标志着我们对
    Clang 主题的探讨的开始。本章为您提供了 Clang 的概述，特别是其编译流程，并展示了 Clang 编译流程中各个组件的作用。'
- en: '[*Chapter 6*](B14590_06_Final_JC_ePub.xhtml#_idTextAnchor078), *Extending the
    Preprocessor*, shows you the architecture of the preprocessor in Clang and, more
    importantly, shows you how to develop a plugin to extend its functionalities without
    modifying any code in the LLVM source tree.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第6章*](B14590_06_Final_JC_ePub.xhtml#_idTextAnchor078), *扩展预处理器*，展示了 Clang
    中预处理器的架构，更重要的是，展示了如何开发一个插件来扩展其功能，而无需修改 LLVM 源树中的任何代码。'
- en: '[*Chapter 7*](B14590_07_Final_JC_ePub.xhtml#_idTextAnchor093), *Handling AST*,
    shows you how to develop with an **Abstract Syntax Tree (AST)** in Clang. The
    content includes learning important topics to work with an AST''s in-memory representation
    and a tutorial to create a plugin that inserts custom AST processing logic into
    the compilation flow.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第7章*](B14590_07_Final_JC_ePub.xhtml#_idTextAnchor093), *处理 AST*，展示了如何在 Clang
    中使用**抽象语法树 (AST)** 进行开发。内容包括学习与 AST 的内存表示一起工作的重要主题，以及一个教程，介绍如何创建一个插件，将自定义 AST
    处理逻辑插入到编译流程中。'
- en: '[*Chapter 8*](B14590_08_Final_JC_ePub.xhtml#_idTextAnchor108), *Working with
    Compiler Flags and Toolchains*, covers the steps to add custom compiler flags
    and toolchains to Clang. Both skills are especially crucial if you want to support
    new features or new platforms in Clang.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第8章*](B14590_08_Final_JC_ePub.xhtml#_idTextAnchor108), *使用编译器标志和工具链*，介绍了向
    Clang 添加自定义编译器标志和工具链的步骤。如果您想在 Clang 中支持新功能或新平台，这两项技能尤其关键。'
- en: '[*Chapter 9*](B14590_09_Final_JC_ePub.xhtml#_idTextAnchor127), *Working with
    PassManager and AnalysisManager*, marks the start of our discussion on the LLVM
    middle-end. This chapter focuses on writing an LLVM pass – using the latest new
    PassManager syntax – and how to access program analysis data via AnalysisManager.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第9章*](B14590_09_Final_JC_ePub.xhtml#_idTextAnchor127), *使用 PassManager 和
    AnalysisManager*，标志着我们对 LLVM 中间端的讨论的开始。本章专注于编写 LLVM pass – 使用最新的新 PassManager
    语法 – 以及如何通过 AnalysisManager 访问程序分析数据。'
- en: '[*Chapter 10*](B14590_10_Final_JC_ePub.xhtml#_idTextAnchor141), *Processing
    LLVM IR*, is a big chapter containing a variety of core knowledge regarding LLVM
    IR, including the structure of LLVM IR''s in-memory representation and useful
    skills to work with different IR units such as functions, instructions, and loops.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第10章*](B14590_10_Final_JC_ePub.xhtml#_idTextAnchor141)，*处理LLVM IR*，是一个包含关于LLVM
    IR的多种核心知识的章节，包括LLVM IR内存表示的结构以及与不同的IR单元（如函数、指令和循环）一起工作的有用技巧。'
- en: '[*Chapter 11*](B14590_11_Final_JC_ePub.xhtml#_idTextAnchor158), *Gearing Up
    with Support Utilities*, introduces some utilities that can improve your productivity
    – such as having better debugging experiences – when working with LLVM IR.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第11章*](B14590_11_Final_JC_ePub.xhtml#_idTextAnchor158)，*使用支持工具提高效率*，介绍了一些可以提高您与LLVM
    IR一起工作时生产力的工具——例如，获得更好的调试体验。'
- en: '[*Chapter 12*](B14590_12_Final_JC_ePub.xhtml#_idTextAnchor174), *Learning LLVM
    IR Instrumentation*, shows you how instrumentation works on LLVM IR. It covers
    two primary use cases: Sanitizer and **Profile-Guided Optimization (PGO)**. For
    the former, you will learn how to create a custom sanitizer. For the latter, you
    will learn how to leverage PGO data in your LLVM Pass.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '[*第12章*](B14590_12_Final_JC_ePub.xhtml#_idTextAnchor174)，*学习LLVM IR工具化*，展示了在LLVM
    IR上工具化的工作方式。它涵盖了两个主要用例：Sanitizer和**基于配置文件优化（PGO）**。对于前者，您将学习如何创建自定义Sanitizer。对于后者，您将学习如何在LLVM
    Pass中利用PGO数据。'
- en: To get the most out of this book
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 要充分利用本书
- en: This book is designed to bring you the latest features of LLVM, so we encourage
    you to use LLVM after version 12.0, or even the development branch – that is,
    the main branch – throughout this book.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 本书旨在向您介绍LLVM的最新功能，因此我们鼓励您在本书中使用LLVM 12.0版本之后的版本，或者甚至整个开发分支——即主分支。
- en: We assume that you are working on Linux or Unix systems (including macOS). Tools
    and sample commands in this book are mostly run in the command-line interface,
    but you are free to use any code editors or IDEs to write your code.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设您正在使用Linux或Unix系统（包括macOS）。本书中的工具和示例命令大多在命令行界面中运行，但您可以使用任何代码编辑器或IDE来编写您的代码。
- en: '![](img/table_1.jpg)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![img/table_1.jpg](img/table_1.jpg)'
- en: In [*Chapter 1*](B14590_01_Final_JC_ePub.xhtml#_idTextAnchor014)*,* *Saving
    Resources on Building LLVM*, we will provide details on how to build LLVM from
    source.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在[*第1章*](B14590_01_Final_JC_ePub.xhtml#_idTextAnchor014)*，*在构建LLVM中节省资源*，我们将提供如何从源代码构建LLVM的详细信息。
- en: '**If you are using the digital version of this book, we advise you to type
    the code yourself or access the code via the GitHub repository (link available
    in the next section). Doing so will help you avoid any potential errors related
    to the copying and pasting of code.**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您正在使用本书的数字版，我们建议您亲自输入代码或通过GitHub仓库（下一节中提供链接）访问代码。这样做将帮助您避免与代码复制粘贴相关的任何潜在错误。**'
- en: Download the example code files
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载示例代码文件
- en: You can download the example code files for this book from GitHub at [https://github.com/PacktPublishing/LLVM-Techniques-Tips-and-Best-Practices-Clang-and-Middle-End-Libraries](https://github.com/PacktPublishing/LLVM-Techniques-Tips-and-Best-Practices-Clang-and-Middle-End-Libraries).
    In case there's an update to the code, it will be updated on the existing GitHub
    repository.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 您可以从GitHub在[https://github.com/PacktPublishing/LLVM-Techniques-Tips-and-Best-Practices-Clang-and-Middle-End-Libraries](https://github.com/PacktPublishing/LLVM-Techniques-Tips-and-Best-Practices-Clang-and-Middle-End-Libraries)上下载本书的示例代码文件。如果代码有更新，它将在现有的GitHub仓库中更新。
- en: We also have other code bundles from our rich catalog of books and videos available
    at [https://github.com/PacktPublishing/](https://github.com/PacktPublishing/).
    Check them out!
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还有其他来自我们丰富的图书和视频目录的代码包，可在[https://github.com/PacktPublishing/](https://github.com/PacktPublishing/)找到。查看它们吧！
- en: Download the color images
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 下载彩色图像
- en: 'We also provide a PDF file that has color images of the screenshots/diagrams
    used in this book. You can download it here: [https://static.packt-cdn.com/downloads/9781838824952_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781838824952_ColorImages.pdf).'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还提供了一份包含本书中使用的截图/图表彩色图像的PDF文件。您可以从这里下载：[https://static.packt-cdn.com/downloads/9781838824952_ColorImages.pdf](https://static.packt-cdn.com/downloads/9781838824952_ColorImages.pdf)。
- en: Conventions used
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用的约定
- en: There are a number of text conventions used throughout this book.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 本书使用了多种文本约定。
- en: '`Code in text`: Indicates code words in text, database table names, folder
    names, filenames, file extensions, pathnames, dummy URLs, user input, and Twitter
    handles. Here is an example: "To include Clang in the build list, please edit
    the value assigned to the `LLVM_ENABLE_PROJECTS` CMake variable."'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '`文本中的代码`：表示文本中的代码单词、数据库表名、文件夹名、文件名、文件扩展名、路径名、虚拟URL、用户输入和Twitter昵称。以下是一个示例：“要将Clang包含在构建列表中，请编辑分配给`LLVM_ENABLE_PROJECTS`
    CMake变量的值。”'
- en: 'A block of code is set as follows:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 代码块应如下设置：
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'When we wish to draw your attention to a particular part of a code block, the
    relevant lines or items are set in bold:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望将您的注意力引到代码块中的特定部分时，相关的行或项目将以粗体显示：
- en: '[PRE1]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Any command-line input or output is written as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 任何命令行输入或输出都应如下所示：
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Bold**: Indicates a new term, an important word, or words that you see onscreen.
    For example, words in menus or dialog boxes appear in the text like this. Here
    is an example: "Select **System info** from the **Administration** panel."'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**粗体**：表示新术语、重要单词或您在屏幕上看到的单词。例如，菜单或对话框中的单词在文本中显示如下。以下是一个示例：“从**管理**面板中选择**系统信息**。”'
- en: Tips or important notes
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 小贴士或重要注意事项
- en: Appear like this.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来像这样。
- en: Get in touch
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 联系我们
- en: Feedback from our readers is always welcome.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们欢迎读者的反馈。
- en: '**General feedback**: If you have questions about any aspect of this book,
    mention the book title in the subject of your message and email us at [customercare@packtpub.com](mailto:customercare@packtpub.com).'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**一般反馈**：如果您对本书的任何方面有疑问，请在邮件主题中提及书名，并将邮件发送至[customercare@packtpub.com](mailto:customercare@packtpub.com)。'
- en: '**Errata**: Although we have taken every care to ensure the accuracy of our
    content, mistakes do happen. If you have found a mistake in this book, we would
    be grateful if you would report this to us. Please visit [www.packtpub.com/support/errata](http://www.packtpub.com/support/errata),
    selecting your book, clicking on the Errata Submission Form link, and entering
    the details.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**勘误表**：尽管我们已经尽最大努力确保内容的准确性，但错误仍然可能发生。如果您在这本书中发现了错误，我们将非常感激您能向我们报告。请访问[www.packtpub.com/support/errata](http://www.packtpub.com/support/errata)，选择您的书籍，点击勘误表提交表单链接，并输入详细信息。'
- en: '**Piracy**: If you come across any illegal copies of our works in any form
    on the Internet, we would be grateful if you would provide us with the location
    address or website name. Please contact us at [copyright@packt.com](mailto:copyright@packt.com)
    with a link to the material.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**盗版**：如果您在互联网上以任何形式发现我们作品的非法副本，我们将非常感激您能提供位置地址或网站名称。请通过[copyright@packt.com](mailto:copyright@packt.com)与我们联系，并提供材料的链接。'
- en: '**If you are interested in becoming an author**: If there is a topic that you
    have expertise in and you are interested in either writing or contributing to
    a book, please visit [authors.packtpub.com](http://authors.packtpub.com).'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**如果您有兴趣成为作者**：如果您在某个领域有专业知识，并且您有兴趣撰写或为书籍做出贡献，请访问[authors.packtpub.com](http://authors.packtpub.com)。'
- en: Reviews
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评论
- en: Please leave a review. Once you have read and used this book, why not leave
    a review on the site that you purchased it from? Potential readers can then see
    and use your unbiased opinion to make purchase decisions, we at Packt can understand
    what you think about our products, and our authors can see your feedback on their
    book. Thank you!
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 请留下评论。一旦您阅读并使用了这本书，为何不在购买它的网站上留下评论呢？潜在的读者可以查看并使用您的客观意见来做出购买决定，我们Packt可以了解您对我们产品的看法，我们的作者也可以看到他们对书籍的反馈。谢谢！
- en: For more information about Packt, please visit [packt.com](http://packt.com).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如需更多关于Packt的信息，请访问[packt.com](http://packt.com)。
