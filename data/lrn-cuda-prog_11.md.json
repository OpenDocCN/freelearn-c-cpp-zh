["```cpp\n$ nvidia-smi [option1 [arg]] [option2 [arg]] ...\n```", "```cpp\n$ nvidia-smi --query-gpu=timestamp,name,pci.bus_id,driver_version,pstate,pcie.link.gen.max,pcie.link.gen.current,temperature.gpu,utilization.gpu,utilization.memory,memory.used,memory.free,memory.used --format=csv -l 1\n```", "```cpp\n$ nvidia-smi --query-gpu=index,clocks_throttle_reasons.active,clocks_throttle_reasons.gpu_idle,clocks_throttle_reasons.applications_clocks_setting,clocks_throttle_reasons.sw_power_cap,clocks_throttle_reasons.hw_slowdown,clocks_throttle_reasons.hw_thermal_slowdown,clocks_throttle_reasons.hw_power_brake_slowdown,clocks_throttle_reasons.sync_boost --format=csv\n```", "```cpp\n$ nvidia-smi -i <device id> -pl N\n```", "```cpp\n$ sudo nvidia-persistenced\n```", "```cpp\n$ nvidia-smi -q -d SUPPORTED_CLOCKS\n$ sudo nvidia-smi -ac <Mem clock, Graphics clock>\n```", "```cpp\n$ sudo nvidia-smi -ac 877,1380 # V100 PCIe\n$ sudo nvidia-smi -ac 877,1530  # V100 SMX\n```", "```cpp\n$ nvidia-smi dmon -s pucvmet -i -0\n```", "```cpp\n$ nvidia-smi pmon -i 0 -s u -o T\n```", "```cpp\nnvidia-smi topo -m\n```", "```cpp\n$ nvidia-smi topo -p2p rwnap\n```", "```cpp\n$ sudo nvidia-smi -dm {0|1}\n```", "```cpp\n$ nvidia-smi -g {GPU_ID} -dm {0|1}\n```", "```cpp\nfor (int iy = 1; iy < NoRows; iy++)\n{\n    for ( int ix = 1; ix < NoCols; ix++)\n    {\n        Anew[ix][iy] = rhs[iy\u2217nx+ix] \n                     - 0.25f*(Aref[ix-1][iy] + Aref[ix+1][iy] \n                     + Aref[ix][iy-1] + Aref[ix][iy+1]);\n    }\n}\n```", "```cpp\ndocker run --rm -it --runtime=nvidia nvcr.io/nvidia/cuda:9.0-devel-ubuntu16.04\n```", "```cpp\nFROM nvcr.io/nvidia/pytorch:19.03-py3\nRUN git clone https://github.com/NVIDIA/apex /opt/apex && \\\n cd /opt/apex && \\\n pip install -v --no-cache-dir --global-option=\"--cpp_ext\" --global-option=\"--cuda_ext\" .\n```", "```cpp\ndocker build -t <image-name>:<tag> .\n```", "```cpp\ndocker push <DockerHub-ID>/<image-name>:<tag>\n```", "```cpp\ndocker save <image-name>:<tag> | gzip > container.tgz\n```", "```cpp\ngunzip -c container.tgz | docker load\n```", "```cpp\n{\n    \"default-runtime\": \"nvidia\",\n    \"runtimes\": {\n        \"nvidia\": {\n            \"path\": \"nvidia-container-runtime\",\n            \"runtimeArgs\": []\n        }\n    }\n}\n```", "```cpp\nsudo systemctl restart docker\n```"]