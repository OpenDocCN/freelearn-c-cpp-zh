- en: Basic Prototyping
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基本原型制作
- en: Prototyping is where all of our ideas come to life. When I started working with
    microcontrollers I really wanted to design and build my whole project and watch
    it magically work. I realized that all I was doing was overwhelming myself and
    quickly learned how to break the larger projects into much smaller projects. I
    could then create prototypes for each of these smaller projects to verify they
    worked before incorporating them into the larger project.
  id: totrans-1
  prefs: []
  type: TYPE_NORMAL
  zh: 原型制作是我们所有想法得以实现的地方。当我开始使用微控制器时，我非常想设计和构建整个项目，并看到它神奇地工作。我意识到我只是在让自己感到不知所措，并很快学会了如何将大型项目分解成更小的项目。然后我可以为这些较小的项目创建原型，以验证它们在整合到更大的项目之前是否工作正常。
- en: 'In this chapter, we will learn:'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们将学习：
- en: Where to set up a work area
  id: totrans-3
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在哪里设置工作区域
- en: All about breadboards
  id: totrans-4
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 关于面包板的全部内容
- en: What Dupont (jumper) cables are
  id: totrans-5
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 杜邦（跳线）电缆是什么
- en: How to prototype a project
  id: totrans-6
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如何进行项目原型制作
- en: Prototypes are used to prove the specifications for a working concept or process
    rather than theoretical ones. Prototypes, as we are referring to it in this book,
    is a model to test a concept or process. Prototyping is the process of creating
    and testing the prototypes.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 原型用于验证工作概念或过程的规格，而不是理论规格。在我们这本书中提到的原型，是一个用于测试概念或过程的模型。原型制作是创建和测试原型的过程。
- en: When working with the Arduino and other microcontrollers, it is important to
    understand how to prototype especially when working with larger projects. These
    larger projects can usually be broken up into multiple smaller projects. We can
    then prototype each of these smaller projects to make sure they work as expected
    before incorporating them into the larger project. Before we look at how to prototype,
    we need to set up a good work area to do prototyping in.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 当与Arduino和其他微控制器一起工作时，了解如何进行原型制作尤其重要，尤其是在处理大型项目时。这些大型项目通常可以被分解成多个较小的项目。然后我们可以为这些较小的项目各自进行原型制作，以确保它们按预期工作，然后再将它们整合到更大的项目中。在我们探讨如何进行原型制作之前，我们需要设置一个良好的工作区域来进行原型制作。
- en: Setting up a work area
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设置工作区域
- en: When you first start building projects with the Arduino, it is important to
    find a good work area to not only build these projects but also store the parts
    and the prototypes that you create. When I first started using microcontrollers
    like the Arduino I used the living room table as my work area while I was watching
    baseball on the TV and quickly realized that the living room was not the ideal
    place to work in because all of the tools and components needed to build these
    projects quickly took over the room. In this section, we will look at what makes
    a good work area.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当你刚开始使用Arduino构建项目时，找到一个好的工作区域很重要，不仅用于构建这些项目，还用于存放你创建的零件和原型。当我刚开始使用Arduino等微控制器时，我在看电视棒球比赛的同时，把客厅的桌子当作我的工作区域，很快意识到客厅并不是理想的工作场所，因为所有构建这些项目所需的工具和元件很快就会占据整个房间。在本节中，我们将探讨什么是一个好的工作区域。
- en: The first item we need to consider when deciding on a work area is static electricity.
    While static electricity isn't as big as a problem as a lot of people make it
    out to be, it is something that we need to consider when setting up an area to
    do prototyping in. I personally have not lost a single electronic component to
    static electricity in the past fifteen to twenty years; however, I also don't
    wear fluffy sweaters, pet my dog and rub my feet on shag carpet while I am working
    with electronic components. As a general rule, we should try to avoid areas that
    are prone to static like areas with thick carpet.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在决定工作区域时，我们需要考虑的第一件事是静电。虽然静电问题没有很多人说的那么严重，但在设置原型制作区域时，我们仍需要考虑这一点。我个人在过去十五到二十年中从未因为静电而丢失任何电子元件；然而，我也不会在工作时穿蓬松的毛衣，抚摸我的狗，或者在地毯上摩擦我的脚。一般来说，我们应该尽量避免在厚地毯等容易产生静电的区域工作。
- en: 'Some tips to avoid static electricity when working with the Arduino or other
    electronic components:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 一些避免在处理Arduino或其他电子元件时产生静电的技巧：
- en: Touch something metal to discharge any static electricity that has built up
    prior to touching an electronic component.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在触摸电子元件之前，触摸金属物体以释放任何积累的静电。
- en: Avoid, if possible, having carpet in your work area or wearing rubber soled
    shoes.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果可能的话，避免在工作区域放置地毯或穿着橡胶底鞋。
- en: Be careful of the material of your clothing. Wool sweaters or socks can cause
    static buildup, so opt for cotton instead.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 注意你的衣物材质。羊毛毛衣或袜子可能导致静电积累，因此选择棉质衣物。
- en: Avoid petting any furry pets while working.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在工作时避免抚摸任何毛茸茸的宠物。
- en: If your work area is dry, use a humidifier to add moister to the air.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果你的工作区域干燥，可以使用加湿器向空气中增加湿度。
- en: Another concern when picking a work area is to have a table or bench large enough
    to hold your projects and preferably one that you can store the projects on for
    extended periods of time. When I was using the living room table as my work area,
    I quickly realized how inconvenient it was to have to clean up every night.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择工作区域时，另一个考虑因素是要有一个足够大的桌子或长凳，以便存放你的项目，并且最好是那种你可以长时间存放项目的。当我使用客厅桌子作为我的工作区域时，我很快意识到每晚都要清理是多么不方便。
- en: You will also want to make sure you have plenty of light in your work area.
    Even if your work area has sufficient lighting I would recommend investing in
    a clip-on table light that you can clip to the edge of the table when you need
    extra lighting. Trust me there will be times when you need extra lighting to make
    the small print on the electronic components stand out.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 你还想要确保你的工作区域有足够的光线。即使你的工作区域有足够的照明，我也建议投资一个可以夹在桌子边缘的夹式台灯，在你需要额外照明时使用。相信我，会有需要额外照明来使电子元件上的小字迹清晰可见的时候。
- en: The final thing you will want to look for in your work area is plenty of storage.
    The more prototyping you do the more parts you will acquire, and you will need
    someplace close by to store them. When I first started working with microcontrollers,
    I stored most of my small parts in a couple small plastic toolboxes. This worked
    out very well in the beginning, but I eventually outgrew those toolboxes and bought
    some small parts cabinets for the smaller components and larger plastic storage
    bins for larger components.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 你还想要在你的工作区域中寻找充足的存储空间。你做的原型越多，你将获得的零件就越多，你将需要一个靠近的地方来存放它们。当我最初开始使用微控制器时，我把大部分小零件存放在几个小塑料工具箱里。一开始效果很好，但后来我长大了，工具箱不够用了，于是我为较小的元件买了几个小零件柜，为较大的元件买了大塑料储物箱。
- en: Before you begin working with the Arduino, it is well worth the time to set
    up a proper work area. I did not do that in the beginning and it made building
    my prototypes significantly harder. Now let's look at two of the most important
    items, after the microcontroller, that you will be using when you are prototyping.
    The two items are the breadboard and Dupont cables.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始使用Arduino之前，花时间设置一个合适的工作区域是非常值得的。我一开始没有这样做，这使我的原型制作变得非常困难。现在让我们看看在原型设计时，除了微控制器之外，你将使用的两个最重要的物品。这两个物品是面包板和杜邦线。
- en: Using a solderless breadboard
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用无焊点面包板
- en: It is a good idea to avoid connecting LEDs, resistors and other electronic components
    directly to the Arduino because you can easily damage the headers on the Arduino
    and the circuit quickly turn into an unorganized mess. When prototyping, it is
    a lot easier to connect the components together using a solderless breadboard.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 避免将LED、电阻和其他电子元件直接连接到Arduino上是个好主意，因为这样很容易损坏Arduino的引脚，电路也会很快变得杂乱无章。在原型设计时，使用无焊点面包板连接组件要容易得多。
- en: A solderless breadboard enables us to connect electronic components together
    without the need to solder. You can get a good solderless MB-102 breadboard for
    under ten US dollars. They are also reusable, which makes them perfect for creating
    prototypes and experimenting with circuit designs.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 无焊点面包板使我们能够不使用焊接将电子元件连接在一起。你可以以不到十美元的价格购买到好的无焊点MB-102面包板。它们也是可重复使用的，这使得它们非常适合创建原型和实验电路设计。
- en: I would recommend not skimping too much on your breadboards because you will
    be using them so much. You can find some very cheap and small breadboards like
    the one in the following photograph; however, it is a lot harder to organize your
    circuit design with these smaller breadboards. I do use these for quick and small
    prototyping, but I would not recommend having these as your main breadboards.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议不要在面包板上节省太多，因为你将非常频繁地使用它们。你可以找到一些非常便宜且小的面包板，就像下面照片中的那样；然而，使用这些较小的面包板组织电路设计要困难得多。我确实使用这些进行快速和小规模的原型设计，但我不建议将这些作为你的主要面包板。
- en: '![](img/da1c7e80-f90f-470e-b4e9-c96b3b8878ff.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/da1c7e80-f90f-470e-b4e9-c96b3b8878ff.png)'
- en: 'For prototyping with the Arduino, it also isn''t necessary to get breadboards
    with built-in power connectors like the one shown in the following photograph:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 对于使用Arduino进行原型设计，也不必非得购买带有内置电源连接器的面包板，就像下面照片中展示的那样：
- en: '![](img/c01d33a2-7b6d-4634-8418-e48576c5e346.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/c01d33a2-7b6d-4634-8418-e48576c5e346.png)'
- en: 'I would recommend getting an MB 102 breadboard like the one shown in the following
    photograph:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我会推荐购买一个像以下照片中显示的MB 102面包板：
- en: '![](img/eb19d6e6-0ff3-496d-96ce-7f42178a4119.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/eb19d6e6-0ff3-496d-96ce-7f42178a4119.png)'
- en: 'The MB-102 breadboard contains two positive and two negative power pails which
    makes it easy to connect the power and ground pins from the Arduino to the electronic
    components needed for the prototype. In the following photograph, we highlighted
    the four power rails where the rails highlighted with red are the positive rails
    and the rails highlighted in black are the negative rails. The positive rails
    are usually marked, on the breadboard, with a + sign and the negative rail is
    marked with a - sign:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: MB-102面包板包含两个正电源轨和两个负电源轨，这使得将Arduino的电源和地引脚连接到原型所需的电子组件变得容易。在以下照片中，我们突出显示了四个电源轨，其中用红色突出显示的轨是正轨，用黑色突出显示的轨是负轨。正轨通常在面包板上用加号标记，负轨用减号标记：
- en: '![](img/d66bfef7-6943-40de-83c5-758bbc030efe.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/d66bfef7-6943-40de-83c5-758bbc030efe.png)'
- en: The power rails run horizontally across the breadboard where all of the connectors
    along the horizontal rail are usually connected together. This means, as an example,
    that if we connect one of the voltage pins on the Arduino to any of the pins along
    the positive rail, then all of the connectors along that rail will have to be
    connected to the voltage pin on the Arduino.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 电源轨在面包板上水平运行，其中所有沿水平轨的连接器通常都是连接在一起的。这意味着，例如，如果我们把Arduino上的一个电压引脚连接到正轨上的任何一个引脚，那么该轨上的所有连接器都必须连接到Arduino上的电压引脚。
- en: 'The pins in the middle of the board are connected together vertically; however,
    the connection does not cross the center of the breadboard. The following photograph
    shows how the pins in the middle of the board are connected:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 板中间的引脚是垂直连接的；然而，连接并没有穿过面包板的中心。以下照片显示了板中间的引脚是如何连接的：
- en: '![](img/7fc25b9b-a9a7-4228-a79b-15963c59308c.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/7fc25b9b-a9a7-4228-a79b-15963c59308c.png)'
- en: While the preceding photograph only shows how six of the vertical rows are connected,
    all of the vertical rows are connected in this manner. One thing to make note
    of is how we described the MB-102 breadboard is how the majority of them are configured;
    however, not all of them are configured in this manner.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然前面的照片只显示了六列垂直行是如何连接的，但所有垂直行都是以这种方式连接的。需要注意的是，我们描述的MB-102面包板是如何配置的，大多数都是这样配置的；然而，并不是所有的都是这样配置的。
- en: Always read the specifications when you purchase components like a breadboard
    to make sure you know if there is anything different about the one you are purchasing.
    It can save you hours of troubleshooting.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 当你购买像面包板这样的组件时，一定要阅读规格说明，以确保你知道你购买的产品是否有任何不同之处。这可以为你节省数小时的问题排除。
- en: 'If we pull off the back of the breadboard we can get a better view of how the
    pins are connected. The following photograph shows what the back of a breadboard
    looks like if we peel off the padding:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们撕掉面包板的背面，我们可以更好地看到引脚是如何连接的。以下照片显示了如果我们撕掉填充物，面包板的背面看起来是什么样子：
- en: '![](img/6ae51f11-8dae-4b63-b80f-5a0a0bca202b.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/6ae51f11-8dae-4b63-b80f-5a0a0bca202b.png)'
- en: 'When working with the Arduino, we can usually run power and ground directly
    from the Arduino to the power rails on the breadboard; however, there are times
    where we may need external power. For those times, they do make external power
    adapters that can connect directly to the breadboard and enable us to use USB,
    AC adapters, and other power sources to power the projects. The following photograph
    shows one such adapter and also how we would connect these power adapters to the
    breadboard:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 当与Arduino一起工作时，我们通常可以直接从Arduino将电源和地连接到面包板上的电源轨；然而，有时我们可能需要外部电源。在这种情况下，他们确实有外部电源适配器，可以直接连接到面包板，并使我们能够使用USB、AC适配器和其他电源为项目供电。以下照片显示了一个这样的适配器以及我们如何将这些电源适配器连接到面包板：
- en: '![](img/e8ec2ca8-30e7-4570-a166-ec25429fcaa2.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/e8ec2ca8-30e7-4570-a166-ec25429fcaa2.png)'
- en: Now the question is how you connect components together using the breadboard
    and the answer is Dupont (jumper) cables.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在的问题是你是如何使用面包板将组件连接在一起，答案是杜邦（跳线）电缆。
- en: Dupont (jumper) cables
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 杜邦（跳线）电缆
- en: 'Dupont cables, also known as jumper wire, are used to wire components together
    when using a solderless breadboard. These cables come in three types: male-male,
    male-female and female-female. When using these cables with a solderless breadboard,
    and the Arduino, we typically use cables that have male connectors on both ends;
    however, there are some components that already have male connectors on them,
    so it is worthwhile having some male-female cables as well. The following photograph
    shows what the male connectors look like at the end of the Dupont cables:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 杜邦线，也称为跳线，用于在无焊面包板上连接组件。这些线有三种类型：公对公、公对母和母对母。当我们使用这些线与无焊面包板和Arduino一起使用时，我们通常使用两端都有公接头的线；然而，有些组件本身已经带有公接头，所以拥有一些公对母线也是值得的。以下照片显示了杜邦线末端的公接头样子：
- en: '![](img/905e8669-7826-4bd7-8c14-488aed813fc4.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/905e8669-7826-4bd7-8c14-488aed813fc4.png)'
- en: It is pretty cheap to purchase premade Dupont cables but if you want to customize
    the length you can make them yourself by purchasing a crimper and some ends. These
    cables are not that hard to make but I would recommend starting off by purchasing
    premade ones.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 购买预制的杜邦线相当便宜，但如果你想要定制长度，你可以通过购买一个剥线钳和一些端子自己制作它们。这些线并不难制作，但我建议先从购买预制的开始。
- en: Prototyping
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 原型设计
- en: Prototypes are used to prove the specifications for a working concept or process
    rather than theoretical ones. A prototype, as we are referring to it in this book,
    is a model to test a concept or process. For simple concepts or process, we may
    create a prototype for the whole system but for my complex systems, we will want
    to break the system down into individual components and create a prototype for
    each component.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 原型用于验证工作概念或过程的规格，而不是理论规格。在我们这本书中提到的原型，是一个用于测试概念或过程的模型。对于简单概念或过程，我们可能会为整个系统创建一个原型，但对于我复杂的系统，我们希望将系统分解成单个组件，并为每个组件创建一个原型。
- en: 'Prototypes with the Arduino usually consist of one Arduino microcontroller
    with one breadboard used to connect the components to the Arduino. For these prototypes,
    I use a holder that I designed and printed out with my 3D printer. The following
    photograph shows the holder with an Arduino Uno, Nano and a breadboard in it:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Arduino的原型通常由一个Arduino微控制器和一个面包板组成，用于将组件连接到Arduino。对于这些原型，我使用了我用3D打印机设计和打印的支架。以下照片显示了支架中包含Arduino
    Uno、Nano和一个面包板：
- en: '![](img/ccc0e8ab-b514-4f5f-86ee-a248069aff46.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/ccc0e8ab-b514-4f5f-86ee-a248069aff46.png)'
- en: The holder is designed to hold an MB-102 breadboard, an Arduino Nano and either
    an Arduino Uno or Mega. If you have access to a 3D printer I included the STL
    file for this holder in the downloadable code for this book so you can print one
    for yourself. Holders like this are especially useful when we need to move the
    prototype because it keeps everything together and organized.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这个支架设计用来固定MB-102面包板、Arduino Nano以及Arduino Uno或Mega。如果你有3D打印机，我在这本书的可下载代码中包含了这个支架的STL文件，这样你可以自己打印一个。这种支架在我们需要移动原型时特别有用，因为它能将所有东西保持在一起并保持有序。
- en: Before we can start building a prototype, we need to have an idea of what we
    want to build. This idea may be something as simple as blinking an LED or as complex
    and creating an autonomous robot. The idea is always the first step when beginning
    a project.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们开始构建原型之前，我们需要有一个关于我们想要构建什么的想法。这个想法可能像简单地闪烁一个LED灯那样简单，也可能像创建一个自主机器人那样复杂。在开始一个项目时，想法总是第一步。
- en: The second step is to break up the idea into the different building blocks that
    were discussed in [Chapter 2](48ede881-c312-454b-8351-06f6a4734c52.xhtml), *Basic
    Electronics*. After we have broken up the project into the different blocks we
    would then diagram the circuits that need to be prototyped. After the diagrams
    are complete, we can then begin building the prototypes. Let's look at these steps
    a little closer, starting with the four building blocks of an electronic circuit.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 第二步是将想法分解成[第2章](48ede881-c312-454b-8351-06f6a4734c52.xhtml)中讨论的不同构建块。在我们将项目分解成不同的块之后，我们就会绘制需要原型化的电路图。在电路图完成后，我们就可以开始构建原型了。让我们更详细地看看这些步骤，从电子电路的四个构建块开始。
- en: Four building blocks of an electronic project
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 电子项目的四个构建块
- en: 'In [Chapter 2](48ede881-c312-454b-8351-06f6a4734c52.xhtml), *Basic Electronics*,
    we discussed the four building blocks of an electronic project. The following
    diagram shows these four blocks:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第2章](48ede881-c312-454b-8351-06f6a4734c52.xhtml)，“基础电子”中，我们讨论了电子项目的四个基本模块。以下图表显示了这四个模块：
- en: '![](img/5fccbb5d-fe78-418d-9f57-4df6fc52a3b6.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5fccbb5d-fe78-418d-9f57-4df6fc52a3b6.png)'
- en: It is really easy to break a simple prototype, like a circuit to turn an LED
    on and off, into the individual blocks but for more complex projects it becomes
    harder because of the different components.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 将一个简单的原型，比如一个用于开关LED的电路，分解成单独的模块是非常容易的，但对于更复杂的项目来说，由于不同的组件，这会变得更加困难。
- en: By separating the components into the different blocks, it becomes easier to
    see how to break a larger project into separate prototypes. For example, if we
    wanted to create an autonomous robot we could see that one of the inputs is a
    sonic rangefinder that will detect obstacles in front of the robot, while the
    output that will be affected by the input from the rangefinder would be the motors
    that move the robot. In this example, we would probably want to change the direction
    of the motors if the rangefinders detect an obstacle in front. We could then create
    a prototype to test how this particular system worked.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将组件分离成不同的模块，更容易看到如何将更大的项目分解成单独的原型。例如，如果我们想要创建一个自主机器人，我们可以看到其中一个输入是一个声纳测距仪，它将检测机器人前面的障碍物，而受测距仪输入影响的输出将是驱动机器人移动的电机。在这个例子中，如果我们希望测距仪检测到前面的障碍物，我们可能需要改变电机的方向。然后我们可以创建一个原型来测试这个特定系统的工作情况。
- en: In this step, we are defining what the inputs and outputs are and what outputs
    are trigger based on these inputs. This is also where we define most of the logic
    for the project, so we can set up the prototypes.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步中，我们定义了输入和输出是什么，以及基于这些输入触发的输出是什么。这也是我们定义项目大部分逻辑的地方，因此我们可以设置原型。
- en: When you first start building these projects, you will want to create a diagram
    for each project. Once you gain experience, for most smaller to medium projects,
    you will not need to write anything down at this step. This step will become just
    breaking the project down in your heads and figuring out what the inputs and outputs
    are. For larger projects, we may want to create flowcharts and even diagrams that
    show how we want everything to work together. Once we get into the projects in
    this book, we will see different ways to separate the components into their individual
    blocks and how to define the logic for the inputs and outputs.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当你刚开始构建这些项目时，你将想要为每个项目创建一个图。一旦你积累了经验，对于大多数小型到中型项目，你在这个步骤中可能不需要写下任何东西。这一步将变成只是在脑海中分解项目并确定输入和输出是什么。对于更大的项目，我们可能需要创建流程图甚至展示我们希望所有东西如何协同工作的图表。一旦我们进入这本书中的项目，我们将看到不同的方法来将组件分离成各自的模块，以及如何定义输入和输出的逻辑。
- en: After we have broken our project down into the individual prototypes with the
    separate inputs and output circuits, we would then want to create circuit diagrams
    for each of these prototypes.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们将项目分解成具有单独输入和输出电路的各个原型之后，我们接下来就会想要为这些原型中的每一个创建电路图。
- en: Creating a diagram
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建图表
- en: Once we have defined the inputs and outputs of the circuit and the logic for
    the project, the next step is to diagram the circuits. We will want to make sure
    that we diagram all of the circuits that we create even the most basic ones. This
    will help us figure out resistors needed and to visualize how we want to organize
    and connect the component.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们定义了电路的输入和输出以及项目的逻辑，下一步就是绘制电路图。我们想要确保我们绘制了所有创建的电路，即使是最基本的电路。这将帮助我们确定所需的电阻，并可视化我们想要如何组织和连接组件。
- en: When creating the circuit diagrams, I would recommend using the Fritzing software
    that was described in [Chapter 3](de9d9edf-fdf1-410b-bb8a-98ef4b185166.xhtml),
    *Circuit Diagrams*. Now let's look at the final step, building the prototype.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建电路图时，我建议使用在[第3章](de9d9edf-fdf1-410b-bb8a-98ef4b185166.xhtml)，“电路图”中描述的Fritzing软件。现在让我们看看最后一步，构建原型。
- en: Building the prototype
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建原型
- en: The final step is actually building a working prototype. This is where all of
    the hard work from the first three steps come together and you are able to see
    if the prototype works as expected.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步实际上是构建一个工作原型。这是前三个步骤中所有艰苦工作的集中体现，你将能够看到原型是否按预期工作。
- en: All of us would prefer to skip the first few steps and go right to building
    the prototype; however, you will be more successful and damage fewer parts if
    you take your time and go through each of these steps when creating your prototypes.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们都希望跳过前几个步骤，直接进入构建原型；然而，如果你花时间逐一完成这些步骤，你将更成功，损坏的部件也会更少。
- en: Now let's see how we would go through these steps and build our first prototype.
    You will want to follow along and build this prototype yourself because we will
    be using it in the next couple of chapters as we learn to program the Arduino.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们来看看如何进行这些步骤并构建我们的第一个原型。你将想要跟随并自己构建这个原型，因为在我们学习编程Arduino的下一章中，我们将使用它。
- en: First prototype
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一个原型
- en: The first prototype that we will build is pretty simple and designed to be used
    in the next couple chapters where we learn to program the Arduino. This prototype
    will have one button that will be used to turn a LED on or off, another LED that
    we can turn on or off and a TMP36 temperature sensor.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将要构建的第一个原型相当简单，设计用于在接下来的几章中学习如何编程Arduino。这个原型将包含一个按钮，用于打开或关闭LED灯，另一个可以打开或关闭的LED灯，以及一个TMP36温度传感器。
- en: 'In this prototype, we will have two inputs (a push button and temperature sensor)
    and two outputs (the two LEDs). We will use the 5V output from the Arduino to
    power the components. Here is the Fritzing diagram of this prototype:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个原型中，我们将有两个输入（一个按钮和温度传感器）和两个输出（两个LED灯）。我们将使用Arduino的5V输出为组件供电。以下是这个原型的Fritzing图：
- en: '![](img/5e28b322-bcae-4c33-bc7e-44dd47dd62d7.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/5e28b322-bcae-4c33-bc7e-44dd47dd62d7.png)'
- en: In this diagram, starting from left to right, we have the button, the two LEDs,
    and the TMP36 temperature sensor. Each of the LEDs has the same 330-ohm resistor
    that used in [Chapter 3](de9d9edf-fdf1-410b-bb8a-98ef4b185166.xhtml), *Circuit
    Diagram*. Since the power from the Arduino is only 5 volts, we could lower the
    value of the resistor to 100 ohms, but the 330-ohm resistors will work fine as
    well.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个图中，从左到右，我们有按钮、两个LED灯和TMP36温度传感器。每个LED都使用了与[第3章](de9d9edf-fdf1-410b-bb8a-98ef4b185166.xhtml)中“电路图”相同的330欧姆电阻。由于Arduino的电源只有5伏，我们可以将电阻值降低到100欧姆，但330欧姆的电阻也可以正常工作。
- en: 'The resistor that we are using the button is called a pull-down resistor because
    one end is connected to ground. A digital logic circuit can really have three
    states: high, low, and floating. The floating state occurs when the pin is neither
    pulled high or low but is instead left floating. In this floating state, the microcontroller
    could unpredictably interpret this state as either high or low. To solve this
    issue, a pull-down resistor is used to pull the floating state low.'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们用来连接按钮的电阻被称为下拉电阻，因为其一边连接到地线。数字逻辑电路实际上可以有三种状态：高、低和浮空。浮空状态发生在引脚既没有被拉高也没有被拉低，而是被留下浮空。在这种浮空状态下，微控制器可能会不可预测地将这种状态解释为高或低。为了解决这个问题，我们使用下拉电阻将浮空状态拉低。
- en: If the resistor was connected to the voltage supply, rather than ground, it
    would be considered a pull-up resistor. A pull-up resistor works in the same manner
    as a pull-down resistor but rather than pulling the floating stated low, a pull-up
    resistor pulls it high. We will be using pull-down and pull-up resistors in several
    projects in this book.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 如果电阻连接到电源而不是地线，它将被视为一个上拉电阻。上拉电阻的工作原理与下拉电阻相同，但上拉电阻将浮空状态拉高，而不是拉低。在这本书的几个项目中，我们将使用下拉和上拉电阻。
- en: The push button is connected to pin 12 of the Arduino; therefore, we will be
    able to read the state of the button by checking the state of pin 12\. The LEDs
    are connected to pins 11 and 3; therefore, we will be able to turn them on by
    sending a digital high to those pins or turn them off by sending a digital low.
    Finally, the output pin on the TMP36 temperature sensor (the middle pin) is connected
    to the analog 5 pin since the output from the sensor in analog. The voltage and
    ground pins on the TMP36 temperature sensor are connected to the voltage and ground
    rails on the breadboard.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮连接到Arduino的12号引脚；因此，我们可以通过检查12号引脚的状态来读取按钮的状态。LED灯连接到11号和3号引脚；因此，我们可以通过向这些引脚发送数字高电平来打开它们，或者通过发送数字低电平来关闭它们。最后，TMP36温度传感器的输出引脚（中间引脚）连接到模拟5号引脚，因为传感器的输出是模拟的。TMP36温度传感器的电压和地线引脚连接到面包板上的电压和地线轨。
- en: 'The Fritzing diagram makes the prototype look so nice and organized; however,
    most prototypes do not look like that. The following is what the prototype looked
    like when I built it for this book:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: Fritzing 图表让原型看起来非常整洁和有组织；然而，大多数原型并不像那样。以下是我为这本书构建原型时的样子：
- en: '![](img/f78a7fa3-e316-492b-90cd-cf5a22d36703.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![图片](img/f78a7fa3-e316-492b-90cd-cf5a22d36703.png)'
- en: It is nice to have your prototype neat and looking good, but it is not necessary
    as long as you can work with it. It is especially hard to have the prototype neat
    when you only have one or two lengths of Dupont (jumper) cables.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 很好，让原型整洁且看起来不错，但只要你能工作，这并不是必要的。当你只有一两条杜邦（跳线）电缆时，让原型整洁尤其困难。
- en: You will also notice the short wires that run across the power rails. On this
    breadboard, the power rails are not connected all the way across horizontally.
    This is an example of a breadboard that is configured a little differently. You
    can tell that the power rails do not run all the way across because the red and
    blue lines on the breadboard have a gap halfway across; therefore, we used small
    cables to connect the two sides. There are times that we need different power
    sources so having the power rails split like this can be very helpful but for
    this prototype, since we are using the same power source for all components, we
    connected the power rails together.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 你也会注意到横跨电源轨的短电线。在这个面包板上，电源轨并没有完全水平连接。这是一个配置略有不同的面包板示例。你可以看出电源轨并没有完全横跨，因为面包板上的红色和蓝色线条在中途有一个间隙；因此，我们使用了小电缆将两侧连接起来。有时我们需要不同的电源，所以电源轨这样分开连接非常有帮助，但在这个原型中，因为我们为所有组件使用相同的电源，所以我们把电源轨连接在一起。
- en: Summary
  id: totrans-81
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 摘要
- en: In this chapter, we looked at the basics of prototyping and what steps we should
    take when we create prototypes. The sample prototype that we did at the end of
    this chapter was pretty basic, but we still went through each of the steps to
    make sure we had everything correct. We will be walking through each of these
    steps in the projects chapters later in this book.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 在本章中，我们探讨了原型制作的基础以及我们在创建原型时应采取的步骤。本章末尾我们做的示例原型相当基础，但我们仍然走过了每一个步骤，以确保一切正确。我们将在本书后面的项目章节中逐步讲解这些步骤。
- en: Now that we have created our first prototype, we need to learn how to program
    the Arduino. The next three chapters are written to teach you how to program the
    Arduino. We will start off by showing you how to download and install the Arduino
    IDE.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了我们的第一个原型，我们需要学习如何编程 Arduino。接下来的三章将教授你如何编程 Arduino。我们将从向你展示如何下载和安装
    Arduino IDE 开始。
