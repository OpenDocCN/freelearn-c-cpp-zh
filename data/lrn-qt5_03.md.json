["```cpp\n<RCC>\n    <qresource prefix=\"/views\">\n        <file alias=\"MasterView\">views/MasterView.qml</file>\n    </qresource>\n    <qresource prefix=\"/\">\n        <file>views/SplashView.qml</file>\n        <file>views/DashboardView.qml</file>\n        <file>views/CreateClientView.qml</file>\n        <file>views/EditClientView.qml</file>\n        <file>views/FindClientView.qml</file>\n    </qresource>\n</RCC>\n```", "```cpp\n<RCC>\n    <qresource prefix=\"/views\">\n        <file alias=\"MasterView.qml\">views/MasterView.qml</file>\n        <file alias=\"SplashView.qml\">views/SplashView.qml</file>\n        <file alias=\"DashboardView.qml\">views/DashboardView.qml</file>\n        <file alias=\"CreateClientView.qml\">views/CreateClientView.qml</file>\n        <file alias=\"EditClientView.qml\">views/EditClientView.qml</file>\n        <file alias=\"CreateAppointmentView.qml\">views/CreateAppointmentView.qml</file>\n        <file alias=\"FindClientView.qml\">views/FindClientView.qml</file>\n    </qresource>\n</RCC>\n```", "```cpp\nimport QtQuick.Controls 2.2\n```", "```cpp\nStackView {\n    id: contentFrame\n    initialItem: \"qrc:/views/SplashView.qml\"\n}\n```", "```cpp\nimport QtQuick 2.9\n\nRectangle {\n    width: 400\n    height: 200\n    color: \"#f4c842\"\n}\n```", "```cpp\nengine.load(QUrl(QStringLiteral(\"qrc:/AnchorsDemo.qml\")));\n```", "```cpp\nimport QtQuick 2.9\nimport QtQuick.Window 2.2\n\nWindow {\n    visible: true\n    width: 1024\n    height: 768\n    title: qsTr(\"Scratchpad\")\n    color: \"#ffffff\"\n    Rectangle {\n        id: paleYellowBackground\n        anchors.fill: parent\n        color: \"#cece9e\"\n    }\n    Rectangle {\n        id: blackRectangleInTheCentre\n        width: 120\n        height: 120\n        anchors.centerIn: parent\n        color: \"#000000\"\n    }\n    Rectangle {\n        id: greenRectangleInTheCentre\n        width: 100\n        height: 100\n        anchors.centerIn: parent\n        anchors.verticalCenterOffset: 20\n        color: \"#008000\"\n    }\n    Rectangle {\n        id: redRectangleTopLeftCorner\n        width: 100\n        height: 100\n        anchors {\n            top: parent.top\n            left: parent.left\n        }\n        color: \"#800000\"\n    }\n    Rectangle {\n        id: blueRectangleTopLeftCorner\n        width: 100\n        height: 100\n        anchors{\n            top: redRectangleTopLeftCorner.bottom\n            left: parent.left\n        }\n        color: \"#000080\"\n    }\n    Rectangle {\n        id: purpleRectangleTopLeftCorner\n        width: 100\n        height: 100\n        anchors{\n            top: blueRectangleTopLeftCorner.bottom\n            left: parent.left\n            leftMargin: 20\n        }\n        color: \"#800080\"\n    }\n    Rectangle {\n        id: turquoiseRectangleBottomRightCorner\n        width: 100\n        height: 100\n        anchors{\n            bottom: parent.bottom\n            right: parent.right\n            margins: 20\n        }\n        color: \"#008080\"\n    }\n}\n```", "```cpp\nRectangle {\n    id: paleYellowBackground\n    anchors.fill: parent\n    color: \"#cece9e\"\n}\n```", "```cpp\nRectangle {\n    id: blackRectangleInTheCentre\n    width: 120\n    height: 120\n    anchors.centerIn: parent\n    color: \"#000000\"\n}\nRectangle {\n    id: greenRectangleInTheCentre\n    width: 100\n    height: 100\n    anchors.centerIn: parent\n    anchors.verticalCenterOffset: 20\n    color: \"#008000\"\n}\n```", "```cpp\nRectangle {\n    id: redRectangleTopLeftCorner\n    width: 100\n    height: 100\n    anchors {\n        top: parent.top\n        left: parent.left\n    }\n    color: \"#800000\"\n}\n```", "```cpp\nanchors.top: parent.top\nanchors.left: parent.left\n```", "```cpp\nanchors {\n    top: parent.top\n    left: parent.left\n}\n```", "```cpp\nRectangle {\n    id: blueRectangleTopLeftCorner\n    width: 100\n    height: 100\n    anchors{\n        top: redRectangleTopLeftCorner.bottom\n        left: parent.left\n    }\n    color: \"#000080\"\n}\n```", "```cpp\nRectangle {\n    id: purpleRectangleTopLeftCorner\n    width: 100\n    height: 100\n    anchors{\n        top: blueRectangleTopLeftCorner.bottom\n        left: parent.left\n        leftMargin: 20\n    }\n    color: \"#800080\"\n}\n```", "```cpp\nRectangle {\n    id: turquoiseRectangleBottomRightCorner\n    width: 100\n    height: 100\n    anchors{\n        bottom: parent.bottom\n        right: parent.right\n        margins: 20\n    }\n    color: \"#008080\"\n}\n```", "```cpp\nRectangle {\n    anchors.fill: parent\n    color: \"#f4c842\"\n}\n```", "```cpp\nStackView {\n    id: contentFrame\n    initialItem: Qt.resolvedUrl(\"qrc:/views/SplashView.qml\")\n}\n```", "```cpp\nimport QtQuick 2.9\nimport QtQuick.Window 2.2\n\nWindow {\n    visible: true\n    width: 1024\n    height: 768\n    title: qsTr(\"Scratchpad\")\n    color: \"#ffffff\"\n    Column {\n        id: columnWithText\n        Text {\n            id: text1\n            text: \"Text 1\"\n        }\n        Text {\n            id: text2\n            text: \"Text 2\"\n            width: 300\n            height: 20\n        }\n        Text {\n            id: text3\n            text: \"Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3\"\n        }\n        Text {\n            id: text4\n            text: \"Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4\"\n            width: 300\n        }\n        Text {\n            id: text5\n            text: \"Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5\"\n            width: 300\n            wrapMode: Text.Wrap\n        }\n    }\n    Column {\n        id: columnWithRectangle\n        Rectangle {\n            id: rectangle\n            anchors.fill: parent\n        }\n    }\n    Component.onCompleted: {\n        console.log(\"Text1 - implicitWidth:\" + text1.implicitWidth + \" implicitHeight:\" + text1.implicitHeight + \" width:\" + text1.width + \" height:\" + text1.height)\n        console.log(\"Text2 - implicitWidth:\" + text2.implicitWidth + \" implicitHeight:\" + text2.implicitHeight + \" width:\" + text2.width + \" height:\" + text2.height)\n        console.log(\"Text3 - implicitWidth:\" + text3.implicitWidth + \" implicitHeight:\" + text3.implicitHeight + \" width:\" + text3.width + \" height:\" + text3.height)\n        console.log(\"Text4 - implicitWidth:\" + text4.implicitWidth + \" implicitHeight:\" + text4.implicitHeight + \" width:\" + text4.width + \" height:\" + text4.height)\n        console.log(\"Text5 - implicitWidth:\" + text5.implicitWidth + \" implicitHeight:\" + text5.implicitHeight + \" width:\" + text5.width + \" height:\" + text5.height)\n        console.log(\"ColumnWithText - implicitWidth:\" + columnWithText.implicitWidth + \" implicitHeight:\" + columnWithText.implicitHeight + \" width:\" + columnWithText.width + \" height:\" + columnWithText.height)\n        console.log(\"Rectangle - implicitWidth:\" + rectangle.implicitWidth + \" implicitHeight:\" + rectangle.implicitHeight + \" width:\" + rectangle.width + \" height:\" + rectangle.height)\n        console.log(\"ColumnWithRectangle - implicitWidth:\" + columnWithRectangle.implicitWidth + \" implicitHeight:\" + columnWithRectangle.implicitHeight + \" width:\" + columnWithRectangle.width + \" height:\" + columnWithRectangle.height)\n    }\n}\n```", "```cpp\nText {\n    id: text1\n    text: \"Text 1\"\n}\n```", "```cpp\nText {\n    id: text2\n    text: \"Text 2\"\n    width: 300\n    height: 20\n}\n```", "```cpp\nText {\n    id: text3\n    text: \"Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3 Text 3\"\n}\n```", "```cpp\nText {\n    id: text4\n    text: \"Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4 Text 4\"\n    width: 300\n}\n```", "```cpp\nText {\n    id: text5\n    text: \"Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text \n    5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5   \n    Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text \n    5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5 Text 5\"\n    width: 300\n    wrapMode: Text.Wrap\n}\n```", "```cpp\nColumn {\n    id: columnWithRectangle\n    Rectangle {\n        id: rectangle\n        anchors.fill: parent\n    }\n}\n```", "```cpp\nStackView {\n    id: contentFrame\n    anchors.fill: parent\n    initialItem: Qt.resolvedUrl(\"qrc:/views/SplashView.qml\")\n}\n```", "```cpp\nRectangle {\n    anchors.fill: parent\n    color: \"#f4c842\"\n    Text {\n        anchors.centerIn: parent\n        text: \"Splash View\"\n    }\n}\n```", "```cpp\nComponent.onCompleted: contentFrame.replace(\"qrc:/views/DashboardView.qml\");\n```", "```cpp\nButton {\n    onClicked: contentFrame.replace(\"qrc:/views/CreateClientView.qml\")\n}\n```", "```cpp\n#ifndef NAVIGATIONCONTROLLER_H\n#define NAVIGATIONCONTROLLER_H\n\n#include <QObject>\n\n#include <cm-lib_global.h>\n#include <models/client.h>\n\nnamespace cm {\nnamespace controllers {\n\nclass CMLIBSHARED_EXPORT NavigationController : public QObject\n{\n    Q_OBJECT\n\npublic:\n    explicit NavigationController(QObject* _parent = nullptr)\n        : QObject(_parent)\n    {}\n\nsignals:\n    void goCreateClientView();\n    void goDashboardView();\n    void goEditClientView(cm::models::Client* client);\n    void goFindClientView();\n};\n\n}\n}\n#endif\n```", "```cpp\n#ifndef CLIENT_H\n#define CLIENT_H\n\n#include \"cm-lib_global.h\"\n\nnamespace cm {\nnamespace models {\n\nclass CMLIBSHARED_EXPORT Client\n{\npublic:\n    Client();\n};\n\n}}\n\n#endif\n```", "```cpp\n#include \"client.h\"\n\nnamespace cm {\nnamespace models {\n\nClient::Client()\n{\n}\n\n}}\n```", "```cpp\n#ifndef MASTERCONTROLLER_H\n#define MASTERCONTROLLER_H\n\n#include <QObject>\n#include <QScopedPointer>\n#include <QString>\n\n#include <cm-lib_global.h>\n#include <controllers/navigation-controller.h>\n\nnamespace cm {\nnamespace controllers {\n\nclass CMLIBSHARED_EXPORT MasterController : public QObject\n{\n    Q_OBJECT\n    Q_PROPERTY( QString ui_welcomeMessage READ welcomeMessage CONSTANT )\n    Q_PROPERTY( cm::controllers::NavigationController* ui_navigationController READ navigationController CONSTANT )\n\npublic:\n    explicit MasterController(QObject* parent = nullptr);\n    ~MasterController();\n\n    NavigationController* navigationController();\n    const QString& welcomeMessage() const;\n\nprivate:\n    class Implementation;\n    QScopedPointer<Implementation> implementation;\n};\n\n}}\n#endif\n```", "```cpp\n#include \"master-controller.h\"\n\nnamespace cm {\nnamespace controllers {\n\nclass MasterController::Implementation\n{\npublic:\n    Implementation(MasterController* _masterController)\n        : masterController(_masterController)\n    {\n        navigationController = new NavigationController(masterController);\n    }\n\n    MasterController* masterController{nullptr};\n    NavigationController* navigationController{nullptr};\n    QString welcomeMessage = \"This is MasterController to Major Tom\";\n};\n\nMasterController::MasterController(QObject* parent)\n    : QObject(parent)\n{\n    implementation.reset(new Implementation(this));\n}\n\nMasterController::~MasterController()\n{\n}\n\nNavigationController* MasterController::navigationController()\n{\n    return implementation->navigationController;\n}\n\nconst QString& MasterController::welcomeMessage() const\n{\n    return implementation->welcomeMessage;\n}\n\n}}\n```", "```cpp\nqmlRegisterType<cm::controllers::NavigationController>(\"CM\", 1, 0, \"NavigationController\");\n```", "```cpp\nConnections {\n    target: masterController.ui_navigationController\n    onGoCreateClientView: contentFrame.replace(\"qrc:/views/CreateClientView.qml\")\n    onGoDashboardView: contentFrame.replace(\"qrc:/views/DashboardView.qml\")\n    onGoEditClientView: contentFrame.replace(\"qrc:/views/EditClientView.qml\", {selectedClient: client})\n    onGoFindClientView: contentFrame.replace(\"qrc:/views/FindClientView.qml\")\n}\n```", "```cpp\nRectangle {\n    id: navigationBar\n    anchors {\n        top: parent.top\n        bottom: parent.bottom\n        left: parent.left\n    }\n    width: 100\n    color: \"#000000\"\n}\n```", "```cpp\nStackView {\n    id: contentFrame\n    anchors {\n        top: parent.top\n        bottom: parent.bottom\n        right: parent.right\n        left: navigationBar.right\n    }\n    initialItem: Qt.resolvedUrl(\"qrc:/views/SplashView.qml\")\n}\n```", "```cpp\n Rectangle {\n    id: navigationBar\n    \u2026\n\n    Column {\n        Button {\n            text: \"Dashboard\"\n            onClicked: masterController.ui_navigationController.goDashboardView()\n        }\n        Button {\n            text: \"New Client\"\n            onClicked: masterController.ui_navigationController.goCreateClientView()\n        }\n        Button {\n            text: \"Find Client\"\n            onClicked: masterController.ui_navigationController.goFindClientView()\n        }\n    }\n\n}\n```", "```cpp\nclip: true\n```", "```cpp\nItem {\n    Rectangle {\n        ...\n    }\n}\n```"]